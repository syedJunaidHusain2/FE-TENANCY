{"version":3,"file":"static/js/6301.457f4e9c.chunk.js","mappings":"6OAAA,MAAMA,EAAoBC,IAAA,IAAC,UACvBC,EAAS,YACTC,EAAW,KACXC,EAAI,MACJC,EAAK,WACLC,EAAU,UACVC,EAAS,YACTC,EAAW,WACXC,EAAU,QACVC,EAAO,WACPC,EAAU,QACVC,GACHX,EAAA,OACGY,EAAAA,EAAAA,MAAA,OACIX,UAAS,mBAAAY,OAAqBZ,EAAS,4BACvCa,MAAO,CACHN,WAAYA,GACdO,SAAA,EAEFH,EAAAA,EAAAA,MAAA,OACIE,MAAO,CAACE,WAAY,UAAWC,WAAY,MAAOC,SAAU,QAC5DjB,UAAU,iBAAgBc,SAAA,CAEzBN,GACDU,EAAAA,EAAAA,KAAA,QACIlB,UAAU,mFACVa,MAAO,CACHI,SAAU,OACVD,WAAY,OACdF,SAEDL,QAGTS,EAAAA,EAAAA,KAAA,OACIlB,UAAU,iBACVa,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,QACZH,SAEDJ,MAEH,ECzCJS,EAAuBpB,IAUtB,IAVuB,aAC1BqB,EAAY,aACZC,EAAY,aACZC,EAAY,aACZC,EAAY,aACZC,EAAY,aACZC,EAAY,gBACZC,EAAe,gBACfC,EAAe,gBACfC,GACH7B,EACG,OACImB,EAAAA,EAAAA,KAAA,OACIlB,UAAS,kCACTa,MAAO,CAACE,WAAY,UAAWc,aAAc,QAAQf,UAGrDI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,iBAAgBc,UAC3BH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,OAAMc,SAAA,EAEjBH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,8BAA6Bc,SAAA,EACxCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,yBACVa,MAAO,CACHG,WAAY,MACZC,SAAU,OACVF,WAAY,WACdD,SAEDM,KAELT,EAAAA,EAAAA,MAAA,OACIX,UAAU,+DACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAA,EAE7CH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,IAAES,MACPL,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,YAAWc,SAAEY,WAGpCR,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,oCAIdW,EAAAA,EAAAA,MAAA,OAAKX,UAAU,8BAA6Bc,SAAA,EACxCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,yBACVa,MAAO,CACHG,WAAY,MACZC,SAAU,OACVF,WAAY,WACdD,SAEDO,KAELV,EAAAA,EAAAA,MAAA,OACIX,UAAU,qEACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAA,EAE7CH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,IAAEU,MACPN,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,YAAWc,SAAEa,WAGpCT,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,oCAIdW,EAAAA,EAAAA,MAAA,OAAKX,UAAU,8BAA6Bc,SAAA,EACxCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,yBACVa,MAAO,CACHG,WAAY,MACZC,SAAU,OACVF,WAAY,WACdD,SAEDQ,KAELX,EAAAA,EAAAA,MAAA,OACIX,UAAU,qEACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAA,EAE7CH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,IAAEW,MACPP,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,YAAWc,SAAEc,gBAQ1C,EC1FRE,EAAmB/B,IAUlB,IAVmB,aACtBqB,EAAY,aACZC,EAAY,aACZC,EAAY,aACZC,EAAY,aACZC,EAAY,aACZC,EAAY,gBACZC,EAAe,gBACfC,EAAe,gBACfC,GACH7B,EACG,OACImB,EAAAA,EAAAA,KAAA,OACIlB,UAAS,kCACTa,MAAO,CAACE,WAAY,UAAWc,aAAc,QAAQf,UAGrDI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,iBAAgBc,UAC3BH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,OAAMc,SAAA,EAEjBH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sCAAqCc,SAAA,EAChDI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,yBACVa,MAAO,CACHG,WAAY,MACZC,SAAU,OACVF,WAAY,WACdD,SAEDM,KAELT,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAA,EAU7CH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,IAAES,MACPL,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,sBAAqBc,SAAEY,WAG9CR,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yCAIdW,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sCAAqCc,SAAA,EAChDI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,yBACVa,MAAO,CACHG,WAAY,MACZC,SAAU,OACVF,WAAY,WACdD,SAEDO,KAELV,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAA,EAU7CH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,IAAEU,MACPN,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,sBAAqBc,SAAEa,WAG9CT,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yCAIdW,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sCAAqCc,SAAA,EAChDI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,yBACVa,MAAO,CACHG,WAAY,MACZC,SAAU,OACVF,WAAY,WACdD,SAEDQ,KAELX,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAA,EAU7CH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,IAAEW,MACPP,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,sBAAqBc,SAAEc,gBAQpD,E,iFChGd,MAsTA,EAtT4B7B,IASrB,IAADgC,EAAAC,EAAA,IATuB,aACzBC,EAAY,QACZC,EAAO,UACPC,EAAS,aACTC,EAAY,QACZC,EAAO,eACPC,EAAc,KACdC,EAAI,QACJC,GACHzC,EACG,MAAO0C,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAKC,IAAUF,EAAAA,EAAAA,WAAS,IACxBG,EAAOC,IAAYJ,EAAAA,EAAAA,aACnBK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KAGpCO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,KAErCS,EAAAA,EAAAA,YAAU,KACNH,EAAahB,EAAa,IAO9B,OACIf,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,CAAAvC,UACIH,EAAAA,EAAAA,MAAA,OAAKX,UAAS,uBAA0Ba,MAAO,CAACE,WAAY,WAAWD,SAAA,EACnEI,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACC,MAAI,EAACC,QAASnB,KAC5B1B,EAAAA,EAAAA,MAAA,OAAKX,UAAU,uCAAsCc,SAAA,EACjDI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,uBACVa,MAAO,CAACI,SAAU,OAAQF,WAAY,WAAWD,UAEjDH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mFAAkFc,SAAA,EAE7FI,EAAAA,EAAAA,KAAA,OACIL,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,QAEdjB,UAAU,kDAAiDc,SAC9D,0BAMDI,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAAA,QACIlB,UAAU,2CACVyD,aAAa,MAAK3C,UAGlBI,EAAAA,EAAAA,KAACwC,EAAAA,GAAW,CACRC,KAAMC,EAAAA,GAAAA,OACNC,KAAK,SACLC,SAtCRC,IACxBZ,EAAUY,EAAEC,OAAOlB,OACnBR,EAAeyB,EAAEC,OAAOlB,MAAM,EAqCEA,MAAOI,cAoB3BhC,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,6CAA4Cc,UACvDH,EAAAA,EAAAA,MAAA,SAAOX,UAAU,QAAOc,SAAA,EACpBI,EAAAA,EAAAA,KAAA,SAAOlB,UAAWiE,EAAAA,GAAanD,UAC3BH,EAAAA,EAAAA,MAAA,MACIX,UAAU,8BACVa,MAAO,CACHI,SAAU,OACVD,WAAY,MACZD,WAAY,WACdD,SAAA,EAEFI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,UACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,UACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,UAClCH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,YAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,YAAdD,EAA0BC,EAAe,KAE7C+B,QAASA,IAAMjC,EAAQ,mBAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,UAClCH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,WAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,YAAdD,EAA0BC,EAAe,KAE7C+B,QAASA,IAAMjC,EAAQ,mBAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,UAClCH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,aAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,YAAdD,EAA0BC,EAAe,KAE7C+B,QAASA,IAAMjC,EAAQ,mBAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,UAClCH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,aAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,cAAdD,EAA4BC,EAAe,KAE/C+B,QAASA,IAAMjC,EAAQ,qBAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,eACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,0BAAyBc,UACnCH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,iBAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,kBAAdD,EACMC,EACA,KAEV+B,QAASA,IAAMjC,EAAQ,yBAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,UAClCH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,oBAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,oBAAdD,EACMC,EACA,KAEV+B,QAASA,IAAMjC,EAAQ,gCAM3ChB,EAAAA,EAAAA,KAAA,SAAOlB,UAAWiE,EAAAA,GAAanD,UACjB,OAATkC,QAAS,IAATA,GAAe,QAANjB,EAATiB,EAAWoB,YAAI,IAAArC,OAAN,EAATA,EAAiBsC,QAAS,GACvBnD,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,CAAAvC,SACc,OAATkC,QAAS,IAATA,GAAe,QAANhB,EAATgB,EAAWoB,YAAI,IAAApC,OAAN,EAATA,EAAiBsC,KAAI,CAACC,EAAMC,KACzB7D,EAAAA,EAAAA,MAAA,MAEIE,MAAO,CACH4D,OAAQ,OACRxD,SAAU,OACVF,WAAY,UACZC,WAAY,OAEhBhB,UAAS,2BAA6Bc,SAAA,EAEtCI,EAAAA,EAAAA,KAAA,MACIlB,UAAU,kCACVa,MAAO,CAACG,WAAY,OAAOF,UAS3BH,EAAAA,EAAAA,MAAC+D,EAAAA,EAAyB,CACtBC,WAAgB,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,QAAQ9D,SAAA,EAM1BI,EAAAA,EAAAA,KAAC2D,EAAAA,EAAW,CACRC,IAAS,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,WACX/E,UAAU,gBAET,OAAJuE,QAAI,IAAJA,OAAI,EAAJA,EAAMS,gBAGf9D,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC3BI,EAAAA,EAAAA,KAAA,QACIlB,UAAU,8EACVa,MAAO,CACHI,SAAU,OACVD,WAAY,OACdF,SAEa,OAAV,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMU,MAAe,IAAU,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,UAI1C/D,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAM,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMW,WACvCvE,EAAAA,EAAAA,MAAA,MAAIX,UAAU,kBAAiBc,SAAA,CACtB,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMY,QAAQ,KACdC,EAAAA,EAAAA,IACO,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMc,mBACN,KACF,QAGN1E,EAAAA,EAAAA,MAAA,MAAIX,UAAU,kBAAiBc,SAAA,CACtB,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMe,QAAQ,KACdF,EAAAA,EAAAA,IACO,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,mBACN,KACF,QAGN5E,EAAAA,EAAAA,MAAA,MAAIX,UAAU,kBAAiBc,SAAA,CACtB,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,UAAU,KAChBJ,EAAAA,EAAAA,IACO,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,qBACN,KACF,QAGNvE,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SACtB,OAAJyD,QAAI,IAAJA,GAAAA,EAAMmB,WACH/E,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAA,QAAAJ,UACII,EAAAA,EAAAA,KAAA,OACIlB,UAAU,cACV8E,KAAKa,EAAAA,EAAAA,IACG,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,mBAEV/E,MAAO,CACH4D,OAAQ,OACRoB,MAAO,YAId,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,aAGX,OAGRxE,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC1BsE,EAAAA,EAAAA,IACO,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,cACN,QAGR5E,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC1BsE,EAAAA,EAAAA,IACO,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,gBACN,UArGHvB,QA4GjBtD,EAAAA,EAAAA,KAAA,MAAAJ,UACII,EAAAA,EAAAA,KAAA,MACI8E,QAAS,EACTnF,MAAO,CACHoF,UAAW,SACXlF,WAAY,UACZC,WAAY,MACZC,SAAU,GACViF,WAAY,GACZC,cAAe,IACjBrF,SACL,4BAQrBI,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACP5D,QAAU6D,GAAgB7D,EAAQ6D,GAClC9D,KAAMA,EACN+D,WAAqB,OAATtD,QAAS,IAATA,OAAS,EAATA,EAAWuD,UACvBC,aAAuB,OAATxD,QAAS,IAATA,OAAS,EAATA,EAAWyD,eAItC,E,8CCjUX,MAAMC,EAA2B3G,IAAoC,IAAnC,UAACC,EAAS,WAAE2G,EAAU,KAAEC,GAAK7G,EAC3D,MAAM8G,GAAWC,EAAAA,EAAAA,QAAO,OAClB,KAACC,IAAQC,EAAAA,EAAAA,MAyBf,OAVA5D,EAAAA,EAAAA,YAAU,QAAU,KACpBA,EAAAA,EAAAA,YAAU,KACN,MAAM6D,EAhBWC,MACjB,IAAKL,EAASM,QACV,OAGJ,MAAM1C,EAAS2C,UAASC,EAAAA,EAAAA,IAAOR,EAASM,QAAS,WAE3CF,EAAQ,IAAIK,IAAJ,CAAeT,EAASM,QAASI,EAAgB9C,EAAQkC,IAKvE,OAJIM,GACAA,EAAMO,SAGHP,CAAK,EAIEC,GACd,MAAO,KACCD,GACAA,EAAMQ,SACV,CACH,GACF,CAACZ,EAAUF,KAGVhG,EAAAA,EAAAA,MAAA,OAAKX,UAAS,cAAAY,OAAgBZ,EAAS,mBAAmBa,MAAO,CAACgB,aAAc,QAAQf,SAAA,EAEpFH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iCAAgCc,SAAA,EAC3CI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,2CAA0Cc,UACpDH,EAAAA,EAAAA,MAAA,QACIX,UAAU,gCACVa,MAAO,CAACI,SAAU,OAAQD,WAAY,OAAOF,SAAA,CAChD,uBACwB,KACrBH,EAAAA,EAAAA,MAAA,QAAMX,UAAU,iBAAgBc,SAAA,CAAC,KAAG8F,GAAc,YAAY,cAKtE1F,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,eAAe,kBAAgB,aA2BlDkB,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,YAAWc,UAEtBI,EAAAA,EAAAA,KAAA,OACIwG,IAAKb,EACLc,GAAG,2BACH9G,MAAO,CAAC4D,OAAQ,QAASoB,MAAO,cAKtC,EAMR0B,EAAkBA,CAAC9C,EAAQkC,KAAgB,IAADiB,GACzBC,EAAAA,EAAAA,IAAoB,iBAAvC,MACMvH,GAAcuH,EAAAA,EAAAA,IAAoB,iBAIlCC,IAFYD,EAAAA,EAAAA,IAAoB,iBACfA,EAAAA,EAAAA,IAAoB,aACtB,IACfE,EAAc,GACdC,EAAgB,GAChBnE,EAAO,GAEuB,IAADoE,GAArB,OAAVtB,QAAU,IAAVA,GAAiB,QAAPiB,EAAVjB,EAAYuB,aAAK,IAAAN,OAAP,EAAVA,EAAmBvD,QAAS,IAClB,OAAVsC,QAAU,IAAVA,GAAiB,QAAPsB,EAAVtB,EAAYuB,aAAK,IAAAD,GAAjBA,EAAmB3D,KAAK6D,IACpBL,EAAaM,KAAKC,OAAU,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAK3C,YAC9BwC,EAAcI,KAAKC,OAAU,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAK7C,UAC/ByC,EAAYK,KAAKC,OAAU,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKhD,UAC7BtB,EAAKuE,KAAQ,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKG,SAAS,KAIhC,MAAO,CACHC,OAAQ,CACJ,CACI1E,KAAM,UAENO,KAAM2D,GAEV,CACIlE,KAAM,YAENO,KAAM4D,GAEV,CACInE,KAAM,YAENO,KAAM0D,IAIdb,MAAO,CACHlG,WAAY,UACZ4C,KAAM,MACN6E,SAAS,EACT/D,OAAQ,IACRgE,QAAS,CACLC,MAAM,GAGVC,KAAM,CACFC,SAAS,EACTjF,KAAM,KACNkF,gBAAgB,IAGxBC,YAAa,CACTC,IAAK,CACDC,YAAY,EACZC,YAAa,MACbpH,aAAc,IAGtBqH,OAAQ,CACJR,MAAM,GAEVS,WAAY,CACRP,SAAS,GAEbQ,OAAQ,CACJV,MAAM,EACN7C,MAAO,EACPwD,OAAQ,CAAC,gBAEbC,MAAO,CAcHC,WAAY1F,EACZ2F,WAAY,CACRd,MAAM,GAEVe,UAAW,CACPf,MAAM,GAEVgB,OAAQ,CACJ7I,MAAO,CACHwI,OAAQ,UACRpI,SAAU,OACVD,WAAY,SAIxB2I,MAAO,CAGHD,OAAQ,CACJ7I,MAAO,CACHwI,OAAQ,UACRpI,SAAU,SAGlB2I,MAAO,CACHC,SAAS,EACTC,KAAM,WACNjJ,MAAO,CACHwI,OAAQ,UACRpI,SAAU,YAItB8I,KAAM,CACFC,QAAS,GAEbC,WAAY,CACR,CACIC,WAAY,IACZC,QAAS,CACLrB,YAAa,CACTC,IAAK,CACDC,YAAY,OAMhCoB,OAAQ,CACJC,OAAQ,CACJC,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGfyH,MAAO,CACHD,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGf0H,OAAQ,CACJC,kCAAkC,EAClCH,OAAQ,CACJ3G,KAAM,OACNb,MAAO,KAInB4H,QAAS,CACL7J,MAAO,CACHI,SAAU,QAEd0J,EAAG,CACCC,UAAW,SAAUzC,GACjB,OAAOA,CACX,IAGRkB,OAAQ,CAAC,UAAW,UAAW,WAC/BwB,KAAM,CACFvK,YAAaA,EACbwK,gBAAiB,EACjBnB,MAAO,CACHoB,MAAO,CACHrC,MAAM,KAIrB,E,2DCjQL,MA6OA,EA7O4B3I,IAYrB,IAZsB,UACzBiL,EAAS,iBACTC,EAAgB,aAChBC,EAAY,iBACZC,EAAgB,kBAChBC,EAAiB,gBACjBC,EAAe,iBACfC,EAAgB,SAChBC,EAAQ,MACRC,EAAK,aACLC,EAAY,SACZC,GACH3L,EACG,MAAO4L,EAAWC,IAAgBjJ,EAAAA,EAAAA,aAC3BkJ,EAASC,IAAcnJ,EAAAA,EAAAA,aACvBoJ,EAAQC,IAAarJ,EAAAA,EAAAA,UAAS,aAoBrC,OACIzB,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,OAAMc,UACjBH,EAAAA,EAAAA,MAAA,OACIX,UAAU,sHACVa,MAAO,CACHgB,aAAc,qBACdoK,UACI,gFACNnL,SAAA,EAGFH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,6CACVa,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,QACZH,SACL,cAIDI,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACgL,EAAAA,EAAc,CACX/B,QAASa,EACTlI,MAAOmI,EACPnH,SAzCAC,IACpBoH,EAAiBpH,EAAEC,OAAOlB,MAAM,EAyCZqJ,WAAW,UAMvBjL,EAAAA,EAAAA,KAAA,OACIL,MAAO,CAACgB,aAAc,QACtB7B,UAAU,gDACV2H,GAAG,0BAAyB7G,UAE5BH,EAAAA,EAAAA,MAAA,QACIX,UAAU,oBACVa,MAAO,CAACgB,aAAc,QACtB4B,aAAa,MAAK3C,SAAA,EAElBI,EAAAA,EAAAA,KAACkL,EAAAA,GAAK,CACFC,KAAK,0CACLrM,UAAU,iGAEdkB,EAAAA,EAAAA,KAACgL,EAAAA,EAAc,CACX/B,QAASmB,EACTgB,SAAS,KACTC,YAAY,WACZC,WAAW,OACXC,aAAc,eACd3J,MAAO0I,EACP1H,SAAWC,GAAMwH,EAASxH,EAAEC,OAAOlB,eAM/C5B,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,kBAAiBc,UAC5BI,EAAAA,EAAAA,KAACgL,EAAAA,EAAc,CACX/B,QAASuC,EAAAA,GACT5I,SAlFAC,IAChBiI,EAAUjI,EAAEC,OAAOlB,OACnBoI,EAAanH,EAAEC,OAAOlB,MAAM,EAiFZA,MAAOiJ,EACPY,WAAW,EACXR,WAAW,MAeR,UAAVJ,IACGpL,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kEAAiEc,SAAA,EAC5EI,EAAAA,EAAAA,KAAA,OACIL,MAAO,CAGHgF,MAAO,SAEX7F,UAAU,0DAAyDc,UAenEI,EAAAA,EAAAA,KAAC0L,EAAAA,EAAgB,CACb/I,KAAK,YACLgJ,iBAAiB,aACjB/J,MAAO6I,EACP7H,SAAWgJ,IAAUC,OAxHxBhJ,EAwHwC+I,EAAM9I,OAAOlB,MAvHtEkK,IAAOjJ,GAAGkJ,OAAO,cAAgBD,IAAOnB,GAASoB,OAAO,eACxDnB,EAAW,MAEfF,EAAa7H,QACbqH,EAAkB4B,IAAOjJ,GAAGkJ,OAAO,eALdlJ,KAwH4D,EACzDmJ,QAAS,IAAIC,UAGrBjM,EAAAA,EAAAA,KAAA,SAAOlB,UAAU,4BAA4Ba,MAAO,CAACG,WAAY,OAAOF,SAAC,QAGzEI,EAAAA,EAAAA,KAAA,OACIL,MAAO,CAGHgF,MAAO,SAEX7F,UAAU,kDAAiDc,UAe3DI,EAAAA,EAAAA,KAAC0L,EAAAA,EAAgB,CACb/I,KAAK,YACLf,MAAO+I,EACP/H,SAAWgJ,IAAUM,OAhJ1BrJ,EAgJwC+I,EAAM9I,OAAOlB,MA/IxEgJ,EAAW/H,QACXsH,EAAgB2B,IAAOjJ,GAAGkJ,OAAO,eAFdlJ,KAgJ4D,EACvDmJ,QAAS,IAAIC,KACbE,QAAS1B,SAKxBD,GACGxK,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACoM,EAAAA,GAAY,CACTC,WAAYC,EAAAA,GAAAA,SACZC,YAAY,SACZtJ,QAASsH,EACTiC,QAAS,OACTxN,KAAM,yBAIdgB,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,QAwCN,E,6CChOd,MA0PA,EA1PsBsK,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxB,MAAOvI,EAAYwI,IAAiBxM,EAAAA,EAAAA,UAAS,OACtCN,EAAS+M,IAAczM,EAAAA,EAAAA,WAAS,IAChC0M,EAAcC,IAAmB3M,EAAAA,EAAAA,WAAS,IAC1CgJ,EAAWC,IAAgBjJ,EAAAA,EAAAA,UAAS,KACpCkJ,EAASC,IAAcnJ,EAAAA,EAAAA,UAAS,KAChC4M,EAAYC,IAAiB7M,EAAAA,EAAAA,UAAS,KACtC2H,EAAQmF,IAAa9M,EAAAA,EAAAA,UAAS,cAC9B2I,EAAkBoE,IAAsB/M,EAAAA,EAAAA,UAAS,KACjD6I,GAAOD,KAAY5I,EAAAA,EAAAA,UAAS,OAC5BqI,GAAWC,GAAkB0E,KAAuBC,EAAAA,EAAAA,MACpDrN,GAAMC,KAAWG,EAAAA,EAAAA,UAAS,IAC1BR,GAAW0N,KAAgBlN,EAAAA,EAAAA,UAAS,OACpCP,GAAc0N,KAAmBnN,EAAAA,EAAAA,UAAS,OAEjDS,EAAAA,EAAAA,YAAU,KACN,MAAM2M,EAAO,CACT7M,OAAQqM,EACRS,UAAW/E,GACXX,OAAQA,EACR1F,QAAS4G,GACTjJ,KAAMA,GACN0N,KAAM9N,GACN+N,SAAU9N,IAIC,WAAXkI,GACA0C,IAAOrB,EAAW,cAAcwE,WAChCnD,IAAOnB,EAAS,cAAcsE,YAE9BJ,EAAKK,WAAapD,IAAOrB,EAAW,cAAcsB,OAAO,cACzD8C,EAAKM,SAAWrD,IAAOnB,EAAS,cAAcoB,OAAO,gBAIpDhC,IAA+B,WAAXX,GACT,WAAXA,GACG0C,IAAOrB,EAAW,cAAcwE,WAChCnD,IAAOnB,EAAS,cAAcsE,WAC9BnD,IAAOrB,GAAW2E,eAAetD,IAAOnB,EAAS,kBAErDuD,GAAW,IACXmB,EAAAA,EAAAA,KAAwBR,GACnBS,MAAMC,IACHtB,EAAcsB,EAAIrM,KAAK,IAE1BsM,SAAQ,KACLtB,GAAW,GACXE,GAAgB,EAAM,IAElC,GACD,CACCrE,GACAX,EACAnI,GACAC,GACAyJ,EACAF,EACA4D,EACA/D,GACAjJ,MAGJa,EAAAA,EAAAA,YAAU,KACF6H,KACA0F,EAAAA,EAAAA,KAAsB1F,IAAkBuF,MAAMC,IAAS,IAADG,EAClD,MAAMC,EAAiB,OAAHJ,QAAG,IAAHA,GAAS,QAANG,EAAHH,EAAKrM,YAAI,IAAAwM,OAAN,EAAHA,EAAWtM,KAAKC,IAAI,IACjCA,EACHV,KAAK,GAADjD,OAAS,OAAJ2D,QAAI,IAAJA,OAAI,EAAJA,EAAMuM,WAAU,KAAAlQ,OAAQ,OAAJ2D,QAAI,IAAJA,OAAI,EAAJA,EAAMwM,eAEvCrB,EAAmBmB,EAAY,GAEvC,GACD,CAAC5F,KACJ,MAuBM+F,IAAgBC,EAAAA,EAAAA,aAClBC,KAAU/I,IACN3F,GAAQ,GACR8M,GAAgB,GAChBE,EAAcrH,EAAI,GACnB,KACH,IAGEgJ,IAAgBC,EAAAA,EAAAA,UAAQ,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAChC,GAAIC,MAAMC,QAAkB,OAAV/K,QAAU,IAAVA,GAAqB,QAAX0K,EAAV1K,EAAYgL,iBAAS,IAAAN,OAAX,EAAVA,EAAuBO,MAAO,MAAO,IACvD,IAAIC,EACAlL,GAA6C,IAArB,OAAVA,QAAU,IAAVA,GAAqB,QAAX2K,EAAV3K,EAAYgL,iBAAS,IAAAL,OAAX,EAAVA,EAAuBM,MACrB,OAAVjL,QAAU,IAAVA,GAAqB,QAAX4K,EAAV5K,EAAYgL,iBAAS,IAAAJ,GAAM,QAANC,EAArBD,EAAuBK,YAAI,IAAAJ,OAAjB,EAAVA,EAA6BM,MAAM,KACnC,KACV,OAAOD,EAAK,GAAAjR,QACHmR,EAAAA,EAAAA,IAAkB,OAALF,QAAK,IAALA,OAAK,EAALA,EAAQ,GAAI,UAAS,OAAAjR,QAAMmR,EAAAA,EAAAA,IAAkB,OAALF,QAAK,IAALA,OAAK,EAALA,EAAQ,GAAI,WACpE,GAAG,GACV,CAAW,OAAVlL,QAAU,IAAVA,OAAU,EAAVA,EAAYgL,YAEhB,OACIzQ,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,CAAAvC,UACIH,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAACmR,SAAU,YAAYlR,SAAA,EAC/BI,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACC,MAAI,EAACC,QAASnB,KAG5BnB,EAAAA,EAAAA,KAAC+Q,EAAmB,CAChBjH,UAAWA,GACXC,iBAAkBA,GAClBC,aAAegH,IAASC,OApDhB/N,EAoD+B8N,EAnDnD1P,GAAQ,GACR4M,EAAmB,UAARhL,QACXqL,EAAUrL,GAHUA,KAoDqC,EAC7C+G,iBAAmBiH,GAhDTA,KACtB5P,GAAQ,GACR4M,GAAW,GACXO,GAAoByC,EAAI,EA6CejH,CAAiBiH,GAC5ChH,kBAAoBiH,GA5CXA,KACrB7P,GAAQ,GACRoJ,EAAaoB,IAAOqF,GAAOpF,OAAO,cAAc,EA0CNqF,CAAgBD,GAC9ChH,gBAAkBkH,GAxCXA,KACnB/P,GAAQ,GACRsJ,EAAWkB,IAAOuF,GAAKtF,OAAO,cAAc,EAsCNuF,CAAcD,GACxCjH,iBAAkBA,EAClBC,SAAUA,GACVC,MAAOA,MAKX7K,EAAAA,EAAAA,MAAA,OAAKX,UAAU,uCAAsCc,SAAA,EACjDI,EAAAA,EAAAA,KAACpB,EACG,CACAY,QAAQ,iBACRV,UAAU,UACVO,WAAW,UACXE,WAAmC,QAAzBmN,EAAY,OAAVjH,QAAU,IAAVA,OAAU,EAAVA,EAAY8L,mBAAW,IAAA7E,EAAAA,EAAI,IACvCpN,QAAmC,QAA5BqN,EAAY,OAAVlH,QAAU,IAAVA,OAAU,EAAVA,EAAY+L,sBAAc,IAAA7E,EAAAA,EAAI,OAE3C3M,EAAAA,EAAAA,KAACpB,EAAiB,CACdU,QAA8B,QAAvBsN,EAAY,OAAVnH,QAAU,IAAVA,OAAU,EAAVA,EAAYgM,iBAAS,IAAA7E,EAAAA,EAAI,IAClCpN,QAAQ,aACRV,UAAU,UACVO,WAAW,aAEfW,EAAAA,EAAAA,KAACpB,EAAiB,CACdU,QAAkC,QAA3BuN,EAAY,OAAVpH,QAAU,IAAVA,OAAU,EAAVA,EAAYiM,qBAAa,IAAA7E,EAAAA,EAAI,IACtCrN,QAAQ,WACRV,UAAU,UACVO,WAAW,aAEfW,EAAAA,EAAAA,KAACpB,EAAiB,CACdU,QAAiC,QAA1BwN,EAAY,OAAVrH,QAAU,IAAVA,OAAU,EAAVA,EAAYkM,oBAAY,IAAA7E,EAAAA,EAAI,IACrCtN,QAAQ,SACRV,UAAU,UACVO,WAAW,aAEfW,EAAAA,EAAAA,KAACpB,EAAiB,CACdU,QAAiC,QAA1ByN,EAAY,OAAVtH,QAAU,IAAVA,OAAU,EAAVA,EAAYmM,oBAAY,IAAA7E,EAAAA,EAAI,IACrCvN,QAAQ,UACRV,UAAU,UACVO,WAAW,gBAYnBW,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACwF,EAAwB,CACrB1G,UAAU,+BACV2G,WAAYA,EACZC,KAAM0D,OAMd3J,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gEAA+Dc,SAAA,EAC1EI,EAAAA,EAAAA,KAACC,EAAoB,CACjBC,aAAa,kBACbG,cAAc6D,EAAAA,EAAAA,IAAgC,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAYoM,cAAe,IAC/D1R,aAAa,iBACbG,cAAc4D,EAAAA,EAAAA,IAAgC,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAYqM,cAAe,KAC/D1R,aAAa,YACbG,cAAc2D,EAAAA,EAAAA,IAAgC,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAYsM,SAAU,OAE9D/R,EAAAA,EAAAA,KAACC,EAAoB,CACjBC,aAAa,YACbG,cAAc6D,EAAAA,EAAAA,IAAgC,OAAVuB,QAAU,IAAVA,GAAoB,QAAVuH,EAAVvH,EAAYuM,gBAAQ,IAAAhF,OAAV,EAAVA,EAAsBiF,MAAO,MACjEzR,iBAAiBqQ,EAAAA,EAAAA,IAAuB,OAAVpL,QAAU,IAAVA,GAAoB,QAAVwH,EAAVxH,EAAYuM,gBAAQ,IAAA/E,OAAV,EAAVA,EAAsBiF,IAAK,WACzD/R,aAAa,aACbG,cAAc4D,EAAAA,EAAAA,IAAgC,OAAVuB,QAAU,IAAVA,GAAqB,QAAXyH,EAAVzH,EAAYgL,iBAAS,IAAAvD,OAAX,EAAVA,EAAuBiF,OAAQ,MACnE/R,aAAa,cACbK,gBAAiBwP,GACjB1P,cAAc2D,EAAAA,EAAAA,IAAgC,OAAVuB,QAAU,IAAVA,GAAsB,QAAZ0H,EAAV1H,EAAY2M,kBAAU,IAAAjF,OAAZ,EAAVA,EAAwBgF,OAAQ,MACpEzR,gBAA2B,OAAV+E,QAAU,IAAVA,GAAsB,QAAZ2H,EAAV3H,EAAY2M,kBAAU,IAAAhF,OAAZ,EAAVA,EAAwBiF,SAE7CrS,EAAAA,EAAAA,KAACY,EAAgB,CACbV,aAAa,YACbG,aAA8C,QAAlCgN,EAAY,OAAV5H,QAAU,IAAVA,GAAqB,QAAX6H,EAAV7H,EAAY6M,iBAAS,IAAAhF,OAAX,EAAVA,EAAuBiF,iBAAS,IAAAlF,EAAAA,EAAI,IAClDlN,aAAa,cACbG,aAAkD,QAAtCiN,EAAY,OAAV9H,QAAU,IAAVA,GAAuB,QAAb+H,EAAV/H,EAAY+M,mBAAW,IAAAhF,OAAb,EAAVA,EAAyBiF,mBAAW,IAAAlF,EAAAA,EAAI,IACtDnN,aAAa,cACbG,aAAkD,QAAtCkN,EAAY,OAAVhI,QAAU,IAAVA,GAAuB,QAAbiI,EAAVjI,EAAYiN,mBAAW,IAAAhF,OAAb,EAAVA,EAAyBiF,mBAAW,IAAAlF,EAAAA,EAAI,IACtDjN,iBAAiD,QAAhCmN,EAAW,OAAVlI,QAAU,IAAVA,GAAqB,QAAXmI,EAAVnI,EAAY6M,iBAAS,IAAA1E,OAAX,EAAVA,EAAuBmE,gBAAQ,IAAApE,EAAAA,EAAI,KAAO,MAC5DlN,iBAAmD,QAAlCoN,EAAW,OAAVpI,QAAU,IAAVA,GAAuB,QAAbqI,EAAVrI,EAAY+M,mBAAW,IAAA1E,OAAb,EAAVA,EAAyBiE,gBAAQ,IAAAlE,EAAAA,EAAI,KAAO,MAC9DnN,iBAAmD,QAAlCqN,EAAW,OAAVtI,QAAU,IAAVA,GAAuB,QAAbuI,EAAVvI,EAAYiN,mBAAW,IAAA1E,OAAb,EAAVA,EAAyB+D,gBAAQ,IAAAhE,EAAAA,EAAI,KAAO,YAMtE/N,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,qBAAoBc,UAC/BI,EAAAA,EAAAA,KAAC4S,EAAmB,CAChB7R,aAAwB,OAAV0E,QAAU,IAAVA,OAAU,EAAVA,EAAYoN,qBAC1B1R,QAASgN,EACT/M,eAAiBwH,IAtIjCkH,GAsI+DlH,EAAM,EACrDvH,KAAMA,GACNC,QAASA,GACTJ,aAAcA,GACdD,UAAWA,GACXD,QAAUqC,IACNsL,GAAatL,GACbuL,GACI3N,KAAcoC,EAAO,MAAyB,QAAjBnC,GAAyB,OAAS,OAEnEI,GAAQ,EAAE,UAM3B,E,sECvPX,MAAMwR,EAAkBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACFC,EAAAA,EAAAA,MACf,MAAMC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BC,GAAkBF,EAAAA,EAAAA,IAAYG,EAAAA,IAEpC,OACI7T,EAAAA,EAAAA,MAAA,OACIE,MAAO,CACHI,SAAU,OACVD,WAAY,MACZD,WAAY0T,EAAAA,EAAAA,QACZC,UAAW,QACXC,UAAW,QAEf3U,UAAU,0CAAyCc,SAAA,EAEnDI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CAACC,gBAAiBC,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,KAAkDhU,UAC7EI,EAAAA,EAAAA,KAAC6T,EAAAA,GAAI,CACD/U,UAAS,8CAAAY,OACkB,uBAAf,OAARqT,QAAQ,IAARA,OAAQ,EAARA,EAAUe,UACJ,uBACA,kBAEVC,GAAG,oBACHpU,MAAO,CAACgB,aAAc,iBAAiBf,SAC1C,cAKLI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CAACC,gBAAiBC,EAAAA,EAAAA,SAAAA,QAAAA,MAAAA,KAAiDhU,UAC5EI,EAAAA,EAAAA,KAAC6T,EAAAA,GAAI,CACD/U,UAAS,8CAAAY,OACkB,sBAAf,OAARqT,QAAQ,IAARA,OAAQ,EAARA,EAAUe,UACJ,uBACA,kBAEVC,GAAG,mBACHpU,MAAO,CAACgB,aAAc,iBAAiBf,SAC1C,aAKLI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CAACC,gBAAiBC,EAAAA,EAAAA,SAAAA,QAAAA,aAAAA,KAAwDhU,UACnFI,EAAAA,EAAAA,KAAC6T,EAAAA,GAAI,CACD/U,UAAS,8CAAAY,OACkB,0BAAf,OAARqT,QAAQ,IAARA,OAAQ,EAARA,EAAUe,UACJ,uBACA,kBAEVC,GAAG,uBACHpU,MAAO,CAACgB,aAAc,iBAAiBf,SAC1C,qBAKU,OAAdsT,QAAc,IAAdA,GAAAA,EAAgBc,gBAAiC,OAAfX,QAAe,IAAfA,GAAAA,EAAiBY,uBAChDjU,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CACTC,gBAAiBC,EAAAA,EAAAA,SAAAA,QAAAA,eAAAA,KAA0DhU,UAE3EI,EAAAA,EAAAA,KAAC6T,EAAAA,GAAI,CACD/U,UAAS,0DAAAY,OACkB,+BAAf,OAARqT,QAAQ,IAARA,OAAQ,EAARA,EAAUe,UACJ,uBACA,kBAEVC,GAAG,4BACHpU,MAAO,CAACgB,aAAc,iBAAiBf,SAC1C,qBAIL,OACF,E,mCC3Fd,MAIA,EAJuBsU,KACZlU,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,mBC2JhB,EAtJ0BuU,KACtB,MAAO1J,EAAWC,IAAgBjJ,EAAAA,EAAAA,UAASqK,MAASsI,KAAK,GAAI,OAAOC,WAC7D1J,EAASC,IAAcnJ,EAAAA,EAAAA,UAAS,IAAIwK,MAC3C,OACIxM,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAACgB,aAAc,sBAAsBf,SAAA,EAC7CH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,yGAAwGc,SAAA,EAEnHI,EAAAA,EAAAA,KAAA,OACIL,MAAO,CAACgB,aAAc,QACtB7B,UAAU,gDACV2H,GAAG,0BAAyB7G,UAE5BH,EAAAA,EAAAA,MAAA,QACIX,UAAU,oBACVa,MAAO,CAACgB,aAAc,QACtB4B,aAAa,MAAK3C,SAAA,EAElBI,EAAAA,EAAAA,KAACkL,EAAAA,GAAK,CACFC,KAAK,0CACLrM,UAAU,iGAGdkB,EAAAA,EAAAA,KAAA,SACIL,MAAO,CACHgB,aAAc,QAElB8B,KAAK,OACL3D,UAAU,oEACV6D,KAAK,SACL0I,YAAY,iBAQxB5L,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kEAAiEc,SAAA,EAC5EH,EAAAA,EAAAA,MAAA,OACIE,MAAO,CACH2U,SAAU,SACV3T,aAAc,OAElB7B,UAAU,8DAA6Dc,SAAA,EAEvEI,EAAAA,EAAAA,KAAA,SAAOlB,UAAU,OAAMc,UACnBI,EAAAA,EAAAA,KAAA,KAAGlB,UAAU,oDAEjBkB,EAAAA,EAAAA,KAACuU,IAAU,CACPzV,UAAU,sCACV0V,gBAAiB,aAEjB7R,KAAK,YACL8R,WAAW,aACXC,WAAW,EACXC,cAAc,QAItB3U,EAAAA,EAAAA,KAAA,SAAOlB,UAAU,+BAA+Ba,MAAO,CAACG,WAAY,OAAOF,SAAC,QAG5EH,EAAAA,EAAAA,MAAA,OACIE,MAAO,CACH2U,SAAU,SACV3T,aAAc,OAElB7B,UAAU,8DAA6Dc,SAAA,EAEvEI,EAAAA,EAAAA,KAAA,SAAOlB,UAAU,OAAMc,UACnBI,EAAAA,EAAAA,KAAA,KAAGlB,UAAU,oDAEjBkB,EAAAA,EAAAA,KAACuU,IAAU,CACPzV,UAAU,uBACV0V,gBAAiB,WACjB5R,SAAWgJ,GAAUhB,EAAWkB,IAAOF,GAAOG,OAAO,eACrDpJ,KAAK,YACL8R,WAAW,aACXC,WAAW,EACXC,cAAc,WAO1BlV,EAAAA,EAAAA,MAAA,OAAKX,UAAU,cAAac,SAAA,EACxBH,EAAAA,EAAAA,MAAA,KACImV,KAAK,IACL9V,WAAW+V,EAAAA,EAAAA,GACP,2FAEJ,uBAAqB,QACrB,yBAAuB,aACvBlV,MAAO,CACHI,SAAU,OACVF,WAAY,UACZC,WAAY,OACdF,SAAA,EAEFI,EAAAA,EAAAA,KAACkL,EAAAA,GAAK,CACFC,KAAK,0CACLrM,UAAU,wCACZ,aAINW,EAAAA,EAAAA,MAAA,KACImV,KAAK,IACL9V,WAAW+V,EAAAA,EAAAA,GACP,kFAEJ,uBAAqB,QACrB,yBAAuB,aACvBlV,MAAO,CACHI,SAAU,OACVF,WAAY,UACZC,WAAY,OACdF,SAAA,EAEFI,EAAAA,EAAAA,KAACkL,EAAAA,GAAK,CACFC,KAAK,0CACLrM,UAAU,wCACZ,aAINkB,EAAAA,EAAAA,KAAA,KAAGlB,UAAU,OAAMc,UACfI,EAAAA,EAAAA,KAAA,UACIL,MAAO,CACHI,SAAU,OACV+U,UAAW,OAEfhW,UAAU,iEAAgEc,UAE1EI,EAAAA,EAAAA,KAAA,KACIL,MAAO,CAAC6T,UAAW,QACnB1U,UAAU,kEAM9BkB,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACkU,EAAc,QAEjB,E,eCjJd,MCGMa,EAAgClW,IAA+B,IAA9B,UAAEC,EAAS,UAAEkW,GAAWnW,EAC3D,MAAM8G,GAAWC,EAAAA,EAAAA,QAA8B,OACzC,KAAEC,IAASC,EAAAA,EAAAA,MACXmP,EAAcA,KAChB,IAAKtP,EAASM,QACV,OAGWC,UAASC,EAAAA,EAAAA,IAAOR,EAASM,QAAS,WAAjD,MAEMF,EAAQ,IAAIK,IAAJ,CAAeT,EAASM,QA6C9C,SAAyB1C,EAAgByR,GACrC,IAAIE,EAAkB,GAClBC,EAAwB,GAO5B,OANS,OAATH,QAAS,IAATA,OAAS,EAATA,EAAW7R,QAAS,IACP,OAAT6R,QAAS,IAATA,GAAAA,EAAW5R,KAAKC,IAAe,IAAD+R,EAAAC,EAC1BH,EAAShO,KAAS,OAAJ7D,QAAI,IAAJA,OAAI,EAAJA,EAAMgP,OACpB8C,EAAejO,KAA+B,QAA3BkO,EAAM,OAAJ/R,QAAI,IAAJA,GAAY,QAARgS,EAAJhS,EAAM8O,cAAM,IAAAkD,OAAR,EAALA,EAAgBC,QAAQ,UAAE,IAAAF,EAAAA,EAAI,EAAE,KAGrD,CACH/N,OAAQ,CACJ,CACI1E,KAAM,WAENO,KAAMiS,IAGdpP,MAAO,CACHlG,WAAY,UACZ4C,KAAM,OACNc,OAAQ,IACRgE,QAAS,CACLC,MAAM,GAEVC,KAAM,CACFC,SAAS,EACTjF,KAAM,KACNkF,gBAAgB,IAGxBC,YAAa,CAAC,EACdI,OAAQ,CACJR,MAAM,GAEVS,WAAY,CACRP,SAAS,GAMbmB,KAAM,CACFpG,KAAM,QACNqG,QAAS,GAGbZ,OAAQ,CACJV,MAAM,EACN7C,MAAO,EACPwD,OAAQ,CAAC,YAEbC,MAAO,CAEHC,WAAY6M,EAEZ5M,WAAY,CACRd,MAAM,GAEVe,UAAW,CACPf,MAAM,GAEVgB,OAAQ,CACJ7I,MAAO,CACHwI,OAAQ,UACRpI,SAAU,OACVD,WAAY,QAGpByV,WAAY,CACRzE,SAAU,QACV5I,OAAQ,CACJsN,MAAO,UACP7Q,MAAO,EACP8Q,UAAW,IAGnBjM,QAAS,CACL9B,SAAS,EACTgC,eAAWgM,EACXC,QAAS,EACThW,MAAO,CACHI,SAAU,UAItB0I,MAAO,CACHD,OAAQ,CACJ7I,MAAO,CACHwI,OAAQ,UACRpI,SAAU,OACVD,WAAY,SAIxBoJ,OAAQ,CACJC,OAAQ,CACJC,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGfyH,MAAO,CACHD,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGf0H,OAAQ,CACJC,kCAAkC,EAClCH,OAAQ,CACJ3G,KAAM,OACNb,MAAO,KAInB4H,QAAS,CACL7J,MAAO,CACHI,SAAU,QAEd0J,EAAG,CACCC,UAAW,SAAUzC,GACjB,MAAO,IAAMA,CACjB,IAGRkB,OAAQ,CAAC,WACTwB,KAAM,CACFvK,YAAa,UACbwK,gBAAiB,EACjBnB,MAAO,CACHoB,MAAO,CACHrC,MAAM,IAGdY,MAAO,CACHyB,MAAO,CACHrC,MAAM,IAGdgF,QAAS,CACLoJ,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,KAGdC,QAAS,CACLC,aAAc,UACdC,YAAa,GAGzB,CApMuD7P,CAAgB9C,EAAQyR,IAKvE,OAJIjP,GACAA,EAAMO,SAGHP,CAAK,EAahB,OAVA7D,EAAAA,EAAAA,YAAU,KACN,MAAM6D,EAAQkP,IAEd,MAAO,KACClP,GACAA,EAAMQ,SACV,CACH,GACF,CAACZ,EAAUqP,KAGVhV,EAAAA,EAAAA,KAAA,OAAKlB,UAAS,QAAAY,OAAUZ,EAAS,cAAac,UAK1CH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,YAAWc,SAAA,EACtBH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iDAAgDc,SAAA,EAC3DI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,qCACfkB,EAAAA,EAAAA,KAAA,OACIlB,UAAU,iBACVa,MAAO,CAAEG,WAAY,MAAOD,WAAY,WAAYD,SACvD,iBAKLI,EAAAA,EAAAA,KAAA,OAAKwG,IAAKb,EAAUc,GAAG,2BAA2B9G,MAAO,CAAE4D,OAAQ,eAIrE,ECpDd,MAkGA,EAlGqB1E,IAAsC,IAADgC,EAAAC,EAAA,IAApC,UAACgB,EAAS,aAAEqU,EAAY,KAAE9U,GAAKxC,EACjD,OACIY,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,8DAA6Dc,UACxEH,EAAAA,EAAAA,MAAA,SAAOX,UAAU,QAAOc,SAAA,EACpBI,EAAAA,EAAAA,KAAA,SAAOlB,UAAU,cAAac,UAC1BH,EAAAA,EAAAA,MAAA,MACIX,UAAU,8BACVa,MAAO,CACHI,SAAU,OACVD,WAAY,MACZD,WAAY,WACdD,SAAA,EAEFI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,gBACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,kBACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,iBAEvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,mBAEvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,gBACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,kBAG/CI,EAAAA,EAAAA,KAAA,SAAAJ,UACc,OAATkC,QAAS,IAATA,GAAe,QAANjB,EAATiB,EAAWoB,YAAI,IAAArC,OAAN,EAATA,EAAiBsC,QAAS,EACd,OAATrB,QAAS,IAATA,GAAe,QAANhB,EAATgB,EAAWoB,YAAI,IAAApC,OAAN,EAATA,EAAiBsC,KAAI,CAACC,EAAMC,KACxB7D,EAAAA,EAAAA,MAAA,MAEIE,MAAO,CACHI,SAAU,OACVF,WAAY,UACZC,WAAY,OAEhBhB,UAAU,yCAAwCc,SAAA,EAElDI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAOa,MAAO,CAACG,WAAY,OAAOF,UAC5CH,EAAAA,EAAAA,MAACoU,EAAAA,GAAI,CACD/U,UAAU,sBACViV,GAAI,aACJqC,MAAO,CACHjH,SAAc,OAAJ9L,QAAI,IAAJA,OAAI,EAAJA,EAAMgT,cAChBnH,WAAgB,OAAJ7L,QAAI,IAAJA,OAAI,EAAJA,EAAMiT,gBAClBC,OAAY,OAAJlT,QAAI,IAAJA,OAAI,EAAJA,EAAMK,QACd8S,UAAe,OAAJnT,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,GACjBgQ,MAAM,GACR7W,SAAA,EAGDiR,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMiT,iBAAiB,KACpCzF,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMgT,qBAG5B5W,EAAAA,EAAAA,MAAA,MAAIX,UAAU,MAAKc,SAAA,CAAC,KAAEiR,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMqT,kBAEzC1W,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMsT,YAAa,QAE9C3W,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMuT,cAAe,QAEhD5W,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMwT,UAAW,QAE5C7W,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,qBAAqBa,MAAO,CAACG,WAAY,OAAOF,UACzDsE,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMyT,QAAS,SArCrCxT,MA0CbtD,EAAAA,EAAAA,KAAA,MAAAJ,UACII,EAAAA,EAAAA,KAAA,MACI8E,QAAS,EACTnF,MAAO,CACHoF,UAAW,SACXlF,WAAY,UACZC,WAAY,MACZC,SAAU,GACViF,WAAY,GACZC,cAAe,IACjBrF,SACL,4BAQrBI,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACP7D,KAAMA,EACN+D,WAAqB,OAATtD,QAAS,IAATA,OAAS,EAATA,EAAWuD,UACvB/D,QAAU6D,GAAgBgR,EAAahR,OAEzC,E,gBC1Fd,MA8FA,GA9FiB4R,KACb,MAAO/B,EAAWgC,IAAgBvV,EAAAA,EAAAA,UAAS,OACpCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,OACpCwV,EAAcC,IAAWzV,EAAAA,EAAAA,UAAS,IAAIwK,OACtC9K,EAAS+M,IAAczM,EAAAA,EAAAA,WAAS,IAChC0M,EAAcC,IAAmB3M,EAAAA,EAAAA,WAAS,IAC1CJ,EAAMC,IAAWG,EAAAA,EAAAA,UAAS,GAC3BsR,GAAWC,EAAAA,EAAAA,MACXmE,GAAWhE,EAAAA,EAAAA,IAAYiE,GAAAA,KAC7BlV,EAAAA,EAAAA,YAAU,KAAO,IAADmV,EAAAC,EACZpJ,GAAW,GACX,MAAMW,EAAO,CACT0I,KAAkB,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,cACpB9T,QAAgC,QAAzB2T,EAAU,OAARtE,QAAQ,IAARA,GAAe,QAAPuE,EAARvE,EAAUqD,aAAK,IAAAkB,OAAP,EAARA,EAAiBf,cAAM,IAAAc,EAAAA,EAAY,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAU1Q,IAElDgR,EAAa5I,EAAK,GAEnB,CAACoI,KAEJ/U,EAAAA,EAAAA,YAAU,KAAO,IAADwV,EAAAC,EACZvJ,GAAgB,GAChB,MAAMS,EAAO,CACT0I,KAAkB,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,cACpB9T,QAAgC,QAAzBgU,EAAU,OAAR3E,QAAQ,IAARA,GAAe,QAAP4E,EAAR5E,EAAUqD,aAAK,IAAAuB,OAAP,EAARA,EAAiBpB,cAAM,IAAAmB,EAAAA,EAAY,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAU1Q,GAC9CpF,KAAMA,GAEVuW,EAAa/I,EAAK,GACnB,CAACxN,EAAM4V,IAEV,MAAMQ,EAAgB5I,KAClBgJ,EAAAA,EAAAA,KAA+BhJ,GAAMS,MAAMC,GAAQyH,EAAazH,EAAIrM,OAAM,EAExE0U,EAAgB/I,KAClBiJ,EAAAA,EAAAA,KAA+BjJ,GAC1BS,MAAMC,GAAQxN,EAAgB,OAAHwN,QAAG,IAAHA,OAAG,EAAHA,EAAKrM,QAChCsM,SAAQ,KACLtB,GAAW,GACXE,GAAgB,EAAM,GACxB,EAKV,OACI3O,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAACG,WAAY,UAAWC,SAAU,OAAQ+Q,SAAU,YAAYlR,SAAA,EAExEI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,8BACVa,MAAO,CACHgB,aAAc,qBACdoK,UACI,gFACNnL,UAEFH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iBAAiBa,MAAO,CAACG,WAAY,OAAOF,SAAA,CAAC,wBAClC,QAE1BI,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAAC0L,EAAAA,EAAgB,CACbqM,SAAS,OACT/L,QAAS,IAAIC,KACbwI,WAAW,KACXpJ,YAAY,OACZzJ,MAAOqV,EACPrU,SAAWC,IAAO,IAADmV,EACb1W,EAAQ,GACR4V,EAAS,OAADrU,QAAC,IAADA,GAAS,QAARmV,EAADnV,EAAGC,cAAM,IAAAkV,OAAR,EAADA,EAAWpW,MAAM,YAO7CnC,EAAAA,EAAAA,MAAA,OAAKX,UAAU,QAAQa,MAAO,CAACmR,SAAU,YAAYlR,SAAA,EACjDI,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACC,MAAI,EAACC,QAASnB,KAC5BnB,EAAAA,EAAAA,KAAC+U,EAAY,CAACC,UAAWA,QAI7BvV,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAACmR,SAAU,YAAYlR,SAAA,EAC/BI,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACC,MAAI,EAACC,QAAS6L,KAC5BnO,EAAAA,EAAAA,KAACiY,EAAY,CACTnW,UAAWA,EACXT,KAAMA,EACN8U,aA7CUlP,IACtB3F,EAAQ2F,EAAI,EA6CA9F,QAASgN,SAIf,EC1Bd,GA1EuBtP,IAAiB,IAAhB,SAACqZ,GAASrZ,EAC9B,OACIY,EAAAA,EAAAA,MAAA,OACIX,UAAS,4DACTa,MAAO,CACHgB,aAAc,OACdZ,SAAU,OACVD,WAAY,MACZD,WAAY,WACdD,SAAA,EAKFI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,kDAAiDc,UAC5DI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,iBAAiBa,MAAO,CAACG,WAAY,OAAOF,SAAC,kBAWhEI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,qBAAoBc,UAC/BI,EAAAA,EAAAA,KAAA,SAAOlB,UAAU,8BAA8Ba,MAAO,CAACG,WAAY,OAAOF,UACtEH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACIH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,oBACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAU,OAARsY,QAAQ,IAARA,OAAQ,EAARA,EAAUrG,oBAEpCpS,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,uBACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,UACfsE,EAAAA,EAAAA,IAA8B,OAARgU,QAAQ,IAARA,OAAQ,EAARA,EAAUC,oBAAqB,WAG9D1Y,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,aACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,UACfsE,EAAAA,EAAAA,IAA8B,OAARgU,QAAQ,IAARA,OAAQ,EAARA,EAAUE,QAAS,WAGlD3Y,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,aACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,UACfsE,EAAAA,EAAAA,IAA8B,OAARgU,QAAQ,IAARA,OAAQ,EAARA,EAAUG,QAAS,WAGlD5Y,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,cACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,UACfsE,EAAAA,EAAAA,IAA8B,OAARgU,QAAQ,IAARA,OAAQ,EAARA,EAAUI,SAAU,WAGnD7Y,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,yBACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAU,OAARsY,QAAQ,IAARA,OAAQ,EAARA,EAAUK,uBAEpC9Y,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,eACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,UACfsE,EAAAA,EAAAA,IAA8B,OAARgU,QAAQ,IAARA,OAAQ,EAARA,EAAUM,UAAW,mBAM9D,EClERC,GAA2B5Z,IAA6B,IAA5B,UAACC,EAAS,UAAEkW,GAAUnW,EACpD,MAAM8G,GAAWC,EAAAA,EAAAA,QAAO,OAClB,KAACC,IAAQC,EAAAA,EAAAA,MACTE,EAAeA,KACjB,IAAKL,EAASM,QACV,OAGWC,UAASC,EAAAA,EAAAA,IAAOR,EAASM,QAAS,WAAjD,MAEMF,EAAQ,IAAIK,IAAJ,CAAeT,EAASM,QAqF9C,SAAyB1C,EAAQyR,GAC7B,IAAI0D,EAAS,GACTC,EAAK,GACLC,EAAK,GACLC,EAAS,GACb,IAAIC,EAAO9D,GAAa+D,OAAOD,KAAK9D,GACpC0D,EAASI,EACT9D,GACI+D,OAAOD,KAAK9D,GAAW5R,KAAI,CAAC4V,EAAS1V,KAAO,IAAD2V,EAAAC,EAAAC,EACvCR,EAAGzR,KAA0B,QAAtB+R,EAACjE,EAAUgE,GAASI,UAAE,IAAAH,OAAA,EAArBA,EAAuB3D,QAAQ,IACvCsD,EAAG1R,KAA0B,QAAtBgS,EAAClE,EAAUgE,GAASK,UAAE,IAAAH,OAAA,EAArBA,EAAuB5D,QAAQ,IACvCuD,EAAO3R,KAAsC,QAAlCiS,EAACnE,EAAUgE,GAASM,sBAAc,IAAAH,OAAA,EAAjCA,EAAmC7D,QAAQ,GAAG,IAElE,MAAMiE,EAAWC,KAAKC,MAAMD,KAAKE,OAAOb,KAAWD,KAAOD,GAAM,IAEhE,MAAO,CACHtR,OAAQ,CACJ,CACI1E,KAAM,iBACNF,KAAM,OAENS,KAAM2V,GAEV,CACIlW,KAAM,KACNF,KAAM,OACNS,KAAM0V,GAEV,CACIjW,KAAM,KACNF,KAAM,OACNS,KAAMyV,IAGd5S,MAAO,CACHlG,WAAY,UAEZ0D,OAAQ,IACRd,KAAM,OACN8E,QAAS,CACLC,MAAM,GAEVC,KAAM,CACFC,SAAS,EACTjF,KAAM,KACNkF,gBAAgB,IAUxBK,OAAQ,CACJR,MAAM,GAEVS,WAAY,CACRP,SAAS,GAEbQ,OAAQ,CACJyR,MAAO,WACPnS,MAAM,EACN7C,MAAO,EACPwD,OAAQ,CAAC,UAAW,UAAW,YAEnCC,MAAO,CAEHC,WAAYqQ,EACZpQ,WAAY,CACRd,MAAM,GAEVe,UAAW,CACPf,MAAM,GAEVgB,OAAQ,CACJ7I,MAAO,CACHE,WAAY,UACZsI,OAAQ,UACRpI,SAAU,OACVD,WAAY,SAIxB2I,MAAO,CACHiR,IAAKH,EACL/Q,OAAQ,CACJ7I,MAAO,CACHE,WAAY,UACZsI,OAAQ,UACRpI,SAAU,OACVD,WAAY,OAEhB4J,UAAW,SAAUzC,GACjB,MAAO,KAAS,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKqO,QAAQ,IAAK,GACnC,IAGRzM,KAAM,CAEFC,QAAS,GAGbI,OAAQ,CACJC,OAAQ,CACJC,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGfyH,MAAO,CACHD,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGf0H,OAAQ,CACJC,kCAAkC,EAClCH,OAAQ,CACJ3G,KAAM,OACNb,MAAO,KAInB4H,QAAS,CACL7J,MAAO,CACHI,SAAU,QAEd0J,EAAG,CACCC,UAAW,SAAUzC,GACjB,MAAO,IAAMA,CACjB,IAGRkB,OAAQ,CAAC,UAAW,UAAW,WAC/BwB,KAAM,CACFvK,YAAa,UACbwK,gBAAiB,EACjBnB,MAAO,CACHoB,MAAO,CACHrC,MAAM,IAGdY,MAAO,CACHyB,MAAO,CACHrC,MAAM,IAGdgF,QAAS,CACLoJ,IAAK,GACLC,MAAO,GACPC,OAAQ,EACRC,KAAM,KAItB,CAlPuD1P,CAAgB9C,EAAQyR,IAKvE,OAJIjP,GACAA,EAAMO,SAGHP,CAAK,EAchB,OAZA7D,EAAAA,EAAAA,YAAU,QAAU,KAEpBA,EAAAA,EAAAA,YAAU,KACN,MAAM6D,EAAQC,IAEd,MAAO,KACCD,GACAA,EAAMQ,SACV,CACH,GACF,CAACZ,EAAUqP,KAGVvV,EAAAA,EAAAA,MAAA,OACIX,UAAS,yBAAAY,OAA2BZ,GACpCa,MAAO,CACHgB,aAAc,OACdd,WAAY,UACZC,WAAY,MACZC,SAAU,QACZH,SAAA,EAIFH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,2BAA2Ba,MAAO,CAACG,WAAY,IAAKC,SAAU,QAAQH,SAAA,CAChF,IAAI,2BAGTH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mFAAkFc,SAAA,EAE7FH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,uCACfkB,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,uBAGTH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,yBAAyBa,MAAO,CAAC6V,MAAO,cACvDxV,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,kBAGTH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,oCACfkB,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,WAGTH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,yBAAyBa,MAAO,CAAC6V,MAAO,cACvDxV,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,gBAGTH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,qBAAqBa,MAAO,CAAC6V,MAAO,cACnDxV,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,WAGTH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kCAAiCc,SAAA,EAC5CI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,yBAAyBa,MAAO,CAAC6V,MAAO,cACvDxV,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,mBASbI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,YAAWc,UAEtBI,EAAAA,EAAAA,KAAA,OAAKwG,IAAKb,EAAUc,GAAG,2BAA2B9G,MAAO,CAAC4D,OAAQ,eAIpE,ECrFd,MAAMqW,GAAqC/a,IAAoB,IAAnB,UAAEgb,GAAWhb,EACrD,MAAM8G,GAAWC,EAAAA,EAAAA,QAA8B,OACzC,KAAEC,IAASC,EAAAA,EAAAA,MACXE,EAAeA,KACjB,GAAa,OAARL,QAAQ,IAARA,IAAAA,EAAUM,QACX,OAGWC,UAASC,EAAAA,EAAAA,IAAe,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QAAS,WAAlD,MAEMF,EAAQ,IAAIK,IAAJ,CAAuB,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QAuB/C,SAAyB1C,EAAgBsW,GAA8B,IAADC,EAAAC,EAAAC,GAC/CrT,EAAAA,EAAAA,IAAoB,kBACnBA,EAAAA,EAAAA,IAAoB,kBAGjBA,EAAAA,EAAAA,IAAoB,sBAG3C,MAAO,CACHU,OAAQ,CAAsB,QAAtByS,EAAU,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWI,kBAAU,IAAAH,EAAAA,EAAI,EAAuB,QAAtBC,EAAW,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWK,iBAAS,IAAAH,EAAAA,EAAI,EAAwB,QAAvBC,EAAW,OAATH,QAAS,IAATA,OAAS,EAATA,EAAWM,kBAAU,IAAAH,EAAAA,EAAI,GAGzFjU,MAAO,CACHtD,KAAM,QAIN8E,QAAS,CACLC,MAAM,IAGdQ,OAAQ,CACJR,MAAM,GAEVqB,KAAM,CACFV,OAAQ,CAAC,UAAW,UAAW,YAKnCF,WAAY,CACRtI,MAAO,CACHwI,OAAQ,CAAC,WA0BjBD,OAAQ,CAEJV,MAAM,EAENW,OAAQ,CAAC,gBAsDbA,OAAQ,CAAC,SAkBjB,CA7JwD9B,CAAgB9C,EAAQsW,IAKxE,OAJI9T,GACAA,EAAMO,SAGHP,CAAK,EAahB,OAVA7D,EAAAA,EAAAA,YAAU,KACN,MAAM6D,EAAQC,IAEd,MAAO,KACCD,IACK,OAALA,QAAK,IAALA,GAAAA,EAAOQ,UACX,CACH,GACF,CAACZ,EAAUkU,KAEP7Z,EAAAA,EAAAA,KAAA,OAAKwG,IAAKb,EAAUc,GAAG,2BAA2B3H,UAAU,WAAgB,EClCvF,MAsDA,GAtDqBD,IAAkB,IAAjB,UAACiD,GAAUjD,EAC7B,MAAMqU,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEnC,OACIpT,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAAA,SACIlB,UAAU,6BACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,UAE7CH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACIH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,OAAMc,SAAC,oBACrBI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,oBAAoBa,MAAO,CAACE,WAAY,WAAWD,SACnD,OAATkC,QAAS,IAATA,OAAS,EAATA,EAAW+P,oBAGpBpS,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIH,EAAAA,EAAAA,MAAA,MAAIX,UAAU,OAAMc,SAAA,EAChBI,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,iBAAiBa,MAAO,CAACya,gBAAiB,cAC1Dpa,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,mBAEVI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,oBAAoBa,MAAO,CAACE,WAAY,WAAWD,UAC5DsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,OAAS,EAATA,EAAWmY,WAAY,WAGvC,OAAd/G,QAAc,IAAdA,OAAc,EAAdA,EAAgBgH,aACbza,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIH,EAAAA,EAAAA,MAAA,MAAIX,UAAU,OAAMc,SAAA,EAChBI,EAAAA,EAAAA,KAAA,QACIlB,UAAU,iBACVa,MAAO,CAACya,gBAAiB,cAE7Bpa,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,kBAEVI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,oBAAoBa,MAAO,CAACE,WAAY,WAAWD,UAC5DsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,OAAS,EAATA,EAAWoY,UAAW,WAIzDza,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACII,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,iBAAiBa,MAAO,CAACya,gBAAiB,cAC1Dpa,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,mBAEVI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,eAAea,MAAO,CAACE,WAAY,WAAWD,UACvDsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,OAAS,EAATA,EAAWqY,WAAY,gBAK5D,ECnBd,GAhC8Btb,IAAiB,IAAhB,SAACqZ,GAASrZ,EACrC,OACIY,EAAAA,EAAAA,MAAA,OACIX,UAAS,sDACTa,MAAO,CACHgB,aAAc,OACdZ,SAAU,OACVD,WAAY,MACZD,WAAY,WACdD,SAAA,EAMFI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,iBAAiBa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAC,wBAK9EH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,2GAA0Gc,SAAA,EACrHI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,wCAAuCc,UAClDI,EAAAA,EAAAA,KAACqa,GAAY,CAACvY,UAAWoW,OAE7BlY,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,8BAA6Bc,UACxCI,EAAAA,EAAAA,KAAC4Z,GAAiB,CAACC,UAAW3B,WAGpC,EC0Ed,GAxGkCrZ,IAgB3B,IAhB4B,YAC/BO,EAAW,QACXE,EAAO,IACPgb,EAAG,QACHC,EAAO,IACPC,EAAG,QACHC,EAAO,IACPC,EAAG,QACHC,EAAO,IACPC,EAAG,QACHC,EAAO,IACPC,EAAG,QACHC,EAAO,IACPC,EAAG,QACHC,EAAO,SACPC,GACHrc,EACG,OACIY,EAAAA,EAAAA,MAAA,OACIX,UAAS,gDAAAY,OAAkDN,EAAW,4BACtEO,MAAO,CACHgB,aAAc,OACdZ,SAAU,OACVD,WAAY,MACZD,WAAY,WACdD,SAAA,EAKFI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,wCAAuCc,UAClDI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,iBAAiBa,MAAO,CAACG,WAAY,OAAOF,SACtDN,OAUTG,EAAAA,EAAAA,MAAA,OAAKX,UAAU,qBAAoBc,SAAA,EAE/BH,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,OAAOF,SAAA,EAE3BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAM0a,EAAI,QACVta,EAAAA,EAAAA,KAAA,OAAAJ,SAAM2a,QAGV9a,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,OAAOF,SAAA,EAE3BI,EAAAA,EAAAA,KAAA,OAAAJ,SAAM4a,KACNxa,EAAAA,EAAAA,KAAA,OAAAJ,SAAM6a,QAGVhb,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,OAAOF,SAAA,EAE3BI,EAAAA,EAAAA,KAAA,OAAAJ,SAAM8a,KACN1a,EAAAA,EAAAA,KAAA,OAAAJ,SAAM+a,QAGVlb,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,OAAOF,SAAA,EAE3BI,EAAAA,EAAAA,KAAA,OAAAJ,SAAMgb,KACN5a,EAAAA,EAAAA,KAAA,OAAAJ,SAAMib,QAGVpb,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,OAAOF,SAAA,EAE3BI,EAAAA,EAAAA,KAAA,OAAAJ,SAAMkb,KACN9a,EAAAA,EAAAA,KAAA,OAAAJ,SAAMmb,QAGVtb,EAAAA,EAAAA,MAAA,OACIX,UAAU,wEACVa,MAAO,CAACG,WAAY,OAAOF,SAAA,EAE3BI,EAAAA,EAAAA,KAAA,OAAAJ,SAAMob,KACNhb,EAAAA,EAAAA,KAAA,OAAAJ,SAAMqb,WAIdxb,EAAAA,EAAAA,MAAA,OACIX,UAAU,+FACVa,MAAO,CAACG,WAAY,OAAOF,SAAA,EAE3BI,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,eACLI,EAAAA,EAAAA,KAAA,OAAKlB,UAAS,GAAAY,OAAgB,cAAXJ,EAA0B,eAAiB,IAAKM,SAAEsb,SAEvE,ECiFd,GAlL8Brc,IAAkB,IAADsc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAhB,UAACxa,GAAUjD,EACtC,MAAMqU,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEnC,OACIpT,EAAAA,EAAAA,KAAA,OACIlB,UAAU,iBACVa,MAAO,CAACE,WAAY,UAAWC,WAAY,MAAOC,SAAU,QAAQH,UAEpEI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,8DAA6Dc,UACxEH,EAAAA,EAAAA,MAAA,SAAOX,UAAU,QAAOc,SAAA,EACpBI,EAAAA,EAAAA,KAAA,SAAOlB,UAAU,cAAac,UAC1BH,EAAAA,EAAAA,MAAA,MACIX,UAAU,8BACVa,MAAO,CACHI,SAAU,OACVD,WAAY,MACZD,WAAY,WACdD,SAAA,EAEFI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,oBACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,iBACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,aAAYc,SAAC,UAC3BI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,eACvCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,yBAAwBc,SAAC,qBAG/CH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACIH,EAAAA,EAAAA,MAAA,MACIE,MAAO,CACHI,SAAU,OACVF,WAAY,UACZC,WAAY,OAEhBhB,UAAU,6BAA4Bc,SAAA,EAEtCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,mBAAmBa,MAAO,CAACG,WAAY,OAAOF,SAAC,gBAG7DI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZqZ,EAATrZ,EAAWmY,kBAAU,IAAAkB,OAAZ,EAATA,EAAuBoB,YAAa,QAG/Dvc,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZsZ,EAATtZ,EAAWmY,kBAAU,IAAAmB,OAAZ,EAATA,EAAuBoB,KAAM,QAExDxc,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZuZ,EAATvZ,EAAWmY,kBAAU,IAAAoB,OAAZ,EAATA,EAAuBoB,UAAW,QAE7Dzc,EAAAA,EAAAA,KAAA,MACIlB,UAAS,YAAAY,QACI,OAAToC,QAAS,IAATA,GAAqB,QAAZwZ,EAATxZ,EAAWmY,kBAAU,IAAAqB,OAAZ,EAATA,EAAuBoB,YAAa,EAAI,UAAY,WAExD/c,MAAO,CAACG,WAAY,OAAOF,UAE1BsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZyZ,EAATzZ,EAAWmY,kBAAU,IAAAsB,OAAZ,EAATA,EAAuBmB,WAAY,UAGnD,OAAdxJ,QAAc,IAAdA,GAAAA,EAAgBgH,WACbza,EAAAA,EAAAA,MAAA,MACIE,MAAO,CACHI,SAAU,OACVF,WAAY,UACZC,WAAY,OAEhBhB,UAAU,0CAAyCc,SAAA,EAEnDI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,mBAAmBa,MAAO,CAACG,WAAY,OAAOF,SAAC,eAG7DI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAX0Z,EAAT1Z,EAAWoY,iBAAS,IAAAsB,OAAX,EAATA,EAAsBe,YAAa,QAG9Dvc,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAX2Z,EAAT3Z,EAAWoY,iBAAS,IAAAuB,OAAX,EAATA,EAAsBe,KAAM,QAEvDxc,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAX4Z,EAAT5Z,EAAWoY,iBAAS,IAAAwB,OAAX,EAATA,EAAsBe,UAAW,QAE5Dzc,EAAAA,EAAAA,KAAA,MACIlB,UAAS,YAAAY,QACI,OAAToC,QAAS,IAATA,GAAoB,QAAX6Z,EAAT7Z,EAAWoY,iBAAS,IAAAyB,OAAX,EAATA,EAAsBe,YAAa,EAAI,UAAY,WAEvD/c,MAAO,CAACG,WAAY,OAAOF,UAE1BsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAX8Z,EAAT9Z,EAAWoY,iBAAS,IAAA0B,OAAX,EAATA,EAAsBc,WAAY,WAIjE1c,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,KAEJ1C,EAAAA,EAAAA,MAAA,MACIE,MAAO,CACHI,SAAU,OACVF,WAAY,UACZC,WAAY,OAEhBhB,UAAU,6BAA4Bc,SAAA,EAEtCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,mBAAmBa,MAAO,CAACG,WAAY,OAAOF,SAAC,iBAG7DI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZ+Z,EAAT/Z,EAAWqY,kBAAU,IAAA0B,OAAZ,EAATA,EAAuBU,YAAa,QAG/Dvc,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZga,EAATha,EAAWqY,kBAAU,IAAA2B,OAAZ,EAATA,EAAuBU,KAAM,QAExDxc,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZia,EAATja,EAAWqY,kBAAU,IAAA4B,OAAZ,EAATA,EAAuBU,UAAW,QAE7Dzc,EAAAA,EAAAA,KAAA,MACIlB,UAAS,YAAAY,QACI,OAAToC,QAAS,IAATA,GAAqB,QAAZka,EAATla,EAAWqY,kBAAU,IAAA6B,OAAZ,EAATA,EAAuBU,YAAa,EAAI,UAAY,WAExD/c,MAAO,CAACG,WAAY,OAAOF,UAE1BsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAqB,QAAZma,EAATna,EAAWqY,kBAAU,IAAA8B,OAAZ,EAATA,EAAuBS,WAAY,WAGlEjd,EAAAA,EAAAA,MAAA,MACIE,MAAO,CACHI,SAAU,OACVF,WAAY,UACZC,WAAY,OAEhBhB,UAAU,4CAA2Cc,SAAA,EAErDI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,mBAAmBa,MAAO,CAACG,WAAY,OAAOF,SAAC,gBAG7DI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAXoa,EAATpa,EAAW+U,iBAAS,IAAAqF,OAAX,EAATA,EAAsBhC,UAAW,QAG5Dla,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAXqa,EAATra,EAAW+U,iBAAS,IAAAsF,OAAX,EAATA,EAAsBK,KAAM,QAEvDxc,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,MAAKc,UACdsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAXsa,EAATta,EAAW+U,iBAAS,IAAAuF,OAAX,EAATA,EAAsBK,UAAW,QAE5Dzc,EAAAA,EAAAA,KAAA,MACIlB,UAAS,YAAAY,QACI,OAAToC,QAAS,IAATA,GAAoB,QAAXua,EAATva,EAAW+U,iBAAS,IAAAwF,OAAX,EAATA,EAAsBK,YAAa,EAAI,UAAY,WAEvD/c,MAAO,CAACG,WAAY,OAAOF,UAE1BsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,GAAoB,QAAXwa,EAATxa,EAAW+U,iBAAS,IAAAyF,OAAX,EAATA,EAAsBI,WAAY,WAGjEjd,EAAAA,EAAAA,MAAA,MAAIX,UAAU,cAAac,SAAA,EACvBI,EAAAA,EAAAA,KAAA,MACIlB,UAAU,mBACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAChD,eAGDI,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,MACIX,UAAS,YAAAY,QACI,OAAToC,QAAS,IAATA,OAAS,EAATA,EAAW0W,WAAY,EAAI,UAAY,WAE3C7Y,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAA,CAE5C,KACAsE,EAAAA,EAAAA,IAA+B,OAATpC,QAAS,IAATA,OAAS,EAATA,EAAW0W,UAAW,oBAM/D,E,gBC/Jd,MAuLA,GAvL2BmE,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAOxY,EAAYwI,IAAiBxM,EAAAA,EAAAA,UAAS,OACtCN,EAAS+M,IAAczM,EAAAA,EAAAA,WAAS,GACjCyc,GAAyB/K,EAAAA,EAAAA,IAAYgL,EAAAA,IACrCC,GAAWC,EAAAA,EAAAA,MACXhL,GAAkBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC9BJ,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,KAC5BkL,EAAqBC,IAAkB9c,EAAAA,EAAAA,UAAS,OAEvDS,EAAAA,EAAAA,YAAU,KACNkc,GAASI,EAAAA,GAAAA,OACTC,GAAuB,GACxB,KACHvc,EAAAA,EAAAA,YAAU,KACN,GAAIoc,EAAqB,CACrBpQ,GAAW,GACX,MAAMW,EAAO,CACTK,WAA+B,OAAnBoP,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBI,YACjCvP,SAA6B,OAAnBmP,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBK,YAEnCC,EAAAA,EAAAA,KAAgC/P,GAC3BS,MAAMC,IACHtB,EAAcsB,EAAIrM,KAAK,IAE1BsM,SAAQ,KACLtB,GAAW,EAAM,GAE7B,IACD,CAACoQ,IAEJ,MAAMG,GAAwB1O,EAAAA,EAAAA,cAAY,KACtC,IAAI7M,EAA6B,OAAtBgb,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBW,MAC9Bxb,IACGwN,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMqb,YAAa,oBAAoB,KAChD7N,EAAAA,EAAAA,IAAa,IAAI5E,KAAQ,oBAAoB,KACjD4E,EAAAA,EAAAA,IAAa,IAAI5E,KAAQ,oBAAoB,KACzC4E,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMsb,UAAW,oBAAoB,KAE9DJ,EAAerb,EAAK,GACrB,CAACgb,IAQEY,GAAa5O,EAAAA,EAAAA,UAAQ,IACM,OAAtBgO,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwB9a,KAAKC,IAAI,IACjCA,EACH0b,OAAO,GAADrf,QAAKmR,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMqb,aAAY,OAAAhf,QAAMmR,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMsb,kBAK3E,OACIlf,EAAAA,EAAAA,MAAA,OACIE,MAAO,CAACG,WAAY,UAAWC,SAAU,OAAQ+Q,SAAU,YAC3DlR,SAAA,EAEAI,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACC,MAAI,EAACC,QAASnB,KAG5B1B,EAAAA,EAAAA,MAAA,OACIX,UAAU,kEACVa,MAAO,CACHgB,aAAc,qBACdoK,UACI,gFACNnL,SAAA,EAEFI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,6BACVa,MAAO,CAACG,WAAY,MAAOkf,YAAa,QAAQpf,SACnD,oCAGDI,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACgL,EAAAA,EAAc,CACXpI,SAtCEC,IAClBqL,GAAW,GACX,MAAM+Q,EAAqC,OAAtBf,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwB9U,QAAQ/F,GAASR,EAAEC,OAAOlB,OAASyB,EAAKoD,KACrF8X,EAA2B,OAAZU,QAAY,IAAZA,OAAY,EAAZA,EAAe,GAAG,EAoCjBtc,KAAK,SACLyI,SAAU,KACVE,WAAW,SACXrC,QAAS6V,EACTld,MAA0B,OAAnB0c,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB7X,GAC5BwE,WAAW,UASvBjL,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,QAAOc,UAClBI,EAAAA,EAAAA,KAACyY,GAAwB,CAACzD,UAAqB,OAAVvP,QAAU,IAAVA,OAAU,EAAVA,EAAYuB,WAGrDvH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,6DAA4Dc,SAAA,EACvEI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,SAAQc,UACnBI,EAAAA,EAAAA,KAACkf,GAAqB,CAAChH,SAAoB,OAAVzS,QAAU,IAAVA,OAAU,EAAVA,EAAY0Z,wBAEjDnf,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,SAAQc,UACnBI,EAAAA,EAAAA,KAACof,GAAc,CAAClH,SAAoB,OAAVzS,QAAU,IAAVA,OAAU,EAAVA,EAAYwU,mBAK9Cxa,EAAAA,EAAAA,MAAA,OAAKX,UAAU,8DAA6Dc,SAAA,CACzD,OAAdsT,QAAc,IAAdA,GAAAA,EAAgBgH,WACbza,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,EACnBI,EAAAA,EAAAA,KAACqf,GAAyB,CACtBjgB,YAAa,iBACbE,QAAS,YACTgb,IAAK,eACLC,QAAS,KAAgB,OAAV9U,QAAU,IAAVA,GAAoC,QAA1BmX,EAAVnX,EAAYyU,UAAUZ,sBAAc,IAAAsD,OAA1B,EAAVA,EAAsCtH,QAAQ,IAC7DkF,IAAoB,OAAfnH,QAAe,IAAfA,GAAAA,EAAiBiM,wBAA0B,SAAW,GAC3D7E,QACmB,OAAfpH,QAAe,IAAfA,GAAAA,EAAiBiM,wBACX,KAAgB,OAAV7Z,QAAU,IAAVA,GAAqB,QAAXoX,EAAVpX,EAAYyU,iBAAS,IAAA2C,GAAQ,QAARC,EAArBD,EAAuB0C,cAAM,IAAAzC,OAAnB,EAAVA,EAA+BxH,QAAQ,IAC7C,GAEVoF,IAAoB,OAAfrH,QAAe,IAAfA,GAAAA,EAAiBmM,0BAA4B,WAAa,GAC/D7E,QACmB,OAAftH,QAAe,IAAfA,GAAAA,EAAiBmM,0BACX,KAAgB,OAAV/Z,QAAU,IAAVA,GAAqB,QAAXsX,EAAVtX,EAAYyU,iBAAS,IAAA6C,GAAU,QAAVC,EAArBD,EAAuB0C,gBAAQ,IAAAzC,OAArB,EAAVA,EAAiC1H,QAAQ,IAC/C,GAEVsF,IAAoB,OAAfvH,QAAe,IAAfA,GAAAA,EAAiBqM,wBAA0B,SAAW,GAC3D7E,QACmB,OAAfxH,QAAe,IAAfA,GAAAA,EAAiBqM,wBACX,KAAgB,OAAVja,QAAU,IAAVA,GAAqB,QAAXwX,EAAVxX,EAAYyU,iBAAS,IAAA+C,GAAQ,QAARC,EAArBD,EAAuB0C,cAAM,IAAAzC,OAAnB,EAAVA,EAA+B5H,QAAQ,IAC7C,GAEV4F,SAAU,KAAgB,OAAVzV,QAAU,IAAVA,GAAqB,QAAX0X,EAAV1X,EAAYyU,iBAAS,IAAAiD,GAAW,QAAXC,EAArBD,EAAuB3E,iBAAS,IAAA4E,OAAtB,EAAVA,EAAkC9H,QAAQ,MAC3D,QAGPtV,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,KAEJnC,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,SAAQc,UACnBI,EAAAA,EAAAA,KAACqf,GAAyB,CACtBjgB,YAAa,WACbE,QAAS,cACTgb,IAAK,kBACLC,QAAS,KAAgB,OAAV9U,QAAU,IAAVA,GAAsB,QAAZ4X,EAAV5X,EAAY0U,kBAAU,IAAAkD,GAAgB,QAAhBC,EAAtBD,EAAwBuC,sBAAc,IAAAtC,OAA5B,EAAVA,EAAwChI,QAAQ,IAC/DkF,IAAK,cACLC,QAAS,KAAgB,OAAVhV,QAAU,IAAVA,GAAsB,QAAZ8X,EAAV9X,EAAY0U,kBAAU,IAAAoD,OAAZ,EAAVA,EAAwBsC,YACvCnF,IAAK,gBACLC,QAAS,KAAgB,OAAVlV,QAAU,IAAVA,GAAsB,QAAZ+X,EAAV/X,EAAY0U,kBAAU,IAAAqD,OAAZ,EAAVA,EAAwB5G,eACvCgE,IAAK,SACLC,QAAS,KAAgB,OAAVpV,QAAU,IAAVA,GAAsB,QAAZgY,EAAVhY,EAAY0U,kBAAU,IAAAsD,OAAZ,EAAVA,EAAwBqC,QACvChF,IAAK,cACLC,QAAS,KAAgB,OAAVtV,QAAU,IAAVA,GAAsB,QAAZiY,EAAVjY,EAAY0U,kBAAU,IAAAuD,OAAZ,EAAVA,EAAwBqC,MACvC/E,IAAK,uBACLC,SAAS/W,EAAAA,EAAAA,IAAgC,OAAVuB,QAAU,IAAVA,GAAsB,QAAZkY,EAAVlY,EAAY0U,kBAAU,IAAAwD,OAAZ,EAAVA,EAAwBqC,MAAO,KAC9D9E,SAAU,KAAgB,OAAVzV,QAAU,IAAVA,GAAsB,QAAZmY,EAAVnY,EAAY0U,kBAAU,IAAAyD,OAAZ,EAAVA,EAAwBpF,gBAGhDxY,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,SAAQc,UACnBI,EAAAA,EAAAA,KAACqf,GAAyB,CACtBjgB,YAAY,4BACZE,QAAS,aACT2gB,GAAC,EACD3F,IAAK,OACLC,QAAS,KAAgB,OAAV9U,QAAU,IAAVA,GAAsB,QAAZoY,EAAVpY,EAAYya,kBAAU,IAAArC,OAAZ,EAAVA,EAAwBkC,MACvCvF,IAAK,iBACLC,QAAS,KAAgB,OAAVhV,QAAU,IAAVA,GAAsB,QAAZqY,EAAVrY,EAAYya,kBAAU,IAAApC,OAAZ,EAAVA,EAAwBqC,eACvCzF,IAAK,SACLC,QAAmB,OAAVlV,QAAU,IAAVA,GAAsB,QAAZsY,EAAVtY,EAAYya,kBAAU,IAAAnC,OAAZ,EAAVA,EAAwB+B,OACjClF,IAAK,aACLC,QAAS,KAAgB,OAAVpV,QAAU,IAAVA,GAAsB,QAAZuY,EAAVvY,EAAYya,kBAAU,IAAAlC,OAAZ,EAAVA,EAAwBoC,YACvClF,SAAU,KAAgB,OAAVzV,QAAU,IAAVA,GAAsB,QAAZwY,EAAVxY,EAAYya,kBAAU,IAAAjC,OAAZ,EAAVA,EAAwBzF,mBAIpDxY,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACqgB,GAAqB,CAACve,UAAqB,OAAV2D,QAAU,IAAVA,OAAU,EAAVA,EAAY6a,qBAEhD,E,oCC/Ld,MAAMC,GACS,mBADTA,GAGQ,cAqEd,GAlE0B1hB,IAAuE,IAAtE,cAAC2hB,EAAgB,KAAI,cAAEC,EAAgB,KAAI,YAAEC,EAAc,MAAK7hB,EACvF,MAAO8hB,EAAaC,EAAYC,IAAiBC,EAAAA,GAAAA,GAAgBN,EAAeC,GAe1EM,IAde5N,EAAAA,EAAAA,IAAY6N,EAAAA,KAcPjR,EAAAA,EAAAA,cACrBlN,IACGge,GAAe5Z,IAAG,IAAA+Q,EAAAiJ,EAAA,MAAM,IACjBha,EACH,CAAE,OAADpE,QAAC,IAADA,GAAS,QAARmV,EAADnV,EAAGC,cAAM,IAAAkV,OAAR,EAADA,EAAWrV,MAAQ,OAADE,QAAC,IAADA,GAAS,QAARoe,EAADpe,EAAGC,cAAM,IAAAme,OAAR,EAADA,EAAWrf,MACjC,GAAE,GAEP,CAACif,KAGCK,GAAkBnR,EAAAA,EAAAA,cAAY,KAChC8Q,EAAcL,GACdE,GAAa,GACd,CAACE,IAEJ,OACInhB,EAAAA,EAAAA,MAAC0hB,GAAAA,EAAkB,IAAKR,EAAaC,WAAYA,EAAYQ,aAAcF,EAAgBthB,SAAA,EAEvFI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,sBAAsBa,MAAO,CAACI,SAAU,UAAWD,WAAY,KAAKF,UAC/EI,EAAAA,EAAAA,KAACgL,EAAAA,EAAc,CACXqW,MAAO,YACPzf,MAAiB,OAAVgf,QAAU,IAAVA,OAAU,EAAVA,EAAaL,IACpB5d,KAAM4d,GACN3d,SAAUme,EACV9X,QAzBE,CAAC,CAACtG,KAAM,OAAQf,MAAO,cAsCjC5B,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,sBAAsBa,MAAO,CAACI,SAAU,UAAWD,WAAY,KAAKF,UAC/EI,EAAAA,EAAAA,KAACgL,EAAAA,EAAc,CACXqW,MAAO,qBACPzf,MAAiB,OAAVgf,QAAU,IAAVA,OAAU,EAAVA,EAAaL,IACpB5d,KAAM4d,GACN3d,SAAUme,EACV9X,QAxDK,CACjB,CAACtG,KAAM,UAAWf,MAAO,WACzB,CAACe,KAAM,UAAWf,MAAO,WACzB,CAACe,KAAM,eAAgBf,MAAO,mBAC9B,CAACe,KAAM,cAAef,MAAO,sBAuDR,ECzDvB4e,GAAgB,CAClBc,cAAe,GACfC,iBAAkB,GAClBC,YAAa,IAkRjB,GAhR4B3iB,IAYrB,IAADgC,EAAAC,EAAA2gB,EAAA,IAZuB,WACzBhc,EAAU,eACVrE,EAAc,QACdD,EAAO,mBACPugB,EAAkB,aAClBvL,EAAY,WACZwL,EAAU,YACVC,EAAW,YACXlB,EAAW,QACX1f,EAAO,UACPC,EAAS,aACTC,GACHrC,EACG,MAAOgjB,EAAWC,IAAgBrgB,EAAAA,EAAAA,WAAS,IACpCsgB,EAAYC,IAAiBvgB,EAAAA,EAAAA,UAAS,OACtCC,EAAKC,IAAUF,EAAAA,EAAAA,WAAS,IACxBK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,OACpCO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,KAErCS,EAAAA,EAAAA,YAAU,KACNH,EAAa0D,EAAW,IAO5B,OACIhG,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACIH,EAAAA,EAAAA,MAAA,OACIX,UAAS,mBACTa,MAAO,CAACE,WAAY,UAAWc,aAAc,QAAQf,SAAA,EAErDI,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACC,MAAI,EAACC,QAASnB,KAC5B1B,EAAAA,EAAAA,MAAA,OAAKX,UAAU,2BAA0Bc,SAAA,EACrCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,uBACVa,MAAO,CAACI,SAAU,OAAQF,WAAY,WAAWD,UAEjDH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oFAAmFc,SAAA,EAE9FI,EAAAA,EAAAA,KAAA,OACIL,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,QAEdjB,UAAU,sCAAqCc,SAClD,mBAGDH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,6CAA4Cc,SAAA,EAEvDI,EAAAA,EAAAA,KAAA,OACIL,MAAO,CAACgB,aAAc,QACtB7B,UAAU,uCAAsCc,UAEhDI,EAAAA,EAAAA,KAAA,QACIlB,UAAU,oBACVa,MAAO,CAACgB,aAAc,QACtB4B,aAAa,MAAK3C,UAGlBI,EAAAA,EAAAA,KAACwC,EAAAA,GAAW,CACRC,KAAMC,EAAAA,GAAAA,OACNC,KAAK,SACLC,SA5CZC,IACxBZ,EAAUY,EAAEC,OAAOlB,OACnBR,EAAeyB,EAAEC,OAAOlB,MAAM,EA2CMA,MAAOI,SAInBhC,EAAAA,EAAAA,KAACiiB,GAAiB,CACdzB,cAAeA,GACfC,cAAgByB,IACZjgB,EAAU,IACV2f,EAAYM,EAAc,EAE9BxB,YAAaA,aAK7B1gB,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,6CAA4Cc,UACvDH,EAAAA,EAAAA,MAAA,SAAOX,UAAU,QAAOc,SAAA,EACpBI,EAAAA,EAAAA,KAAA,SAAAJ,UACIH,EAAAA,EAAAA,MAAA,MACIX,UAAU,+BACVa,MAAO,CACHI,SAAU,OACVD,WAAY,MACZD,WAAY,WACdD,SAAA,EAEFI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,SAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,eAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,cAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,WAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,YAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,YAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC3BH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,MAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,OAAdD,EAAqBC,EAAe,KAExC+B,QAASA,IAAMjC,EAAQ,cAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,YAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,YAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,QAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,QAChCI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC3BH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,UAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,WAAdD,EAAyBC,EAAe,KAE5C+B,QAASA,IAAMjC,EAAQ,kBAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC3BH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,OAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,QAAdD,EAAsBC,EAAe,KAEzC+B,QAASA,IAAMjC,EAAQ,eAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,8BAA6Bc,UACvCH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,SAAQc,SAAA,CAAC,WAEpBI,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CACV9B,aACkB,YAAdD,EAA0BC,EAAe,KAE7C+B,QAASA,IAAMjC,EAAQ,mBAInChB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAC,2BAGxCI,EAAAA,EAAAA,KAAA,SAAAJ,UACc,OAATkC,QAAS,IAATA,GAAe,QAANjB,EAATiB,EAAWoB,YAAI,IAAArC,OAAN,EAATA,EAAiBsC,QAAS,GACvBnD,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,CAAAvC,SACc,OAATkC,QAAS,IAATA,GAAe,QAANhB,EAATgB,EAAWoB,YAAI,IAAApC,OAAN,EAATA,EAAiBsC,KAAI,CAACC,EAAMC,KAAC,IAAA6e,EAAAC,EAAAC,EAAA,OAC1B5iB,EAAAA,EAAAA,MAAA,MAEIX,UAAS,GAAAY,QACJ4D,EAAI,GAAK,IAAM,EAAI,UAAY,GAAE,mBAEtC3D,MAAO,CACHG,WAAY,MACZC,SAAU,OACVF,WAAY,WACdD,SAAA,EAEFI,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,iCAAgCc,SACrC,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMif,OAGXtiB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SACtB,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMkf,aAGXviB,EAAAA,EAAAA,KAAA,MACIlB,UAAU,+EACV2H,GAAG,0BACH,oBAAkB,OAClB,kBAAgB,QAChB,kBAAgB,QAChB9G,MAAO,CAACG,WAAY,OACpBmD,QAASA,KACL6e,GAAa,GACbE,EAAc,CACVvb,GAAQ,OAAJpD,QAAI,IAAJA,OAAI,EAAJA,EAAMif,IACV3f,KAAU,OAAJU,QAAI,IAAJA,OAAI,EAAJA,EAAMmf,eACd,EACJ5iB,SAEG,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMmf,iBAGXxiB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAM,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAM+S,SACvCpW,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SACd,QADcuiB,EACtB,OAAJ9e,QAAI,IAAJA,OAAI,EAAJA,EAAMof,cAAM,IAAAN,EAAAA,EAAI,OAGrBniB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAM,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMqf,UAEvC1iB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SAAM,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMsf,MAEvC3iB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SACd,QADcwiB,EACtB,OAAJ/e,QAAI,IAAJA,OAAI,EAAJA,EAAMuf,cAAM,IAAAR,EAAAA,EAAI,OAErBpiB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,+BAA8Bc,UACvCiR,EAAAA,EAAAA,IAAiC,QAArBwR,EAAK,OAAJhf,QAAI,IAAJA,OAAI,EAAJA,EAAMwf,sBAAc,IAAAR,EAAAA,EAAI,QAG1CriB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,SACT,OAAb,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAMyf,SACD,KACAjS,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMyf,YAE7B9iB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC1BiR,EAAAA,EAAAA,IAAiB,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAM0f,YAExB/iB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC1BsE,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAM2f,OAAQ,QAEzChjB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC1BsE,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAM4f,IAAK,OAEtCjjB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC1BsE,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAM6f,QAAS,OAE1CljB,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,kBAAiBc,UAC3BH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CACS,OAAJyD,QAAI,IAAJA,GAAAA,EAAM8f,uBACDjf,EAAAA,EAAAA,IACQ,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAM8f,sBACN,KAEJ,KAAK,MACRjf,EAAAA,EAAAA,IAA0B,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAM+f,mBA7E9B,OAAJ/f,QAAI,IAAJA,OAAI,EAAJA,EAAMif,IAgFV,OAIbtiB,EAAAA,EAAAA,KAAA,MAAAJ,UACII,EAAAA,EAAAA,KAAA,MACI8E,QAAS,GACTnF,MAAO,CACHoF,UAAW,SACXlF,WAAY,UACZC,WAAY,MACZC,SAAU,GACViF,WAAY,GACZC,cAAe,IACjBrF,SACL,4BAQX,OAATkC,QAAS,IAATA,GAAe,QAAN2f,EAAT3f,EAAWoB,YAAI,IAAAue,OAAN,EAATA,EAAiBte,QAAS,GACvBnD,EAAAA,EAAAA,KAACkF,EAAAA,EAAU,CACP7D,KAAMsgB,GAAcA,EACpBvc,WAAqB,OAATtD,QAAS,IAATA,OAAS,EAATA,EAAWuD,UACvB/D,QAAU6D,GAAgBgR,EAAahR,KAE3C,YAGZnF,EAAAA,EAAAA,KAACqjB,EAAAA,EAAY,CAAC9hB,KAAMsgB,EAAWyB,QAASA,IAAMxB,GAAa,GAAQrb,GAAIsb,MACxE,E,yBCnRX,MAAMwB,GAAa1kB,IAAgE,IAA/D,UAACC,EAAS,UAAE+a,EAAS,eAAE2J,EAAc,kBAAEC,GAAkB5kB,EACzE,MAAM8G,GAAWC,EAAAA,EAAAA,QAAO,OAClB,KAACC,IAAQC,EAAAA,EAAAA,OACR4d,EAAiBC,IAAsBliB,EAAAA,EAAAA,UAAS,WAEjDuE,EAAeA,KACjB,IAAKL,EAASM,QACV,OAGWC,UAASC,EAAAA,EAAAA,IAAOR,EAASM,QAAS,WAAjD,MAEMF,EAAQ,IAAIK,IAAJ,CACVT,EAASM,QAwFrB,SAAyB1C,EAAQsW,EAAW6J,EAAiBF,GACzD,MAAMtkB,EAAa,UACbE,GAAcuH,EAAAA,EAAAA,IAAoB,kBAIjBA,EAAAA,EAAAA,IAAoB,uBACpBA,EAAAA,EAAAA,IAAoB,aAC3C,IAAIid,EAAQ,GACRC,EAAQ,GACRC,EAAU,GACVC,EAAU,GACVC,EAAQ,GAEH,OAATnK,QAAS,IAATA,GAAAA,EAAWzW,KAAKC,IAAU,IAAD4gB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACrBb,EAAM1c,KAAiC,QAA7B+c,EAAK,OAAJ5gB,QAAI,IAAJA,GAAgB,QAAZ6gB,EAAJ7gB,EAAMqhB,kBAAU,IAAAR,OAAZ,EAAJA,EAAkB5O,QAAQ,UAAE,IAAA2O,EAAAA,EAAI,GAC3CJ,EAAM3c,KAAiC,QAA7Bid,EAAK,OAAJ9gB,QAAI,IAAJA,GAAgB,QAAZ+gB,EAAJ/gB,EAAMshB,kBAAU,IAAAP,OAAZ,EAAJA,EAAkB9O,QAAQ,UAAE,IAAA6O,EAAAA,EAAI,GAC3CL,EAAQ5c,KAAgC,QAA5Bmd,EAAK,OAAJhhB,QAAI,IAAJA,GAAe,QAAXihB,EAAJjhB,EAAMuhB,iBAAS,IAAAN,OAAX,EAAJA,EAAiBhP,QAAQ,UAAE,IAAA+O,EAAAA,EAAI,GAC5CL,EAAM9c,KAA+B,QAA3Bqd,EAAK,OAAJlhB,QAAI,IAAJA,GAAc,QAAVmhB,EAAJnhB,EAAM0O,gBAAQ,IAAAyS,OAAV,EAAJA,EAAgBlP,QAAQ,UAAE,IAAAiP,EAAAA,EAAI,GAKzC,MAAMM,EAAgB,OAAJxhB,QAAI,IAAJA,GAAU,QAANohB,EAAJphB,EAAM2N,YAAI,IAAAyT,OAAN,EAAJA,EAAY7T,MAAM,MACvB,OAATiU,QAAS,IAATA,OAAS,EAATA,EAAW1hB,QAAS,EAAG4gB,EAAQ7c,KAAK2d,GACnCd,EAAQ7c,KAAc,OAAT2d,QAAS,IAATA,OAAS,EAATA,EAAY,GAAG,IAErC,MAAMtL,EAAWC,KAAKE,OAAOkK,KAAUE,KAAYD,GAAS,GAE5D,MAAO,CACHxc,OAAQ,CACJ,CACI1E,KAAM,KACNF,KAAM,OAENS,KAAM0gB,GAEV,CACIjhB,KAAM,KACNF,KAAM,OACNS,KAAM2gB,GAGV,CACIlhB,KAAM,WACNF,KAAM,OACNS,KAAM4gB,GAGV,CACInhB,KAAK,GAADjD,OAAuB,QAAlB8jB,EAA2B,UAAY,gBAChD/gB,KAAM,MACNS,KAAM8gB,IAGdje,MAAO,CACHlG,WAAY,UACZyH,SAAS,EACT/D,OAAQ,IACRgE,QAAS,CACLC,MAAM,GAEVC,KAAM,CACFC,SAAS,EACTjF,KAAM,KACNkF,gBAAgB,IAGxBC,YAAa,CACTC,IAAK,CACDC,YAAY,EACZnH,aAAc,EACdoH,YAAa,QAGrBC,OAAQ,CACJR,MAAM,GAEVS,WAAY,CACRP,SAAS,GAEbQ,OAAQ,CAEJV,MAAM,EACN7C,MAAO,GAGXyD,MAAO,CACHC,WAAY0b,EACZzb,WAAY,CACRd,MAAM,GAEVe,UAAW,CACPf,MAAM,GAEVgB,OAAQ,CACJsc,OAAQ,EACRnlB,MAAO,CACHwI,OAAQjJ,EACRa,SAAU,UAItB0I,MAAO,CACH,CACIsc,WAAY,KACZvd,MAAM,EACNkB,MAAO,CACHE,KAAM,WACNjJ,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,OACVyV,MAAO,YAGfkE,IAAKH,EACLyL,IAAK,EACLxc,OAAQ,CACJkB,UAAW,SAAUzC,GACjB,OAAOA,EAAIqO,QAAQ,EACvB,EACA3V,MAAO,CACHwI,OAAQjJ,EACRa,SAAU,UAKtB,CACIglB,WAAY,KACZvd,MAAM,EACNkB,MAAO,CACHE,KAAM,WACNjJ,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,OACVyV,MAAO,YAGfkE,IAAKH,EACLyL,IAAK,EACLxc,OAAQ,CACJ7I,MAAO,CACHwI,OAAQjJ,EACRa,SAAU,OACVF,WAAY,UACZC,WAAY,SAKxB,CACIilB,WAAY,WACZvd,MAAM,EACNkS,IAAKH,EACLyL,IAAK,EACLtc,MAAO,CACHE,KAAM,WACNjJ,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,OACVyV,MAAO,YAGfhN,OAAQ,CACJ7I,MAAO,CACHwI,OAAQjJ,EACRa,SAAU,OACVF,WAAY,UACZC,WAAY,SAKxB,CACIilB,WAAY,UACZE,UAAU,EACVzd,MAAM,EACNkB,MAAO,CACHE,KAAK,GAADlJ,OAAuB,QAAlB8jB,EAA2B,UAAY,gBAChD7jB,MAAO,CACHE,WAAY,UACZC,WAAY,MACZC,SAAU,OACVyV,MAAO,YAGfhN,OAAQ,CACJkB,UAAW,SAAUzC,GACjB,OAAOA,EAAIqO,QAAQ,EACvB,EACA3V,MAAO,CACHwI,OAAQjJ,EACRa,SAAU,OACVF,WAAY,UACZC,WAAY,UAM5B+I,KAAM,CACFC,QAAS,GAGbI,OAAQ,CACJC,OAAQ,CACJC,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGfyH,MAAO,CACHD,OAAQ,CACJ3G,KAAM,OACNb,MAAO,IAGf0H,OAAQ,CACJC,kCAAkC,EAClCH,OAAQ,CACJ3G,KAAM,OACNb,MAAO,KAInB4H,QAAS,CACL7J,MAAO,CACHI,SAAU,QAEd0J,EAAG,CACCC,UAAW,SAAUzC,GACjB,OAAOA,CACX,IAIRkB,OAAQ,CAAC,UAAW,UAAW,UAAWub,GAC1C/Z,KAAM,CACFvK,YAAaA,EACbwK,gBAAiB,EACjBnB,MAAO,CACHoB,MAAO,CACHrC,MAAM,IAGdgF,QAAS,CACLoJ,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAItB,CAxVY1P,CAAgB9C,EAAQsW,EAAW6J,EAAiBF,IAMxD,OAJIzd,GACAA,EAAMO,SAGHP,CAAK,EAahB,OAXA7D,EAAAA,EAAAA,YAAU,QAAU,CAAC2X,KACrB3X,EAAAA,EAAAA,YAAU,KACN,MAAM6D,EAAQC,IAEd,MAAO,KACCD,GACAA,EAAMQ,SACV,CACH,GACF,CAACZ,EAAUkU,KAGVpa,EAAAA,EAAAA,MAAA,OACIX,UAAS,cAAAY,OAAgBZ,EAAS,cAClCa,MAAO,CAACE,WAAY,UAAWc,aAAc,QAASmQ,SAAU,YAAYlR,SAAA,EAG5EH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,wEAAuEc,SAAA,EAClFI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,kBAAkBa,MAAO,CAACG,WAAY,MAAOC,SAAU,QAAQH,SAAC,WAI/EH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mCAAmCa,MAAO,CAACmR,SAAU,YAAYlR,SAAA,EAC5EH,EAAAA,EAAAA,MAACylB,GAAAA,EAAiB,CACdC,WAAW,kCACXvjB,MAAO,OACPe,KAAM,OACNyiB,aAAcA,KACV3B,EAAkB,QAClBE,EAAmB,UAAU,EAEjC0B,UAA6B,QAAlB7B,EAAyB5jB,SAAA,EAEpCI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,oDAAmDc,SAAC,OACnEI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,iBACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,OAAQF,WAAY,WAAWD,SACvE,gBAILH,EAAAA,EAAAA,MAACylB,GAAAA,EAAiB,CACdC,WAAW,kCACXvjB,MAAO,UACPe,KAAM,UACNyiB,aAAcA,KACV3B,EAAkB,WAClBE,EAAmB,UAAU,EAEjC0B,UAA6B,WAAlB7B,EAA4B5jB,SAAA,EAEvCI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,oDAAmDc,SAAC,OACnEI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,iBACVa,MAAO,CAACG,WAAY,MAAOC,SAAU,OAAQF,WAAY,WAAWD,SACvE,wBAKTI,EAAAA,EAAAA,KAAA,cAOJA,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,YAAWc,UAEtBI,EAAAA,EAAAA,KAAA,OAAKwG,IAAKb,EAAUc,GAAG,iCAIzB,E,4BC7Gd6e,GAAAA,GAAAA,SAAeC,GAAAA,IAaf,MAsIA,GAtIwB1mB,IAAgB,IAAf,QAAC2mB,GAAQ3mB,EAC9B,MAAMqE,EAAO,CACTuiB,SAAU,CACN,CAEIviB,KAAM,CACK,OAAPsiB,QAAO,IAAPA,OAAO,EAAPA,EAASE,YACF,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,WACF,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASlhB,UACF,OAAPkhB,QAAO,IAAPA,OAAO,EAAPA,EAASI,UAEbxL,gBAAiB,CAAC,UAAW,UAAW,UAAW,WACnDzR,SAAS,EACTvJ,YAAa,CAAC,UAAW,UAAW,UAAW,cAI3D,OACIK,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iCAAiCa,MAAO,CAACgB,aAAc,QAAQf,SAAA,EAC1EI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,YACVa,MAAO,CAACI,SAAU,OAAQD,WAAY,MAAO0V,MAAO,WAAW5V,SAClE,cAIDI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,+BAA+Ba,MAAO,CAAC6T,UAAW,SAAS5T,UACtEI,EAAAA,EAAAA,KAAC6lB,GAAAA,GACG,CACA3iB,KAAMA,EACN+F,QAAS,CACL6c,QAAS,CACL9d,OAAQ,CACJW,SAAS,GAEba,QAAS,CACL9B,SAAS,IAGjBqe,UAAW,GACXC,cAAe,IACfC,OAAQ,MACRC,qBAAqB,EACrBnd,YAAY,QAMxBtJ,EAAAA,EAAAA,MAAA,OACIE,MAAO,CACHmR,SAAU,WACV8E,IAAK,OACLG,KAAM,MACNoQ,UAAW,yBACXphB,UAAW,UACbnF,SAAA,EAEFI,EAAAA,EAAAA,KAAA,OACIL,MAAO,CACH6V,MAAO,UACPzV,SAAU,OACVF,WAAY,UACZC,WAAY,OACdF,SACL,iBAGDI,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAWzV,SAAU,OAAQD,WAAY,OAAOF,SACxD,OAAP4lB,QAAO,IAAPA,OAAO,EAAPA,EAASY,kBAGlB3mB,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAC6T,UAAW,SAAU1U,UAAU,GAAEc,SAAA,EAC1CI,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,OAAKX,UAAU,OAAMc,SAAA,EAEjBH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iDAAgDc,SAAA,EAC3DH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,4BAA2Bc,SAAA,EACtCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,oCACVa,MAAO,CAACya,gBAAiB,cAE7Bpa,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAQhB,UAAU,OAAMc,SAAC,iBAGpEI,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAOF,SACtC,OAAP4lB,QAAO,IAAPA,OAAO,EAAPA,EAASE,kBAGlBjmB,EAAAA,EAAAA,MAAA,OAAKX,UAAU,4BAA2Bc,SAAA,EACtCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,oCACVa,MAAO,CAACya,gBAAiB,cAE7Bpa,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAQhB,UAAU,OAAMc,SAAC,gBAGpEI,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAOF,SACtC,OAAP4lB,QAAO,IAAPA,OAAO,EAAPA,EAASG,oBAKtBlmB,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iDAAgDc,SAAA,EAC3DH,EAAAA,EAAAA,MAAA,OAAKX,UAAU,4BAA2Bc,SAAA,EACtCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,oCACVa,MAAO,CAACya,gBAAiB,cAE7Bpa,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAQhB,UAAU,OAAMc,SAAC,eAGpEI,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAOF,SACtC,OAAP4lB,QAAO,IAAPA,OAAO,EAAPA,EAASlhB,gBAGlB7E,EAAAA,EAAAA,MAAA,OAAKX,UAAU,4BAA2Bc,SAAA,EACtCI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,oCACVa,MAAO,CAACya,gBAAiB,cAE7Bpa,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAQhB,UAAU,OAAMc,SAAC,cAGpEI,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW1V,WAAY,OAAOF,SACtC,OAAP4lB,QAAO,IAAPA,OAAO,EAAPA,EAASI,yBAM5B,EC9IdN,GAAAA,GAAAA,SAAeC,GAAAA,IAEf,MAqFA,GArFqCc,KACjCnkB,EAAAA,EAAAA,YAAU,SAIV,MAAMgB,EAAO,CACTuiB,SAAU,CACN,CACIviB,KAAM,CAAM,OAALmjB,QAAK,IAALA,OAAK,EAALA,EAAOC,EAAQ,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOE,GACxBnM,gBAAiB,CAAC,0BAA2B,WAC7CzR,SAAS,EACTvJ,YAAa,CAAC,0BAA2B,cAKrD,OACIK,EAAAA,EAAAA,MAAA,OACIX,UAAU,0CACVa,MAAO,CAACE,WAAY,UAAWc,aAAc,QAAQf,SAAA,EAErDI,EAAAA,EAAAA,KAAA,OACIlB,UAAU,mCACVa,MAAO,CAACI,SAAU,OAAQD,WAAY,MAAOD,WAAY,WAAWD,SACvE,mBAGDI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,0BAAyBc,UACpCI,EAAAA,EAAAA,KAAC6lB,GAAAA,GAAQ,CACL3iB,KAAMA,EACN+F,QAAS,CACL6c,QAAS,CACL9d,OAAQ,CACJW,SAAS,GAEba,QAAS,CACL9B,SAAS,IAGjBqe,SAAU,GACVC,cAAe,IACfC,OAAQ,MACRC,qBAAqB,EACrBnd,YAAY,QAIxB/I,EAAAA,EAAAA,KAAA,OACIL,MAAO,CACHmR,SAAU,WACV8E,IAAK,MACLG,KAAM,MACNoQ,UAAW,yBACXphB,UAAW,UACbnF,UAEFH,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAC6V,MAAO,UAAWzV,SAAU,OAAQD,WAAY,QAAQF,SAAA,EAChEsE,EAAAA,EAAAA,IAA2B,OAALmiB,QAAK,IAALA,OAAK,EAALA,EAAOE,EAAG,IAAI,UAG7C9mB,EAAAA,EAAAA,MAAA,OAAKX,UAAU,6DAA4Dc,SAAA,EACvEH,EAAAA,EAAAA,MAAA,OACIX,UAAU,4BACVa,MAAO,CAAC6V,MAAO,UAAWzV,SAAU,OAAQyT,UAAW,SAAS5T,SAAA,EAEhEI,EAAAA,EAAAA,KAAA,QACIlB,UAAU,yCACVa,MAAO,CAACya,gBAAiB,aAC3B,yBAGN3a,EAAAA,EAAAA,MAAA,OACIX,UAAU,4BACVa,MAAO,CAAC6V,MAAO,UAAWzV,SAAU,QAAQH,SAAA,EAE5CI,EAAAA,EAAAA,KAAA,QACIlB,UAAU,yCACVa,MAAO,CAACya,gBAAiB,aAC3B,+BAIR,ECzFd,MAAMoM,GAAgB3nB,IAAA,IAAC,UACnBC,EAAS,YACTC,EAAW,KACXC,EAAI,MACJC,EAAK,WACLC,EAAU,UACVC,EAAS,YACTC,EAAW,WACXC,EAAU,QACVC,EAAO,QACPE,GACHX,EAAA,OACGY,EAAAA,EAAAA,MAAA,OACIX,UAAS,mBAAAY,OAAqBZ,EAAS,+BACvCa,MAAO,CACHN,WAAYA,GACdO,SAAA,EAEFI,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAC6V,MAAO,UAAW3V,WAAY,UAAWC,WAAY,OAAOF,SAAEN,KAC3EU,EAAAA,EAAAA,KAAA,OACIL,MAAO,CACH6V,MAAO,UACP3V,WAAY,UACZC,WAAY,MACZgV,UAAW,SACX/U,SAAU,QACZH,SAEDJ,MAEH,E,gBCRV,MAAMghB,GAAgB,CAClBc,cAAe,GACfC,iBAAkB,GAClBC,YAAa,IAiSjB,GA9RoBiF,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACtB,MAAO9hB,EAAY+hB,IAAsB/lB,EAAAA,EAAAA,UAAS,OAC3CoY,EAAW4N,IAAqBhmB,EAAAA,EAAAA,UAAS,OACzCN,EAAS+M,IAAczM,EAAAA,EAAAA,WAAS,IAChC0M,EAAcC,IAAmB3M,EAAAA,EAAAA,WAAS,IAC1CqI,EAAWC,EAAkB0E,IAAuBC,EAAAA,EAAAA,MACpDjE,EAAWC,IAAgBjJ,EAAAA,EAAAA,UAAS,KACpCkJ,EAASC,IAAcnJ,EAAAA,EAAAA,UAAS,KAChC4M,EAAYC,IAAiB7M,EAAAA,EAAAA,UAAS,KACtC2H,EAAQmF,IAAa9M,EAAAA,EAAAA,UAAS,cAC9BJ,EAAMC,IAAWG,EAAAA,EAAAA,UAAS,IAC1BimB,EAAgBC,IAAqBlmB,EAAAA,EAAAA,UAAS,OAC9C+hB,EAAgBC,IAAqBhiB,EAAAA,EAAAA,UAAS,SAC9C2I,EAAkBoE,IAAsB/M,EAAAA,EAAAA,UAAS,KACjD6I,EAAOD,IAAY5I,EAAAA,EAAAA,UAAS,OAC5B+I,EAAUod,IAAenmB,EAAAA,EAAAA,UAAS,IAClCmf,GAAYC,KAAiBpf,EAAAA,EAAAA,UAAS+e,KACtCvf,GAAW0N,KAAgBlN,EAAAA,EAAAA,UAAS,OACpCP,GAAc0N,KAAmBnN,EAAAA,EAAAA,UAAS,OAEjDS,EAAAA,EAAAA,YAAU,KACN,MAAM2M,EAAO,CACTC,UAAW/E,EACXX,OAAQA,EACR/H,KAAMA,EACNwmB,QAASrE,EACT9f,QAAS4G,EACTyE,KAAM9N,GACN+N,SAAU9N,IAEA,UAAVkI,GAAsB0C,IAAOrB,GAAWwE,WAAanD,IAAOnB,GAASsE,YACrEJ,EAAKK,WAAazE,EAClBoE,EAAKM,SAAWxE,GAGhBZ,IACW,UAAVX,GACc,UAAVA,GACG0C,IAAOrB,GAAWwE,WAClBnD,IAAOnB,GAASsE,WAChBxE,GAAaE,KAErBuD,GAAW,IAIX4Z,EAAAA,EAAAA,KAAqBjZ,GAChBS,MAAMC,IACHkY,EAAkBlY,EAAIrM,KAAK,IAE9BsM,SAAQ,KACLtB,GAAW,EAAM,KAEzB6Z,EAAAA,EAAAA,KAA2ClZ,GAAMS,MAAMC,IACnDoY,EAAkBpY,EAAIrM,KAAK,IAEnC,GACD,CACCkG,EACAW,EACAY,EACAF,EACA+Y,EACAlZ,EACArJ,GACAC,MAEJgB,EAAAA,EAAAA,YAAU,MACNuN,EAAAA,EAAAA,KAAsB1F,GAAkBuF,MAAMC,IAAS,IAADG,EAClD,MAAMC,EAAiB,OAAHJ,QAAG,IAAHA,GAAS,QAANG,EAAHH,EAAKrM,YAAI,IAAAwM,OAAN,EAAHA,EAAWtM,KAAKC,IAAI,IACjCA,EACHV,KAAK,GAADjD,OAAS,OAAJ2D,QAAI,IAAJA,OAAI,EAAJA,EAAMuM,WAAU,KAAAlQ,OAAQ,OAAJ2D,QAAI,IAAJA,OAAI,EAAJA,EAAMwM,eAEvCrB,EAAmBmB,EAAY,GACjC,GACH,CAAC5F,KACJ7H,EAAAA,EAAAA,YAAU,KACN,GAAI6H,EAAkB,CAClBqE,GAAgB,GAChB,MAAMS,EAAO,CACT7M,OAAQqM,EACRS,UAAW/E,EACXX,OAAQA,EACR/H,OACAqC,QAAS4G,KACNsW,IAEO,UAAVxX,GAAsB0C,IAAOrB,GAAWwE,WAAanD,IAAOnB,GAASsE,YACrEJ,EAAKK,WAAazE,EAClBoE,EAAKM,SAAWxE,GAEpBqd,GAAUnZ,EACd,IACD,CACCR,EACAhN,EACA+H,EACAW,EACAO,EACAK,EACAF,EACAD,EACAoW,KAGJ,MAAMoH,GAAanZ,IACXrE,IAAUqE,EAAKoZ,UAAY,MAC/BC,EAAAA,EAAAA,KAAsBrZ,GACjBS,MAAMC,IACH,GAAI/E,EAAU,CACV,MAAM2d,EAAQ,mBAAAzoB,OAAsBoM,IAAO,IAAIG,MAAQF,OACnD,mBACH,SACDqc,EAAAA,EAAAA,IAAsB7Y,EAAK4Y,GAC3BP,EAAY,GACZS,GAAAA,EAAAA,QAAoB,+BACxB,MACIb,EAAsB,OAAHjY,QAAG,IAAHA,OAAG,EAAHA,EAAKrM,KAC5B,IAEHsM,SAAQ,KACLtB,GAAW,GACXE,GAAgB,EAAM,GACxB,EA0BJ0B,IAAgBC,EAAAA,EAAAA,aAClBC,KAAU/I,IACNmH,GAAgB,GAChBE,EAAcrH,GACd3F,EAAQ,EAAE,GACX,KACH,IAyBEgnB,IAAoBvY,EAAAA,EAAAA,cAAY,KAClC7B,GAAW,GACX0Z,EAAY,EAAE,GACf,IACH,OACInoB,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAACmR,SAAU,YAAYlR,SAAA,EAC/BI,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACC,MAAI,EAACC,QAASnB,KAC5BnB,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAAC+Q,EAAmB,CAChBjH,UAAWA,EACXC,iBAAkBA,EAClBC,aAAe9G,GAjEPA,KACpB5B,EAAQ,GACR4M,EAAmB,UAARhL,GACXqL,EAAUrL,EAAK,EA8DqB+N,CAAe/N,GACvC+G,iBAAmBiH,GA5DTA,KACtB5P,EAAQ,GAER+I,EAAS,MACToE,EAAoByC,EAAI,EAwDejH,CAAiBiH,GAC5ChH,kBAAoBiH,GAvDXA,KACrB7P,EAAQ,GACRoJ,EAAayG,EAAM,EAqDuBC,CAAgBD,GAC9ChH,gBAAkBkH,GApDXA,KACnB/P,EAAQ,GACRsJ,EAAWyG,EAAI,EAkDuBC,CAAcD,GACxCjH,iBAAkBA,EAClBC,SAAWpD,IACPoD,EAASpD,GACT3F,EAAQ,EAAE,EAEdgJ,MAAOA,EACPC,aAAc+d,GACd9d,UAAU,OAGlB/K,EAAAA,EAAAA,MAAA,OAAKX,UAAU,+BAA8Bc,SAAA,EACzCI,EAAAA,EAAAA,KAACwmB,GAAa,CACVlnB,QAAyD,QAAlDonB,EAAW,OAAT7M,QAAS,IAATA,GAA2B,QAAlB8M,EAAT9M,EAAW0O,wBAAgB,IAAA5B,OAAlB,EAATA,EAA6B6B,2BAAmB,IAAA9B,EAAAA,EAAI,MAC7DlnB,QAAQ,sBACRV,UAAU,uBACVO,WAAW,aAEfW,EAAAA,EAAAA,KAACwmB,GAAa,CACVlnB,QAAqD,QAA9CsnB,EAAW,OAAT/M,QAAS,IAATA,GAA2B,QAAlBgN,EAAThN,EAAW0O,wBAAgB,IAAA1B,OAAlB,EAATA,EAA6BhiB,uBAAe,IAAA+hB,EAAAA,EAAI,MACzD9nB,UAAU,uBACVO,WAAW,UACXG,QAAQ,yBAEZQ,EAAAA,EAAAA,KAACwmB,GAAa,CACVlnB,QAAgD,QAAzCwnB,EAAW,OAATjN,QAAS,IAATA,GAA2B,QAAlBkN,EAATlN,EAAW0O,wBAAgB,IAAAxB,OAAlB,EAATA,EAA6B0B,kBAAU,IAAA3B,EAAAA,EAAI,IACpDtnB,QAAQ,0BACRV,UAAU,uBACVO,WAAW,aAEfW,EAAAA,EAAAA,KAACwmB,GAAa,CACVlnB,QAAgD,QAAzC0nB,EAAW,OAATnN,QAAS,IAATA,GAA2B,QAAlBoN,EAATpN,EAAW0O,wBAAgB,IAAAtB,OAAlB,EAATA,EAA6ByB,kBAAU,IAAA1B,EAAAA,EAAI,IACpDxnB,QAAQ,wBACRV,UAAU,uBACVO,WAAW,aAEfW,EAAAA,EAAAA,KAACwmB,GAAa,CACVlnB,QAAsD,QAA/C4nB,EAAW,OAATrN,QAAS,IAATA,GAA2B,QAAlBsN,EAATtN,EAAW0O,wBAAgB,IAAApB,OAAlB,EAATA,EAA6BwB,wBAAgB,IAAAzB,EAAAA,EAAI,IAC1D1nB,QAAQ,sBACRV,UAAU,uBACVO,WAAW,gBAGnBW,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACujB,GAAU,CACP1J,UAAoB,OAATA,QAAS,IAATA,OAAS,EAATA,EAAW+O,SACtBpF,eAAgBA,EAChBC,kBAAmBA,OAM3BhkB,EAAAA,EAAAA,MAAA,OAAKX,UAAU,qCAAoCc,SAAA,EAC/CI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,SAAQc,UACnBI,EAAAA,EAAAA,KAAC6oB,GAAe,CAACrD,QAAuB,OAAdkC,QAAc,IAAdA,OAAc,EAAdA,EAAgBoB,cAE9C9oB,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,SAAQc,UACnBI,EAAAA,EAAAA,KAAC+oB,GAA2B,CACxBC,UAAyB,OAAdtB,QAAc,IAAdA,OAAc,EAAdA,EAAgBuB,cAC3B1C,EAAiB,OAAdmB,QAAc,IAAdA,GAA6B,QAAfN,EAAdM,EAAgBuB,qBAAa,IAAA7B,GAAS,QAATC,EAA7BD,EAA+BhjB,eAAO,IAAAijB,OAAxB,EAAdA,EAAwC6B,QAAQ,IAAK,IACxD5C,EAAiB,OAAdoB,QAAc,IAAdA,GAA6B,QAAfJ,EAAdI,EAAgBuB,qBAAa,IAAA3B,GAAW,QAAXC,EAA7BD,EAA+B6B,iBAAS,IAAA5B,OAA1B,EAAdA,EAA0C2B,QAAQ,IAAK,YAOtElpB,EAAAA,EAAAA,KAAA,OAAAJ,UACII,EAAAA,EAAAA,KAACopB,GAAmB,CAChB3jB,WAAYA,EACZrE,eAAiBwH,IAtH7BkH,GAsH2DlH,EAAM,EACrDzH,QAASgN,EACTgI,aAAekT,GA9GTA,KAClB/nB,EAAQ+nB,EAAa,EA6GuBlT,CAAakT,GAC7C1H,WAAYtgB,EACZugB,YAAcxY,GA7GPA,KACnB9H,EAAQ,GACRgN,EAAc,IACduS,GAAczX,EAAO,EA0GgBqX,CAAcrX,GACvCsX,YAhGM4I,KAClBhoB,EAAQ,GAERuf,GAAcL,GAAc,EA8FhBxf,QAAUqC,IACNsL,GAAatL,GACbuL,GACI3N,KAAcoC,EAAO,MAAyB,QAAjBnC,GAAyB,OAAS,OAEnEI,EAAQ,EAAE,EAEdL,UAAWA,GACXC,aAAcA,SAGpB,E,gBCpSd,MAAMqoB,GAAqB,CACvB,CACI7gB,MAAO,aACPyC,KAAM,IACNqe,aAAa,EACbC,UAAU,GAEd,CACI/gB,MAAO,WACPyC,KAAM,oBACNqe,aAAa,EACbC,UAAU,IAsIlB,GAlIsBC,KAEd1pB,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,WAAUc,UACrBI,EAAAA,EAAAA,KAAC2pB,EAAAA,GAAM,CAAA/pB,UACHH,EAAAA,EAAAA,MAACmqB,EAAAA,GAAK,CACFC,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC8S,EAAe,KAChB9S,EAAAA,EAAAA,KAAC8pB,EAAAA,GAAM,OAEdlqB,SAAA,EAEDI,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,SACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,YAC5CI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,KAEJqW,iBAAe,EAAArqB,UAEfI,EAAAA,EAAAA,KAACyM,EAAa,YAK9BzM,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,QACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,WAC5CI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,SAAAA,QAAAA,MAAAA,KAEJqW,iBAAe,EAAArqB,UAEfI,EAAAA,EAAAA,KAACymB,GAAW,YAK5BzmB,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,YACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,eAC5CI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,SAAAA,QAAAA,aAAAA,KAEJqW,iBAAe,EAAArqB,UAEfI,EAAAA,EAAAA,KAAC+W,GAAQ,YAKzB/W,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,iBACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,oBAG5CI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,SAAAA,QAAAA,eAAAA,KAEJqW,iBAAe,EAAArqB,UAEfI,EAAAA,EAAAA,KAAC2c,GAAkB,YAKnC3c,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,uBACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,eAC5CI,EAAAA,EAAAA,KAACkqB,GAAAA,EAAW,UAIxBlqB,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,iBACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,oBAG5CI,EAAAA,EAAAA,KAACmU,EAAiB,UAI9BnU,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,sBACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,WAC5CI,EAAAA,EAAAA,KAACmqB,EAAAA,EAAc,UAI3BnqB,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CACFze,KAAK,kBACL0e,SACIpqB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACII,EAAAA,EAAAA,KAAC+pB,EAAAA,GAAS,CAACC,YAAaT,GAAmB3pB,SAAC,eAC5CI,EAAAA,EAAAA,KAAC0T,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,cAAAA,QAAAA,MAAAA,IAEJqW,iBAAe,EAAArqB,UAEfI,EAAAA,EAAAA,KAACoqB,EAAAA,EAAe,YAKhCpqB,EAAAA,EAAAA,KAAC4pB,EAAAA,GAAK,CAACS,OAAK,EAACR,SAAS7pB,EAAAA,EAAAA,KAACsqB,EAAAA,GAAQ,CAACvW,GAAG,uB,kDC1JvD,MAgCA,EAhCwB+M,CAACN,EAAeC,EAAe6I,KACnD,MAAOiB,EAAoBC,IAAyB/oB,EAAAA,EAAAA,UAAS+e,IACtDI,EAAYC,IAAiBpf,EAAAA,EAAAA,UAAS+e,GAEvCiK,GAAe1a,EAAAA,EAAAA,cAAY,KAC7B0Q,EAAcG,GACd4J,EAAsB5J,EAAW,GAClC,CAACA,EAAYH,IAEVW,GAAerR,EAAAA,EAAAA,cAAY,KAC7BuZ,IACAzI,EAAcL,GACdC,EAAcD,GACdgK,EAAsBD,EAAmB,GAC1C,CAAC/J,EAAeC,EAAe6I,EAAeiB,IAE3CG,GAAgB3a,EAAAA,EAAAA,cAAY,KAC9B8Q,EAAc0J,EAAmB,GAClC,CAACA,IAWJ,MAAO,EATara,EAAAA,EAAAA,UAChB,MACIua,eACArJ,eACAsJ,mBAEJ,CAACD,EAAcC,EAAetJ,IAGbR,EAAYC,EAAc,C","sources":["app/modules/standard_manager/smReports/components/OfficeReportCards.js","app/modules/standard_manager/smReports/components/OfficeReportDataCard.js","app/modules/standard_manager/smReports/components/OfficeLeaderCard.js","app/modules/standard_manager/smReports/components/EmployeePerformance.js","app/modules/standard_manager/smReports/components/EmployeePerformanceChart.js","app/modules/standard_manager/smReports/customs/CustomReportsHeader.js","app/modules/standard_manager/smReports/components/ReportsOffice.js","app/modules/standard_manager/smReports/components/SmReportsHeader.js","app/modules/standard_manager/smReports/marketingDealsReports/MarketingTable.js","app/modules/standard_manager/smReports/marketingDealsReports/MarketingDealCard.js","app/modules/standard_manager/smReports/paySubs/payPeriod/PayPeriodCustomerInfo.js","app/modules/standard_manager/smReports/paySubs/PayStubChart.tsx","app/modules/standard_manager/smReports/paySubs/PayStubTable.js","app/modules/standard_manager/smReports/paySubs/PayStubs.js","app/modules/standard_manager/smReports/reconciliation/components/ComissionsCard.js","app/modules/standard_manager/smReports/reconciliation/components/CommissionBreakdownChart.js","app/modules/standard_manager/smReports/reconciliation/components/earningCard/EarningDonutChart.tsx","app/modules/standard_manager/smReports/reconciliation/components/earningCard/EarningTable.js","app/modules/standard_manager/smReports/reconciliation/components/earningCard/EarningsBreakdownCard.js","app/modules/standard_manager/smReports/reconciliation/components/ReconcilliationCommanCard.js","app/modules/standard_manager/smReports/reconciliation/ReconcilliationsTable.js","app/modules/standard_manager/smReports/reconciliation/ReconciliationPage.js","app/modules/admin/filters/salesReportFilter.js","app/modules/standard_manager/Setting/components/SetupCard/backendCard/MySalesCustomerInfo.js","app/modules/standard_manager/smReports/salesReports/SalesChart.js","app/modules/standard_manager/smReports/salesReports/SalesDonutChart.js","app/modules/standard_manager/smReports/salesReports/SalesInstallRatioDonutChart.js","app/modules/standard_manager/smReports/salesReports/SalesTopCards.js","app/modules/standard_manager/smReports/salesReports/SalesReport.js","app/modules/standard_manager/smReports/ReportsRoutes.js","hooks/useFilterButton.js"],"sourcesContent":["const OfficeReportCards = ({\n    className,\n    description,\n    icon,\n    stats,\n    labelColor,\n    textColor,\n    borderColor,\n    background,\n    heading,\n    smallTitle,\n    content,\n}) => (\n    <div\n        className={`card card-flush ${className} border py-8 px-5  w-100`}\n        style={{\n            background: background,\n        }}\n    >\n        <div\n            style={{fontFamily: 'Manrope', fontWeight: '700', fontSize: '20px'}}\n            className='text-cmGrey900'\n        >\n            {heading}\n            <span\n                className='badge ms-1 px-3 rounded-pill text-cmBlue-Crayola bg-cmBlue-Crayola bg-opacity-10'\n                style={{\n                    fontSize: '12px',\n                    fontWeight: '600',\n                }}\n            >\n                {smallTitle}\n            </span>\n        </div>\n        <div\n            className='text-cmGrey800'\n            style={{\n                fontFamily: 'Manrope',\n                fontWeight: '600',\n                fontSize: '14px',\n            }}\n        >\n            {content}\n        </div>\n    </div>\n)\nexport {OfficeReportCards}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\n\nconst OfficeReportDataCard = ({\n    line1Heading,\n    line2Heading,\n    line3Heading,\n    line1Content,\n    line2Content,\n    line3Content,\n    line1SubHeading,\n    line2SubHeading,\n    line3SubHeading,\n}) => {\n    return (\n        <div\n            className={`card w-sm-350px w-100 shadow-sm`}\n            style={{fontFamily: 'Manrope', borderRadius: '12px'}}\n        >\n            {/* begin::Body */}\n            <div className='card-body py-5'>\n                <div className='px-5'>\n                    {/* Line 1 */}\n                    <div className='d-flex  align-items-center '>\n                        <div\n                            className='w-100px text-cmGrey600'\n                            style={{\n                                fontWeight: '600',\n                                fontSize: '12px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            {line1Heading}\n                        </div>\n                        <div\n                            className='w-sm-75 d-flex flex-wrap justify-content-evenly text-cmBlack'\n                            style={{fontWeight: '600', fontSize: '14px'}}\n                        >\n                            <div> {line1Content}</div>\n                            <div className='cmGrey800'>{line1SubHeading}</div>\n                        </div>\n                    </div>\n                    <hr className='border-cmGrey600 border-dashed' />\n                    {/* Line 1 ends */}\n\n                    {/* Line 2 */}\n                    <div className='d-flex  align-items-center '>\n                        <div\n                            className='w-100px text-cmGrey600'\n                            style={{\n                                fontWeight: '600',\n                                fontSize: '12px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            {line2Heading}\n                        </div>\n                        <div\n                            className='w-sm-75 w-100 d-flex flex-wrap justify-content-evenly text-cmBlack'\n                            style={{fontWeight: '600', fontSize: '14px'}}\n                        >\n                            <div> {line2Content}</div>\n                            <div className='cmGrey800'>{line2SubHeading}</div>\n                        </div>\n                    </div>\n                    <hr className='border-cmGrey600 border-dashed' />\n                    {/* Line 2 ends*/}\n\n                    {/* Line 3 */}\n                    <div className='d-flex  align-items-center '>\n                        <div\n                            className='w-100px text-cmGrey600'\n                            style={{\n                                fontWeight: '600',\n                                fontSize: '12px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            {line3Heading}\n                        </div>\n                        <div\n                            className='w-sm-75 w-100 d-flex flex-wrap justify-content-evenly text-cmBlack'\n                            style={{fontWeight: '600', fontSize: '14px'}}\n                        >\n                            <div> {line3Content}</div>\n                            <div className='cmGrey800'>{line3SubHeading}</div>\n                        </div>\n                    </div>\n\n                    {/* Line 3 ends */}\n                </div>\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport {OfficeReportDataCard}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\n\nconst OfficeLeaderCard = ({\n    line1Heading,\n    line2Heading,\n    line3Heading,\n    line1Content,\n    line2Content,\n    line3Content,\n    line1SubHeading,\n    line2SubHeading,\n    line3SubHeading,\n}) => {\n    return (\n        <div\n            className={`card w-sm-350px w-100 shadow-sm`}\n            style={{fontFamily: 'Manrope', borderRadius: '12px'}}\n        >\n            {/* begin::Body */}\n            <div className='card-body py-5'>\n                <div className='px-5'>\n                    {/* Line 1 */}\n                    <div className='d-flex align-items-center py-0 my-0'>\n                        <div\n                            className='w-100px text-cmGrey600'\n                            style={{\n                                fontWeight: '600',\n                                fontSize: '12px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            {line1Heading}\n                        </div>\n                        <div\n                            className='w-75 d-flex align-items-center justify-content-between text-cmGrey800'\n                            style={{fontWeight: '600', fontSize: '12px'}}\n                        >\n                            {/* <div>\n                <img\n                  className='avatar'\n                  src=''\n                  alt='avatar'\n                  style={{height: '24px', width: '24px'}}\n                />\n              </div> */}\n                            <div> {line1Content}</div>\n                            <div className='text-cmBlue-Crayola'>{line1SubHeading}</div>\n                        </div>\n                    </div>\n                    <hr className='border-cmGrey600 border-dashed my-2' />\n                    {/* Line 1 ends */}\n\n                    {/* Line 2 */}\n                    <div className='d-flex align-items-center py-0 my-0'>\n                        <div\n                            className='w-100px text-cmGrey600'\n                            style={{\n                                fontWeight: '600',\n                                fontSize: '12px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            {line2Heading}\n                        </div>\n                        <div\n                            className='w-75 d-flex align-items-center justify-content-between text-cmGrey800'\n                            style={{fontWeight: '600', fontSize: '12px'}}\n                        >\n                            {/* <div>\n                <img\n                  className='avatar'\n                  src=''\n                  alt='avatar'\n                  style={{height: '24px', width: '24px'}}\n                />\n              </div> */}\n                            <div> {line2Content}</div>\n                            <div className='text-cmBlue-Crayola'>{line2SubHeading}</div>\n                        </div>\n                    </div>\n                    <hr className='border-cmGrey600 border-dashed my-2' />\n                    {/* Line 2 ends*/}\n\n                    {/* Line 3 */}\n                    <div className='d-flex align-items-center py-0 my-0'>\n                        <div\n                            className='w-100px text-cmGrey600'\n                            style={{\n                                fontWeight: '600',\n                                fontSize: '12px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            {line3Heading}\n                        </div>\n                        <div\n                            className='w-75 d-flex align-items-center justify-content-between text-cmGrey800'\n                            style={{fontWeight: '600', fontSize: '12px'}}\n                        >\n                            {/* <div>\n                <img\n                  className='avatar'\n                  src=''\n                  alt='avatar'\n                  style={{height: '24px', width: '24px'}}\n                />\n              </div> */}\n                            <div> {line3Content}</div>\n                            <div className='text-cmBlue-Crayola'>{line3SubHeading}</div>\n                        </div>\n                    </div>\n\n                    {/* Line 3 ends */}\n                </div>\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport {OfficeLeaderCard}\n","import {useEffect, useState} from 'react'\nimport clsx from 'clsx'\nimport {KTSVG, toAbsoluteUrl} from '../../../../../_metronic/helpers'\nimport DatePicker from 'react-datepicker'\nimport moment from 'moment'\nimport Pagination from '../../../admin/sequidocs/component/Pagination'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    TABLE_BORDER,\n    formattedNumberFields,\n    getServerImage,\n} from '../../../../../helpers/CommonHelpers'\nimport RedirectToEmployeeProfile from '../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport CustomImage from '../../../../../customComponents/customImage/CustomImage'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {CustomSortSvg} from '../../../../../_metronic/helpers/components/CustomSortSVG'\n\n// import ViewCostomer from './ViewCostomer'\n\nconst EmployeePerformance = ({\n    EmployeeData,\n    onPress,\n    sortValue,\n    sortingOrder,\n    loading,\n    onSearchChange,\n    page,\n    setPage,\n}) => {\n    const [open, setOpen] = useState(false)\n    const [btn, setBtn] = useState(false)\n    const [value, setValue] = useState()\n    const [tableData, setTableData] = useState([])\n    //   const [startDate, setStartDate] = useState(moment().add(-30, 'day').toDate())\n    //   const [endDate, setEndDate] = useState(new Date())\n    const [search, setSearch] = useState('')\n\n    useEffect(() => {\n        setTableData(EmployeeData)\n    })\n    const handleSearchChange = (e) => {\n        setSearch(e.target.value)\n        onSearchChange(e.target.value)\n    }\n\n    return (\n        <>\n            <div className={`card shadow-sm mt-7 `} style={{fontFamily: 'Manrope'}}>\n                <CustomLoader full visible={loading} />\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='mt-4 mx-sm-7 mb-3 d-sm-flex flex-wrap justify-content-between align-items-center'>\n                            {/* Hiring Progress*/}\n                            <div\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '600',\n                                    fontSize: '14px',\n                                }}\n                                className='mx-sm-0 text-center text-cmGrey900 mb-sm-0 mb-3'\n                            >\n                                Employee Performance\n                            </div>\n\n                            {/* fILTER */}\n                            {/* Search form */}\n                            <div>\n                                <form\n                                    className='position-relative w-sm-auto w-75 mx-auto'\n                                    autoComplete='off'\n                                >\n                                    {/* Employee Performancetable    Search Input */}\n                                    <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={handleSearchChange}\n                                        value={search}\n                                    />\n                                    {/* <KTSVG\n                                        path='/media/icons/duotune/general/gen021.svg'\n                                        className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                                    />\n\n                                    <input\n                                        style={{borderRadius: '10px'}}\n                                        type='text'\n                                        className='form-control form-control-solid px-12 bg-cmGrey100  '\n                                        name='search'\n                                        placeholder='Search...'\n                                        onChange={handleSearchChange}\n                                        value={search}\n                                    /> */}\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='text-cmGrey900 bg-cmGrey300'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='w-auto text-nowrap p-5'>Name</th>\n                                    <th className='w-auto text-nowrap p-5'>Team</th>\n                                    <th className='w-auto text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Accounts\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'account' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('account')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='w-auto text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Pending\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'pending' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('pending')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='w-auto text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Installed\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'install' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('install')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='w-auto text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Cancelled\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'cancelled' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('cancelled')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='w-auto text-nowrap p-5'>Team Lead</th>\n                                    <th className='w-auto text-nowrap p-5 '>\n                                        <div className='d-flex'>\n                                            Closing Ratio\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'closing_ratio'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => onPress('closing_ratio')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='w-auto text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Avg. System size\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'avg_system_size'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => onPress('avg_system_size')}\n                                            />\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {tableData?.data?.length > 0 ? (\n                                    <>\n                                        {tableData?.data?.map((item, i) => (\n                                            <tr\n                                                key={i}\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '600',\n                                                }}\n                                                className={`text-cmGrey700 stripRow `}\n                                            >\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap '\n                                                    style={{fontWeight: '700'}}\n                                                >\n                                                    {/* <span>\n                            <img\n                              className='avatar me-2'\n                              src={toAbsoluteUrl('/media/avatars/300-1.jpg')}\n                              style={{height: '24px', width: '24px'}}\n                            />\n                          </span> */}\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.user_id}\n                                                    >\n                                                        {/* <img\n                              src={toAbsoluteUrl('/media/avatars/300-1.jpg')}\n                              className='avatar me-3'\n                            /> */}\n                                                        <CustomImage\n                                                            src={item?.user_image}\n                                                            className='avatar me-3'\n                                                        />\n                                                        {item?.user_name}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    <span\n                                                        className='badge px-3 rounded-pill text-cmBlue-Crayola bg-cmBlue-Crayola bg-opacity-10'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontWeight: '600',\n                                                        }}\n                                                    >\n                                                        {item?.team == null ? '-' : item?.team}\n                                                    </span>\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>{item?.account}</td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.pending}(\n                                                    {formattedNumberFields(\n                                                        item?.pending_percentage,\n                                                        '%'\n                                                    )}\n                                                    )\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.install}(\n                                                    {formattedNumberFields(\n                                                        item?.install_percentage,\n                                                        '%'\n                                                    )}\n                                                    )\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.cancelled}(\n                                                    {formattedNumberFields(\n                                                        item?.cancelled_percentage,\n                                                        '%'\n                                                    )}\n                                                    )\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.team_lead ? (\n                                                        <>\n                                                            <span>\n                                                                <img\n                                                                    className='avatar me-2'\n                                                                    src={getServerImage(\n                                                                        item?.team_leader_image\n                                                                    )}\n                                                                    style={{\n                                                                        height: '24px',\n                                                                        width: '24px',\n                                                                    }}\n                                                                />\n                                                            </span>\n                                                            {item?.team_lead}\n                                                        </>\n                                                    ) : (\n                                                        '-'\n                                                    )}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {formattedNumberFields(\n                                                        item?.closing_ratio,\n                                                        '%'\n                                                    )}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {formattedNumberFields(\n                                                        item?.avg_system_size,\n                                                        'KW'\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={6}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination\n                        setPage={(changedPage) => setPage(changedPage)}\n                        page={page}\n                        totalPages={tableData?.last_page}\n                        totalRecords={tableData?.total}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default EmployeePerformance\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useRef} from 'react'\nimport ApexCharts, {ApexOptions} from 'apexcharts'\nimport {getCSS, getCSSVariableValue} from '../../../../../_metronic/assets/ts/_utils'\nimport {useThemeMode} from '../../../../../_metronic/partials'\n\nconst EmployeePerformanceChart = ({className, reportData, head}) => {\n    const chartRef = useRef(null)\n    const {mode} = useThemeMode()\n    const refreshChart = () => {\n        if (!chartRef.current) {\n            return\n        }\n\n        const height = parseInt(getCSS(chartRef.current, 'height'))\n\n        const chart = new ApexCharts(chartRef.current, getChartOptions(height, reportData))\n        if (chart) {\n            chart.render()\n        }\n\n        return chart\n    }\n    useEffect(() => {}, [])\n    useEffect(() => {\n        const chart = refreshChart()\n        return () => {\n            if (chart) {\n                chart.destroy()\n            }\n        }\n    }, [chartRef, reportData])\n\n    return (\n        <div className={`bg-cmwhite ${className} shadow-sm p-5 `} style={{borderRadius: '10px'}}>\n            {/* begin::Header */}\n            <div className='card-header border-0 pt-5 ps-5'>\n                <h3 className='card-title align-items-start flex-column'>\n                    <span\n                        className='card-label mb-1 text-cmBlack '\n                        style={{fontSize: '14px', fontWeight: '600'}}\n                    >\n                        Employee Performance{' '}\n                        <span className='text-cmGrey700'>( {head ? head : 'This Year'} )</span>\n                    </span>\n                </h3>\n\n                {/* begin::Toolbar */}\n                <div className='card-toolbar' data-kt-buttons='true'>\n                    {/* <a\n            className='btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1'\n            id='kt_charts_widget_5_year_btn'\n          >\n            Year\n          </a>\n\n          <a\n            className='btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1'\n            id='kt_charts_widget_5_month_btn'\n          >\n            Month\n          </a>\n\n          <a\n            className='btn btn-sm btn-color-muted btn-active btn-active-primary px-4'\n            id='kt_charts_widget_5_week_btn'\n          >\n            Week\n          </a> */}\n                </div>\n                {/* end::Toolbar */}\n            </div>\n            {/* end::Header */}\n\n            {/* begin::Body */}\n            <div className='card-body'>\n                {/* begin::Chart */}\n                <div\n                    ref={chartRef}\n                    id='kt_charts_widget_5_chart'\n                    style={{height: '350px', width: '100%'}}\n                ></div>\n                {/* end::Chart */}\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport {EmployeePerformanceChart}\n\nconst getChartOptions = (height, reportData) => {\n    const labelColor = getCSSVariableValue('--kt-gray-500')\n    const borderColor = getCSSVariableValue('--kt-gray-200')\n\n    const baseColor = getCSSVariableValue('--kt-primary')\n    const secondaryColor = getCSSVariableValue('--kt-info')\n    const cancelledArr = []\n    const penndingArr = []\n    const installeddArr = []\n    const name = []\n\n    if (reportData?.graph?.length > 0) {\n        reportData?.graph?.map((val) => {\n            cancelledArr.push(Number(val?.cancelled))\n            installeddArr.push(Number(val?.install))\n            penndingArr.push(Number(val?.pending))\n            name.push(val?.userName)\n        })\n    }\n\n    return {\n        series: [\n            {\n                name: 'Pending',\n                // data: [10],\n                data: penndingArr,\n            },\n            {\n                name: 'Installed',\n                // data: [25, 25, 25, 25],\n                data: installeddArr,\n            },\n            {\n                name: 'Cancelled',\n                // data: [50, 50, 50, 50],\n                data: cancelledArr,\n            },\n        ],\n\n        chart: {\n            fontFamily: 'inherit',\n            type: 'bar',\n            stacked: true,\n            height: 350,\n            toolbar: {\n                show: true,\n            },\n\n            zoom: {\n                enabled: true,\n                type: 'xy',\n                autoScaleYaxis: true,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '12%',\n                borderRadius: 5,\n            },\n        },\n        legend: {\n            show: true,\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent'],\n        },\n        xaxis: {\n            // categories: [\n            //   'Theresa Webb',\n            //   'Jerome Bell',\n            //   'Wade Warren',\n            //   'Arlene McCoy',\n            //   'Eleanor Pena',\n            //   'Ralph Edwards',\n            //   'Jacob Jones',\n            //   'Brooklyn Simmons',\n            //   'Savannah Nguyen',\n            //   'Cameron Williamson',\n            //   'Floyd Miles',\n            // ],\n            categories: name,\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    colors: '#616161',\n                    fontSize: '10px',\n                    fontWeight: '600',\n                },\n            },\n        },\n        yaxis: {\n            //   min: -80,\n            //   max: 80,\n            labels: {\n                style: {\n                    colors: '#9E9E9E',\n                    fontSize: '12px',\n                },\n            },\n            title: {\n                display: true,\n                text: 'Accounts',\n                style: {\n                    colors: '#0D1821',\n                    fontSize: '16.4px',\n                },\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        responsive: [\n            {\n                breakpoint: 700,\n                options: {\n                    plotOptions: {\n                        bar: {\n                            horizontal: true,\n                        },\n                    },\n                },\n            },\n        ],\n        states: {\n            normal: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            hover: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            active: {\n                allowMultipleDataPointsSelection: false,\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n        },\n        tooltip: {\n            style: {\n                fontSize: '12px',\n            },\n            y: {\n                formatter: function (val) {\n                    return val\n                },\n            },\n        },\n        colors: ['#5DB887', '#6078EC', '#FFE16A'],\n        grid: {\n            borderColor: borderColor,\n            strokeDashArray: 4,\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n        },\n    }\n}\n","import moment from 'moment'\nimport React, {useState} from 'react'\nimport {REPORTS_DURATION_DROPDOWN_LIST} from '../../../../../constants/constants'\nimport CustomDatePicker from '../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport CustomAutoCompleteDropdown from '../../../../../customComponents/customInputs/customAutoCompleteDropdown/CustomAutoCompleteDropdown'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomButton, {BUTTON_TYPE} from '../../../../../customComponents/customButtton/CustomButton'\n\nconst CustomReportsHeader = ({\n    stateList,\n    selectedLocation,\n    onChangeDate,\n    onLocationChange,\n    onStartDateChange,\n    onEndDateChange,\n    userByOfficeData,\n    setRepId,\n    repId,\n    handleExport,\n    isExport,\n}) => {\n    const [startDate, setStartDate] = useState()\n    const [endDate, setEndDate] = useState()\n    const [custom, setCustom] = useState('this_year')\n\n    const DateChange = (e) => {\n        setCustom(e.target.value)\n        onChangeDate(e.target.value)\n    }\n    const locationChange = (e) => {\n        onLocationChange(e.target.value)\n    }\n    const startDateChnage = (e) => {\n        if (moment(e).format('yyyy-MM-DD') > moment(endDate).format('yyyy-MM-DD')) {\n            setEndDate(null)\n        }\n        setStartDate(e)\n        onStartDateChange(moment(e).format('yyyy-MM-DD'))\n    }\n    const endDateChnage = (e) => {\n        setEndDate(e)\n        onEndDateChange(moment(e).format('yyyy-MM-DD'))\n    }\n    return (\n        <div className='card'>\n            <div\n                className='w-100 d-flex flex-wrap gap-sm-0 gap-3 mx-sm-0 mx-auto justify-content-between align-items-center bg-white py-5 px-5'\n                style={{\n                    borderRadius: '0px 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                {/* Hiring Progress*/}\n                <div className='d-flex align-items-center gap-5'>\n                    <div\n                        className='text-center text-cmGrey800 mx-sm-0 mx-auto'\n                        style={{\n                            fontFamily: 'Manrope',\n                            fontWeight: '600',\n                            fontSize: '17px',\n                        }}\n                    >\n                        Location\n                    </div>\n\n                    <div>\n                        <CustomDropdown\n                            options={stateList}\n                            value={selectedLocation}\n                            onChange={locationChange}\n                            showClear={false}\n                        />\n                    </div>\n                </div>\n\n                {/* Search tab */}\n                <div\n                    style={{borderRadius: '20px'}}\n                    className='w-sm-250px w-75 mx-sm-0 mx-auto mb-1 me-sm-12'\n                    id='kt_chat_contacts_header'\n                >\n                    <form\n                        className='position-relative'\n                        style={{borderRadius: '10px'}}\n                        autoComplete='off'\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen021.svg'\n                            className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                        />\n                        <CustomDropdown\n                            options={userByOfficeData}\n                            valueKey='id'\n                            placeholder='All Reps'\n                            displayKey='name'\n                            dropdownIcon={'bi bi-search'}\n                            value={repId}\n                            onChange={(e) => setRepId(e.target.value)}\n                        />\n                    </form>\n                </div>\n\n                {/* DropDown */}\n                <div className='mx-sm-0 mx-auto'>\n                    <CustomDropdown\n                        options={REPORTS_DURATION_DROPDOWN_LIST}\n                        onChange={DateChange}\n                        value={custom}\n                        searching={false}\n                        showClear={false}\n                    />\n                    {/* <select\n                    className='form-select form-select-solid border-0 bg-cmGrey100 text-cmGrey800 cursor-pointer'\n                    onChange={DateChange}\n                    style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                >\n                    {REPORTS_DURATION_DROPDOWN_LIST?.map((item) => (\n                        <option style={{fontWeight: 600}} value={item?.value} key={item?.value}>\n                            {item?.name}\n                        </option>\n                    ))}\n                </select> */}\n                </div>\n                {/* search date */}\n                {custom == 'custom' && (\n                    <div className='d-sm-flex flex-wrap align-items-center my-sm-0 my-5 text-center'>\n                        <div\n                            style={{\n                                // overflow: 'hidden',\n                                // borderRadius: '6px',\n                                width: '135px',\n                            }}\n                            className='form-group fw-bold d-flex flex-row mx-auto bg-cmGrey100'\n                        >\n                            {/* <label className='mt-3'>\n              <i className='bi bi-calendar-week fs-4 me-3 pt-2 mt-4 ms-3'></i>\n            </label>\n            <DatePicker\n              className='border-0 bg2 text-cmGrey800 fw-bold'\n              placeholderText={'Start Date'}\n              onChange={(event) => startDateChnage(event)}\n              name='startDate'\n              dateFormat='YYYY-MM-DD'\n              clearIcon={false}\n              calendarIcon={false}\n              value={startDate}\n            /> */}\n                            <CustomDatePicker\n                                name='startDate'\n                                placeholderField='Start date'\n                                value={startDate}\n                                onChange={(event) => startDateChnage(event.target.value)}\n                                maxDate={new Date()}\n                            />\n                        </div>\n                        <label className=' ms-6 me-6 text-cmGrey600' style={{fontWeight: '500'}}>\n                            to\n                        </label>\n                        <div\n                            style={{\n                                // overflow: 'hidden',\n                                // borderRadius: '6px',\n                                width: '135px',\n                            }}\n                            className='form-group bg-cmGrey100 d-flex flex-row mx-auto'\n                        >\n                            {/* <label className='mt-3'>\n              <i className='bi bi-calendar-week fs-4 me-3 pt-2 mt-4 ms-3'></i>\n            </label>\n            <DatePicker\n              className='border-0 bg2 fw-bold'\n              placeholderText={'End Date'}\n              onChange={(event) => endDateChnage(event)}\n              name='startDate'\n              dateFormat='YYYY-MM-DD'\n              clearIcon={false}\n              calendarIcon={false}\n              value={endDate}\n            /> */}\n                            <CustomDatePicker\n                                name='startDate'\n                                value={endDate}\n                                onChange={(event) => endDateChnage(event.target.value)}\n                                maxDate={new Date()}\n                                minDate={startDate}\n                            />\n                        </div>\n                    </div>\n                )}\n                {isExport ? (\n                    <div>\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.disabled}\n                            buttonLabel='Export'\n                            onClick={handleExport}\n                            padding={'py-3'}\n                            icon={'pi pi-file-export'}\n                        />\n                    </div>\n                ) : (\n                    <></>\n                )}\n\n                {/* Export */}\n                {/* <div className='text-center'>\n        <a\n          href='/'\n          className={clsx('btn btn-sm btn-flex fw-bold text-cmGrey600 bg-cmGrey100')}\n          data-kt-menu-trigger='click'\n          data-kt-menu-placement='bottom-end'\n          style={{\n            fontSize: '14px',\n            fontFamily: 'Manrope',\n            width: '99px',\n            height: '43px',\n            fontWeight: '600',\n          }}\n        >\n          <KTSVG\n            path='/media/icons/duotune/general/gen031.svg'\n            className='me-3 svg-icon-6 svg-icon-muted me-1'\n          />\n          Export\n        </a>\n        <a className='me-0'>\n          <button\n            style={{\n              fontSize: '14px',\n              fontStyle: '600',\n            }}\n            className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary'\n          >\n            <i\n              style={{marginTop: '-6px'}}\n              className='bi ms-4 bi-three-dots-vertical text-cmGrey800 fs-3'\n            ></i>\n          </button>\n        </a>\n      </div> */}\n            </div>\n        </div>\n    )\n}\n\nexport default CustomReportsHeader\n","import DatePicker from 'react-datepicker'\nimport clsx from 'clsx'\nimport moment from 'moment'\nimport React, {useState, useEffect, useMemo, useCallback} from 'react'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {OfficeReportCards} from './OfficeReportCards'\nimport {OfficeReportDataCard} from './OfficeReportDataCard'\nimport {OfficeLeaderCard} from './OfficeLeaderCard'\nimport EmployeePerformance from './EmployeePerformance'\nimport {EmployeePerformanceChart} from './EmployeePerformanceChart'\nimport CustomReportsHeader from '../customs/CustomReportsHeader'\nimport {getManagerReportService, officeBYUserIDSerices} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport debounce from 'lodash.debounce'\nimport {formattedNumberFields} from '../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../constants/constants'\nimport useOfficeLocation from '../../../../../hooks/useOfficeLocation'\n\nconst ReportsOffice = () => {\n    const [reportData, setReportData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [tableLoading, setTableLoading] = useState(false)\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [filter, setFilter] = useState('this_year')\n    const [userByOfficeData, setUserByOffceData] = useState([])\n    const [repId, setRepId] = useState(null)\n    const [stateList, selectedLocation, setSelectedLocation] = useOfficeLocation()\n    const [page, setPage] = useState(1)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        const body = {\n            search: searchTerm,\n            office_id: selectedLocation,\n            filter: filter,\n            user_id: repId,\n            page: page,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        }\n\n        if (\n            filter === 'custom' &&\n            moment(startDate, 'YYYY-MM-DD').isValid() &&\n            moment(endDate, 'YYYY-MM-DD').isValid()\n        ) {\n            body.start_date = moment(startDate, 'YYYY-MM-DD').format('YYYY-MM-DD')\n            body.end_date = moment(endDate, 'YYYY-MM-DD').format('YYYY-MM-DD')\n        }\n\n        if (\n            (selectedLocation && filter !== 'custom') ||\n            (filter === 'custom' &&\n                moment(startDate, 'YYYY-MM-DD').isValid() &&\n                moment(endDate, 'YYYY-MM-DD').isValid() &&\n                moment(startDate).isSameOrBefore(moment(endDate, 'YYYY-MM-DD')))\n        ) {\n            setLoading(true)\n            getManagerReportService(body)\n                .then((res) => {\n                    setReportData(res.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                    setTableLoading(false)\n                })\n        }\n    }, [\n        selectedLocation,\n        filter,\n        sortValue,\n        sortingOrder,\n        endDate,\n        startDate,\n        searchTerm,\n        repId,\n        page,\n    ])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            officeBYUserIDSerices(selectedLocation).then((res) => {\n                const modifiedRes = res?.data?.map((item) => ({\n                    ...item,\n                    name: `${item?.first_name} ${item?.last_name}`,\n                }))\n                setUserByOffceData(modifiedRes)\n            })\n        }\n    }, [selectedLocation])\n    const onChangeFilter = (data) => {\n        setPage(1)\n        setLoading(data == 'custom' ? false : true)\n        setFilter(data)\n    }\n    const onLocationChange = (loc) => {\n        setPage(1)\n        setLoading(true)\n        setSelectedLocation(loc)\n    }\n    const changeStartDate = (start) => {\n        setPage(1)\n        setStartDate(moment(start).format('YYYY-MM-DD'))\n    }\n\n    const changeEndDate = (end) => {\n        setPage(1)\n        setEndDate(moment(end).format('YYYY-MM-DD'))\n    }\n\n    const handleLocationChange = (e) => {\n        delaySaveToDb(e)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setPage(1)\n            setTableLoading(true)\n            setSearchTerm(val)\n        }, 500),\n        []\n    )\n\n    const bestWeekValue = useMemo(() => {\n        if (Array.isArray(reportData?.best_week?.week)) return '-'\n        let dates =\n            reportData && reportData?.best_week?.week != 0\n                ? reportData?.best_week?.week?.split(',')\n                : null\n        return dates\n            ? `${getValidDate(dates?.[0], 'DD MMM')} - ${getValidDate(dates?.[1], 'DD MMM')}`\n            : '-'\n    }, [reportData?.best_week])\n\n    return (\n        <>\n            <div style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n\n                {/* Top Filter header */}\n                <CustomReportsHeader\n                    stateList={stateList}\n                    selectedLocation={selectedLocation}\n                    onChangeDate={(date) => onChangeFilter(date)}\n                    onLocationChange={(loc) => onLocationChange(loc)}\n                    onStartDateChange={(start) => changeStartDate(start)}\n                    onEndDateChange={(end) => changeEndDate(end)}\n                    userByOfficeData={userByOfficeData}\n                    setRepId={setRepId}\n                    repId={repId}\n                />\n                {/* Filter Header ends */}\n\n                {/* Top cards */}\n                <div className='d-flex flex-wrap mx-auto my-10 gap-8'>\n                    <OfficeReportCards\n                        // heading='#5'\n                        content='Office Ranking'\n                        className='col-sm '\n                        background='#FDDCEA'\n                        smallTitle={reportData?.office_name ?? '-'}\n                        heading={reportData?.office_ranking ?? '0'}\n                    />\n                    <OfficeReportCards\n                        heading={reportData?.total_rep ?? '0'}\n                        content='Total Reps'\n                        className='col-sm '\n                        background='#D7F9EF'\n                    />\n                    <OfficeReportCards\n                        heading={reportData?.total_manager ?? '0'}\n                        content='Managers'\n                        className='col-sm '\n                        background='#FFF4DE'\n                    />\n                    <OfficeReportCards\n                        heading={reportData?.total_closer ?? '0'}\n                        content='Closer'\n                        className='col-sm '\n                        background='#E1D3FF'\n                    />\n                    <OfficeReportCards\n                        heading={reportData?.total_setter ?? '0'}\n                        content='Setters'\n                        className='col-sm '\n                        background='#E1E9FF'\n                    />\n                    {/* <OfficeReportCards\n                        heading={reportData?.total_junior_setter ?? '0'}\n                        content='Junior'\n                        className='col-sm '\n                        background='#FFE2C7'\n                    /> */}\n                </div>\n                {/* Top cards ends */}\n\n                {/* Chart begins */}\n                <div>\n                    <EmployeePerformanceChart\n                        className='card-xl-stretch mb-5 mb-xl-8'\n                        reportData={reportData}\n                        head={filter}\n                    />\n                </div>\n                {/* Chart ends */}\n\n                {/* Middle Card Ends */}\n                <div className='d-flex flex-wrap justify-content-center mx-auto my-10 gap-10 '>\n                    <OfficeReportDataCard\n                        line1Heading='Total Accounts:'\n                        line1Content={formattedNumberFields(reportData?.total_account, '')}\n                        line2Heading='Total Revenue:'\n                        line2Content={formattedNumberFields(reportData?.total_revenue, '$')}\n                        line3Heading='Total KW:'\n                        line3Content={formattedNumberFields(reportData?.total_kw, '')}\n                    />\n                    <OfficeReportDataCard\n                        line1Heading='Best Day:'\n                        line1Content={formattedNumberFields(reportData?.best_day?.dayKw, 'KW')}\n                        line1SubHeading={getValidDate(reportData?.best_day?.day, 'DD MMMM')}\n                        line2Heading='Best Week:'\n                        line2Content={formattedNumberFields(reportData?.best_week?.amount, 'KW')}\n                        line3Heading='Best Month:'\n                        line2SubHeading={bestWeekValue}\n                        line3Content={formattedNumberFields(reportData?.best_month?.amount, 'KW')}\n                        line3SubHeading={reportData?.best_month?.month}\n                    />\n                    <OfficeLeaderCard\n                        line1Heading='Top Team:'\n                        line1Content={reportData?.best_team?.team_name ?? '-'}\n                        line2Heading='Top Setter:'\n                        line2Content={reportData?.best_setter?.setter_name ?? '-'}\n                        line3Heading='Top Closer:'\n                        line3Content={reportData?.best_closer?.closer_name ?? '-'}\n                        line1SubHeading={(reportData?.best_team?.total_kw ?? '-') + 'KWs'}\n                        line2SubHeading={(reportData?.best_setter?.total_kw ?? '-') + 'KWs'}\n                        line3SubHeading={(reportData?.best_closer?.total_kw ?? '-') + 'KWs'}\n                    />\n                </div>\n                {/* Middle Card Ends */}\n\n                {/* Table Starts */}\n                <div className='m-4 mx-auto my-10 '>\n                    <EmployeePerformance\n                        EmployeeData={reportData?.employee_performance}\n                        loading={tableLoading}\n                        onSearchChange={(text) => handleLocationChange(text)}\n                        page={page}\n                        setPage={setPage}\n                        sortingOrder={sortingOrder}\n                        sortValue={sortValue}\n                        onPress={(item) => {\n                            setSortValue(item)\n                            setSortingOrder(\n                                sortValue !== item ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                            )\n                            setPage(1)\n                        }}\n                    />\n                </div>\n                {/* Table Ends */}\n            </div>\n        </>\n    )\n}\n\nexport default ReportsOffice\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect} from 'react'\nimport {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\nimport {useNavigate} from 'react-router-dom'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../accessRights/AccessRights'\nimport {\n    getCompanySettingSelector,\n    getPositionSettingSelector,\n} from '../../../../../redux/selectors/SettingsSelectors'\nimport useQueryString from '../../../../../hooks/useQueryString'\nimport {allPermissionsAccess} from '../../../../../accessRights/useCustomAccessRights'\nimport {fontsFamily} from '../../../../../assets/fonts/fonts'\nconst SmReportsHeader = () => {\n    const location = useLocation()\n    var navigate = useNavigate()\n    const companySetting = useSelector(getCompanySettingSelector)\n    const positionSetting = useSelector(getPositionSettingSelector)\n\n    return (\n        <div\n            style={{\n                fontSize: '16px',\n                fontWeight: '800',\n                fontFamily: fontsFamily.manrope,\n                marginTop: '-20px',\n                overflowX: 'auto',\n            }}\n            className='d-flex flex-nowrap gap-7 text-cmGrey500'\n        >\n            <AccessRights customCondition={allPermissionsAccess.standard.reports.office.view}>\n                <Link\n                    className={`px-3 py-2 bg-cmwhite shadow-sm text-nowrap ${\n                        location?.pathname === '/smReports/office' && 'active'\n                            ? 'text-cmBlue-Crayola '\n                            : 'text-cmGrey500'\n                    }`}\n                    to='/smReports/office'\n                    style={{borderRadius: '10px 10px 0 0'}}\n                >\n                    Office\n                </Link>\n            </AccessRights>\n\n            <AccessRights customCondition={allPermissionsAccess.standard.reports.sales.view}>\n                <Link\n                    className={`px-3 py-2 bg-cmwhite shadow-sm text-nowrap ${\n                        location?.pathname === '/smReports/sales' && 'active'\n                            ? 'text-cmBlue-Crayola '\n                            : 'text-cmGrey500'\n                    }`}\n                    to='/smReports/sales'\n                    style={{borderRadius: '10px 10px 0 0'}}\n                >\n                    Sales\n                </Link>\n            </AccessRights>\n\n            <AccessRights customCondition={allPermissionsAccess.standard.reports.pastPayStubs.view}>\n                <Link\n                    className={`px-3 py-2 bg-cmwhite shadow-sm text-nowrap ${\n                        location?.pathname === '/smReports/pay-stubs' && 'active'\n                            ? 'text-cmBlue-Crayola '\n                            : 'text-cmGrey500'\n                    }`}\n                    to='/smReports/pay-stubs'\n                    style={{borderRadius: '10px 10px 0 0'}}\n                >\n                    Past Pay Stubs\n                </Link>\n            </AccessRights>\n\n            {companySetting?.reconciliation && positionSetting?.reconciliation_status ? (\n                <AccessRights\n                    customCondition={allPermissionsAccess.standard.reports.reconciliation.view}\n                >\n                    <Link\n                        className={`px-3 py-2 bg-cmwhite shadow-sm text-nowrap text-nowrap ${\n                            location?.pathname === '/smReports/reconciliation' && 'active'\n                                ? 'text-cmBlue-Crayola '\n                                : 'text-cmGrey500'\n                        }`}\n                        to='/smReports/reconciliation'\n                        style={{borderRadius: '10px 10px 0 0'}}\n                    >\n                        Reconciliation\n                    </Link>\n                </AccessRights>\n            ) : null}\n        </div>\n    )\n}\n\nexport {SmReportsHeader}\n","import React from 'react'\n\nconst MarketingTable = () => {\n    return <div>MarketingTable</div>\n}\n\nexport default MarketingTable\n","import React from 'react'\nimport clsx from 'clsx'\nimport moment from 'moment'\nimport {useState} from 'react'\nimport DatePicker from 'react-datepicker'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport MarketingTable from './MarketingTable'\n\nconst MarketingDealCard = () => {\n    const [startDate, setStartDate] = useState(moment().add(-30, 'day').toDate())\n    const [endDate, setEndDate] = useState(new Date())\n    return (\n        <div style={{borderRadius: '0px 10px 10px 10px'}}>\n            <div className='w-100 mb-3 d-sm-flex flex-wrap justify-content-between align-items-center bg-white py-5 px-5 shadow-sm'>\n                {/* Search tab */}\n                <div\n                    style={{borderRadius: '20px'}}\n                    className='w-sm-275px w-75 mx-sm-0 mx-auto mb-1 me-sm-12'\n                    id='kt_chat_contacts_header'\n                >\n                    <form\n                        className='position-relative'\n                        style={{borderRadius: '90px'}}\n                        autoComplete='off'\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen021.svg'\n                            className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                        />\n\n                        <input\n                            style={{\n                                borderRadius: '10px',\n                            }}\n                            type='text'\n                            className='form-control form-control-solid px-12 bg-cmGrey100 text-cmGrey900'\n                            name='search'\n                            placeholder='Search'\n                        />\n                    </form>\n                </div>\n\n                {/* DropDown */}\n\n                {/* search date */}\n                <div className='d-sm-flex flex-wrap align-items-center my-sm-0 my-5 text-center'>\n                    <div\n                        style={{\n                            overflow: 'hidden',\n                            borderRadius: '6px',\n                        }}\n                        className='form-group  d-flex flex-row mx-auto bg-cmGrey100 w-sm-150px'\n                    >\n                        <label className='mt-3'>\n                            <i className='bi bi-calendar-week fs-4 me-3 pt-2 mt-4 ms-3'></i>\n                        </label>\n                        <DatePicker\n                            className='border-0 bg2 text-cmGrey800 fw-bold'\n                            placeholderText={'Start Date'}\n                            // onChange={(event) => setStartDate(moment(event).format('YYYY-MM-DD'))}\n                            name='startDate'\n                            dateFormat='YYYY-MM-DD'\n                            clearIcon={false}\n                            calendarIcon={false}\n                            // value={startDate}\n                        />\n                    </div>\n                    <label className='m-4 ms-6 me-6 text-cmGrey600' style={{fontWeight: '500'}}>\n                        to\n                    </label>\n                    <div\n                        style={{\n                            overflow: 'hidden',\n                            borderRadius: '6px',\n                        }}\n                        className='form-group bg-cmGrey100 d-flex flex-row mx-auto  w-sm-150px'\n                    >\n                        <label className='mt-3'>\n                            <i className='bi bi-calendar-week fs-4 me-3 pt-2 mt-4 ms-3'></i>\n                        </label>\n                        <DatePicker\n                            className='border-0 bg2 fw-bold'\n                            placeholderText={'End Date'}\n                            onChange={(event) => setEndDate(moment(event).format('YYYY-MM-DD'))}\n                            name='startDate'\n                            dateFormat='YYYY-MM-DD'\n                            clearIcon={false}\n                            calendarIcon={false}\n                            // value={endDate}\n                        />\n                    </div>\n                </div>\n\n                {/* Export */}\n                <div className='text-center'>\n                    <a\n                        href='/'\n                        className={clsx(\n                            'btn btn-sm btn-flex justify-content-center fw-bold text-cmGrey600 bg-cmGrey100 me-5    '\n                        )}\n                        data-kt-menu-trigger='click'\n                        data-kt-menu-placement='bottom-end'\n                        style={{\n                            fontSize: '14px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '600',\n                        }}\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen031.svg'\n                            className='me-3 svg-icon-6 svg-icon-muted me-1'\n                        />\n                        Export\n                    </a>\n\n                    <a\n                        href='/'\n                        className={clsx(\n                            'btn btn-sm btn-flex justify-content-center fw-bold text-cmGrey600 bg-cmGrey100'\n                        )}\n                        data-kt-menu-trigger='click'\n                        data-kt-menu-placement='bottom-end'\n                        style={{\n                            fontSize: '14px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '600',\n                        }}\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen031.svg'\n                            className='me-3 svg-icon-6 svg-icon-muted me-1'\n                        />\n                        Export\n                    </a>\n\n                    <a className='me-0'>\n                        <button\n                            style={{\n                                fontSize: '14px',\n                                fontStyle: '600',\n                            }}\n                            className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary'\n                        >\n                            <i\n                                style={{marginTop: '-6px'}}\n                                className='bi ms-4 bi-three-dots-vertical text-cmGrey800 fs-3'\n                            ></i>\n                        </button>\n                    </a>\n                </div>\n            </div>\n            <div>\n                <MarketingTable />\n            </div>\n        </div>\n    )\n}\n\nexport default MarketingDealCard\n","import clsx from 'clsx'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport Pagination from '../../../../admin/sequidocs/component/Pagination'\nimport {ProgressBar} from 'react-bootstrap'\nimport ViewCostomer from '../../../../admin/reports/component/sales/ViewCostomer'\nimport PayPeriodSidemodal from './PayPeriodSidemodal'\n\n// import ViewCostomer from './ViewCostomer'\n\nconst PayPeriodCustomerInfo = ({reportData}) => {\n    return (\n        <>\n            <ViewCostomer />\n            <div\n                className={`card shadow mt-7`}\n                style={{fontFamily: 'Manrope', borderRadius: '10px'}}\n            >\n                <div className='card-body py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='mt-4 ms-sm-7 me-sm-20 mb-3 d-sm-flex flex-wrap justify-content-between align-items-center'>\n                            {/* customer info */}\n                            <div\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '700',\n                                    fontSize: '17px',\n                                }}\n                                className='mx-sm-0 ps-sm-0 ps-5 text-cmGrey900'\n                            >\n                                Customer Info\n                            </div>\n\n                            {/* Search form */}\n                            <div\n                                style={{borderRadius: '20px'}}\n                                className='w-md-300px w-75 mx-sm-0 mx-auto mb-1'\n                            >\n                                <form\n                                    className='position-relative'\n                                    style={{borderRadius: '90px'}}\n                                    autoComplete='off'\n                                >\n                                    <KTSVG\n                                        path='/media/icons/duotune/general/gen021.svg'\n                                        className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                                    />\n\n                                    <input\n                                        style={{borderRadius: '10px', fontWeight: '600'}}\n                                        type='text'\n                                        className='form-control form-control-solid px-12 bg-cmGrey100 text-cmGrey600'\n                                        name='search'\n                                        placeholder='Search...'\n                                    />\n                                </form>\n                            </div>\n\n                            {/* <div className='me-sm-20'>\n                <a\n                  href='/'\n                  className={clsx('btn btn-sm btn-flex fw-bold bg-cmGrey100 text-cmGrey600 me-10')}\n                  data-kt-menu-trigger='click'\n                  data-kt-menu-placement='bottom-end'\n                  style={{\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    width: '99px',\n                    height: '43px',\n                    fontWeight: '600',\n                  }}\n                >\n                  <KTSVG\n                    path='/media/icons/duotune/general/gen031.svg'\n                    className='me-3 svg-icon-6 svg-icon-muted me-1'\n                  />\n                  Filter\n                </a>\n\n                <a className='me-0'>\n                  <button\n                    className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary'\n                    data-kt-menu-trigger='click'\n                    data-kt-menu-placement='top-end'\n                    data-kt-menu-flip='bottom-end'\n                  >\n                    <i\n                      style={{marginTop: '-6px'}}\n                      className='bi ms-4 bi-three-dots-vertical text-cmGrey600 fs-1'\n                    ></i>\n                  </button>\n                </a>\n              </div> */}\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className=' text-cmGrey800 bg-cmGrey300 text-center'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '800',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='w-auto py-3'>PID</th>\n\n                                    <th className='w-auto py-3'>Customer</th>\n                                    <th className='w-auto py-3'>State</th>\n\n                                    <th className='w-auto py-3'>Setter</th>\n                                    <th className='w-auto py-3'>KW</th>\n                                    <th className='w-auto py-3 text-nowrap'>Net EPC</th>\n                                    <th className='w-auto py-3'>Cancel</th>\n                                    <th className='w-auto py-3'>M1</th>\n                                    <th className='w-auto py-3'>M2</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr\n                                    className=' text-cmGrey700 text-center'\n                                    style={{\n                                        fontWeight: '500',\n                                        fontSize: '14px',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <td className='p-5 text-cmGrey800'>TSP67701</td>\n\n                                    <td\n                                        className='p-5 text-decoration-underline'\n                                        style={{fontWeight: '600', cursor: 'pointer'}}\n                                        data-bs-toggle='offcanvas'\n                                        data-bs-target='#offcanvasRight3'\n                                        aria-controls='offcanvasRight'\n                                    >\n                                        Jenifer Brown\n                                        {/* <div className='d-flex justify-content-center gap-2 align-items-center mt-2'>\n                      <ProgressBar\n                        variant='success'\n                        now={40}\n                        className='h-5px'\n                        style={{width: '100px '}}\n                      />\n                      <span\n                        className='text-cmGrey500 text-decoration-underline'\n                        style={{fontSize: '10px', fontWeight: '500'}}\n                      >\n                        20%\n                      </span>\n                    </div> */}\n                                    </td>\n\n                                    <td className='p-5'>SD</td>\n\n                                    <td className='p-5'>Brooklyn Simmons</td>\n\n                                    <td className='p-5'>4.23</td>\n\n                                    <td className='p-5'>9.520</td>\n\n                                    <td className='p-5 text-cmError'>11/11/2020</td>\n                                    <td className='p-5'>\n                                        <span\n                                            className='text-cmGrey800 me-4'\n                                            style={{fontWeight: '600'}}\n                                        >\n                                            $475.22\n                                        </span>\n                                        <span>11/11/2020</span>\n                                    </td>\n\n                                    <td className='p-5'>\n                                        <span\n                                            className='text-cmGrey800 me-4'\n                                            style={{fontWeight: '600'}}\n                                        >\n                                            $475.22\n                                        </span>\n                                        <span>11/11/2020</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <PayPeriodSidemodal />\n        </>\n    )\n}\n\nexport default PayPeriodCustomerInfo\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useRef } from 'react'\nimport ApexCharts, { ApexOptions } from 'apexcharts'\nimport { getCSS, getCSSVariableValue } from '../../../../../_metronic/assets/ts/_utils'\nimport { useThemeMode } from '../../../../../_metronic/partials'\nimport { formattedNumberFields } from '../../../../../helpers/CommonHelpers'\n\ntype Props = {\n    className: string,\n    graphData: any\n}\n\nconst PayStubChart: React.FC<Props> = ({ className, graphData }) => {\n    const chartRef = useRef<HTMLDivElement | null>(null)\n    const { mode } = useThemeMode()\n    const refreshMode = () => {\n        if (!chartRef.current) {\n            return\n        }\n\n        const height = parseInt(getCSS(chartRef.current, 'height'))\n\n        const chart = new ApexCharts(chartRef.current, getChartOptions(height, graphData))\n        if (chart) {\n            chart.render()\n        }\n\n        return chart\n    }\n\n    useEffect(() => {\n        const chart = refreshMode()\n\n        return () => {\n            if (chart) {\n                chart.destroy()\n            }\n        }\n    }, [chartRef, graphData])\n\n    return (\n        <div className={`card ${className} shadow-sm`}>\n            {/* begin::Header */}\n\n            {/* end::Header */}\n            {/* begin::Body */}\n            <div className='card-body'>\n                <div className='d-flex flex-wrap justify-content-center gap-3 '>\n                    <div className='bi bi-circle-fill text-cmYellow' />\n                    <div\n                        className='text-cmGrey500'\n                        style={{ fontWeight: '600', fontFamily: 'Manrope' }}\n                    >\n                        Earnings\n                    </div>\n                </div>\n                {/* begin::Chart */}\n                <div ref={chartRef} id='kt_charts_widget_3_chart' style={{ height: '350px' }}></div>\n                {/* end::Chart */}\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport { PayStubChart }\n\nfunction getChartOptions(height: number, graphData: any): ApexOptions {\n    var monthArr: any[] = []\n    var monthAmountArr: any[] = []\n    graphData?.length > 0 &&\n        graphData?.map((item: any) => {\n            monthArr.push(item?.month)\n            monthAmountArr.push((item?.amount)?.toFixed(2) ?? 0)\n\n        })\n    return {\n        series: [\n            {\n                name: 'Earnings',\n                // data: [20, 30, 40, 40, 90, 90, 70, 70],\n                data: monthAmountArr\n            },\n        ],\n        chart: {\n            fontFamily: 'inherit',\n            type: 'line',\n            height: 350,\n            toolbar: {\n                show: true,\n            },\n            zoom: {\n                enabled: true,\n                type: 'xy',\n                autoScaleYaxis: true,\n            },\n        },\n        plotOptions: {},\n        legend: {\n            show: false,\n        },\n        dataLabels: {\n            enabled: false,\n            // style: {\n            //   colors: ['red'],\n\n            // },\n        },\n        fill: {\n            type: 'solid',\n            opacity: 1,\n        },\n\n        stroke: {\n            show: true,\n            width: 3,\n            colors: ['#6078EC'],\n        },\n        xaxis: {\n            // categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n            categories: monthArr,\n\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    colors: '#9E9E9E',\n                    fontSize: '12px',\n                    fontWeight: '600',\n                },\n            },\n            crosshairs: {\n                position: 'front',\n                stroke: {\n                    color: '#9E9E9E',\n                    width: 1,\n                    dashArray: 3,\n                },\n            },\n            tooltip: {\n                enabled: true,\n                formatter: undefined,\n                offsetY: 0,\n                style: {\n                    fontSize: '12px',\n                },\n            },\n        },\n        yaxis: {\n            labels: {\n                style: {\n                    colors: '#9E9E9E',\n                    fontSize: '12px',\n                    fontWeight: '600',\n                },\n            },\n        },\n        states: {\n            normal: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            hover: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            active: {\n                allowMultipleDataPointsSelection: false,\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n        },\n        tooltip: {\n            style: {\n                fontSize: '12px',\n            },\n            y: {\n                formatter: function (val) {\n                    return '$' + val\n                },\n            },\n        },\n        colors: ['#FFE16A'],\n        grid: {\n            borderColor: '#e0e0e0',\n            strokeDashArray: 4,\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n            xaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n            padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 20,\n            },\n        },\n        markers: {\n            strokeColors: '#FFE16A',\n            strokeWidth: 3,\n        },\n    }\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {getValidDate} from '../../../../../constants/constants'\nimport {\n    formattedNumberFields,\n    formattedNumberFieldsWithoutDecimal,\n} from '../../../../../helpers/CommonHelpers'\nimport Pagination from '../../../admin/sequidocs/component/Pagination'\n\nconst PayStubTable = ({tableData, onPageChange, page}) => {\n    return (\n        <div>\n            <div className='table-responsive overflow-auto bg-cmwhite rounded shadow-sm'>\n                <table className='table'>\n                    <thead className='text-center'>\n                        <tr\n                            className='text-cmGrey900 bg-cmGrey300'\n                            style={{\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            <th className='w-auto p-5 text-nowrap'>Pay Period</th>\n                            <th className='w-auto p-5 text-nowrap'>Payroll Date</th>\n                            <th className='w-auto p-5 text-nowrap'>Gross Total</th>\n\n                            <th className='w-auto p-5 text-nowrap'>Miscellaneous</th>\n\n                            <th className='w-auto p-5 text-nowrap'>Deductions</th>\n                            <th className='w-auto p-5 text-nowrap'>Net Pay</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tableData?.data?.length > 0 ? (\n                            tableData?.data?.map((item, i) => (\n                                <tr\n                                    key={i}\n                                    style={{\n                                        fontSize: '14px',\n                                        fontFamily: 'Manrope',\n                                        fontWeight: '600',\n                                    }}\n                                    className='text-center text-cmGrey700 text-nowrap'\n                                >\n                                    <td className='p-5 ' style={{fontWeight: '700'}}>\n                                        <Link\n                                            className='text-cmBlue-Crayola'\n                                            to={'pay-period'}\n                                            state={{\n                                                end_date: item?.pay_period_to,\n                                                start_date: item?.pay_period_from,\n                                                userId: item?.user_id,\n                                                payrollId: item?.id,\n                                                past: true,\n                                            }}\n                                        >\n                                            {/* 11/02/22- 12/02/23 */}\n                                            {getValidDate(item?.pay_period_from)}-\n                                            {getValidDate(item?.pay_period_to)}\n                                        </Link>\n                                    </td>\n                                    <td className='p-5'> {getValidDate(item?.payroll_date)}</td>\n\n                                    <td className='p-5'>\n                                        {formattedNumberFields(item?.gross_total, '$')}\n                                    </td>\n                                    <td className='p-5'>\n                                        {formattedNumberFields(item?.miscellaneous, '$')}\n                                    </td>\n                                    <td className='p-5'>\n                                        {formattedNumberFields(item?.deduction, '$')}\n                                    </td>\n                                    <td className='p-5 text-cmGrey900' style={{fontWeight: '700'}}>\n                                        {formattedNumberFields(item?.net_pay, '$')}\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr>\n                                <td\n                                    colSpan={5}\n                                    style={{\n                                        textAlign: 'center',\n                                        fontFamily: 'Manrope',\n                                        fontWeight: '500',\n                                        fontSize: 14,\n                                        paddingTop: 20,\n                                        paddingBottom: 20,\n                                    }}\n                                >\n                                    No data found\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n            <Pagination\n                page={page}\n                totalPages={tableData?.last_page}\n                setPage={(changedPage) => onPageChange(changedPage)}\n            />\n        </div>\n    )\n}\n\nexport default PayStubTable\n","import React, {useEffect, useState} from 'react'\nimport {PayStubChart} from './PayStubChart'\nimport PayStubTable from './PayStubTable'\nimport {\n    getPastPaystubGraphDataService,\n    getPastPaystubTableDataService,\n} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport CustomDatePicker from '../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {useLocation} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport {getUserDataSelector} from '../../../../../redux/selectors/AuthSelectors'\n\nconst PayStubs = () => {\n    const [graphData, setGraphData] = useState(null)\n    const [tableData, setTableData] = useState(null)\n    const [selectedYear, setYear] = useState(new Date())\n    const [loading, setLoading] = useState(false)\n    const [tableLoading, setTableLoading] = useState(false)\n    const [page, setPage] = useState(1)\n    const location = useLocation()\n    const userData = useSelector(getUserDataSelector)\n    useEffect(() => {\n        setLoading(true)\n        const body = {\n            year: selectedYear?.getFullYear(),\n            user_id: location?.state?.userId ?? userData?.id,\n        }\n        getGraphData(body)\n        // getTableData(body)\n    }, [selectedYear])\n\n    useEffect(() => {\n        setTableLoading(true)\n        const body = {\n            year: selectedYear?.getFullYear(),\n            user_id: location?.state?.userId ?? userData?.id,\n            page: page,\n        }\n        getTableData(body)\n    }, [page, selectedYear])\n\n    const getGraphData = (body) => {\n        getPastPaystubGraphDataService(body).then((res) => setGraphData(res.data))\n    }\n    const getTableData = (body) => {\n        getPastPaystubTableDataService(body)\n            .then((res) => setTableData(res?.data))\n            .finally(() => {\n                setLoading(false)\n                setTableLoading(false)\n            })\n    }\n    const handlePageChange = (val) => {\n        setPage(val)\n    }\n    return (\n        <div style={{fontWeight: 'Manrope', fontSize: '14px', position: 'relative'}}>\n            {/* Top Header */}\n            <div\n                className='bg-cmwhite py-5 px-10 mb-10'\n                style={{\n                    borderRadius: '0px 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div className='d-flex gap-5 align-items-center'>\n                    <div className='text-cmGrey700' style={{fontWeight: '600'}}>\n                        Select Financial Year{' '}\n                    </div>\n                    <div>\n                        <CustomDatePicker\n                            viewMode='year'\n                            maxDate={new Date()}\n                            dateFormat='yy'\n                            placeholder='YYYY'\n                            value={selectedYear}\n                            onChange={(e) => {\n                                setPage(1)\n                                setYear(e?.target?.value)\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            {/* Chart starts */}\n            <div className='mb-10' style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n                <PayStubChart graphData={graphData} />\n            </div>\n            {/* Chart ends */}\n            {/* table  starts */}\n            <div style={{position: 'relative'}}>\n                <CustomLoader full visible={tableLoading} />\n                <PayStubTable\n                    tableData={tableData}\n                    page={page}\n                    onPageChange={handlePageChange}\n                    loading={tableLoading}\n                />\n            </div>\n            {/* table  ends */}\n        </div>\n    )\n}\n\nexport default PayStubs\n","import React from 'react'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\n\nconst ComissionsCard = ({cardData}) => {\n    return (\n        <div\n            className={`bg-cmwhite my-0 card py-5 px-8 w-100 h-md-300px shadow-sm`}\n            style={{\n                borderRadius: '10px',\n                fontSize: '14px',\n                fontWeight: '500',\n                fontFamily: 'Manrope',\n            }}\n        >\n            {/* Begins body */}\n\n            {/* Heading */}\n            <div className=' d-flex flex-wrap align-items-center gap-5 mb-5'>\n                <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                    Commission\n                </div>\n                {/* <div\n          className='text-cminfo text-decoration-underline cursor-pointer'\n          style={{fontWeight: '600'}}\n        >\n          View report\n        </div> */}\n            </div>\n            {/* Data */}\n            <div className='card-body my-0 p-0'>\n                <table className=' w-100 table text-cmGrey600' style={{fontWeight: '600'}}>\n                    <tbody>\n                        <tr>\n                            <td className='pb-1'>Total Accounts</td>\n                            <td className='pb-1'>{cardData?.total_account}</td>\n                        </tr>\n                        <tr>\n                            <td className='pb-1'>Commission Earned</td>\n                            <td className='pb-1'>\n                                {formattedNumberFields(cardData?.commission_earnings, '$')}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='pb-1'>M1 Paid</td>\n                            <td className='pb-1'>\n                                {formattedNumberFields(cardData?.m1_paid, '$')}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='pb-1'>M2 Paid</td>\n                            <td className='pb-1'>\n                                {formattedNumberFields(cardData?.m2_paid, '$')}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='pb-1'>Advances</td>\n                            <td className='pb-1'>\n                                {formattedNumberFields(cardData?.advances, '$')}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='pb-1'>Clawbacked Accounts</td>\n                            <td className='pb-1'>{cardData?.clawback_account}</td>\n                        </tr>\n                        <tr>\n                            <td className='pb-1'>Total Due</td>\n                            <td className='pb-1'>\n                                {formattedNumberFields(cardData?.total_due, '$')}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ComissionsCard\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useRef} from 'react'\nimport ApexCharts from 'apexcharts'\nimport {getCSS} from '../../../../../../_metronic/assets/ts/_utils'\nimport {useThemeMode} from '../../../../../../_metronic/partials'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\n\nconst CommissionBreakdownChart = ({className, graphData}) => {\n    const chartRef = useRef(null)\n    const {mode} = useThemeMode()\n    const refreshChart = () => {\n        if (!chartRef.current) {\n            return\n        }\n\n        const height = parseInt(getCSS(chartRef.current, 'height'))\n\n        const chart = new ApexCharts(chartRef.current, getChartOptions(height, graphData))\n        if (chart) {\n            chart.render()\n        }\n\n        return chart\n    }\n    useEffect(() => {}, [])\n\n    useEffect(() => {\n        const chart = refreshChart()\n\n        return () => {\n            if (chart) {\n                chart.destroy()\n            }\n        }\n    }, [chartRef, graphData])\n\n    return (\n        <div\n            className={`bg-cmwhite shadow-sm  ${className}`}\n            style={{\n                borderRadius: '10px',\n                fontFamily: 'Manrope',\n                fontWeight: '600',\n                fontSize: '12px',\n            }}\n        >\n            {/* begin::Header */}\n\n            <div className='text-cmGrey900 pt-5 ps-5' style={{fontWeight: 700, fontSize: '16px'}}>\n                {' '}\n                Commission breakdown\n            </div>\n            <div className='d-flex flex-wrap gap-10 justify-content-center align-items-center text-cmGrey500'>\n                {/* 1 */}\n                <div className='d-flex align-items-center gap-2'>\n                    <div className='bi bi-dash-lg fs-1 text-cmSuccess' />\n                    <div>Total Earnings</div>\n                </div>\n                {/* 2 */}\n                <div className='d-flex align-items-center gap-2'>\n                    <div className='bi bi-square-fill fs-5' style={{color: '#D3FEE4'}} />\n                    <div>Total Due</div>\n                </div>\n                {/* 3 */}\n                <div className='d-flex align-items-center gap-2'>\n                    <div className='bi bi-dash-lg fs-1 text-cminfo' />\n                    <div>M1</div>\n                </div>\n                {/* 4 */}\n                <div className='d-flex align-items-center gap-2'>\n                    <div className='bi bi-square-fill fs-5' style={{color: '#D2E1FF'}} />\n                    <div>M1 Paid</div>\n                </div>\n                {/* 5 */}\n                <div className='d-flex align-items-center gap-2'>\n                    <div className='bi bi-dash-lg fs-1' style={{color: '#7239EA'}} />\n                    <div>M2</div>\n                </div>\n                {/* 6 */}\n                <div className='d-flex align-items-center gap-2'>\n                    <div className='bi bi-square-fill fs-5' style={{color: '#E5D8FF'}} />\n                    <div>M2 Paid</div>\n                </div>\n            </div>\n\n            {/* end::Toolbar */}\n\n            {/* end::Header */}\n\n            {/* begin::Body */}\n            <div className='card-body'>\n                {/* begin::Chart */}\n                <div ref={chartRef} id='kt_charts_widget_6_chart' style={{height: '350px'}}></div>\n                {/* end::Chart */}\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport {CommissionBreakdownChart}\n\nfunction getChartOptions(height, graphData) {\n    var months = []\n    var M1 = []\n    var M2 = []\n    var totalE = []\n    let keys = graphData && Object.keys(graphData)\n    months = keys\n    graphData &&\n        Object.keys(graphData).map((keyName, i) => {\n            M1.push(graphData[keyName].m1?.toFixed(2))\n            M2.push(graphData[keyName].m2?.toFixed(2))\n            totalE.push(graphData[keyName].total_earnings?.toFixed(2))\n        })\n    const maxValue = Math.round(Math.max(...totalE, ...M2, ...M1) + 20)\n\n    return {\n        series: [\n            {\n                name: 'Total Earnings',\n                type: 'area',\n                // data: [100, 50, 65, 70, 50, 30, 40, 50, 50 ,30, 20,10],\n                data: totalE,\n            },\n            {\n                name: 'M2',\n                type: 'area',\n                data: M2,\n            },\n            {\n                name: 'M1',\n                type: 'area',\n                data: M1,\n            },\n        ],\n        chart: {\n            fontFamily: 'Manrope',\n            // stacked: true,\n            height: 350,\n            type: 'area',\n            toolbar: {\n                show: true,\n            },\n            zoom: {\n                enabled: true,\n                type: 'xy',\n                autoScaleYaxis: true,\n            },\n        },\n        // plotOptions: {\n        //   bar: {\n        //     horizontal: false,\n        //     borderRadius: 5,\n        //     columnWidth: '12%',\n        //   },\n        // },\n        legend: {\n            show: false,\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            curve: 'straight',\n            show: true,\n            width: 2,\n            colors: ['#00C247', '#7239EA', '#004CE8'],\n        },\n        xaxis: {\n            // categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            categories: months,\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    fontFamily: 'Manrope',\n                    colors: '#9E9E9E',\n                    fontSize: '10px',\n                    fontWeight: '500',\n                },\n            },\n        },\n        yaxis: {\n            max: maxValue,\n            labels: {\n                style: {\n                    fontFamily: 'Manrope',\n                    colors: '#9E9E9E',\n                    fontSize: '10px',\n                    fontWeight: '500',\n                },\n                formatter: function (val) {\n                    return '$' + val?.toFixed(2) + 'K'\n                },\n            },\n        },\n        fill: {\n            // type: 'light',\n            opacity: 1,\n        },\n\n        states: {\n            normal: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            hover: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            active: {\n                allowMultipleDataPointsSelection: false,\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n        },\n        tooltip: {\n            style: {\n                fontSize: '12px',\n            },\n            y: {\n                formatter: function (val) {\n                    return '$' + val\n                },\n            },\n        },\n        colors: ['#00C247', '#7239EA', '#004CE8'],\n        grid: {\n            borderColor: '#E0E0E0',\n            strokeDashArray: 4,\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n            xaxis: {\n                lines: {\n                    show: false,\n                },\n            },\n            padding: {\n                top: 10,\n                right: 20,\n                bottom: 0,\n                left: 20,\n            },\n        },\n    }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useRef } from 'react'\nimport ApexCharts, { ApexOptions } from 'apexcharts'\nimport { getCSS, getCSSVariableValue } from '../../../../../../../_metronic/assets/ts/_utils'\nimport { useThemeMode } from '../../../../../../../_metronic/partials'\n\ntype Props = {\n    className: string\n    chartData: any\n}\n\nconst EarningDonutChart: React.FC<Props> = ({ chartData }) => {\n    const chartRef = useRef<HTMLDivElement | null>(null)\n    const { mode } = useThemeMode()\n    const refreshChart = () => {\n        if (!chartRef?.current) {\n            return\n        }\n\n        const height = parseInt(getCSS(chartRef?.current, 'height'))\n\n        const chart = new ApexCharts(chartRef?.current, getChartOptions(height, chartData))\n        if (chart) {\n            chart.render()\n        }\n\n        return chart\n    }\n\n    useEffect(() => {\n        const chart = refreshChart()\n\n        return () => {\n            if (chart) {\n                chart?.destroy()\n            }\n        }\n    }, [chartRef, chartData])\n\n    return <div ref={chartRef} id='kt_charts_widget_6_chart' className='m-0 p-0'></div>\n}\n\nexport { EarningDonutChart }\n\nfunction getChartOptions(height: number, chartData: any): ApexOptions {\n    const labelColor = getCSSVariableValue('--kt-gray-500')\n    const borderColor = getCSSVariableValue('--kt-gray-200')\n\n    // const baseColor = getCSSVariableValue('--kt-primary')\n    const baseLightColor = getCSSVariableValue('--kt-primary-light')\n    // const secondaryColor = getCSSVariableValue('--kt-info')\n\n    return {\n        series: [chartData?.commission ?? 0, chartData?.overrides ?? 0, chartData?.other_item ?? 0],\n        // series: [300,200,100],\n\n        chart: {\n            type: 'donut',\n            // height: '100%',\n            // width: '100%',\n\n            toolbar: {\n                show: false,\n            },\n        },\n        legend: {\n            show: false,\n        },\n        fill: {\n            colors: ['#63EAC1', '#6078EC', '#FFE16A'],\n        },\n        // markers: {\n        //   colors: ['#63EAC1', '#6078EC', '#FFE16A'],\n        // },\n        dataLabels: {\n            style: {\n                colors: ['balck'],\n            },\n        },\n        // responsive: [\n        //   {\n        //     breakpoint: 480,\n        //     options: {\n        //       chart: {\n        //         width: 250,\n        //       },\n        //     },\n        //   },\n        // ],\n        // plotOptions: {\n        //   bar: {\n        //     horizontal: false,\n        //     borderRadius: 4,\n        //     columnWidth: '20%',\n        //   },\n        // },\n        // legend: {\n        //   show: true,\n        // },\n        // dataLabels: {\n        //   enabled: false,\n        // },\n        stroke: {\n            // curve: 'smooth',\n            show: true,\n            // width: 10,\n            colors: ['transparent'],\n        },\n        // yaxis: {\n        //   // max: 120,\n        //   title: {\n        //     text: 'Earnings in ($)',\n        //     style: {\n        //       fontSize: '10px',\n        //       fontFamily: 'Manrope',\n        //       fontWeight: '700',\n        //       color: '#0D1821',\n        //     },\n        //   },\n        //   labels: {\n        //     style: {\n        //       colors: labelColor,\n        //       fontSize: '12px',\n        //     },\n        //   },\n        // },\n        // fill: {\n        //   opacity: 1,\n        // },\n        // states: {\n        //   normal: {\n        //     filter: {\n        //       type: 'none',\n        //       value: 0,\n        //     },\n        //   },\n        //   hover: {\n        //     filter: {\n        //       type: 'none',\n        //       value: 0,\n        //     },\n        //   },\n        //   active: {\n        //     allowMultipleDataPointsSelection: false,\n        //     filter: {\n        //       type: 'none',\n        //       value: 0,\n        //     },\n        //   },\n        // },\n        // tooltip: {\n        //   style: {\n        //     fontSize: '12px',\n        //   },\n        //   y: {\n        //     formatter: function (val) {\n        //       return '$' + val\n        //     },\n        //   },\n        // },\n        colors: ['balck'],\n        // grid: {\n        //   borderColor: borderColor,\n        //   strokeDashArray: 4,\n        //   yaxis: {\n        //     lines: {\n        //       show: true,\n        //     },\n        //   },\n\n        //   padding: {\n        //     top: 0,\n        //     right: 40,\n        //     bottom: 0,\n        //     left: 40,\n        //   },\n        // },\n    }\n}\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport {formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\n\nconst EarningTable = ({tableData}) => {\n    const companySetting = useSelector(getCompanySettingSelector)\n\n    return (\n        <div>\n            <table\n                className='table text-cmGrey500 w-100'\n                style={{fontWeight: '600', fontSize: '12px'}}\n            >\n                <tbody>\n                    <tr>\n                        <td className='pb-5'>Total Accounts</td>\n                        <td className='pb-5 text-cmBlack' style={{fontFamily: 'Manrope'}}>\n                            {tableData?.total_account}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className='pb-5'>\n                            <span className='px-3 py-0 me-2' style={{backgroundColor: '#63EAC1'}} />\n                            <span>Commission</span>\n                        </td>\n                        <td className='pb-5 text-cmBlack' style={{fontFamily: 'Manrope'}}>\n                            {formattedNumberFields(tableData?.commission, '$')}\n                        </td>\n                    </tr>\n                    {companySetting?.overrides && (\n                        <tr>\n                            <td className='pb-5'>\n                                <span\n                                    className='px-3 py-0 me-2'\n                                    style={{backgroundColor: '#6078EC'}}\n                                />\n                                <span>Overrides</span>\n                            </td>\n                            <td className='pb-5 text-cmBlack' style={{fontFamily: 'Manrope'}}>\n                                {formattedNumberFields(tableData?.overrides, '$')}\n                            </td>\n                        </tr>\n                    )}\n                    <tr>\n                        <td>\n                            <span className='px-3 py-0 me-2' style={{backgroundColor: '#FFE16A'}} />\n                            <span>Other Item</span>\n                        </td>\n                        <td className='text-cmBlack' style={{fontFamily: 'Manrope'}}>\n                            {formattedNumberFields(tableData?.other_item, '$')}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default EarningTable\n\n// import React from 'react'\n// import {useSelector} from 'react-redux'\n// import {getCompanySettingSelector} from '../../../../../../../redux/selectors/SettingsSelectors'\n// import {formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\n\n// const EarningTable = ({tableData}) => {\n//     const companySetting = useSelector(getCompanySettingSelector)\n\n//     return (\n//         <div>\n//             <table\n//                 className='table text-cmGrey500 w-100'\n//                 style={{fontWeight: '600', fontSize: '12px'}}\n//             >\n//                 <tbody>\n//                     {' '}\n//                     {/* Add a tbody element here */}\n//                     <tr>\n//                         <td className='pb-5'>Total Accounts</td>\n//                         <td className='pb-5 text-cmBlack' style={{fontFamily: 'Manrope'}}>\n//                             {tableData?.total_account}\n//                         </td>\n//                     </tr>\n//                     <tr>\n//                         <td className='pb-5'>\n//                             <span className='px-3 py-0' style={{backgroundColor: '#63EAC1'}} />{' '}\n//                             <span>Commission</span>\n//                         </td>\n//                         <td className='pb-5 text-cmBlack' style={{fontFamily: 'Manrope'}}>\n//                             {formattedNumberFields(tableData?.commission, '$')}\n//                         </td>\n//                     </tr>\n//                     {companySetting?.overrides ? (\n//                         <tr>\n//                             <td className='pb-5'>\n//                                 <span className='px-3 py-0' style={{backgroundColor: '#6078EC'}} />{' '}\n//                                 <span>Overrides</span>\n//                             </td>\n//                             <td className='pb-5 text-cmBlack' style={{fontFamily: 'Manrope'}}>\n//                                 {formattedNumberFields(tableData?.overrides, '$')}\n//                             </td>\n//                         </tr>\n//                     ) : null}\n//                     <tr>\n//                         <td className=''>\n//                             <span className='px-3 py-0' style={{backgroundColor: '#FFE16A'}} />{' '}\n//                             <span>Other Item</span>\n//                         </td>\n//                         <td className=' text-cmBlack' style={{fontFamily: 'Manrope'}}>\n//                             {formattedNumberFields(tableData?.other_item, '$')}\n//                         </td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         </div>\n//     )\n// }\n\n// export default EarningTable\n","import React from 'react'\nimport {EarningDonutChart} from './EarningDonutChart'\nimport EarningTable from './EarningTable'\n\nconst EarningsBreakdownCard = ({cardData}) => {\n    return (\n        <div\n            className={`bg-cmwhite my-0 card py-5 px-8 h-md-300px shadow-sm`}\n            style={{\n                borderRadius: '10px',\n                fontSize: '14px',\n                fontWeight: '500',\n                fontFamily: 'Manrope',\n            }}\n        >\n            {/* Begins body */}\n\n            {/* Heading */}\n\n            <div className='text-cmGrey900' style={{fontWeight: '700', fontSize: '16px'}}>\n                Earnings Breakdown\n            </div>\n\n            {/* Data */}\n            <div className=' d-flex align-items-center flex-wrap justify-content-sm-between flex-sm-row flex-column-reverse my-0 p-0'>\n                <div className='w-md-50 w-100 my-sm-0 my-5 border-end'>\n                    <EarningTable tableData={cardData} />\n                </div>\n                <div className='w-md-50 w-100 my-sm-0 my-5 '>\n                    <EarningDonutChart chartData={cardData} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EarningsBreakdownCard\n","import React from 'react'\n\nconst ReconcilliationCommanCard = ({\n    borderColor,\n    heading,\n    Li1,\n    Li1Data,\n    Li2,\n    Li2Data,\n    Li3,\n    Li3Data,\n    Li4,\n    Li4Data,\n    Li5,\n    Li5Data,\n    Li6,\n    Li6Data,\n    TotalDue,\n}) => {\n    return (\n        <div\n            className={`bg-cmwhite my-0 card py-5 px-8 border border-${borderColor} w-100 h-275px shadow-sm`}\n            style={{\n                borderRadius: '10px',\n                fontSize: '14px',\n                fontWeight: '500',\n                fontFamily: 'Manrope',\n            }}\n        >\n            {/* Begins body */}\n\n            {/* Heading */}\n            <div className=' d-flex align-items-center gap-5 mb-5'>\n                <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                    {heading}\n                </div>\n                {/* <div\n          className='text-cminfo text-decoration-underline cursor-pointer'\n          style={{fontWeight: '600'}}\n        >\n          View report\n        </div> */}\n            </div>\n            {/* Data */}\n            <div className='card-body my-0 p-0'>\n                {/* 1 */}\n                <div\n                    className='d-flex align-items-center justify-content-between mb-2 text-cmGrey600'\n                    style={{fontWeight: '600'}}\n                >\n                    <div>{Li1} </div>\n                    <div>{Li1Data}</div>\n                </div>\n                {/* 2 */}\n                <div\n                    className='d-flex align-items-center justify-content-between mb-2 text-cmGrey600'\n                    style={{fontWeight: '600'}}\n                >\n                    <div>{Li2}</div>\n                    <div>{Li2Data}</div>\n                </div>\n                {/* 3 */}\n                <div\n                    className='d-flex align-items-center justify-content-between mb-2 text-cmGrey600'\n                    style={{fontWeight: '600'}}\n                >\n                    <div>{Li3}</div>\n                    <div>{Li3Data}</div>\n                </div>\n                {/* 4 */}\n                <div\n                    className='d-flex align-items-center justify-content-between mb-2 text-cmGrey600'\n                    style={{fontWeight: '600'}}\n                >\n                    <div>{Li4}</div>\n                    <div>{Li4Data}</div>\n                </div>\n                {/* 5 */}\n                <div\n                    className='d-flex align-items-center justify-content-between mb-2 text-cmGrey600'\n                    style={{fontWeight: '600'}}\n                >\n                    <div>{Li5}</div>\n                    <div>{Li5Data}</div>\n                </div>\n                {/* 6 */}\n                <div\n                    className='d-flex align-items-center justify-content-between mb-2 text-cmGrey600'\n                    style={{fontWeight: '600'}}\n                >\n                    <div>{Li6}</div>\n                    <div>{Li6Data}</div>\n                </div>\n            </div>\n            {/* Footer */}\n            <div\n                className='card-footer border-0 my-0 p-0 d-flex justify-content-between align-items-center text-cmblack'\n                style={{fontWeight: '800'}}\n            >\n                <div>Total Due</div>\n                <div className={`${heading == 'Deductions' ? 'text-cmError' : ''}`}>{TotalDue}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default ReconcilliationCommanCard\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../redux/selectors/SettingsSelectors'\nimport {formattedNumberFields} from '../../../../../helpers/CommonHelpers'\n\nconst ReconcilliationsTable = ({tableData}) => {\n    const companySetting = useSelector(getCompanySettingSelector)\n\n    return (\n        <div\n            className='text-cmGrey700'\n            style={{fontFamily: 'Manrope', fontWeight: '600', fontSize: '14px'}}\n        >\n            <div className='table-responsive overflow-auto bg-cmwhite rounded shadow-sm'>\n                <table className='table'>\n                    <thead className='text-center'>\n                        <tr\n                            className='text-cmGrey900 bg-cmGrey300'\n                            style={{\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            <th className='w-auto p-5 text-nowrap'>Payout Summary</th>\n                            <th className='w-auto p-5 text-nowrap'>Total Value</th>\n                            <th className='w-auto p-5'>Paid</th>\n                            <th className='w-auto p-5 text-nowrap'>Held Back</th>\n                            <th className='w-auto p-5 text-nowrap'>Due Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            style={{\n                                fontSize: '14px',\n                                fontFamily: 'Manrope',\n                                fontWeight: '600',\n                            }}\n                            className='text-center text-cmGrey700'\n                        >\n                            <td className='p-5 text-cmBlack' style={{fontWeight: '700'}}>\n                                Commission\n                            </td>\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.commission?.total_value, '$')}\n                            </td>\n\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.commission?.paid, '$')}\n                            </td>\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.commission?.held_back, '$')}\n                            </td>\n                            <td\n                                className={`p-5 text-${\n                                    tableData?.commission?.due_amount < 0 ? 'cmError' : 'cmBlack'\n                                }`}\n                                style={{fontWeight: '700'}}\n                            >\n                                {formattedNumberFields(tableData?.commission?.due_amount, '$')}\n                            </td>\n                        </tr>\n                        {companySetting?.overrides ? (\n                            <tr\n                                style={{\n                                    fontSize: '14px',\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '600',\n                                }}\n                                className='text-center text-cmGrey700 bg-cmGrey100'\n                            >\n                                <td className='p-5 text-cmBlack' style={{fontWeight: '700'}}>\n                                    Overrides\n                                </td>\n                                <td className='p-5'>\n                                    {formattedNumberFields(tableData?.overrides?.total_value, '$')}\n                                </td>\n\n                                <td className='p-5'>\n                                    {formattedNumberFields(tableData?.overrides?.paid, '$')}\n                                </td>\n                                <td className='p-5'>\n                                    {formattedNumberFields(tableData?.overrides?.held_back, '$')}\n                                </td>\n                                <td\n                                    className={`p-5 text-${\n                                        tableData?.overrides?.due_amount < 0 ? 'cmError' : 'cmBlack'\n                                    }`}\n                                    style={{fontWeight: '700'}}\n                                >\n                                    {formattedNumberFields(tableData?.overrides?.due_amount, '$')}\n                                </td>\n                            </tr>\n                        ) : (\n                            <></>\n                        )}\n                        <tr\n                            style={{\n                                fontSize: '14px',\n                                fontFamily: 'Manrope',\n                                fontWeight: '600',\n                            }}\n                            className='text-center text-cmGrey700'\n                        >\n                            <td className='p-5 text-cmBlack' style={{fontWeight: '700'}}>\n                                Other Items\n                            </td>\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.other_item?.total_value, '$')}\n                            </td>\n\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.other_item?.paid, '$')}\n                            </td>\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.other_item?.held_back, '$')}\n                            </td>\n                            <td\n                                className={`p-5 text-${\n                                    tableData?.other_item?.due_amount < 0 ? 'cmError' : 'cmBlack'\n                                }`}\n                                style={{fontWeight: '700'}}\n                            >\n                                {formattedNumberFields(tableData?.other_item?.due_amount, '$')}\n                            </td>\n                        </tr>\n                        <tr\n                            style={{\n                                fontSize: '14px',\n                                fontFamily: 'Manrope',\n                                fontWeight: '600',\n                            }}\n                            className='text-center text-cmGrey700 bg-cmGrey100  '\n                        >\n                            <td className='p-5 text-cmBlack' style={{fontWeight: '700'}}>\n                                Deductions\n                            </td>\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.deduction?.overrides, '$')}\n                            </td>\n\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.deduction?.paid, '$')}\n                            </td>\n                            <td className='p-5'>\n                                {formattedNumberFields(tableData?.deduction?.held_back, '$')}\n                            </td>\n                            <td\n                                className={`p-5 text-${\n                                    tableData?.deduction?.due_amount < 0 ? 'cmError' : 'cmBlack'\n                                }`}\n                                style={{fontWeight: '700'}}\n                            >\n                                {formattedNumberFields(tableData?.deduction?.due_amount, '$')}\n                            </td>\n                        </tr>\n                        <tr className='text-center'>\n                            <td\n                                className='p-5 text-cmBlack'\n                                style={{fontWeight: '700', fontSize: '16px'}}\n                            >\n                                Total Due\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td\n                                className={`p-5 text-${\n                                    tableData?.total_due < 0 ? 'cmError' : 'cmBlack'\n                                }`}\n                                style={{fontWeight: '700', fontSize: '16px'}}\n                            >\n                                {' '}\n                                {formattedNumberFields(tableData?.total_due, '$')}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ReconcilliationsTable\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport ComissionsCard from './components/ComissionsCard'\nimport {CommissionBreakdownChart} from './components/CommissionBreakdownChart'\nimport EarningsBreakdownCard from './components/earningCard/EarningsBreakdownCard'\nimport ReconcilliationCommanCard from './components/ReconcilliationCommanCard'\nimport ReconcilliationsTable from './ReconcilliationsTable'\nimport {getReconcilliationReportService} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\n\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getCompanyReconciliationAction} from '../../../../../redux/actions/SettingActions'\nimport {\n    getCompanySettingSelector,\n    getPositionSettingSelector,\n    getReconciliationScheduleSelector,\n} from '../../../../../redux/selectors/SettingsSelectors'\nimport {getValidDate} from '../../../../../constants/constants'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {formattedNumberFields} from '../../../../../helpers/CommonHelpers'\n\nconst ReconciliationPage = () => {\n    const [reportData, setReportData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const reconciliationSchedule = useSelector(getReconciliationScheduleSelector)\n    const dispatch = useDispatch()\n    const positionSetting = useSelector(getPositionSettingSelector)\n    const companySetting = useSelector(getCompanySettingSelector)\n    const [selectedReconPeriod, setReconPeriod] = useState(null)\n\n    useEffect(() => {\n        dispatch(getCompanyReconciliationAction())\n        handleSetCurrentRecon()\n    }, [])\n    useEffect(() => {\n        if (selectedReconPeriod) {\n            setLoading(true)\n            const body = {\n                start_date: selectedReconPeriod?.period_from,\n                end_date: selectedReconPeriod?.period_to,\n            }\n            getReconcilliationReportService(body)\n                .then((res) => {\n                    setReportData(res.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [selectedReconPeriod])\n\n    const handleSetCurrentRecon = useCallback(() => {\n        let data = reconciliationSchedule?.find(\n            (item) =>\n                getValidDate(item?.period_from, 'YYYY-MM-DD 00:00', true) <=\n                    getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) &&\n                getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) <=\n                    getValidDate(item?.period_to, 'YYYY-MM-DD 00:00', true)\n        )\n        setReconPeriod(data)\n    }, [reconciliationSchedule])\n\n    const periodChange = (e) => {\n        setLoading(true)\n        const selectedData = reconciliationSchedule?.filter((item) => e.target.value == item.id)\n        setReconPeriod(selectedData?.[0])\n    }\n\n    const periodList = useMemo(() => {\n        return reconciliationSchedule?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.period_from)} - ${getValidDate(item?.period_to)}`,\n            // periodValue: `${item?.period_from} , ${item?.period_to}`,\n        }))\n    })\n\n    return (\n        <div\n            style={{fontWeight: 'Manrope', fontSize: '14px', position: 'relative'}}\n            // className='w-sm-1000px w-100'\n        >\n            <CustomLoader full visible={loading} />\n\n            {/* Top Header */}\n            <div\n                className='bg-cmwhite py-5 px-10 d-flex flex-wrap align-items-center mb-10'\n                style={{\n                    borderRadius: '0px 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div\n                    className='text-cmGrey700 d-flex mr-2'\n                    style={{fontWeight: '600', marginRight: '10px'}}\n                >\n                    Your accounts serviced through\n                </div>\n                <div>\n                    <CustomDropdown\n                        onChange={periodChange}\n                        name='status'\n                        valueKey={'id'}\n                        displayKey='period'\n                        options={periodList}\n                        value={selectedReconPeriod?.id}\n                        showClear={false}\n                    />\n                </div>\n                {/* <div className='btn bg-cmGrey100 text-cmGrey600 mx-sm-0 mx-auto mt-sm-0 mt-3'>\n          <span className='bi bi-funnel fs-5 text-cmGrey600 me-2' />\n          Filter\n        </div> */}\n            </div>\n            {/* Chart */}\n            <div className='mb-10'>\n                <CommissionBreakdownChart graphData={reportData?.graph} />\n            </div>\n            {/* Donut and card */}\n            <div className='row align-items-start gap-10 justify-content-between mb-10'>\n                <div className='col-sm'>\n                    <EarningsBreakdownCard cardData={reportData?.earning_break_down} />\n                </div>\n                <div className='col-sm'>\n                    <ComissionsCard cardData={reportData?.commission} />\n                </div>\n            </div>\n\n            {/* Card */}\n            <div className='row align-items-center gap-10 justify-content-between mb-10'>\n                {companySetting?.overrides ? (\n                    <div className='col-sm'>\n                        <ReconcilliationCommanCard\n                            borderColor={'cmBlue-Crayola'}\n                            heading={'Overrides'}\n                            Li1={'Total Earned'}\n                            Li1Data={'$' + reportData?.overrides.total_earnings?.toFixed(2)}\n                            Li2={positionSetting?.direct_overrides_status ? 'Direct' : ''}\n                            Li2Data={\n                                positionSetting?.direct_overrides_status\n                                    ? '$' + reportData?.overrides?.direct?.toFixed(2)\n                                    : ''\n                            }\n                            Li3={positionSetting?.indirect_overrides_status ? 'Indirect' : ''}\n                            Li3Data={\n                                positionSetting?.indirect_overrides_status\n                                    ? '$' + reportData?.overrides?.indirect?.toFixed(2)\n                                    : ''\n                            }\n                            Li4={positionSetting?.office_overrides_status ? 'Office' : ''}\n                            Li4Data={\n                                positionSetting?.office_overrides_status\n                                    ? '$' + reportData?.overrides?.offece?.toFixed(2)\n                                    : ''\n                            }\n                            TotalDue={'$' + reportData?.overrides?.total_due?.toFixed(2)}\n                        />{' '}\n                    </div>\n                ) : (\n                    <></>\n                )}\n                <div className='col-sm'>\n                    <ReconcilliationCommanCard\n                        borderColor={'cmYellow'}\n                        heading={'Other Items'}\n                        Li1={'Reimbursements '}\n                        Li1Data={'$' + reportData?.other_item?.reimbursements?.toFixed(2)}\n                        Li2={'Incentives '}\n                        Li2Data={'$' + reportData?.other_item?.incentives}\n                        Li3={'Miscellaneous'}\n                        Li3Data={'$' + reportData?.other_item?.miscellaneous}\n                        Li4={'Travel'}\n                        Li4Data={'$' + reportData?.other_item?.travel}\n                        Li5={'Rent Earned'}\n                        Li5Data={'$' + reportData?.other_item?.rent}\n                        Li6={'Sign on Bonus Earned'}\n                        Li6Data={formattedNumberFields(reportData?.other_item?.bonus, '$')}\n                        TotalDue={'$' + reportData?.other_item?.total_due}\n                    />\n                </div>\n                <div className='col-sm'>\n                    <ReconcilliationCommanCard\n                        borderColor='cmError border-opacity-75'\n                        heading={'Deductions'}\n                        q\n                        Li1={'Rent'}\n                        Li1Data={'$' + reportData?.deductions?.rent}\n                        Li2={'Sign on Bonus '}\n                        Li2Data={'$' + reportData?.deductions?.sign_on_bonus}\n                        Li3={'Travel'}\n                        Li3Data={reportData?.deductions?.travel}\n                        Li4={'Phone Bill'}\n                        Li4Data={'$' + reportData?.deductions?.phone_bill}\n                        TotalDue={'$' + reportData?.deductions?.total_due}\n                    />\n                </div>\n            </div>\n            <div>\n                <ReconcilliationsTable tableData={reportData?.payout_summary} />\n            </div>\n        </div>\n    )\n}\n\nexport default ReconciliationPage\n","import React, {useCallback, useMemo} from 'react'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {useSelector} from 'react-redux'\nimport {getPositionsSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport {displayfilterCounts} from '../../../../helpers/CommonHelpers'\n\nconst FILTER_KEYS = {\n    installer: 'installer_filter',\n    status: 'status_filter',\n    dateWith: 'date_filter',\n}\n\nconst SalesReportFilter = ({initialFilter = null, onApplyFilter = null, resetFilter = null}) => {\n    const [filterProps, filterData, setFilterData] = useFilterButton(initialFilter, onApplyFilter)\n    const positionList = useSelector(getPositionsSelector)\n    const ACCOUNT_WITH = [\n        {name: 'M1 Date', value: 'm1_date'},\n        {name: 'M2 Date', value: 'm2_date'},\n        {name: 'M1 & M2 Date', value: 'm1_date_m2_date'},\n        {name: 'Cancel Date', value: 'cancel_date'},\n    ]\n    const STATUS = [\n        {name: 'Installed', value: ''},\n        {name: 'Permits', value: ''},\n        {name: 'Site Survey', value: ''},\n        {name: 'PTO', value: ''},\n    ]\n    const INSTALLER = [{name: 'LGYC', value: 'LGYC'}]\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n\n    const resetFilterData = useCallback(() => {\n        setFilterData(initialFilter)\n        resetFilter()\n    }, [filterData])\n\n    return (\n        <CustomFilterButton {...filterProps} filterData={filterData} onResetClick={resetFilterData}>\n            {/* Position */}\n            <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Installer'}\n                    value={filterData?.[FILTER_KEYS.installer]}\n                    name={FILTER_KEYS.installer}\n                    onChange={onChangeInputData}\n                    options={INSTALLER}\n                />\n            </div>\n            {/* Net pay (Payroll) */}\n            {/* <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Status'}\n                    value={filterData?.[FILTER_KEYS.status]}\n                    name={FILTER_KEYS.status}\n                    onChange={onChangeInputData}\n                    options={STATUS}\n                />\n            </div> */}\n            <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Show Accounts With'}\n                    value={filterData?.[FILTER_KEYS.dateWith]}\n                    name={FILTER_KEYS.dateWith}\n                    onChange={onChangeInputData}\n                    options={ACCOUNT_WITH}\n                />\n            </div>\n        </CustomFilterButton>\n    )\n}\n\nexport default SalesReportFilter\n","import {useState, useEffect} from 'react'\n\nimport {toAbsoluteUrl} from '../../../../../../../_metronic/helpers'\nimport clsx from 'clsx'\n\nimport Pagination from '../../../../../../../app/modules/admin/sequidocs/component/Pagination'\nimport {Item1} from '../../../../../../../_metronic/partials/content/activity/Item1'\n// import ViewCostomer from './ViewCostomer'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport ViewCostomer from '../../../../../admin/reports/component/sales/ViewCostomer'\nimport {formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\nimport {Link} from 'react-router-dom'\nimport SalesReportFilter from '../../../../../admin/filters/salesReportFilter'\nimport {salesReportFilterService} from '../../../../../../../services/Services'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {getValidDate} from '../../../../../../../constants/constants'\nimport {CustomSortSvg} from '../../../../../../../_metronic/helpers/components/CustomSortSVG'\nconst initialFilter = {\n    status_filter: '',\n    installer_filter: '',\n    date_filter: '',\n}\nconst MySalesCustomerInfo = ({\n    reportData,\n    onSearchChange,\n    loading,\n    headerFilterChnage,\n    onPageChange,\n    activePage,\n    applyFilter,\n    resetFilter,\n    onPress,\n    sortValue,\n    sortingOrder,\n}) => {\n    const [modalOpen, setModalOpen] = useState(false)\n    const [selectedId, setSelectedId] = useState(null)\n    const [btn, setBtn] = useState(false)\n    const [tableData, setTableData] = useState(null)\n    const [search, setSearch] = useState('')\n\n    useEffect(() => {\n        setTableData(reportData)\n    })\n    const handleSearchChange = (e) => {\n        setSearch(e.target.value)\n        onSearchChange(e.target.value)\n    }\n\n    return (\n        <>\n            <div\n                className={`card shadow mt-7`}\n                style={{fontFamily: 'Manrope', borderRadius: '10px'}}\n            >\n                <CustomLoader full visible={loading} />\n                <div className='card-body py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className=' mt-4 mx-sm-7 mb-3 d-sm-flex flex-wrap justify-content-between align-items-center'>\n                            {/* customer info */}\n                            <div\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '700',\n                                    fontSize: '17px',\n                                }}\n                                className='mx-sm-0 ps-sm-0 ps-5 text-cmGrey900'\n                            >\n                                Customer Info\n                            </div>\n                            <div className='d-flex gap-10 flex-wrap align-items-center'>\n                                {/* Search form */}\n                                <div\n                                    style={{borderRadius: '20px'}}\n                                    className='w-md-300px w-75 mx-sm-0 mx-auto mb-1'\n                                >\n                                    <form\n                                        className='position-relative'\n                                        style={{borderRadius: '90px'}}\n                                        autoComplete='off'\n                                    >\n                                        {/* Customer Info table Search Input */}\n                                        <CustomInput\n                                            type={INPUT_TYPE.search}\n                                            name='search'\n                                            onChange={handleSearchChange}\n                                            value={search}\n                                        />\n                                    </form>\n                                </div>\n                                <SalesReportFilter\n                                    initialFilter={initialFilter}\n                                    onApplyFilter={(updatedFilter) => {\n                                        setSearch('')\n                                        applyFilter(updatedFilter)\n                                    }}\n                                    resetFilter={resetFilter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className=' text-cmGrey800 bg-cmGrey300'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '800',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>PID</th>\n                                    <th className='text-nowrap p-5'>Installer</th>\n                                    <th className='text-nowrap p-5'>Customer</th>\n                                    <th className='text-nowrap p-5'>State</th>\n                                    <th className='text-nowrap p-5'>Closer</th>\n                                    <th className='text-nowrap p-5'>Setter</th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            KW\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'kw' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('kw')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>Status</th>\n                                    <th className='text-nowrap p-5'>Cancel</th>\n                                    <th className='text-nowrap p-5'>M1</th>\n                                    <th className='text-nowrap p-5'>M2</th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Adders\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'adders' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('adders')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            EPC\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'epc' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('epc')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5 text-nowrap'>\n                                        <div className='d-flex'>\n                                            Net EPC\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'net_epc' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('net_epc')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>Dealer Fee % | $</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tableData?.data?.length > 0 ? (\n                                    <>\n                                        {tableData?.data?.map((item, i) => (\n                                            <tr\n                                                key={item?.pid}\n                                                className={`${\n                                                    (i + 1) % 2 === 0 ? 'bg-cmbg' : ''\n                                                } text-cmGrey700`}\n                                                style={{\n                                                    fontWeight: '500',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                <td className='p-5 text-nowrap text-cmGrey800'>\n                                                    {item?.pid}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.installer}\n                                                </td>\n\n                                                <td\n                                                    className='p-5 text-nowrap text-decoration-underline engage-demos-toggle cursor-pointer'\n                                                    id='kt_engage_demos_toggle2'\n                                                    data-bs-placement='left'\n                                                    data-bs-dismiss='click'\n                                                    data-bs-trigger='hover'\n                                                    style={{fontWeight: '600'}}\n                                                    onClick={() => {\n                                                        setModalOpen(true)\n                                                        setSelectedId({\n                                                            id: item?.pid,\n                                                            name: item?.customer_name,\n                                                        })\n                                                    }}\n                                                >\n                                                    {item?.customer_name}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>{item?.state}</td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.closer ?? '-'}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>{item?.setter}</td>\n\n                                                <td className='p-5 text-nowrap'>{item?.kw}</td>\n\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.status ?? '-'}\n                                                </td>\n                                                <td className='p-5 text-nowrap text-cmError'>\n                                                    {getValidDate(item?.date_cancelled ?? '-')}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.m1_date == null\n                                                        ? '-'\n                                                        : getValidDate(item?.m1_date)}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {getValidDate(item?.m2_date)}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {formattedNumberFields(item?.adders, '$')}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {formattedNumberFields(item?.epc, '')}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {formattedNumberFields(item?.net_epc, '')}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    <span>\n                                                        {item?.dealer_fee_percentage\n                                                            ? formattedNumberFields(\n                                                                  item?.dealer_fee_percentage,\n                                                                  '%'\n                                                              )\n                                                            : null}\n                                                        | {formattedNumberFields(item?.dealer_fee)}\n                                                    </span>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={15}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                    {tableData?.data?.length > 0 ? (\n                        <Pagination\n                            page={activePage && activePage}\n                            totalPages={tableData?.last_page}\n                            setPage={(changedPage) => onPageChange(changedPage)}\n                        />\n                    ) : null}\n                </div>\n            </div>\n            <ViewCostomer open={modalOpen} onClose={() => setModalOpen(false)} id={selectedId} />\n        </>\n    )\n}\n\nexport default MySalesCustomerInfo\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useMemo, useRef, useState} from 'react'\nimport ApexCharts, {ApexOptions} from 'apexcharts'\nimport {getCSS, getCSSVariableValue} from '../../../../../_metronic/assets/ts/_utils'\nimport {useThemeMode} from '../../../../../_metronic/partials'\nimport {array} from 'yup'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport CustomRadioButton from '../../../../../customComponents/customRadioButton/CustomRadioButton'\n\n// type Props = {\n//   className: string\n//   chartData: any\n//   selectedKWType: any\n//   setSelectedKWType: any\n//   yAxis: any\n// }\n\nconst SalesChart = ({className, chartData, selectedKWType, setSelectedKWType}) => {\n    const chartRef = useRef(null)\n    const {mode} = useThemeMode()\n    const [kw_installColor, setKw_InstallColor] = useState('#FFE16A')\n\n    const refreshChart = () => {\n        if (!chartRef.current) {\n            return\n        }\n\n        const height = parseInt(getCSS(chartRef.current, 'height'))\n\n        const chart = new ApexCharts(\n            chartRef.current,\n            getChartOptions(height, chartData, kw_installColor, selectedKWType)\n        )\n        if (chart) {\n            chart.render()\n        }\n\n        return chart\n    }\n    useEffect(() => {}, [chartData])\n    useEffect(() => {\n        const chart = refreshChart()\n\n        return () => {\n            if (chart) {\n                chart.destroy()\n            }\n        }\n    }, [chartRef, chartData])\n\n    return (\n        <div\n            className={`bg-cmwhite ${className} shadow-sm`}\n            style={{fontFamily: 'Manrope', borderRadius: '10px ', position: 'relative'}}\n        >\n            {/* begin::Header */}\n            <div className='d-flex justify-content-between flex-wrap align-items-center pt-5 ps-5'>\n                <div className='text-cmGrey900 ' style={{fontWeight: '700', fontSize: '16px'}}>\n                    Sales\n                </div>\n                {/* Selctions */}\n                <div className='d-flex gap-10 align-items-center' style={{position: 'relative'}}>\n                    <CustomRadioButton\n                        childClass='d-flex gap-2 align-items-center'\n                        value={'sold'}\n                        name={'sold'}\n                        handleChange={() => {\n                            setSelectedKWType('sold')\n                            setKw_InstallColor('#FFE16A')\n                        }}\n                        isChecked={selectedKWType == 'sold'}\n                    >\n                        <div className='rounded-pill px-3 badge text-cmYellow bg-cmYellow'>.</div>\n                        <div\n                            className='text-cmGrey500'\n                            style={{fontWeight: '600', fontSize: '12px', fontFamily: 'Manrope'}}\n                        >\n                            KW Sold\n                        </div>\n                    </CustomRadioButton>\n                    <CustomRadioButton\n                        childClass='d-flex gap-2 align-items-center'\n                        value={'install'}\n                        name={'install'}\n                        handleChange={() => {\n                            setSelectedKWType('install')\n                            setKw_InstallColor('#FFB03A')\n                        }}\n                        isChecked={selectedKWType == 'install'}\n                    >\n                        <div className='rounded-pill px-3 badge text-cmOrange bg-cmOrange'>.</div>\n                        <div\n                            className='text-cmGrey500'\n                            style={{fontWeight: '600', fontSize: '12px', fontFamily: 'Manrope'}}\n                        >\n                            KW Installed\n                        </div>\n                    </CustomRadioButton>\n                </div>\n                <div></div>\n            </div>\n            {/* Selctions */}\n\n            {/* end::Header */}\n\n            {/* begin::Body */}\n            <div className='card-body'>\n                {/* begin::Chart */}\n                <div ref={chartRef} id='kt_charts_widget_6_chart'></div>\n                {/* end::Chart */}\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport {SalesChart}\n\nfunction getChartOptions(height, chartData, kw_installColor, selectedKWType) {\n    const labelColor = '#9E9E9E'\n    const borderColor = getCSSVariableValue('--kt-gray-200')\n    //\n\n    const baseColor = '#FFE16A'\n    const baseLightColor = getCSSVariableValue('--kt-primary-light')\n    const secondaryColor = getCSSVariableValue('--kt-info')\n    var m1Arr = []\n    var m2Arr = []\n    var clawArr = []\n    var dateArr = []\n    var kwArr = []\n\n    chartData?.map((item) => {\n        m1Arr.push(item?.m1_account?.toFixed(2) ?? 0)\n        m2Arr.push(item?.m2_account?.toFixed(2) ?? 0)\n        clawArr.push(item?.claw_back?.toFixed(2) ?? 0)\n        kwArr.push(item?.total_kw?.toFixed(2) ?? 0)\n\n        // var dateDay = new Date(item.date).toLocaleString('en-us', { day: 'numeric' })\n        // var dateMonth = new Date(item.date).toLocaleString('en-us', { month: 'short' })\n        // let finalDate = dateDay + dateMonth\n        const finalItem = item?.date?.split(' ')\n        if (finalItem?.length > 1) dateArr.push(finalItem)\n        else dateArr.push(finalItem?.[0])\n    })\n    const maxValue = Math.max(...m1Arr, ...clawArr, ...m2Arr) + 20\n\n    return {\n        series: [\n            {\n                name: 'M1',\n                type: 'line',\n                // data: [10, 20, 30, 40, 50, 60, 70, 200, 90, 100, 110, 50],\n                data: m1Arr,\n            },\n            {\n                name: 'M2',\n                type: 'line',\n                data: m2Arr,\n                // data: [10, 20, 30, 40, 50, 60, 70, 200, 90, 100, 110, 50],\n            },\n            {\n                name: 'Clawback',\n                type: 'line',\n                data: clawArr,\n                // data: [10, 20, 30, 40, 50, 60, 70, 200, 90, 100, 110, 50],\n            },\n            {\n                name: `${selectedKWType == 'sold' ? 'KW Sold' : 'KW Installed'}`,\n                type: 'bar',\n                data: kwArr,\n            },\n        ],\n        chart: {\n            fontFamily: 'inherit',\n            stacked: false,\n            height: 350,\n            toolbar: {\n                show: true,\n            },\n            zoom: {\n                enabled: true,\n                type: 'xy',\n                autoScaleYaxis: true,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                borderRadius: 5,\n                columnWidth: '12%',\n            },\n        },\n        legend: {\n            show: true,\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            // curve: 'smooth',\n            show: true,\n            width: 2,\n            // colors: ['#000', '#6078EC', '#5DB887', '#FE679D'],\n        },\n        xaxis: {\n            categories: dateArr,\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                rotate: 0,\n                style: {\n                    colors: labelColor,\n                    fontSize: '12px',\n                },\n            },\n        },\n        yaxis: [\n            {\n                seriesName: 'M1',\n                show: true,\n                title: {\n                    text: 'Accounts',\n                    style: {\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '12px',\n                        color: '#0D1821',\n                    },\n                },\n                max: maxValue,\n                min: 0,\n                labels: {\n                    formatter: function (val) {\n                        return val.toFixed(0)\n                    },\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px',\n                    },\n                },\n            },\n\n            {\n                seriesName: 'M2',\n                show: false,\n                title: {\n                    text: 'Accounts',\n                    style: {\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '12px',\n                        color: '#0D1821',\n                    },\n                },\n                max: maxValue,\n                min: 0,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '500',\n                    },\n                },\n            },\n\n            {\n                seriesName: 'Clawback',\n                show: false,\n                max: maxValue,\n                min: 0,\n                title: {\n                    text: 'Accounts',\n                    style: {\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '12px',\n                        color: '#0D1821',\n                    },\n                },\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '500',\n                    },\n                },\n            },\n\n            {\n                seriesName: 'KW Sold',\n                opposite: true,\n                show: true,\n                title: {\n                    text: `${selectedKWType == 'sold' ? 'KW Sold' : 'KW Installed'}`,\n                    style: {\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '12px',\n                        color: '#0D1821',\n                    },\n                },\n                labels: {\n                    formatter: function (val) {\n                        return val.toFixed(0)\n                    },\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '500',\n                    },\n                },\n            },\n        ],\n\n        fill: {\n            opacity: 1,\n        },\n\n        states: {\n            normal: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            hover: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            active: {\n                allowMultipleDataPointsSelection: false,\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n        },\n        tooltip: {\n            style: {\n                fontSize: '12px',\n            },\n            y: {\n                formatter: function (val) {\n                    return val\n                },\n            },\n        },\n        // colors: [baseColor, secondaryColor, baseLightColor],\n        colors: ['#6078EC', '#00C247', '#FE679D', kw_installColor],\n        grid: {\n            borderColor: borderColor,\n            strokeDashArray: 4,\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n            padding: {\n                top: 10,\n                right: 50,\n                bottom: 10,\n                left: 50,\n            },\n        },\n    }\n}\n","import {Doughnut} from 'react-chartjs-2'\nimport {Chart, ArcElement} from 'chart.js'\n\nChart.register(ArcElement)\n\n// const textCenter = {\n//   id: 'textCenter',\n//   beforeDatasetsDraw(chart, args, pluginOptions) {\n//     const {ctx, data} = chart\n//     ctx.save()\n//     ctx.font = 'bolder 30px'\n//     ctx.fillStyle = 'red'\n//     ctx.fillText('text', chart.getDatasetMeta(0).data[0].x)\n//   },\n// }\n\nconst SalesDonutChart = ({accData}) => {\n    const data = {\n        datasets: [\n            {\n                // data: [40, 20, 10, 20],\n                data: [\n                    accData?.m2_complete,\n                    accData?.m2_pending,\n                    accData?.cancelled,\n                    accData?.clawback,\n                ],\n                backgroundColor: ['#6078EC', '#50CD89', '#90CAF4', '#FFE16A'],\n                display: true,\n                borderColor: ['#6078EC', '#50CD89', '#90CAF4', '#FFE16A'],\n            },\n        ],\n    }\n    return (\n        <div className='bg-white w-100 py-3 shadow m-0' style={{borderRadius: '10px'}}>\n            <div\n                className='mb-5 ms-3'\n                style={{fontSize: '14px', fontWeight: '500', color: '#757575'}}\n            >\n                Accounts\n            </div>\n\n            <div className=' mx-auto mb-0 px-10 w-200px ' style={{marginTop: '-35px'}}>\n                <Doughnut\n                    //   width={150}\n                    data={data}\n                    options={{\n                        plugins: {\n                            legend: {\n                                display: false,\n                            },\n                            tooltip: {\n                                enabled: false,\n                            },\n                        },\n                        rotation: -90,\n                        circumference: 180,\n                        cutout: '80%',\n                        maintainAspectRatio: true,\n                        responsive: true,\n                    }}\n                    // plugins={[textCenter]}\n                />\n            </div>\n\n            <div\n                style={{\n                    position: 'relative',\n                    top: '-20%',\n                    left: '50%',\n                    transform: 'translate(-50%, -150%)',\n                    textAlign: 'center',\n                }}\n            >\n                <div\n                    style={{\n                        color: '#9E9E9E',\n                        fontSize: '10px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '500',\n                    }}\n                >\n                    Total Sales\n                </div>\n                <div style={{color: '#0D1821', fontSize: '18px', fontWeight: '700'}}>\n                    {accData?.total_sales}\n                </div>\n            </div>\n            <div style={{marginTop: '-55px'}} className=''>\n                <hr />\n                <div className='    '>\n                    {/* First line */}\n                    <div className='d-flex justify-content-between gap-5 pb-2 px-4'>\n                        <div className='d-flex align-items-center'>\n                            <div\n                                className='bullet rounded-circle-2 py-2 px-2'\n                                style={{backgroundColor: '#6078EC'}}\n                            />\n                            <div style={{color: '#757575', fontWeight: '500'}} className='mx-1'>\n                                M2 complete\n                            </div>\n                            <div style={{color: '#0D1821', fontWeight: '700'}}>\n                                {accData?.m2_complete}\n                            </div>\n                        </div>\n                        <div className='d-flex align-items-center'>\n                            <div\n                                className='bullet rounded-circle-2 py-2 px-2'\n                                style={{backgroundColor: '#50CD89'}}\n                            />\n                            <div style={{color: '#757575', fontWeight: '500'}} className='mx-1'>\n                                M2 Pending\n                            </div>\n                            <div style={{color: '#0D1821', fontWeight: '700'}}>\n                                {accData?.m2_pending}\n                            </div>\n                        </div>\n                    </div>\n                    {/* second line */}\n                    <div className='d-flex justify-content-between gap-5 pt-2 px-4'>\n                        <div className='d-flex align-items-center'>\n                            <div\n                                className='bullet rounded-circle-2 py-2 px-2'\n                                style={{backgroundColor: '#90CAF4'}}\n                            />\n                            <div style={{color: '#757575', fontWeight: '500'}} className='mx-1'>\n                                Cancelled\n                            </div>\n                            <div style={{color: '#0D1821', fontWeight: '700'}}>\n                                {accData?.cancelled}\n                            </div>\n                        </div>\n                        <div className='d-flex align-items-center'>\n                            <div\n                                className='bullet rounded-circle-2 py-2 px-2'\n                                style={{backgroundColor: '#FE679D'}}\n                            />\n                            <div style={{color: '#757575', fontWeight: '500'}} className='mx-1'>\n                                Clawback\n                            </div>\n                            <div style={{color: '#0D1821', fontWeight: '700'}}>\n                                {accData?.clawback}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default SalesDonutChart\n","import {Doughnut} from 'react-chartjs-2'\nimport {Chart, ArcElement} from 'chart.js'\nimport {useState, useEffect} from 'react'\nimport {formattedNumberFields} from '../../../../../helpers/CommonHelpers'\n\nChart.register(ArcElement)\n\nconst SalesInstallRatioDonutChart = (props) => {\n    useEffect(() => {\n        //  install = props?.ratioData?.install?.replace(\"%\",\"\")\n        //  unInstall = props?.ratioData?.uninstall?.replace(\"%\",\"\")\n    })\n    const data = {\n        datasets: [\n            {\n                data: [props?.b, props?.a],\n                backgroundColor: ['rgba(96, 120, 236, 0.2)', '#6078EC'],\n                display: true,\n                borderColor: ['rgba(96, 120, 236, 0.2)', '#6078EC'],\n            },\n        ],\n    }\n\n    return (\n        <div\n            className='bg-white h-100 py-3 shadow w-auto px-10'\n            style={{fontFamily: 'Manrope', borderRadius: '10px'}}\n        >\n            <div\n                className=' text-center mb-5 text-cmGrey800'\n                style={{fontSize: '14px', fontWeight: '600', fontFamily: 'Manrope'}}\n            >\n                Install Ratio\n            </div>\n            <div className='w-100px h-100px mx-auto'>\n                <Doughnut\n                    data={data}\n                    options={{\n                        plugins: {\n                            legend: {\n                                display: false,\n                            },\n                            tooltip: {\n                                enabled: false,\n                            },\n                        },\n                        rotation: 90,\n                        circumference: 360,\n                        cutout: '88%',\n                        maintainAspectRatio: true,\n                        responsive: true,\n                    }}\n                />\n            </div>\n            <div\n                style={{\n                    position: 'relative',\n                    top: '-1%',\n                    left: '50%',\n                    transform: 'translate(-50%, -230%)',\n                    textAlign: 'center',\n                }}\n            >\n                <div style={{color: '#0D1821', fontSize: '17px', fontWeight: 'bold'}}>\n                    {formattedNumberFields(props?.a, '')}%\n                </div>\n            </div>\n            <div className='d-flex flex-column gap-2 align-items-center my-0 fw-normal'>\n                <div\n                    className='d-flex align-items-center'\n                    style={{color: '#757575', fontSize: '12px', marginTop: '-15px'}}\n                >\n                    <span\n                        className='bullet rounded-circle-2 me-1 py-2 px-2'\n                        style={{backgroundColor: '#6078EC'}}\n                    />\n                    Installed Accounts\n                </div>\n                <div\n                    className='d-flex align-items-center'\n                    style={{color: '#757575', fontSize: '12px'}}\n                >\n                    <span\n                        className='bullet rounded-circle-2 me-1 py-2 px-2'\n                        style={{backgroundColor: '#DFE4FB'}}\n                    />\n                    Uninstalled Accounts\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default SalesInstallRatioDonutChart\n","const SalesTopCards = ({\n    className,\n    description,\n    icon,\n    stats,\n    labelColor,\n    textColor,\n    borderColor,\n    background,\n    heading,\n    content,\n}) => (\n    <div\n        className={`card card-flush ${className} border py-8 ps-5 shadow-sm`}\n        style={{\n            background: background,\n        }}\n    >\n        <div style={{color: '#212121', fontFamily: 'Manrope', fontWeight: '700'}}>{heading}</div>\n        <div\n            style={{\n                color: '#424242',\n                fontFamily: 'Manrope',\n                fontWeight: '600',\n                fontStyle: 'normal',\n                fontSize: '14px',\n            }}\n        >\n            {content}\n        </div>\n    </div>\n)\nexport {SalesTopCards}\n","import React, {useState, useEffect, useCallback} from 'react'\nimport MySalesCustomerInfo from '../../Setting/components/SetupCard/backendCard/MySalesCustomerInfo'\nimport CustomReportsHeader from '../customs/CustomReportsHeader'\nimport {SalesChart} from './SalesChart'\nimport SalesDonutChart from './SalesDonutChart'\nimport SalesInstallRatioDonutChart from './SalesInstallRatioDonutChart'\nimport {SalesRevenueChart} from './SalesRevenueChart'\nimport {SalesTopCards} from './SalesTopCards'\n\nimport {\n    getSalesGraphService,\n    getSalesAccountAndInstallRatioGraphService,\n    getSalesReportService,\n    officeBYUserIDSerices,\n    salesReportFilterService,\n} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport debounce from 'lodash.debounce'\nimport moment from 'moment'\nimport useOfficeLocation from '../../../../../hooks/useOfficeLocation'\nimport {downloadAnyFileHelper} from '../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nconst initialFilter = {\n    status_filter: '',\n    installer_filter: '',\n    date_filter: '',\n}\n\nconst SalesReport = () => {\n    const [reportData, setSalesReportData] = useState(null)\n    const [chartData, setSalesChartData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [tableLoading, setTableLoading] = useState(false)\n    const [stateList, selectedLocation, setSelectedLocation] = useOfficeLocation()\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [filter, setFilter] = useState('this_year')\n    const [page, setPage] = useState(1)\n    const [ratioGraphData, setRatioGraphData] = useState(null)\n    const [selectedKWType, setSelectedKWType] = useState('sold')\n    const [userByOfficeData, setUserByOffceData] = useState([])\n    const [repId, setRepId] = useState(null)\n    const [isExport, setIsExport] = useState(0)\n    const [filterData, setFilterData] = useState(initialFilter)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        const body = {\n            office_id: selectedLocation,\n            filter: filter,\n            page: page,\n            kw_type: selectedKWType,\n            user_id: repId,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        }\n        if (filter == 'custom' && moment(startDate).isValid() && moment(endDate).isValid()) {\n            body.start_date = startDate\n            body.end_date = endDate\n        }\n        if (\n            selectedLocation &&\n            (filter != 'custom' ||\n                (filter == 'custom' &&\n                    moment(startDate).isValid() &&\n                    moment(endDate).isValid() &&\n                    startDate <= endDate))\n        ) {\n            setLoading(true)\n            //   getSalesGraphService(body).then((res) => {\n            //     setSalesData(res.data)\n            //   })\n            getSalesGraphService(body)\n                .then((res) => {\n                    setSalesChartData(res.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n            getSalesAccountAndInstallRatioGraphService(body).then((res) => {\n                setRatioGraphData(res.data)\n            })\n        }\n    }, [\n        filter,\n        selectedLocation,\n        endDate,\n        startDate,\n        selectedKWType,\n        repId,\n        sortValue,\n        sortingOrder,\n    ])\n    useEffect(() => {\n        officeBYUserIDSerices(selectedLocation).then((res) => {\n            const modifiedRes = res?.data?.map((item) => ({\n                ...item,\n                name: `${item?.first_name} ${item?.last_name}`,\n            }))\n            setUserByOffceData(modifiedRes)\n        })\n    }, [selectedLocation])\n    useEffect(() => {\n        if (selectedLocation) {\n            setTableLoading(true)\n            const body = {\n                search: searchTerm,\n                office_id: selectedLocation,\n                filter: filter,\n                page,\n                user_id: repId,\n                ...filterData,\n            }\n            if (filter == 'custom' && moment(startDate).isValid() && moment(endDate).isValid()) {\n                body.start_date = startDate\n                body.end_date = endDate\n            }\n            getReport(body)\n        }\n    }, [\n        searchTerm,\n        page,\n        filter,\n        selectedLocation,\n        repId,\n        endDate,\n        startDate,\n        isExport,\n        filterData,\n    ])\n\n    const getReport = (body) => {\n        if (isExport) body.is_export = '1'\n        getSalesReportService(body)\n            .then((res) => {\n                if (isExport) {\n                    const fileName = `Sales Reports - ${moment(new Date()).format(\n                        'DD MMM YY hh:mm'\n                    )}.csv`\n                    downloadAnyFileHelper(res, fileName)\n                    setIsExport(0)\n                    CustomToast.success('File Downloaded Successfully')\n                } else {\n                    setSalesReportData(res?.data)\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n                setTableLoading(false)\n            })\n    }\n\n    const onChangeFilter = (data) => {\n        setPage(1)\n        setLoading(data == 'custom' ? false : true)\n        setFilter(data)\n    }\n\n    const onLocationChange = (loc) => {\n        setPage(1)\n        // setLoading(true)\n        setRepId(null)\n        setSelectedLocation(loc)\n    }\n    const changeStartDate = (start) => {\n        setPage(1)\n        setStartDate(start)\n    }\n    const changeEndDate = (end) => {\n        setPage(1)\n        setEndDate(end)\n    }\n    const handleLocationChange = (e) => {\n        delaySaveToDb(e)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setTableLoading(true)\n            setSearchTerm(val)\n            setPage(1)\n        }, 500),\n        []\n    )\n    const onPageChange = (selectedPage) => {\n        setPage(selectedPage)\n    }\n    const onApplyFilter = (filter) => {\n        setPage(1)\n        setSearchTerm('')\n        setFilterData(filter)\n\n        // setTableLoading(true)\n        // salesReportFilterService(filter)\n        //     .then((res) => {\n        //         setSalesReportData(res?.data)\n        //     })\n        //     .finally(() => {\n        //         setTableLoading(false)\n        //     })\n    }\n    const onResetFilter = () => {\n        setPage(1)\n\n        setFilterData(initialFilter)\n        // getlocation()\n    }\n    const onExportSalesData = useCallback(() => {\n        setLoading(true)\n        setIsExport(1)\n    }, [])\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div>\n                <CustomReportsHeader\n                    stateList={stateList}\n                    selectedLocation={selectedLocation}\n                    onChangeDate={(data) => onChangeFilter(data)}\n                    onLocationChange={(loc) => onLocationChange(loc)}\n                    onStartDateChange={(start) => changeStartDate(start)}\n                    onEndDateChange={(end) => changeEndDate(end)}\n                    userByOfficeData={userByOfficeData}\n                    setRepId={(val) => {\n                        setRepId(val)\n                        setPage(1)\n                    }}\n                    repId={repId}\n                    handleExport={onExportSalesData}\n                    isExport={true}\n                />\n            </div>\n            <div className='row m-4 mx-auto mt-10  gap-8'>\n                <SalesTopCards\n                    heading={chartData?.heading_count_kw?.largest_system_size ?? '0' + 'KW'}\n                    content='Largest System Size'\n                    className='col-sm mb-5 mb-xl-10'\n                    background='#FFF4DE'\n                />\n                <SalesTopCards\n                    heading={chartData?.heading_count_kw?.avg_system_size ?? '0' + 'KW'}\n                    className='col-sm mb-5 mb-xl-10'\n                    background='#E1D3FF'\n                    content='Average System Size'\n                />\n                <SalesTopCards\n                    heading={chartData?.heading_count_kw?.install_kw ?? '0'}\n                    content='KW Installed (Accounts)'\n                    className='col-sm mb-5 mb-xl-10'\n                    background='#D7F9EF'\n                />\n                <SalesTopCards\n                    heading={chartData?.heading_count_kw?.pending_kw ?? '0'}\n                    content='KW Pending (Accounts)'\n                    className='col-sm mb-5 mb-xl-10'\n                    background='#E1E9FF'\n                />\n                <SalesTopCards\n                    heading={chartData?.heading_count_kw?.clawBack_account ?? '0'}\n                    content='Clawback (Accounts)'\n                    className='col-sm mb-5 mb-xl-10'\n                    background='#FDDCEA'\n                />\n            </div>\n            <div>\n                <SalesChart\n                    chartData={chartData?.my_sales}\n                    selectedKWType={selectedKWType}\n                    setSelectedKWType={setSelectedKWType}\n                />\n            </div>\n            {/* <div>\n                <SalesRevenueChart salesData={ratioGraphData?.graph_m1_m2_amount?.graph_amount} />\n            </div> */}\n            <div className='row mx-auto gap-sm-5 gap-10 my-10 '>\n                <div className='col-sm'>\n                    <SalesDonutChart accData={ratioGraphData?.accounts} />\n                </div>\n                <div className='col-sm'>\n                    <SalesInstallRatioDonutChart\n                        ratioData={ratioGraphData?.install_ratio}\n                        a={ratioGraphData?.install_ratio?.install?.replace('%', '')}\n                        b={ratioGraphData?.install_ratio?.uninstall?.replace('%', '')}\n                    />\n                </div>\n                {/* <div className='col-xxl-5 '>\n          <SalesRevenueChart salesData={ratioGraphData?.graph_m1_m2_amount?.graph_amount} />\n        </div> */}\n            </div>\n            <div>\n                <MySalesCustomerInfo\n                    reportData={reportData}\n                    onSearchChange={(text) => handleLocationChange(text)}\n                    loading={tableLoading}\n                    onPageChange={(selectedPage) => onPageChange(selectedPage)}\n                    activePage={page}\n                    applyFilter={(filter) => onApplyFilter(filter)}\n                    resetFilter={onResetFilter}\n                    onPress={(item) => {\n                        setSortValue(item)\n                        setSortingOrder(\n                            sortValue !== item ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                        )\n                        setPage(1)\n                    }}\n                    sortValue={sortValue}\n                    sortingOrder={sortingOrder}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SalesReport\n","import {Navigate, Routes, Route, Outlet} from 'react-router-dom'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {PageLink, PageTitle} from '../../../../_metronic/layout/core'\nimport ManageSalesPage from '../../admin/reports/component/sales/salesTableComponent/manageSales'\nimport SingleSalePage from '../../admin/reports/component/sales/SingleSalePage'\nimport ReportsOffice from './components/ReportsOffice'\nimport {SmReportsHeader} from './components/SmReportsHeader'\nimport MarketingDealCard from './marketingDealsReports/MarketingDealCard'\nimport PayPeriodPage from './paySubs/payPeriod/PayPeriodPage'\nimport PayStubs from './paySubs/PayStubs'\nimport ReconciliationPage from './reconciliation/ReconciliationPage'\nimport SalesReport from './salesReports/SalesReport'\nimport PayStabPage from '../Setting/components/SetupCard/backendCard/payStab/PayStabPage'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard/',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n    {\n        title: 'Reports/',\n        path: 'smReports/office/',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst ReportsRoutes = () => {\n    return (\n        <div className='px-sm-10'>\n            <Routes>\n                <Route\n                    element={\n                        <>\n                            <SmReportsHeader />\n                            <Outlet />\n                        </>\n                    }\n                >\n                    <Route\n                        path='office'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Office</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.reports.office.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <ReportsOffice />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Sales</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.reports.sales.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <SalesReport />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='pay-stubs'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Pay Stubs</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.reports.pastPayStubs.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <PayStubs />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='reconciliation'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Reconciliation\n                                </PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.reports.reconciliation.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <ReconciliationPage />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='pay-stubs/pay-period'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Pay Stubs</PageTitle>\n                                <PayStabPage />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='marketing-deal'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Marketing Deal\n                                </PageTitle>\n                                <MarketingDealCard />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales/customer-Info'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Sales</PageTitle>\n                                <SingleSalePage />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales/add-sales'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Add Sales</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.sales.add\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <ManageSalesPage />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route index element={<Navigate to='/smReports' />} />\n                </Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default ReportsRoutes\n","import {useCallback, useMemo, useState} from 'react'\n\nconst useFilterButton = (initialFilter, onApplyFilter, onResetFilter) => {\n    const [storedFilteredData, setStoredFilteredData] = useState(initialFilter)\n    const [filterData, setFilterData] = useState(initialFilter)\n\n    const onApplyClick = useCallback(() => {\n        onApplyFilter(filterData)\n        setStoredFilteredData(filterData)\n    }, [filterData, onApplyFilter])\n\n    const onResetClick = useCallback(() => {\n        onResetFilter()\n        setFilterData(initialFilter)\n        onApplyFilter(initialFilter)\n        setStoredFilteredData(storedFilteredData)\n    }, [initialFilter, onApplyFilter, onResetFilter, storedFilteredData])\n\n    const onCancelClick = useCallback(() => {\n        setFilterData(storedFilteredData)\n    }, [storedFilteredData])\n\n    const filterProps = useMemo(\n        () => ({\n            onApplyClick,\n            onResetClick,\n            onCancelClick,\n        }),\n        [onApplyClick, onCancelClick, onResetClick]\n    )\n\n    return [filterProps, filterData, setFilterData]\n}\n\nexport default useFilterButton\n"],"names":["OfficeReportCards","_ref","className","description","icon","stats","labelColor","textColor","borderColor","background","heading","smallTitle","content","_jsxs","concat","style","children","fontFamily","fontWeight","fontSize","_jsx","OfficeReportDataCard","line1Heading","line2Heading","line3Heading","line1Content","line2Content","line3Content","line1SubHeading","line2SubHeading","line3SubHeading","borderRadius","OfficeLeaderCard","_tableData$data","_tableData$data2","EmployeeData","onPress","sortValue","sortingOrder","loading","onSearchChange","page","setPage","open","setOpen","useState","btn","setBtn","value","setValue","tableData","setTableData","search","setSearch","useEffect","_Fragment","CustomLoader","full","visible","autoComplete","CustomInput","type","INPUT_TYPE","name","onChange","e","target","TABLE_BORDER","CustomSortSvg","onClick","data","length","map","item","i","height","RedirectToEmployeeProfile","employeeId","user_id","CustomImage","src","user_image","user_name","team","account","pending","formattedNumberFields","pending_percentage","install","install_percentage","cancelled","cancelled_percentage","team_lead","getServerImage","team_leader_image","width","closing_ratio","avg_system_size","colSpan","textAlign","paddingTop","paddingBottom","Pagination","changedPage","totalPages","last_page","totalRecords","total","EmployeePerformanceChart","reportData","head","chartRef","useRef","mode","useThemeMode","chart","refreshChart","current","parseInt","getCSS","ApexCharts","getChartOptions","render","destroy","ref","id","_reportData$graph","getCSSVariableValue","cancelledArr","penndingArr","installeddArr","_reportData$graph2","graph","val","push","Number","userName","series","stacked","toolbar","show","zoom","enabled","autoScaleYaxis","plotOptions","bar","horizontal","columnWidth","legend","dataLabels","stroke","colors","xaxis","categories","axisBorder","axisTicks","labels","yaxis","title","display","text","fill","opacity","responsive","breakpoint","options","states","normal","filter","hover","active","allowMultipleDataPointsSelection","tooltip","y","formatter","grid","strokeDashArray","lines","stateList","selectedLocation","onChangeDate","onLocationChange","onStartDateChange","onEndDateChange","userByOfficeData","setRepId","repId","handleExport","isExport","startDate","setStartDate","endDate","setEndDate","custom","setCustom","boxShadow","CustomDropdown","showClear","KTSVG","path","valueKey","placeholder","displayKey","dropdownIcon","REPORTS_DURATION_DROPDOWN_LIST","searching","CustomDatePicker","placeholderField","event","startDateChnage","moment","format","maxDate","Date","endDateChnage","minDate","CustomButton","buttonType","BUTTON_TYPE","buttonLabel","padding","ReportsOffice","_reportData$office_na","_reportData$office_ra","_reportData$total_rep","_reportData$total_man","_reportData$total_clo","_reportData$total_set","_reportData$best_day","_reportData$best_day2","_reportData$best_week5","_reportData$best_mont","_reportData$best_mont2","_reportData$best_team","_reportData$best_team2","_reportData$best_sett","_reportData$best_sett2","_reportData$best_clos","_reportData$best_clos2","_reportData$best_team3","_reportData$best_team4","_reportData$best_sett3","_reportData$best_sett4","_reportData$best_clos3","_reportData$best_clos4","setReportData","setLoading","tableLoading","setTableLoading","searchTerm","setSearchTerm","setFilter","setUserByOffceData","setSelectedLocation","useOfficeLocation","setSortValue","setSortingOrder","body","office_id","sort","sort_val","isValid","start_date","end_date","isSameOrBefore","getManagerReportService","then","res","finally","officeBYUserIDSerices","_res$data","modifiedRes","first_name","last_name","delaySaveToDb","useCallback","debounce","bestWeekValue","useMemo","_reportData$best_week","_reportData$best_week2","_reportData$best_week3","_reportData$best_week4","Array","isArray","best_week","week","dates","split","getValidDate","position","CustomReportsHeader","date","onChangeFilter","loc","start","changeStartDate","end","changeEndDate","office_name","office_ranking","total_rep","total_manager","total_closer","total_setter","total_account","total_revenue","total_kw","best_day","dayKw","day","amount","best_month","month","best_team","team_name","best_setter","setter_name","best_closer","closer_name","EmployeePerformance","employee_performance","SmReportsHeader","location","useLocation","useNavigate","companySetting","useSelector","getCompanySettingSelector","positionSetting","getPositionSettingSelector","fontsFamily","marginTop","overflowX","AccessRights","customCondition","allPermissionsAccess","Link","pathname","to","reconciliation","reconciliation_status","MarketingTable","MarketingDealCard","add","toDate","overflow","DatePicker","placeholderText","dateFormat","clearIcon","calendarIcon","href","clsx","fontStyle","PayStubChart","graphData","refreshMode","monthArr","monthAmountArr","_item$amount$toFixed","_item$amount","toFixed","crosshairs","color","dashArray","undefined","offsetY","top","right","bottom","left","markers","strokeColors","strokeWidth","onPageChange","state","pay_period_to","pay_period_from","userId","payrollId","past","payroll_date","gross_total","miscellaneous","deduction","net_pay","PayStubs","setGraphData","selectedYear","setYear","userData","getUserDataSelector","_location$state$userI","_location$state","year","getFullYear","getGraphData","_location$state$userI2","_location$state2","getTableData","getPastPaystubGraphDataService","getPastPaystubTableDataService","viewMode","_e$target","PayStubTable","cardData","commission_earnings","m1_paid","m2_paid","advances","clawback_account","total_due","CommissionBreakdownChart","months","M1","M2","totalE","keys","Object","keyName","_graphData$keyName$m","_graphData$keyName$m2","_graphData$keyName$to","m1","m2","total_earnings","maxValue","Math","round","max","curve","EarningDonutChart","chartData","_chartData$commission","_chartData$overrides","_chartData$other_item","commission","overrides","other_item","backgroundColor","EarningTable","Li1","Li1Data","Li2","Li2Data","Li3","Li3Data","Li4","Li4Data","Li5","Li5Data","Li6","Li6Data","TotalDue","_tableData$commission","_tableData$commission2","_tableData$commission3","_tableData$commission4","_tableData$commission5","_tableData$overrides","_tableData$overrides2","_tableData$overrides3","_tableData$overrides4","_tableData$overrides5","_tableData$other_item","_tableData$other_item2","_tableData$other_item3","_tableData$other_item4","_tableData$other_item5","_tableData$deduction","_tableData$deduction2","_tableData$deduction3","_tableData$deduction4","_tableData$deduction5","total_value","paid","held_back","due_amount","ReconciliationPage","_reportData$overrides","_reportData$overrides2","_reportData$overrides3","_reportData$overrides4","_reportData$overrides5","_reportData$overrides6","_reportData$overrides7","_reportData$overrides8","_reportData$overrides9","_reportData$other_ite","_reportData$other_ite2","_reportData$other_ite3","_reportData$other_ite4","_reportData$other_ite5","_reportData$other_ite6","_reportData$other_ite7","_reportData$other_ite8","_reportData$deduction","_reportData$deduction2","_reportData$deduction3","_reportData$deduction4","_reportData$deduction5","reconciliationSchedule","getReconciliationScheduleSelector","dispatch","useDispatch","selectedReconPeriod","setReconPeriod","getCompanyReconciliationAction","handleSetCurrentRecon","period_from","period_to","getReconcilliationReportService","find","periodList","period","marginRight","selectedData","EarningsBreakdownCard","earning_break_down","ComissionsCard","ReconcilliationCommanCard","direct_overrides_status","direct","indirect_overrides_status","indirect","office_overrides_status","offece","reimbursements","incentives","travel","rent","bonus","q","deductions","sign_on_bonus","phone_bill","ReconcilliationsTable","payout_summary","FILTER_KEYS","initialFilter","onApplyFilter","resetFilter","filterProps","filterData","setFilterData","useFilterButton","onChangeInputData","getPositionsSelector","_e$target2","resetFilterData","CustomFilterButton","onResetClick","label","status_filter","installer_filter","date_filter","_tableData$data3","headerFilterChnage","activePage","applyFilter","modalOpen","setModalOpen","selectedId","setSelectedId","SalesReportFilter","updatedFilter","_item$closer","_item$status","_item$date_cancelled","pid","installer","customer_name","closer","setter","kw","status","date_cancelled","m1_date","m2_date","adders","epc","net_epc","dealer_fee_percentage","dealer_fee","ViewCostomer","onClose","SalesChart","selectedKWType","setSelectedKWType","kw_installColor","setKw_InstallColor","m1Arr","m2Arr","clawArr","dateArr","kwArr","_item$m1_account$toFi","_item$m1_account","_item$m2_account$toFi","_item$m2_account","_item$claw_back$toFix","_item$claw_back","_item$total_kw$toFixe","_item$total_kw","_item$date","m1_account","m2_account","claw_back","finalItem","rotate","seriesName","min","opposite","CustomRadioButton","childClass","handleChange","isChecked","Chart","ArcElement","accData","datasets","m2_complete","m2_pending","clawback","Doughnut","plugins","rotation","circumference","cutout","maintainAspectRatio","transform","total_sales","props","b","a","SalesTopCards","SalesReport","_chartData$heading_co","_chartData$heading_co2","_chartData$heading_co3","_chartData$heading_co4","_chartData$heading_co5","_chartData$heading_co6","_chartData$heading_co7","_chartData$heading_co8","_chartData$heading_co9","_chartData$heading_co10","_ratioGraphData$insta","_ratioGraphData$insta2","_ratioGraphData$insta3","_ratioGraphData$insta4","setSalesReportData","setSalesChartData","ratioGraphData","setRatioGraphData","setIsExport","kw_type","getSalesGraphService","getSalesAccountAndInstallRatioGraphService","getReport","is_export","getSalesReportService","fileName","downloadAnyFileHelper","CustomToast","onExportSalesData","heading_count_kw","largest_system_size","install_kw","pending_kw","clawBack_account","my_sales","SalesDonutChart","accounts","SalesInstallRatioDonutChart","ratioData","install_ratio","replace","uninstall","MySalesCustomerInfo","selectedPage","onResetFilter","profileBreadCrumbs","isSeparator","isActive","ReportsRoutes","Routes","Route","element","Outlet","PageTitle","breadcrumbs","showPlaceHolder","PayStabPage","SingleSalePage","ManageSalesPage","index","Navigate","storedFilteredData","setStoredFilteredData","onApplyClick","onCancelClick"],"sourceRoot":""}