{"version":3,"file":"static/js/8742.c3a475e7.chunk.js","mappings":"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","sources":["_metronic/helpers/components/CustomSortSVG.js","app/modules/admin/payroll/ProfileHeader.js","app/modules/admin/payroll/component/paymentrequest/PaymentRequestTabel.js","app/modules/admin/payroll/component/runpayroll/ViewPayrollRequestModal.js","app/modules/admin/payroll/component/runpayroll/RunPayrollTabel.js","app/modules/admin/payroll/component/runpayroll/MoveToReconModal.js","app/modules/admin/filters/RunPayrollFilter.js","app/modules/admin/payroll/component/runpayroll/PayrollExecuteModal.js","app/modules/admin/payroll/component/runpayroll/ExecuteConfirmModal.js","app/modules/admin/payroll/component/runpayroll/RunPayroll.js","app/modules/admin/payroll/component/onetimepayment/OneTimePaymentHistory.js","app/modules/admin/payroll/component/onetimepayment/OneTimePayment.js","app/modules/admin/payroll/component/paymentrequest/PaymentRequest.js","app/modules/admin/payroll/component/reconciliation/EditReconciliation.js","app/modules/admin/payroll/component/reconciliation/addToPayrollPopUp.js","app/modules/admin/payroll/component/reconciliation/ReconciliationTabel.js","app/modules/admin/payroll/component/reconciliation/Reconciliation.js","app/modules/admin/payroll/PayrollHeader.js","customComponents/customInputs/customSearchInput/CustomSearchInput.js","customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile.js"],"sourcesContent":["const CustomSortSvg = ({className = '', onClick = () => {}, sortingOrder = null}) => {\n    return (\n        <span\n            className={'cursor-pointer d-flex flex-column ms-2 mb-0' || className}\n            onClick={onClick}\n        >\n            {sortingOrder !== 'asc' ? (\n                <i class='bi bi-caret-up-fill text-cmGrey600'></i>\n            ) : (\n                <i class='bi bi-caret-up-fill text-cmGrey900'></i>\n            )}\n            {sortingOrder !== 'desc' ? (\n                <i class='bi bi-caret-down-fill text-cmGrey600'></i>\n            ) : (\n                <i class='bi bi-caret-down-fill text-cmGrey900'></i>\n            )}\n        </span>\n    )\n}\n\nexport {CustomSortSvg}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\nimport {fontsFamily} from '../../../../assets/fonts/fonts'\n\nconst ProfileHeader = () => {\n    const location = useLocation()\n    const companySetting = useSelector(getCompanySettingSelector)\n    return (\n        <div\n            style={{fontSize: '16px', fontWeight: '800', fontFamily: fontsFamily.manrope}}\n            className='d-flex flex-nowrap gap-7 text-cmGrey500'\n        >\n            <AccessRights\n                customCondition={\n                    allPermissionsAccess.administrator.payroll.runPayrollAndApprovals.view\n                }\n            >\n                <Link\n                    className={`${\n                        location.pathname === '/payroll/run-payroll' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/payroll/run-payroll'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Run Payroll\n                </Link>\n            </AccessRights>\n\n            <AccessRights\n                customCondition={allPermissionsAccess.administrator.payroll.oneTimePayment.view}\n            >\n                <Link\n                    className={`${\n                        location.pathname === '/payroll/one-time-payment' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/payroll/one-time-payment'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    One-time Payment\n                </Link>\n            </AccessRights>\n\n            <AccessRights\n                customCondition={allPermissionsAccess.administrator.payroll.paymentRequest.view}\n            >\n                <Link\n                    className={`${\n                        location.pathname === '/payroll/payment-request' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/payroll/payment-request'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Payment Request\n                </Link>\n            </AccessRights>\n\n            {companySetting?.reconciliation ? (\n                <AccessRights\n                    customCondition={\n                        allPermissionsAccess.administrator.payroll.payrollReconciliation.view\n                    }\n                >\n                    <Link\n                        className={`${\n                            location.pathname === '/payroll/reconciliation' && 'active'\n                                ? 'text-cmBlue-Crayola'\n                                : 'text-cmGrey500'\n                        } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                        to='/payroll/reconciliation'\n                        style={{\n                            borderRadius: '10px 10px 0px 0px',\n                        }}\n                    >\n                        Reconciliation\n                    </Link>\n                </AccessRights>\n            ) : null}\n        </div>\n    )\n}\n\nexport {ProfileHeader}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useEffect, useState} from 'react'\nimport {getValidDate} from '../../../../../../constants/constants'\n\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {CustomSortSvg} from '../../../../../../_metronic/helpers/components/CustomSortSVG'\nvar selectedArr = null\n\nconst PaymentRequestTabel = ({\n    className,\n    paymentRequestData,\n    loading,\n    page,\n    setPage,\n    getPaymentList,\n    setSelectedUsers,\n    onChangesPaymentRequest,\n    requestType,\n    onChangePayNow,\n    onPress,\n    sortingOrder,\n    sortValue,\n    showTypeCol = false,\n}) => {\n    const [selectAll, setSelectAll] = useState(false)\n    const [paymentData, setPaymentData] = useState(null)\n\n    useEffect(() => {\n        setPaymentData(paymentRequestData)\n    }, [paymentRequestData])\n\n    const handleChceckbox = (userData, e) => {\n        const data = {...paymentData}\n        let updatedData = [...data?.data]\n        updatedData = updatedData?.map((item) => {\n            if (item?.id == userData?.id) {\n                return {...item, isChecked: e.target.checked}\n            } else {\n                return item\n            }\n        })\n        selectedArr = updatedData?.filter((item) => item?.isChecked)?.map((item2) => item2?.id)\n        setPaymentData({...paymentData, data: updatedData})\n        setSelectedUsers(selectedArr)\n        if (updatedData?.length == selectedArr?.length) setSelectAll(true)\n        else setSelectAll(false)\n    }\n\n    const selectAllCheckbox = (e) => {\n        setSelectAll(e.target.checked)\n        let selectAllData = paymentRequestData?.data?.map((item) => {\n            return {...item, isChecked: e.target.checked}\n        })\n        selectedArr = selectAllData?.filter((item) => item?.isChecked)?.map((item2) => item2?.id)\n        setPaymentData({...paymentData, data: selectAllData})\n        setSelectedUsers(selectedArr)\n    }\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div className={`card shadow-nones ${className}`}>\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table '>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className=' bg-cmGrey300 text-cmGrey800'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '600',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='p-5 text-nowrap'>\n                                        {' '}\n                                        {paymentData?.data?.length > 0 && (\n                                            <div className=''>\n                                                <CustomCheckbox\n                                                    onChange={(e) => selectAllCheckbox(e)}\n                                                    checked={selectAll || false}\n                                                />\n                                            </div>\n                                        )}\n                                    </th>\n                                    <th className=' p-5 text-nowrap'>Employee</th>\n                                    <th className=' p-5 text-nowrap'>\n                                        <div className='d-flex'>\n                                            Requested on\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'requested_on'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => onPress('requested_on')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className=' p-5 text-nowrap'>Approved by</th>\n                                    <th\n                                        className=' p-5 text-nowrap'\n                                        // data-toggle='tooltip'\n                                        // data-placement='left'\n                                        // title='Value is higher than expected '\n                                    >\n                                        <div className='d-flex'>\n                                            Amount\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'amount' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('amount')}\n                                            />\n                                        </div>\n                                    </th>\n                                    {requestType === 'PaymentRequest' ||\n                                        (showTypeCol && (\n                                            <th\n                                                data-toggle='tooltip'\n                                                data-placement='left'\n                                                title='bonuses, advances, incentives                    '\n                                                className='p-5 text-nowrap'\n                                            >\n                                                Type\n                                            </th>\n                                        ))}\n                                    <th className=''></th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {paymentData?.data?.length > 0 ? (\n                                    <>\n                                        {paymentData?.data?.map((item, i) => (\n                                            <tr\n                                                key={i}\n                                                className={`text-cmGrey600 stripRow `}\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                <th className='p-5'>\n                                                    <div className=''>\n                                                        <CustomCheckbox\n                                                            checked={item?.isChecked || false}\n                                                            onChange={(e) =>\n                                                                handleChceckbox(item, e)\n                                                            }\n                                                        />\n                                                    </div>\n                                                </th>\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap'\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                    }}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.user_id}\n                                                    >\n                                                        <CustomImage\n                                                            src={item?.image}\n                                                            className='avatar me-3'\n                                                        />{' '}\n                                                        {item?.first_name} {item?.last_name}{' '}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey600'\n                                                    style={{fontWeight: 600}}\n                                                >\n                                                    {getValidDate(item?.request_on)}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey600'\n                                                    style={{fontWeight: 600}}\n                                                >\n                                                    {item?.approved_by ?? '-'}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey900'\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    {formattedNumberFields(item?.amount, '$')}\n                                                </td>\n                                                {requestType === 'PaymentRequest' ||\n                                                    (showTypeCol && (\n                                                        <td\n                                                            className='p-5 text-cmGrey600'\n                                                            style={{fontWeight: 500}}\n                                                        >\n                                                            {item?.type ?? '-'}\n                                                        </td>\n                                                    ))}\n                                                <td className='p-5 '>\n                                                    <div className='d-flex flex-center gap-5'>\n                                                        {/* <div>\n                                                            <CustomButton\n                                                                className={'text-nowrap'}\n                                                                buttonType={BUTTON_TYPE.primary}\n                                                                buttonLabel={'Pay Now'}\n                                                                buttonSize={BUTTON_SIZE.small}\n                                                                onClick={() => {\n                                                                    onChangePayNow(item?.id)\n                                                                }}\n                                                            />\n                                                        </div> */}\n\n                                                        {selectedArr?.length > 0 ? (\n                                                            <></>\n                                                        ) : (\n                                                            <div>\n                                                                <CustomButton\n                                                                    className={'text-nowrap'}\n                                                                    buttonSize={BUTTON_SIZE.small}\n                                                                    buttonType={BUTTON_TYPE.primary}\n                                                                    buttonLabel={'With Payroll'}\n                                                                    onClick={() =>\n                                                                        onChangesPaymentRequest(\n                                                                            'Accept',\n                                                                            item?.id\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </div>\n                                                        )}\n                                                        {selectedArr?.length > 0 ? (\n                                                            <></>\n                                                        ) : (\n                                                            <div>\n                                                                <CustomButton\n                                                                    buttonType={BUTTON_TYPE.error}\n                                                                    buttonSize={BUTTON_SIZE.small}\n                                                                    buttonLabel={'Decline'}\n                                                                    onClick={() => {\n                                                                        CustomDialog.warn(\n                                                                            'Are you sure you want to decline ?',\n                                                                            () => {\n                                                                                onChangesPaymentRequest(\n                                                                                    'Decline',\n                                                                                    item?.id\n                                                                                )\n                                                                            }\n                                                                        )\n                                                                    }}\n                                                                />\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </td>\n\n                                                {/* {selectedArr?.length > 0 ? (\n                                                    <></>\n                                                ) : (\n                                                    <td className='py-5 text-cmGrey600'>\n                                                        <CustomButton\n                                                            className={'text-nowrap'}\n                                                            buttonType={BUTTON_TYPE.error}\n                                                            buttonSize={BUTTON_SIZE.small}\n                                                            buttonLabel={'Decline'}\n                                                            onClick={() => {\n                                                                CustomDialog.warn(\n                                                                    'Are you sure you want to decline ?',\n                                                                    () => {\n                                                                        onChangesPaymentRequest(\n                                                                            'Decline',\n                                                                            item?.id\n                                                                        )\n                                                                    }\n                                                                )\n                                                            }}\n                                                        />\n                                                    </td>\n                                                )} */}\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={15}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <Pagination\n                page={page}\n                totalPages={paymentData?.last_page}\n                setPage={(changedPage) => setPage(changedPage)}\n            />\n        </div>\n    )\n}\n\nexport default PaymentRequestTabel\n","import {useEffect, useMemo, useState} from 'react'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport {\n    getPaymentRequestDetailsService,\n    payNowPaymentRequestService,\n    updatePaymentRequestService,\n} from '../../../../../../services/Services'\nimport PaymentRequestTabel from '../paymentrequest/PaymentRequestTabel'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {\n    formattedNumberFields,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\n\nconst ViewPayrollRequestModal = ({show, handleClose, payrollMetaData, getPayrollData}) => {\n    const [requestData, setRequestData] = useState(null)\n    const [page, setPage] = useState(1)\n    const [loading, setLoading] = useState(false)\n    const [selectedArr, setSelectedArr] = useState([])\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        if (payrollMetaData) getPaymentRequestData()\n    }, [payrollMetaData, page, sortValue, sortingOrder])\n\n    const getPaymentRequestData = () => {\n        const search = payrollMetaData?.name\n        setLoading(true)\n        getPaymentRequestDetailsService({\n            page,\n            search,\n            type: 'Both',\n            sort: sortValue,\n            sort_val: sortingOrder,\n        })\n            .then((res) => {\n                setRequestData(res?.data)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    const updatePaymentList = (status, id) => {\n        setLoading(true)\n        const body = {\n            request_ids: id ? [id] : selectedArr,\n            type: status,\n        }\n        updatePaymentRequestService(body)\n            .then(() => {\n                CustomToast.success(\n                    status == 'Accept'\n                        ? 'Payment Request gone to payroll'\n                        : 'Payment Request declined'\n                )\n\n                handleClose()\n                getPayrollData()\n                // getPaymentRequestData()\n\n                // setSelectedArr([])\n            })\n            .catch((e) => {\n                setLoading(false)\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n    const onPayNow = (id) => {\n        const body = {\n            request_id: id,\n        }\n        CustomDialog.warn('Are you sure you want to pay this request ?', () => {\n            payNowPaymentRequestService(body)\n                .then(() => {\n                    handleClose()\n                    getPayrollData()\n                    // getPaymentRequestData()\n\n                    // setSelectedArr([])\n                })\n                .finally(() => {\n                    CustomToast.success('Paid successfully')\n                })\n        })\n    }\n    const subTotal = useMemo(() => {\n        return requestData?.data?.reduce((acc, obj) => acc + Number(obj.amount ?? 0), 0)\n    }, [requestData?.data])\n\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            title={`Payment Request | ${payrollMetaData?.name ?? '-'}`}\n            maxWidth='1300'\n        >\n            <div>\n                {/* Action Buttons */}\n                <div className='d-flex gap-5 justify-content-end mb-5'>\n                    {selectedArr?.length > 0 ? (\n                        <div>\n                            <CustomButton\n                                buttonLabel='With Payroll'\n                                onClick={() => updatePaymentList('Accept')}\n                            />\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    {selectedArr?.length > 0 ? (\n                        <div>\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.error}\n                                buttonLabel='Decline'\n                                onClick={() => updatePaymentList('Decline')}\n                            />\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                </div>\n\n                <PaymentRequestTabel\n                    className='mx-0 px-0'\n                    paymentRequestData={requestData}\n                    page={page}\n                    setPage={setPage}\n                    // showPaymentRequest={showPaymentRequest}\n                    loading={loading}\n                    getPaymentList={getPaymentRequestData}\n                    setSelectedUsers={setSelectedArr}\n                    onChangesPaymentRequest={(status, id) => updatePaymentList(status, id)}\n                    onChangePayNow={(id) => onPayNow(id)}\n                    showTypeCol={true}\n                    sortingOrder={sortingOrder}\n                    sortValue={sortValue}\n                    onPress={(item) => {\n                        setSortValue(item)\n                        setSortingOrder(\n                            sortValue !== item ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                        )\n                        setPage(1)\n                    }}\n                />\n                <div className='text-end p-2'>\n                    <span\n                        className='text-cmGrey600 me-2'\n                        style={{\n                            fontFamily: 'Manrope',\n                            fontWeight: '800',\n                            fontSize: '14px',\n                        }}\n                    >\n                        Sub-Total\n                    </span>\n                    <span className='p-5 text-cmGrey900' style={{fontWeight: 700}}>\n                        {formattedNumberFields(subTotal, '$')}\n                    </span>\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default ViewPayrollRequestModal\n","import React, {useMemo, useRef, useState} from 'react'\nimport {PayrollAdjustments} from './PayrollAdjustments'\nimport {PayRollCommissionsTable} from './commisonTable/PayRollCommissionsTable'\nimport {PayRollDeductionTable} from './PayRollDeductionTable'\nimport {PayRollReimbursTable} from './PayRollReimbursTable'\nimport ViewSummary from './ViewSummary'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport {\n    TABLE_BORDER,\n    formattedNumberFields,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\n\nimport {PayRollOverridesTable} from './overrideTable/PayRollOverridesTable'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../customComponents/customIcons/CustomIcons'\nimport {TieredMenu} from 'primereact/tieredmenu'\nimport {PAYROLL_PROCESS_STATUS} from '../../../../../../constants/constants'\nimport {\n    undoMoveToNextPayrollService,\n    undoPaidPayrollService,\n    undoReconPayrollService,\n} from '../../../../../../services/Services'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport ViewPayrollRequestModal from './ViewPayrollRequestModal'\nimport {useNavigate} from 'react-router-dom'\nimport CustomTooltip from '../../../../../../customComponents/customTooltip/CustomTooltip'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nconst RunPayrollTabel = ({\n    selectedPayroll,\n    setSelectedPayrollData = () => {},\n    tableData,\n    finalize_status,\n    activePage,\n    onPageChange,\n    getPayrollData,\n    currentPayPeriod,\n    setSelectedPageType,\n    selectedPageType,\n    isAllPayrollPaid,\n    pay_period_from,\n    pay_period_to,\n}) => {\n    const [showCreateAppModal, setShowCreateAppModal] = useState(false)\n    const [showAdjustmentModal, setShowAdjustmentModal] = useState(false)\n    const [showReimbursementsModal, setShowReimbursementsModal] = useState(false)\n    const [showDeductionsModal, setShowDeductionsModal] = useState(false)\n    const [showOverridesModal, setShowOverridesModal] = useState(false)\n    const [showRequestModal, setShowRequestModal] = useState(false)\n    const companySetting = useSelector(getCompanySettingSelector)\n    const [payrollMetaData, setPayrollMetaData] = useState(null)\n    const menu = useRef(null)\n    const navigate = useNavigate()\n\n    // const items =\n    //     tableData?.last_page > 1\n    //         ? [\n    //                 {\n    //                     label: 'Select This Page Only',\n    //                     command: () => handleSelectThisPage(),\n    //                 },\n    //               {\n    //                   label:\n    //                       selectedPageType == 'all_pages'\n    //                           ? 'Cancel all page selection'\n    //                           : 'Select All Page',\n    //                   command: (e) => handleSelectAllPage(),\n    //               },\n    //           ]\n    //         : [\n    //               {\n    //                   label: 'Select This Page',\n    //                   command: () => handleSelectThisPage(),\n    //               },\n    //           ]\n\n    const items =\n        selectedPageType == 'all_pages'\n            ? [\n                  {\n                      label: 'Cancel all page selection',\n                      command: (e) => {\n                          setSelectedPageType(null)\n                          setSelectedPayrollData([])\n                      },\n                  },\n              ]\n            : [\n                  {\n                      label: 'Select All Pages',\n                      command: (e) => {\n                          handleSelectAllPage()\n                      },\n                  },\n              ]\n\n    const handleCloseCommissions = () => {\n        setShowCreateAppModal(false)\n        getPayrollData()\n    }\n    const handleCloseAdjustment = () => {\n        setShowAdjustmentModal(false)\n        getPayrollData()\n    }\n\n    const handleReimbursement = () => {\n        setShowReimbursementsModal(false)\n    }\n    const handleDeduction = () => {\n        setShowDeductionsModal(false)\n        getPayrollData()\n    }\n    const handleOverrides = () => {\n        setShowOverridesModal(false)\n        getPayrollData()\n    }\n\n    const handleCheckbox = (userData, e) => {\n        let data = [...selectedPayroll]\n        const isExistInData = data.some((item) => item == userData?.payroll_id)\n        if (isExistInData) data = data.filter((item) => item != userData?.payroll_id)\n        else data.push(userData?.payroll_id)\n        setSelectedPayrollData(data)\n    }\n\n    const isAllSelected = useMemo(() => {\n        const data = []\n        tableData?.data\n            ?.filter(\n                (item) =>\n                    !item?.is_mark_paid &&\n                    ![PAYROLL_PROCESS_STATUS.paid, PAYROLL_PROCESS_STATUS.finilize].includes(\n                        Number(item?.status_id)\n                    )\n            )\n            ?.map((item) => data.push(selectedPayroll.includes(item?.payroll_id)))\n        return data?.length > 0 ? data.every((item) => item) : false\n    }, [tableData?.data, selectedPayroll])\n\n    const handleSelectThisPage = () => {\n        selectAllCheckbox()\n        // if (!isAllSelected) setSelectedPageType('this_page')\n    }\n    const handleSelectAllPage = () => {\n        if (!isAllSelected) {\n            setSelectedPageType('all_pages')\n            selectAllCheckbox()\n        } else {\n            setSelectedPayrollData([])\n            setSelectedPageType(null)\n        }\n    }\n\n    const selectAllCheckbox = (e) => {\n        if (isAllSelected) {\n            setSelectedPageType(null)\n            let data = [...selectedPayroll]\n            tableData?.data?.map((item) => {\n                data = data.filter((payrollItem) => payrollItem != item?.payroll_id)\n            })\n            setSelectedPayrollData(data)\n        } else {\n            const data = [...selectedPayroll]\n            tableData?.data?.map((item) => {\n                if (\n                    !item?.is_mark_paid &&\n                    ![PAYROLL_PROCESS_STATUS.paid, PAYROLL_PROCESS_STATUS.finilize].includes(\n                        Number(item?.status_id)\n                    ) &&\n                    !data.includes(item?.payroll_id)\n                )\n                    data.push(item?.payroll_id)\n            })\n            setSelectedPayrollData(data)\n        }\n    }\n\n    const handleUndo = (item) => {\n        let body = {\n            payroll_id: item?.payroll_id,\n        }\n\n        if (item?.is_mark_paid) {\n            const paidBody = {\n                payrollId: item?.payroll_id,\n            }\n            CustomDialog.warn('Are you sure want to undo this paid ', () => {\n                undoPaidPayrollService(paidBody)\n                    .then(() => getPayrollData())\n                    .catch((e) => CustomToast.error(getErrorMessageFromResponse(e)))\n            })\n        } else if (item?.status_id == 6) {\n            CustomDialog.warn('Are you sure want to undo this recon', () => {\n                undoReconPayrollService(body)\n                    .then(() => getPayrollData())\n                    .catch((e) => CustomToast.error(getErrorMessageFromResponse(e)))\n            })\n        } else if (item?.PayrollShiftHistorie_count > 0) {\n            body.pay_period_from = pay_period_from\n            body.pay_period_to = pay_period_to\n            CustomDialog.warn('Are you sure want to undo this next payroll', () => {\n                undoMoveToNextPayrollService(body)\n                    .then(() => getPayrollData())\n                    .catch((e) => CustomToast.error(getErrorMessageFromResponse(e)))\n            })\n        }\n    }\n\n    return (\n        <>\n            <div className=' p-0  bg-cmwhite rounded shadow-sm' style={{marginLeft: '-20px'}}>\n                <div className='table-responsive shadow-none overflow-auto'>\n                    <table className='table rounded' style={{tableLayout: 'fixed', width: '100%'}}>\n                        <thead className={TABLE_BORDER}>\n                            <tr\n                                className='bg-cmGrey300 text-cmGrey900'\n                                style={{\n                                    fontSize: '14px',\n                                    fontWeight: '700',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <th className='px-0' style={{width: '65px'}}>\n                                    {!finalize_status && tableData?.data?.length > 0 ? (\n                                        <div className='d-flex gap-2 ms-3 mb-1'>\n                                            {!isAllPayrollPaid && !finalize_status ? (\n                                                <CustomCheckbox\n                                                    checked={isAllSelected}\n                                                    onChange={(e) => selectAllCheckbox(e)}\n                                                />\n                                            ) : null}\n                                            {!isAllPayrollPaid && tableData?.last_page > 1 ? (\n                                                <CustomArrow\n                                                    arrowDirection={ARROW_DIRECTION.down}\n                                                    onClick={(e) => {\n                                                        menu.current.toggle(e)\n                                                    }}\n                                                />\n                                            ) : null}\n                                            <TieredMenu\n                                                className='bg-cmwhite text-center'\n                                                style={{borderRadius: '10px'}}\n                                                model={items}\n                                                popup\n                                                ref={menu}\n                                                breakpoint='767px'\n                                            />\n                                        </div>\n                                    ) : null}\n                                </th>\n\n                                <th className=' p-3 px-2' style={{width: '200px'}}>\n                                    Employee\n                                </th>\n\n                                <th className=' p-3' style={{width: '80px'}}>\n                                    Request\n                                </th>\n\n                                {/* <th className=' p-3'>Position</th> */}\n                                <th className=' p-3' style={{width: '115px'}}>\n                                    Commission\n                                </th>\n                                <th className=' p-3' style={{width: '120px'}}>\n                                    Overrides{' '}\n                                    <i\n                                        className='bi bi-gear ms-2 fs-5 text-cmGrey700 '\n                                        onClick={() => navigate('/setting/setup')}\n                                        style={{cursor: 'pointer'}}\n                                    ></i>\n                                </th>\n\n                                <th\n                                    style={{width: '135px'}}\n                                    data-toggle='tooltip'\n                                    data-placement='left'\n                                    title='bonuses, advances, incentives, \n                  Fine/Fee, Payroll Dispute '\n                                    className=' p-3 '\n                                >\n                                    Adjustments{' '}\n                                    <i\n                                        className='bi bi-exclamation-circle ms-1 text-cmGrey700'\n                                        style={{cursor: 'pointer'}}\n                                    ></i>\n                                </th>\n\n                                <th className=' p-3' style={{width: '135px'}}>\n                                    Reimbursements\n                                </th>\n\n                                <th className='p-3' style={{width: '110px'}}>\n                                    Deductions{' '}\n                                </th>\n                                {companySetting?.reconciliation ? (\n                                    <th className='p-3' style={{width: '120px'}}>\n                                        Reconciliation\n                                    </th>\n                                ) : null}\n\n                                <th className=' p-3' style={{width: '120px'}}>\n                                    Net Pay\n                                </th>\n                                <th className='p-3' style={{width: '60px'}}></th>\n                            </tr>\n                        </thead>\n                        <tbody className={TABLE_BORDER}>\n                            {tableData?.data?.length > 0 ? (\n                                <>\n                                    {tableData?.data?.map((item, i) => {\n                                        let isChecked = selectedPayroll?.includes(item?.payroll_id)\n                                        return (\n                                            <tr\n                                                key={i}\n                                                className={`text-cmGrey700 stripRow ${\n                                                    PAYROLL_PROCESS_STATUS.finilize ==\n                                                    item?.status_id\n                                                        ? 'bg-cmSuccess bg-opacity-5'\n                                                        : !item?.is_mark_paid &&\n                                                          [\n                                                              PAYROLL_PROCESS_STATUS.paid,\n                                                              PAYROLL_PROCESS_STATUS.moveToRecon,\n                                                          ].includes(item.status_id)\n                                                        ? 'bg-cmGrey300'\n                                                        : null\n                                                } `}\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 600,\n                                                    verticalAlign: 'middle',\n                                                }}\n                                            >\n                                                <td\n                                                    width={'65px'}\n                                                    className={`ps-3 ${\n                                                        item?.is_mark_paid ||\n                                                        [\n                                                            PAYROLL_PROCESS_STATUS.moveToRecon,\n                                                            PAYROLL_PROCESS_STATUS.paid,\n                                                        ].includes(item.status_id) ||\n                                                        item?.PayrollShiftHistorie_count > 0\n                                                            ? 'border-start border-end-0 border-cminfo border-3'\n                                                            : null\n                                                    }`}\n                                                >\n                                                    {!finalize_status &&\n                                                    !item?.is_mark_paid &&\n                                                    ![\n                                                        PAYROLL_PROCESS_STATUS.paid,\n                                                        PAYROLL_PROCESS_STATUS.finilize,\n                                                        PAYROLL_PROCESS_STATUS.moveToRecon,\n                                                    ].includes(item.status_id) ? (\n                                                        <div className=''>\n                                                            <CustomCheckbox\n                                                                checked={isChecked}\n                                                                onChange={(e) =>\n                                                                    handleCheckbox(item, e)\n                                                                }\n                                                                disable={\n                                                                    selectedPageType == 'all_pages'\n                                                                }\n                                                            />\n                                                        </div>\n                                                    ) : (\n                                                        <div></div>\n                                                    )}\n                                                </td>\n\n                                                <td\n                                                    width={'200px'}\n                                                    className=' text-cmGrey800  cursor-pointer'\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.id}\n                                                    >\n                                                        <CustomImage\n                                                            src={item?.image}\n                                                            className='avatar me-3'\n                                                            alt='img'\n                                                        />{' '}\n                                                        {item?.first_name ?? '-'}{' '}\n                                                        {item?.last_name ?? '-'}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n\n                                                <td className='' width={'80px'}>\n                                                    {item?.approvals_and_requests_status ? (\n                                                        <div\n                                                            className='text-cmBlue-Crayola text-decoration-underline cursor-pointer '\n                                                            onClick={() => {\n                                                                setShowRequestModal(true)\n                                                                setPayrollMetaData({\n                                                                    payroll_id: item?.payroll_id,\n                                                                    name: `${item?.first_name} ${item?.last_name}`,\n                                                                    user_id: item?.id,\n                                                                    pay_period_from,\n                                                                    pay_period_to,\n                                                                })\n                                                            }}\n                                                        >\n                                                            View\n                                                        </div>\n                                                    ) : (\n                                                        <div>-</div>\n                                                    )}\n                                                </td>\n\n                                                {/* <td className='p-3 '>\n                                                    {item?.position ?? '-'}\n                                                </td> */}\n\n                                                <td\n                                                    width={'115x'}\n                                                    className=' text-decoration-underline cursor-pointer'\n                                                    onClick={() => {\n                                                        setShowCreateAppModal(true)\n                                                        setPayrollMetaData({\n                                                            payroll_id: item?.payroll_id,\n                                                            name: `${item?.first_name}  ${item?.last_name}`,\n                                                            user_id: item?.id,\n                                                            pay_period_from,\n                                                            pay_period_to,\n                                                        })\n                                                    }}\n                                                >\n                                                    {formattedNumberFields(item?.commission)}\n                                                </td>\n\n                                                <td\n                                                    width={'120px'}\n                                                    className='  text-decoration-underline cursor-pointer'\n                                                    onClick={() => {\n                                                        setShowOverridesModal(true)\n                                                        setPayrollMetaData({\n                                                            payroll_id: item?.payroll_id,\n                                                            user_id: item?.id,\n                                                            name: `${item?.first_name}  ${item?.last_name}`,\n                                                            pay_period_from,\n                                                            pay_period_to,\n                                                        })\n                                                    }}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.override ?? '000',\n                                                        '$'\n                                                    )}\n                                                </td>\n\n                                                <td\n                                                    width={'135px'}\n                                                    className='  text-decoration-underline cursor-pointer'\n                                                    onClick={() => {\n                                                        setShowAdjustmentModal(true)\n                                                        setPayrollMetaData({\n                                                            payroll_id: item?.payroll_id,\n                                                            name: `${item?.first_name}  ${item?.last_name}`,\n                                                            pay_period_from,\n                                                            pay_period_to,\n                                                            user_id: item?.id,\n                                                        })\n                                                    }}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.adjustment ?? '000',\n                                                        '$'\n                                                    )}\n                                                </td>\n\n                                                <td\n                                                    width={'135px'}\n                                                    className='  text-decoration-underline cursor-pointer'\n                                                    onClick={() => {\n                                                        setShowReimbursementsModal(true)\n                                                        setPayrollMetaData({\n                                                            payroll_id: item?.payroll_id,\n                                                            name: `${item?.first_name}  ${item?.last_name}`,\n                                                            pay_period_from,\n                                                            pay_period_to,\n                                                            user_id: item?.id,\n                                                        })\n                                                    }}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.reimbursement ?? '000',\n                                                        '$'\n                                                    )}\n                                                </td>\n\n                                                <td\n                                                    width={'110px'}\n                                                    className=' text-decoration-underline cursor-pointer'\n                                                    onClick={() => {\n                                                        setShowDeductionsModal(true)\n                                                        setPayrollMetaData({\n                                                            payroll_id: item?.payroll_id,\n                                                            name: `${item?.first_name}  ${item?.last_name}`,\n                                                            pay_period_from,\n                                                            pay_period_to,\n                                                            user_id: item?.id,\n                                                        })\n                                                    }}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.deduction ?? '000',\n                                                        '$'\n                                                    )}\n                                                </td>\n\n                                                {companySetting?.reconciliation ? (\n                                                    <td className='' width={'120px'}>\n                                                        {formattedNumberFields(\n                                                            item?.reconciliation ?? '000',\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                ) : null}\n\n                                                <td\n                                                    width={'120px'}\n                                                    className={` text-${\n                                                        item?.status == 'skipped'\n                                                            ? 'cmError'\n                                                            : // : item?.status == 'next_payroll'\n                                                              // ? 'cminfo'\n                                                              'cmGrey900'\n                                                    } `}\n                                                    style={{\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                    }}\n                                                >\n                                                    {\n                                                        <>\n                                                            <span\n                                                                className={\n                                                                    Number(item?.net_pay ?? 0) < 0\n                                                                        ? 'bi bi-exclamation-triangle text-cmError me-2'\n                                                                        : ''\n                                                                }\n                                                            />\n                                                            {!item?.is_mark_paid &&\n                                                            [\n                                                                PAYROLL_PROCESS_STATUS.pending,\n                                                                PAYROLL_PROCESS_STATUS.finilize,\n                                                                PAYROLL_PROCESS_STATUS.nextPayroll,\n                                                            ].includes(item.status_id)\n                                                                ? formattedNumberFields(\n                                                                      item?.net_pay ?? '000',\n                                                                      '$'\n                                                                  )\n                                                                : null}\n                                                            {item?.is_mark_paid ? (\n                                                                <span className=' pt-2 text-cminfo'>\n                                                                    Paid\n                                                                </span>\n                                                            ) : null}\n\n                                                            {/* {PAYROLL_PROCESS_STATUS.nextPayroll ==\n                                                            item?.status_id ? (\n                                                                <span className=' pt-2 text-cminfo'>\n                                                                    Next Payroll\n                                                                </span>\n                                                            ) : null} */}\n                                                            {PAYROLL_PROCESS_STATUS.moveToRecon ==\n                                                            item?.status_id ? (\n                                                                <span className=' pt-2 text-cminfo'>\n                                                                    Recon\n                                                                </span>\n                                                            ) : null}\n                                                        </>\n                                                    }\n                                                </td>\n\n                                                <td width={'60px'} className=' '>\n                                                    {item?.is_mark_paid ||\n                                                    [\n                                                        PAYROLL_PROCESS_STATUS.moveToRecon,\n                                                        PAYROLL_PROCESS_STATUS.paid,\n                                                    ].includes(item.status_id) ||\n                                                    item?.PayrollShiftHistorie_count > 0 ? (\n                                                        <CustomTooltip\n                                                            title={\n                                                                item?.is_mark_paid\n                                                                    ? 'Undo Paid'\n                                                                    : item?.status_id == 6\n                                                                    ? 'Undo Recon'\n                                                                    : item?.PayrollShiftHistorie_count >\n                                                                      0\n                                                                    ? 'Undo Next Payroll'\n                                                                    : ''\n                                                            }\n                                                        >\n                                                            {/* <div\n                                                                className='bi bi-arrow-counterclockwise text-cminfo bg-cmBlue-Crayola bg-opacity-10 fs-1 border border-1 cursor-pointer px-2 rounded'\n                                                                onClick={() => handleUndo(item)}\n                                                            /> */}\n                                                            <KTSVG\n                                                                path='/media/icons/duotune/art/arrow-anti-clockwise.svg'\n                                                                svgClassName='h-35px w-35px cursor-pointer'\n                                                                onClick={() => handleUndo(item)}\n                                                            />\n                                                        </CustomTooltip>\n                                                    ) : null}\n\n                                                    {item?.comment && (\n                                                        <i\n                                                            // className='btn btn-secondary'\n                                                            data-toggle='tooltip'\n                                                            title={item?.comment}\n                                                            style={{\n                                                                fontSize: '20px',\n                                                                cursor: 'pointer',\n                                                            }}\n                                                            className='bi bi-chat-fill text-hover-black text-cmOrange'\n                                                        >\n                                                            {' '}\n                                                        </i>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                                </>\n                            ) : (\n                                <tr key='no-data'>\n                                    <td\n                                        colSpan={12}\n                                        style={{\n                                            textAlign: 'center',\n                                            fontFamily: 'Manrope',\n                                            fontWeight: '500',\n                                            fontSize: 14,\n                                            paddingTop: 20,\n                                            paddingBottom: 20,\n                                        }}\n                                    >\n                                        No data found\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n                {tableData?.data && !selectedPageType ? (\n                    <Pagination\n                        page={activePage && activePage}\n                        totalPages={tableData?.last_page}\n                        setPage={(changedPage) => {\n                            onPageChange(changedPage)\n                        }}\n                    />\n                ) : null}\n            </div>\n\n            {/* {open ? (\n                <EditRunPayroll\n                    show={open}\n                    handleClose={handleClose}\n                    editData={editData}\n                    getPayrollData={getPayrollData}\n                    currentPayPeriod={currentPayPeriod}\n                />\n            ) : null} */}\n            {showCreateAppModal ? (\n                <PayRollCommissionsTable\n                    show={showCreateAppModal}\n                    handleClose={handleCloseCommissions}\n                    payrollMetaData={payrollMetaData}\n                    finalize_status={false}\n                />\n            ) : null}\n            <PayrollAdjustments\n                show={showAdjustmentModal}\n                handleClose={handleCloseAdjustment}\n                payrollMetaData={payrollMetaData}\n            />\n            <PayRollReimbursTable\n                show={showReimbursementsModal}\n                handleClose={handleReimbursement}\n                payrollMetaData={payrollMetaData}\n            />\n            {showDeductionsModal ? (\n                <PayRollDeductionTable\n                    show={showDeductionsModal}\n                    handleClose={handleDeduction}\n                    payrollMetaData={payrollMetaData}\n                    finalize_status={false}\n                />\n            ) : null}\n            {showOverridesModal ? (\n                <PayRollOverridesTable\n                    show={showOverridesModal}\n                    handleClose={handleOverrides}\n                    payrollMetaData={payrollMetaData}\n                    finalize_status={false}\n                />\n            ) : null}\n            {showRequestModal ? (\n                <ViewPayrollRequestModal\n                    show={showRequestModal}\n                    handleClose={() => setShowRequestModal(false)}\n                    payrollMetaData={payrollMetaData}\n                    getPayrollData={getPayrollData}\n                />\n            ) : null}\n            <ViewSummary />\n        </>\n    )\n}\n\nexport {RunPayrollTabel}\n","import React, {useCallback, useEffect, useState} from 'react'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {Dialog} from 'primereact/dialog'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {getReconciliationScheduleSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport {useSelector} from 'react-redux'\nimport {moveToReconciliationPayrollService} from '../../../../../../services/Services'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\n\nconst MoveToReconcilitationPopUp = ({\n    show,\n    handleClose,\n    selectedArr,\n    setSelectedArr,\n    getPayrollData,\n    selectedPageType,\n}) => {\n    const [loading, setLoading] = useState(false)\n    const [selectedPeriod, setSelectedPeriod] = useState(null)\n    const [payrollError, setPayrollError] = useState(null)\n    const reconciliationSchedule = useSelector(getReconciliationScheduleSelector)\n\n    const handlePayPeriod = (e) => {\n        setPayrollError(null)\n        const period =\n            reconciliationSchedule?.length > 0\n                ? reconciliationSchedule?.find((item) => item?.id == e.target.value)\n                : null\n        setSelectedPeriod(period)\n    }\n    const onMoveToRecon = () => {\n        if (!selectedPeriod) return setPayrollError('Select period')\n        setLoading(true)\n        const body = {\n            payrollId: selectedArr,\n            period_from: selectedPeriod?.period_from,\n            period_to: selectedPeriod?.period_to,\n        }\n        // if (selectedPageType) body.select_type = selectedPageType\n        // if (selectedPageType == 'all_pages') body.payrollId = []\n        moveToReconciliationPayrollService(body)\n            .then(() => {\n                handleClose()\n                getPayrollData()\n                setSelectedArr([])\n                CustomToast.success('Moved To Reconciliation')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    return (\n        <Dialog\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            header='Move To Reconciliation'\n            className='mw-sm-800px w-sm-75'\n            visible={show}\n            onHide={handleClose}\n            backdrop={true}\n        >\n            <hr className='m-0 p-0 text-cmGrey900' />\n            <div\n                className='m-0 p-0'\n                style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n            >\n                <CustomLoader full visible={loading} />\n\n                <div className=''>\n                    <div className='modal-body  py-2 px-lg-10 mb-5'>\n                        <div className='py-lg-3 px-lg-10 '>\n                            <>\n                                <div\n                                    className='d-flex align-items-center flex-wrap justify-content-between w-sm-75 mx-auto'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    <div>\n                                        <h4\n                                            className='text-cmGrey800 mb-sm-5 mb-3'\n                                            style={{fontWeight: '900'}}\n                                        >\n                                            Recon Period:\n                                        </h4>\n                                    </div>\n                                    <div className='w-sm-auto w-100'>\n                                        <select\n                                            style={{\n                                                fontWeight: '700',\n                                                fontSize: '14px',\n                                            }}\n                                            onChange={handlePayPeriod}\n                                            data-control='select2'\n                                            data-hide-search='true'\n                                            className={`form-select form-select-black form-select-sm text-cmGrey800 bg-cmGrey200 cursor-pointer ${\n                                                payrollError ? 'border-2 border-cmError' : ''\n                                            }`}\n                                        >\n                                            <option style={{fontWeight: 600}} value=''>\n                                                Select PayPeriod\n                                            </option>\n                                            {reconciliationSchedule?.map((item) => (\n                                                <option\n                                                    key={item?.id}\n                                                    className='h-35px'\n                                                    value={item?.id}\n                                                    style={{\n                                                        background: '#FFFFFF',\n                                                        fontWeight: '600',\n                                                    }}\n                                                >\n                                                    {getValidDate(item?.period_from)} -{' '}\n                                                    {getValidDate(item?.period_to)}\n                                                </option>\n                                            ))}\n                                        </select>\n                                        {payrollError ? (\n                                            <div className='h-20px'>\n                                                <small id='' className='p-error block'>\n                                                    {payrollError}\n                                                </small>\n                                            </div>\n                                        ) : null}\n                                    </div>\n                                </div>\n                                <hr style={{height: '2px'}} />\n                            </>\n                        </div>\n                    </div>\n                    <div className='text-center'>\n                        <div\n                            className='btn bg-cmBlue-Crayola py-2 text-cmwhite'\n                            style={{fontWeight: '500'}}\n                            onClick={onMoveToRecon}\n                        >\n                            Move\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MoveToReconcilitationPopUp\n","import React, {useCallback, useMemo} from 'react'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport CustomInput from '../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {useSelector} from 'react-redux'\nimport {getPositionsSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport CustomCheckbox from '../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {displayfilterCounts} from '../../../../helpers/CommonHelpers'\n\nconst FILTER_KEYS = {\n    position: 'position_filter',\n    netPay: 'netpay_filter',\n    commission: 'commission_filter',\n}\n\nconst RunPayrollFilter = ({initialFilter = null, onApplyFilter = null, resetFilter = null}) => {\n    const [filterProps, filterData, setFilterData] = useFilterButton(initialFilter, onApplyFilter)\n    const positionList = useSelector(getPositionsSelector)\n    const RUNPAYROLL_STATUS = [\n        // {name: 'Moved To Next Payroll', value: '4'},\n        // {name: 'Skipped', value: '5'},\n        {name: 'Negative Amount', value: 'negative_amount'},\n    ]\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n\n    const resetFilterData = useCallback(() => {\n        setFilterData(initialFilter)\n        resetFilter()\n    }, [filterData])\n\n    return (\n        <CustomFilterButton {...filterProps} onResetClick={resetFilterData} filterData={filterData}>\n            {/* Position */}\n            {/* <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Position'}\n                    value={filterData?.[FILTER_KEYS.position]}\n                    name={FILTER_KEYS.position}\n                    onChange={onChangeInputData}\n                    options={positionList}\n                    displayKey='position'\n                    valueKey='id'\n                />\n            </div> */}\n            {/* Net pay (Payroll) */}\n            <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Net pay (Payroll)'}\n                    value={filterData?.[FILTER_KEYS.netPay]}\n                    name={FILTER_KEYS.netPay}\n                    onChange={onChangeInputData}\n                    options={RUNPAYROLL_STATUS}\n                />\n            </div>\n            {/* <div className='mb-5 d-flex align-items-center gap-3'>\n                <CustomCheckbox />\n                <div className='text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    Commissions are $0\n                </div>\n            </div> */}\n        </CustomFilterButton>\n    )\n}\n\nexport default RunPayrollFilter\n","import React from 'react'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomLottie from '../../../../../../customComponents/customLottie/CustomLottie'\nimport CheckAnimation from '../../../../../../assets/lottieAnimation/CheckAnimation'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport {useNavigate} from 'react-router-dom'\n\nconst PayrollExecuteModal = ({show, handleClose, refreshPayFrequency, selectedPayPeriod}) => {\n    const naviagte = useNavigate()\n    const redirectToReport = () => {\n        refreshPayFrequency()\n        naviagte('/reports/payroll', {state: {period: selectedPayPeriod}})\n    }\n    return (\n        <CustomModal show={show} onHide={handleClose} maxWidth='425' showHeader={false}>\n            <div style={{fontFamily: fontsFamily.manrope}} className='text-center'>\n                <div className='d-flex flex-center p-0 m-0'>\n                    <CustomLottie lottieJson={CheckAnimation} height={73} width={73} />\n                </div>\n                <div className='text-center mb-10'>\n                    <div style={{fontSize: 20, fontWeight: 600}} className='text-cmGrey800 mb-5'>\n                        Payroll Executed!\n                    </div>\n                    <div\n                        style={{fontSize: 16, fontWeight: 600, lineHeight: '26px'}}\n                        className='text-cmGrey600'\n                    >\n                        You can view the executed payroll in the reports section!\n                    </div>\n                </div>\n                {/* Buttons */}\n                <div className='d-flex flex-center flex-wrap gap-10'>\n                    <CustomButton\n                        type={BUTTON_TYPE.primaryBorder}\n                        buttonLabel='Thanks!'\n                        padding={'px-10'}\n                        onClick={handleClose}\n                    />\n                    <CustomButton\n                        buttonLabel='View Report'\n                        padding={'px-10'}\n                        onClick={redirectToReport}\n                    />\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default PayrollExecuteModal\n","import React from 'react'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\n\nconst ExecuteConfirmModal = ({show, handleClose}) => {\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='500'\n            showline={false}\n            borderColor={'cminfo'}\n        >\n            <div\n                style={{\n                    fontSize: 16,\n                    fontWeight: 600,\n                    lineHeight: '26px',\n                    fontFamily: fontsFamily.manrope,\n                }}\n                className='text-cmGrey800 px-sm-20 text-center'\n            >\n                All employees are marked as paid. <br /> You can close this payroll now!\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default ExecuteConfirmModal\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n    closePayrollService,\n    executePayrollService,\n    exportPayrollReportService,\n    finilizePayrollService,\n    getPayrollDataService,\n    markAsPaidPayrollService,\n    moveToNextPayrollService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport debounce from 'lodash.debounce'\nimport {RunPayrollTabel} from './RunPayrollTabel'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport usePayFrequency from '../../../../../../hooks/usePayFrequency'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {\n    getMonthlyPayPeriodAction,\n    getPayFrequencySettingAction,\n    getWeeklyPayPeriodAction,\n} from '../../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport ViewSummary from './ViewSummary'\nimport MoveToReconcilitationPopUp from './MoveToReconModal'\nimport {\n    downloadAnyFileHelper,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport RunPayrollFilter from '../../../filters/RunPayrollFilter'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport PayrollExecuteModal from './PayrollExecuteModal'\nimport ExecuteConfirmModal from './ExecuteConfirmModal'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../../redux/selectors/SettingsSelectors'\n\nimport moment from 'moment'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomLink from '../../../../../../customComponents/customButtton/CustomLink'\n\nconst initialFilter = {\n    position_filter: '',\n    netpay_filter: '',\n    commission_filter: '',\n}\n\nexport default function RunPayroll() {\n    const [loading, setLoading] = useState(false)\n    const [payrollTableData, setPayrollTableData] = useState([])\n    const [selectedPayroll, setSelectedPayrollData] = useState([])\n    const [showReconModal, setShowReconModal] = useState(false)\n    const [selectedPageType, setSelectedPageType] = useState(null)\n    const [showOnlyEnabledReconciliation, setShowOnlyEnabledReconciliation] = useState(false)\n    const {\n        weekDropdownList,\n        payPeriodList,\n        handleSelectedWeekData,\n        selectedPayPeriod,\n        currentPayPeriod,\n        nextPayPeriod,\n        setSelectedPayPeriod,\n        selectedWeekData,\n    } = usePayFrequency()\n    const navigate = useNavigate()\n    const [page, setPage] = useState(1)\n    const [searchTerm, setSearchTerm] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [showSummary, setShowSummary] = useState(false)\n    const [buttonLoading, setButtonLoading] = useState(false)\n    const [payrollConfigData, setPayrollConfigData] = useState(null)\n    const [executePayroll, setExecutePayroll] = useState(false)\n    const [executeConfirm, setExecuteConfirm] = useState(false)\n    const companySetting = useSelector(getCompanySettingSelector)\n    const [filterData, setFilterData] = useState(initialFilter)\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getPayFrequencySettingAction())\n    }, [])\n\n    useEffect(() => {\n        setSelectedPayrollData([])\n        setSelectedPageType(null)\n    }, [showOnlyEnabledReconciliation])\n\n    //get payroll data\n    useEffect(() => {\n        getPayrollData()\n    }, [\n        searchTerm,\n        selectedPayPeriod,\n        payPeriodList,\n        page,\n        showOnlyEnabledReconciliation,\n        filterData,\n    ])\n\n    //function to get payroll data\n    const getPayrollData = useCallback(() => {\n        let startDate = currentPayPeriod?.pay_period_from ?? null,\n            endDate = currentPayPeriod?.pay_period_to ?? null\n\n        if (startDate && endDate) {\n            setLoading(true)\n            const body = {\n                office_id: 'all',\n                start_date: getValidDate(startDate, 'YYYY-MM-DD'),\n                end_date: getValidDate(endDate, 'YYYY-MM-DD'),\n                search: searchTerm,\n                is_reconciliation: showOnlyEnabledReconciliation ? 1 : 0,\n                page: page,\n                pay_frequency: weekDropdownList?.find(\n                    (item) => selectedWeekData == item?.frequency_type_name\n                )?.frequency_type_id,\n                ...filterData,\n            }\n            getPayrollDataService(body)\n                .then((res) => {\n                    res?.data?.data?.sort((a, b) => a.first_name.localeCompare(b.first_name))\n                    setPayrollTableData(res?.data)\n                    setPayrollConfigData(res)\n                })\n                .finally(() => setLoading(false))\n        }\n    }, [\n        currentPayPeriod?.pay_period_from,\n        currentPayPeriod?.pay_period_to,\n        filterData,\n        page,\n        searchTerm,\n        selectedWeekData,\n        showOnlyEnabledReconciliation,\n        weekDropdownList,\n    ])\n\n    useEffect(() => {\n        if (page == 1) setExecuteConfirm(payrollConfigData?.all_paid)\n    }, [payrollTableData])\n\n    const payrollSearch = (e) => {\n        setSearchVal(e.target.value)\n        delaySaveToDb(e.target.value)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setPage(1)\n            setSearchTerm(val)\n        }, 500),\n        []\n    )\n    const periodChange = (e) => {\n        setSearchVal('')\n        setSearchTerm('')\n        setSelectedPayrollData([])\n        setPage(1)\n        setSelectedPageType(null)\n        setFilterData(initialFilter)\n        setSelectedPayPeriod(e?.target?.value)\n    }\n    const handleFinilizeAdd = () => {\n        if (!payrollConfigData?.finalize_status) {\n            CustomDialog.warn('Are you sure you want to finalize ?', () => {\n                // setLoading(true)\n                setButtonLoading(true)\n                const body = {\n                    start_date: currentPayPeriod?.pay_period_from,\n                    end_date: currentPayPeriod?.pay_period_to,\n                    search: searchTerm,\n                    select_type: '',\n                }\n\n                finilizePayrollService(body)\n                    .then(() => {\n                        // refreshPayFrequency()\n                        getPayrollData()\n                    })\n                    .catch((e) => {\n                        CustomToast.error(getErrorMessageFromResponse(e))\n                    })\n                    .finally(() => setButtonLoading(false))\n            })\n        } else {\n            CustomDialog.warn('Are you sure you want to execute ?', () => {\n                // setLoading(true)\n                setButtonLoading(true)\n                const body = {\n                    start_date: currentPayPeriod?.pay_period_from,\n                    end_date: currentPayPeriod?.pay_period_to,\n                }\n                executePayrollService(body)\n                    .then(() => {\n                        setExecutePayroll(true)\n\n                        refreshPayFrequency()\n                    })\n                    .catch((e) => {\n                        CustomToast.error(getErrorMessageFromResponse(e))\n                    })\n                    .finally(() => setButtonLoading(false))\n            })\n        }\n    }\n\n    const onMoveToNextPayroll = () => {\n        setLoading(true)\n        const body = {\n            payrollId: selectedPayroll,\n            start_date: nextPayPeriod?.pay_period_from,\n            end_date: nextPayPeriod?.pay_period_to,\n        }\n\n        moveToNextPayrollService(body)\n            .then(() => {\n                getPayrollData()\n                setSelectedPayrollData([])\n                setSelectedPageType(null)\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n                CustomToast.success('Payroll moved to next')\n            })\n    }\n    const onMarkAsPaid = () => {\n        setLoading(true)\n        const body = {\n            payrollId: selectedPayroll,\n            pay_period_from: currentPayPeriod?.pay_period_from,\n            pay_period_to: currentPayPeriod?.pay_period_to,\n            select_type: selectedPageType ?? 'this_page',\n        }\n        // if (selectedPageType) body.select_type = selectedPageType\n        if (selectedPageType == 'all_pages') body.payrollId = []\n\n        markAsPaidPayrollService(body)\n            .then(() => {\n                getPayrollData()\n                setSelectedPayrollData([])\n                setSelectedPageType(null)\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n                CustomToast.success('Payroll marked as paid')\n            })\n    }\n    const onMoveToReconciliation = () => {\n        setShowReconModal(true)\n        return\n    }\n    const onChangeWeek = (e) => {\n        setFilterData(initialFilter)\n\n        handleSelectedWeekData(e.target.value)\n    }\n\n    const handleViewSummary = () => {\n        setShowSummary(!showSummary)\n    }\n\n    const periodList = useMemo(() => {\n        return payPeriodList?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.pay_period_from)} to ${getValidDate(\n                item?.pay_period_to\n            )}`,\n        }))\n    }, [payPeriodList])\n\n    const onApplyFilter = (filter) => {\n        setPage(1)\n        setSearchTerm('')\n        setSearchVal('')\n        setFilterData(filter)\n    }\n\n    const onResetFilter = () => {\n        setPage(1)\n        setSearchTerm('')\n        setSearchVal('')\n        setFilterData(initialFilter)\n        // getlocation()\n    }\n\n    const onShowReconciliationsPosiitons = () => {\n        setPage(1)\n        setSearchTerm('')\n        setSearchVal('')\n        setShowOnlyEnabledReconciliation((val) => !val)\n    }\n\n    const handlePayrolModal = () => {\n        setExecutePayroll(!executePayroll)\n    }\n    const handleExecute = () => {\n        setExecuteConfirm(!executeConfirm)\n    }\n\n    const refreshPayFrequency = useCallback(() => {\n        dispatch(getWeeklyPayPeriodAction())\n        dispatch(getMonthlyPayPeriodAction())\n        getPayrollData()\n    }, [dispatch, getPayrollData])\n    // const isAllPayrollPaid = useMemo(() => {\n    //     return payrollTableData?.data?.every((item) => item?.status_id === 3)\n    // }, [payrollTableData?.data, payrollTableData])\n\n    const handleClosePayroll = () => {\n        CustomDialog.warn('Are you sure you want to close this payroll ?', () => {\n            setLoading(true)\n            const body = {\n                start_date: currentPayPeriod?.pay_period_from,\n                end_date: currentPayPeriod?.pay_period_to,\n            }\n            closePayrollService(body)\n                .then(() => {\n                    refreshPayFrequency()\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        })\n    }\n\n    const navigateAlertButton = (type) => {\n        navigate(`/alert-center/alerts?alertType=${type}&page=1&search=null`, {\n            state: {alertType: type},\n        })\n    }\n\n    const downloadCsvFile = useCallback(() => {\n        let startDate = currentPayPeriod?.pay_period_from ?? null,\n            endDate = currentPayPeriod?.pay_period_to ?? null\n        setLoading(true)\n        const body = {\n            start_date: getValidDate(startDate, 'YYYY-MM-DD'),\n            end_date: getValidDate(endDate, 'YYYY-MM-DD'),\n            pay_frequency: weekDropdownList?.find(\n                (item) => selectedWeekData == item?.frequency_type_name\n            )?.frequency_type_id,\n            type: 'payroll_paid',\n        }\n        exportPayrollReportService(body)\n            .then((res) => {\n                const fileName = `Payroll Reports - ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [\n        currentPayPeriod?.pay_period_from,\n        currentPayPeriod?.pay_period_to,\n        selectedWeekData,\n        weekDropdownList,\n    ])\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div\n                className='engage-toolbar d-flex position-fixed px-5 top-50 end-0 transform-90 mt-20 gap-2'\n                style={{zIndex: '10'}}\n            >\n                <button\n                    style={{border: '1px solid #6078EC', borderRadius: '12px'}}\n                    id='kt_engage_demos_toggle1'\n                    className='engage-demos-toggle btn btn-flex h-35px bg-body  shadow-sm fs-6 px-4 rounded-top-0'\n                    title={`Check out ${process.env.REACT_APP_THEME_NAME} more demos`}\n                    data-bs-placement='left'\n                    data-bs-dismiss='click'\n                    data-bs-trigger='hover'\n                >\n                    <span style={{color: '#6078EC'}} onClick={handleViewSummary}>\n                        View Summary\n                    </span>\n                </button>\n            </div>\n            <div\n                className='bg-cmwhite h-auto'\n                style={{\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    borderRadius: '0 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div className='w-100 gap-2 p-8 d-flex flex-wrap align-items-center justify-content-between'>\n                    <div\n                        style={{height: '43px', borderRadius: '20px'}}\n                        className='mb-1'\n                        id='kt_chat_contacts_header'\n                    >\n                        <form\n                            className='position-relative'\n                            style={{borderRadius: '90px'}}\n                            autoComplete='off'\n                        >\n                            {/* Run Payroll Search Input */}\n                            <CustomInput\n                                type={INPUT_TYPE.search}\n                                name='search'\n                                value={searchVal}\n                                onChange={payrollSearch}\n                            />\n                        </form>\n                    </div>\n                    <div>\n                        <CustomDropdown\n                            onChange={onChangeWeek}\n                            options={weekDropdownList}\n                            value={selectedWeekData}\n                            showClear={false}\n                            searching={false}\n                            valueKey='name'\n                        />\n                    </div>\n                    <div\n                        className=' mb-1 fw-bold d-flex flex-row w-250px'\n                        style={{\n                            borderRadius: '6px',\n                            height: '40px',\n                        }}\n                    >\n                        <CustomDropdown\n                            name='status'\n                            onChange={periodChange}\n                            options={periodList}\n                            valueKey='id'\n                            displayKey='period'\n                            value={selectedPayPeriod}\n                            showClear={false}\n                        />\n                    </div>\n                    {/* filter */}\n\n                    <div>\n                        {' '}\n                        <RunPayrollFilter\n                            initialFilter={initialFilter}\n                            onApplyFilter={(updatedFilter) => {\n                                onApplyFilter(updatedFilter)\n                            }}\n                            resetFilter={onResetFilter}\n                        />\n                    </div>\n                    <div>\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.disabled}\n                            buttonLabel='Export To CSV'\n                            onClick={downloadCsvFile}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            {payrollTableData?.data?.length > 0 &&\n            selectedPayroll?.length <= 0 &&\n            !payrollConfigData?.all_paid ? (\n                <div className=' my-5 '>\n                    <div className=''>\n                        <CustomButton\n                            buttonType={\n                                !payrollConfigData?.finalize_status\n                                    ? BUTTON_TYPE.secondaryBorder\n                                    : BUTTON_TYPE.primary\n                            }\n                            buttonLabel={\n                                !payrollConfigData?.finalize_status ? (\n                                    <label>\n                                        {buttonLoading ? 'Finalizing payroll' : 'Finalize Payroll'}\n                                    </label>\n                                ) : (\n                                    <label>\n                                        {buttonLoading ? 'Executing payroll' : 'Execute Payroll'}\n                                    </label>\n                                )\n                            }\n                            onClick={handleFinilizeAdd}\n                            loading={buttonLoading}\n                            buttonSize={BUTTON_SIZE.large}\n                            icon={!payrollConfigData?.finalize_status ? 'bi bi-calendar2' : ''}\n                        />\n                        {companySetting?.reconciliation ? (\n                            <div className='d-flex justify-content-between'>\n                                <div className='d-flex flex-row align-items-center gap-3 mt-5 justify-content-center'>\n                                    <div>\n                                        <CustomCheckbox\n                                            checked={showOnlyEnabledReconciliation}\n                                            onChange={onShowReconciliationsPosiitons}\n                                        />\n                                    </div>\n                                    <div\n                                        style={{fontSize: 12, fontWeight: 600}}\n                                        className='text-cmGrey600'\n                                    >\n                                        Show reconciliations positions only\n                                    </div>\n                                </div>\n                                <div className='d-flex flex-end me-2'>\n                                    <CustomLink\n                                        label={'View all Alert'}\n                                        onClick={() => navigate('/alert-center/alerts')}\n                                    />\n                                </div>\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n            ) : null}\n            {payrollConfigData?.all_paid && currentPayPeriod ? (\n                <div className='d-flex justify-content-center my-8'>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.successBorder}\n                        buttonLabel={'Close Payroll'}\n                        onClick={handleClosePayroll}\n                    />\n                </div>\n            ) : null}\n\n            {selectedPayroll?.length > 0 ? (\n                <div\n                    className='d-flex flex-wrap justify-content-evenly align-items-start my-10'\n                    style={{fontWeight: '700', fontSize: '16px'}}\n                >\n                    <CustomButton\n                        key='mark-as-paid-button'\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel='Mark as Paid'\n                        onClick={onMarkAsPaid}\n                        buttonSize={BUTTON_SIZE.small}\n                    />\n                    {companySetting?.reconciliation ? (\n                        <div>\n                            <CustomButton\n                                disabled={!showOnlyEnabledReconciliation}\n                                key='move-to-reconciliation-button'\n                                buttonType={BUTTON_TYPE.primary}\n                                buttonLabel='\n                            Move to Reconciliations'\n                                onClick={onMoveToReconciliation}\n                                buttonSize={BUTTON_SIZE.small}\n                            />\n                        </div>\n                    ) : null}\n\n                    {selectedPageType != 'all_pages' ? (\n                        <CustomButton\n                            buttonSize={BUTTON_SIZE.small}\n                            key='move-to-next-payroll-button'\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel='Move to Next Payroll'\n                            onClick={onMoveToNextPayroll}\n                        />\n                    ) : null}\n                </div>\n            ) : null}\n\n            {selectedPayroll?.length > 0 ? (\n                <div className='d-flex flex-row align-items-center mb-2'>\n                    <CustomCheckbox\n                        checked={showOnlyEnabledReconciliation}\n                        onChange={onShowReconciliationsPosiitons}\n                    />\n                    <span style={{fontSize: 12, fontWeight: 600}} className='text-cmGrey600 ms-2'>\n                        Show reconciliations positions only\n                    </span>\n                </div>\n            ) : null}\n\n            {selectedPayroll?.length > 0 && (\n                <div style={{fontSize: '12px', fontWeight: '700'}}>\n                    {selectedPageType == 'all_pages' ? (\n                        'All pages selected'\n                    ) : (\n                        <>\n                            {selectedPageType == 'all_pages'\n                                ? payrollTableData?.total\n                                : selectedPayroll?.length}{' '}\n                            / {payrollTableData?.total} Selected\n                        </>\n                    )}\n                </div>\n            )}\n            <div>\n                <RunPayrollTabel\n                    pay_period_from={currentPayPeriod?.pay_period_from}\n                    pay_period_to={currentPayPeriod?.pay_period_to}\n                    selectedPayroll={selectedPayroll}\n                    setSelectedPayrollData={setSelectedPayrollData}\n                    finalize_status={payrollConfigData?.finalize_status}\n                    tableData={payrollTableData}\n                    activePage={page}\n                    onPageChange={(selectedPage) => setPage(selectedPage)}\n                    getPayrollData={getPayrollData}\n                    currentPayPeriod={currentPayPeriod}\n                    setSelectedPageType={setSelectedPageType}\n                    selectedPageType={selectedPageType}\n                    isAllPayrollPaid={payrollConfigData?.all_paid}\n                />\n            </div>\n\n            {showSummary ? (\n                <ViewSummary\n                    open={showSummary}\n                    close={handleViewSummary}\n                    periodList={payPeriodList}\n                    selectedWeekData={selectedWeekData}\n                    currentPayPeriod={currentPayPeriod}\n                />\n            ) : null}\n            {showReconModal ? (\n                <MoveToReconcilitationPopUp\n                    show={showReconModal}\n                    handleClose={() => setShowReconModal(false)}\n                    selectedArr={selectedPayroll}\n                    setSelectedArr={setSelectedPayrollData}\n                    getPayrollData={getPayrollData}\n                    selectedPageType={selectedPageType}\n                />\n            ) : null}\n            {executePayroll ? (\n                <PayrollExecuteModal\n                    show={executePayroll}\n                    handleClose={handlePayrolModal}\n                    refreshPayFrequency={refreshPayFrequency}\n                    selectedPayPeriod={selectedPayPeriod}\n                />\n            ) : null}\n            {executeConfirm ? (\n                <ExecuteConfirmModal show={executeConfirm} handleClose={handleExecute} />\n            ) : null}\n        </div>\n    )\n}\n","import React, {useEffect, useState, useCallback, useRef} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport DatePicker from 'react-datepicker'\nimport CustomDatePicker from '../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {\n    DEFAULT_DATE_FORMAT,\n    REPORTS_DURATION_DROPDOWN_LIST,\n    getValidDate,\n} from '../../../../../../constants/constants'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    downloadCsvFileService,\n    oneTimePaymentHistoryService,\n} from '../../../../../../services/Services'\nimport moment from 'moment'\nimport debounce from 'lodash.debounce'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {CSVLink} from 'react-csv'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport {BUTTON_SIZE} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\n\nconst OneTimePaymentHistory = ({handleShowHistory}) => {\n    const [historyData, setHistoryData] = useState(null)\n\n    const [loading, setLoading] = useState(false)\n    const [status, setStatus] = useState('all_status')\n    const [filter, setFilter] = useState('this_year')\n    const [startDate, setStartDate] = useState(null)\n    const [endDate, setEndDate] = useState(null)\n    const [search, setSearch] = useState(null)\n    const [searchTerm, setSearchTerm] = useState(null)\n    const [page, setPage] = useState(1)\n    const [csvData, setCsvData] = useState([])\n    const csvLink = useRef()\n    useEffect(() => {\n        const body = {\n            id: 4,\n            status: status,\n            filter: filter,\n        }\n        if (search) body.search = search\n        if (filter == 'custom') {\n            body.start_date = getValidDate(startDate, 'yyyy-MM-DD')\n            body.end_date = getValidDate(endDate, 'yyyy-MM-DD')\n        }\n        if (\n            filter != 'custom' ||\n            (filter == 'custom' &&\n                moment(startDate).isValid() &&\n                moment(endDate).isValid() &&\n                startDate <= endDate)\n        ) {\n            setLoading(true)\n            oneTimePaymentHistoryService(body)\n                .then((res) => setHistoryData(res.data))\n                .finally(() => setLoading(false))\n        }\n    }, [status, filter, startDate, endDate, search])\n\n    const resetState = useCallback(() => {\n        setPage(1)\n        setSearch(null)\n        setSearchTerm(null)\n    }, [])\n\n    const onChangeFilter = (data) => {\n        resetState()\n        setLoading(data == 'custom' ? false : true)\n        if (!(data == 'custom')) {\n            setStartDate(null)\n            setEndDate(null)\n        }\n        setFilter(data)\n    }\n\n    const handleSearch = (e) => {\n        setSearchTerm(e.target.value)\n        delaySaveToDb(e.target.value)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setSearch(val)\n        }, 500),\n        []\n    )\n\n    const downloadCsvFile = () => {\n        setLoading(true)\n        downloadCsvFileService(4)\n            .then((res) => {\n                setCsvData(res)\n                setTimeout(() => {\n                    csvLink.current.link.click()\n                }, 1000)\n                CustomToast.success('Downloaded Successfully')\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div\n                className='bg-cmwhite shadow mb-2'\n                style={{fontFamily: 'Manrope', fontWeight: '600', borderRadius: '10px'}}\n            >\n                {/* heading */}\n                <div className='d-flex align-items-center gap-10 px-10 py-5'>\n                    <div\n                        className='bi bi-box-arrow-left fs-1 text-cmGrey600 text-hover-dark cursor-pointer'\n                        onClick={handleShowHistory}\n                    />\n                    <div className='text-cmGrey900' style={{fontWeight: '600', fontSize: '16px'}}>\n                        One-time Payment History\n                    </div>\n                </div>\n                <hr className='text-cmGrey600 m-0  ' />\n\n                <div className='d-flex align-items-center flex-wrap gap-10 p-5'>\n                    {/* searchbar */}\n                    <form\n                        className='position-relative '\n                        style={{borderRadius: '90px'}}\n                        autoComplete='off'\n                    >\n                        <CustomInput\n                            type={INPUT_TYPE.search}\n                            name='search'\n                            onChange={handleSearch}\n                            value={searchTerm}\n                        />\n                    </form>\n                    {/* Range select */}\n                    <div>\n                        <CustomDropdown\n                            value={filter}\n                            showClear={false}\n                            searching={false}\n                            options={REPORTS_DURATION_DROPDOWN_LIST}\n                            valueKey='value'\n                            displayKey='name'\n                            onChange={(e) => onChangeFilter(e.target.value)}\n                        />\n                    </div>\n                    {/* date selector */}\n                    {filter == 'custom' && (\n                        <div className='d-flex align-items-center flex-row flex-wrap'>\n                            <div\n                                style={{background: '#F5F5F5', borderRadius: '6px'}}\n                                className='form-group d-flex flex-row'\n                            >\n                                <CustomDatePicker\n                                    placeholderText={'Start Date'}\n                                    name='startDate'\n                                    value={startDate}\n                                    onChange={(event) => setStartDate(event.target.value)}\n                                    maxDate={new Date()}\n                                />\n                            </div>\n                            <label className='m-4 ms-6 me-6' style={{color: '#757575'}}>\n                                to\n                            </label>\n                            <div\n                                style={{\n                                    background: '#F5F5F5',\n                                    overflow: 'hidden',\n                                    borderRadius: '6px',\n                                }}\n                                className='form-group  d-flex flex-row'\n                            >\n                                <CustomDatePicker\n                                    placeholderText={'End Date'}\n                                    name='startDate'\n                                    value={endDate}\n                                    onChange={(event) => setEndDate(event?.target?.value)}\n                                    maxDate={new Date()}\n                                    minDate={startDate}\n                                />\n                            </div>\n                        </div>\n                    )}\n                    {/* Status */}\n                    <div>\n                        <CustomDropdown\n                            showClear={false}\n                            value={status}\n                            searching={false}\n                            options={[\n                                {name: 'All Status', value: 'all_status'},\n                                {name: 'Success', value: 'success'},\n                                {name: 'Pending', value: 'pending'},\n                                {name: 'Failed', value: 'failed'},\n                            ]}\n                            onChange={(e) => setStatus(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className='table-responsive shadow-none overflow-auto'>\n                    <table className='table'>\n                        <thead className={TABLE_BORDER}>\n                            <tr\n                                className='bg-cmGrey300 text-cmGrey900'\n                                style={{\n                                    fontSize: '14px',\n                                    fontWeight: '700',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <th className='min-w-200px p-5 text-nowrap'>Date & Time</th>\n                                <th className='min-w-150px p-5 text-nowrap'>Employee</th>\n                                <th className='min-w-150px p-5 text-nowrap'>Description</th>\n                                <th className='min-w-150px p-5 text-nowrap'>TXN. ID</th>\n                                <th className='min-w-150px p-5 text-nowrap'>Status</th>\n                                <th className='min-w-150px p-5 text-nowrap'>Amount</th>\n                            </tr>\n                        </thead>\n                        <tbody className={TABLE_BORDER}>\n                            {historyData?.data?.length > 0 ? (\n                                <>\n                                    {historyData?.data?.map((item, i) => (\n                                        <tr\n                                            style={{\n                                                fontWeight: '600',\n                                                fontSize: '14px',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            <td className='p-5 text-nowrap text-cmGrey900'>\n                                                {getValidDate(\n                                                    item?.cost_date,\n                                                    `${DEFAULT_DATE_FORMAT} hh:mm`\n                                                )}\n                                            </td>\n                                            <td\n                                                className='p-5 text-decoration-underline text-nowrap text-cmGrey800 cursor-pointer'\n                                                style={{fontWeight: '700'}}\n                                            >\n                                                <RedirectToEmployeeProfile\n                                                    employeeId={item?.user_id}\n                                                >\n                                                    <CustomImage\n                                                        src={item?.user_data?.image}\n                                                        className='avatar me-3'\n                                                    />{' '}\n                                                    {item?.user_data?.first_name}{' '}\n                                                    {item?.user_data?.last_name}\n                                                </RedirectToEmployeeProfile>\n                                            </td>\n                                            <td className='p-5 text-nowrap text-cmGrey500'>\n                                                {item?.description}{' '}\n                                            </td>\n                                            <td className='p-5 text-nowrap text-cmGrey700'>\n                                                {item?.txn_id}{' '}\n                                            </td>\n                                            <td className='p-5 text-nowrap'>{item?.status} </td>\n                                            <td\n                                                className='p-5 text-nowrap text-cmGrey900'\n                                                style={{fontWeight: '700'}}\n                                            >\n                                                {formattedNumberFields(item?.amount)}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </>\n                            ) : (\n                                <tr>\n                                    <td\n                                        colSpan={6}\n                                        style={{\n                                            textAlign: 'center',\n                                            fontFamily: 'Manrope',\n                                            fontWeight: '500',\n                                            fontSize: 14,\n                                            paddingTop: 20,\n                                            paddingBottom: 20,\n                                        }}\n                                    >\n                                        No payment history\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            {historyData?.data?.length > 0 ? (\n                <Pagination\n                    page={page}\n                    totalPages={historyData?.last_page}\n                    setPage={(changedPage) => setPage(changedPage)}\n                />\n            ) : null}\n            <div className='text-center mt-10'>\n                <CustomButton\n                    buttonType={BUTTON_TYPE.primary}\n                    buttonLabel='Download CSV'\n                    onClick={downloadCsvFile}\n                />\n                <CSVLink\n                    data={csvData}\n                    filename={`${getValidDate(new Date())}PaymentHistory.csv`}\n                    className=''\n                    ref={csvLink}\n                    // target='_blank'\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default OneTimePaymentHistory\n","import React, {useCallback, useState, useEffect} from 'react'\nimport CustomSearchInput from '../../../../../../customComponents/customInputs/customSearchInput/CustomSearchInput'\nimport {\n    getFinilizePayrollService,\n    getRecuiterFilterService,\n    oneTimePaymentService,\n    oneTimePaymentTotalService,\n} from '../../../../../../services/Services'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {\n    oneTimePaymentValidation,\n    ONETIME_PAYMENT_VALIDATION_FIELD,\n} from '../../../../../../validations/validations'\nimport {\n    formattedNumberFields,\n    getErrorMessageFromResponse,\n    isEmptyObjectValue,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport OneTimePaymentHistory from './OneTimePaymentHistory'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\n\nexport default function OneTimePayment() {\n    const [selectedEmployee, setSelectedEmployee] = useState(null)\n    const [loading, setLoading] = useState(null)\n    const [payAmount, setPayAmount] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [paymentFormError, setPaymentFormError] = useState(ONETIME_PAYMENT_VALIDATION_FIELD)\n    const [showHistory, setshowHistory] = useState(false)\n    const [paymentTotal, setPaymentTotal] = useState(null)\n\n    useEffect(() => {\n        getFinilizePayrollService().then((res) => {})\n        oneTimePaymentTotalService(4)\n            .then((res) => setPaymentTotal(res.data))\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }, [])\n    const onSeachLead = useCallback(\n        (searchText) =>\n            new Promise((resolve) => {\n                getRecuiterFilterService(searchText)\n                    .then((res) => {\n                        const data = res?.data?.map((item) => ({\n                            ...item,\n                            name: `${item?.first_name} ${item?.last_name}`,\n                        }))\n\n                        resolve(data)\n                    })\n                    .catch(() => {\n                        resolve([])\n                    })\n            }),\n        []\n    )\n    const onSelectTeamLead = useCallback((value) => {\n        setSelectedEmployee(value)\n    }, [])\n\n    const payNow = (e) => {\n        e.preventDefault()\n        const body = {\n            user_id: selectedEmployee?.id,\n            amount: payAmount,\n            description: description,\n            adjustment_type_id: 3, // For now, Advance\n        }\n        const validationErrors = oneTimePaymentValidation(body)\n        setPaymentFormError(validationErrors)\n        if (isEmptyObjectValue(validationErrors)) {\n            setLoading(true)\n            oneTimePaymentService(body)\n                .then(() => {\n                    CustomToast.success('Payment Created Successfully')\n                    setPayAmount(null)\n                    setSelectedEmployee(null)\n                    setDescription(null)\n                    setPayAmount(null)\n                    setDescription(null)\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n\n    const handleShowHistory = () => {\n        setshowHistory(!showHistory)\n    }\n\n    return (\n        <div className='' style={{position: 'relative'}}>\n            <CustomLoader visible={loading} full />\n\n            {!showHistory ? (\n                <div className='row gap-sm-0 gap-10'>\n                    <div className='col-sm-9 '>\n                        <div\n                            className='card'\n                            style={{\n                                borderRadius: '0 10px 10px 10px',\n                                boxShadow:\n                                    'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                            }}\n                        >\n                            <div\n                                className='card-body  ms-4 me-4 mt-4 text-cmGrey500'\n                                style={{fontSize: '14px', fontFamily: 'Manrope', fontWeight: 600}}\n                            >\n                                Pay your employees instantly outside their regular payroll cycle\n                                using our new\n                                <label style={{fontFamily: 'Manrope'}} className='ms-1 text-cminfo'>\n                                    one-time payments\n                                </label>{' '}\n                                feature. Please note that this is not a substitute for executing\n                                payroll,\n                                <label style={{fontFamily: 'Manrope'}} className='ms-1 text-cminfo'>\n                                    {' '}\n                                    salary advance\n                                </label>\n                                , or{' '}\n                                <label style={{fontFamily: 'Manrope'}} className='ms-1 text-cminfo'>\n                                    reimbursements\n                                </label>\n                                . A one-time payment helps in immediately paying a bonus, incentive\n                                etc to your employees, which gets added to their next payroll’s\n                                earnings.\n                            </div>\n                            <div className='border-bottom border-cmGrey200'></div>\n                            <form onSubmit={payNow}>\n                                <div className='d-flex  justify-content-center mt-4 mx-sm-0  mx-5'>\n                                    <div className='d-flex flex-column'>\n                                        <div\n                                            className='text-center text-cmGrey600 mb-8'\n                                            style={{\n                                                fontFamily: 'Manrope',\n                                                fontWeight: 600,\n                                                fontSize: '14px',\n                                            }}\n                                        >\n                                            Add a Payment\n                                        </div>\n                                        <div className='mb-5'>\n                                            <label\n                                                className='mb-2 text-cmGrey700'\n                                                style={{fontFamily: 'Manrope', fontWeight: 600}}\n                                            >\n                                                Who do you want to make the payment to?{' '}\n                                                <font className='text-cmError'>*</font>\n                                            </label>\n                                            <CustomSearchInput\n                                                placeholder='Search an Employee'\n                                                onSearch={onSeachLead}\n                                                onSelectValue={onSelectTeamLead}\n                                                selectedValue={selectedEmployee?.name}\n                                                style={{\n                                                    border: paymentFormError?.payToEmployee\n                                                        ? '1px solid #FF0000'\n                                                        : '1px solid #D8D8D8',\n                                                    borderRadius: '10px',\n                                                    fontWeight: 500,\n                                                }}\n                                                errorMessage={paymentFormError.payToEmployee}\n                                            />\n                                        </div>\n\n                                        <div className='mb-5'>\n                                            <CustomInput\n                                                placeholder='Advance'\n                                                disabled={true}\n                                                label={'Type of Payment'}\n                                                required\n                                                className='mb-2'\n                                                errorMessage={paymentFormError.paymentType}\n                                            />\n                                            <label\n                                                className='text-gray-600'\n                                                style={{fontWeight: 500}}\n                                            >\n                                                This will be reflected in the employee’s payslip as\n                                                an advance\n                                            </label>\n                                        </div>\n\n                                        <div className='mb-5' style={{fontSize: '12px'}}>\n                                            <CustomInput\n                                                label={'Total Amount'}\n                                                required\n                                                placeholder='Amount'\n                                                onChange={(e) => {\n                                                    setPayAmount(e.target.value)\n                                                }}\n                                                errorMessage={paymentFormError?.paymentAmount}\n                                                value={payAmount}\n                                                type={INPUT_TYPE.number}\n                                            />\n                                        </div>\n                                        <div className='mt-5'>\n                                            <CustomInput\n                                                label={'Description'}\n                                                placeholder='Add description'\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value)\n                                                }}\n                                                errorMessage={''}\n                                                value={description}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='d-flex justify-content-center mt-11 mb-9'>\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.primary}\n                                        buttonLabel='Pay Now'\n                                        onClick={payNow}\n                                        buttonSize={BUTTON_SIZE.large}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className='col-sm-3 '>\n                        <div\n                            className='p-8 shadow-sm w-100 mb-5 bg-white'\n                            style={{borderRadius: 10}}\n                        >\n                            <div\n                                className='text-cmGrey600 mb-2'\n                                style={{fontSize: '14px', fontFamily: 'Manrope', fontWeight: 500}}\n                            >\n                                Total one-time Payments\n                            </div>\n                            <div\n                                className='text-cmGrey800'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontSize: '16px',\n                                    fontWeight: 600,\n                                }}\n                            >\n                                {formattedNumberFields(paymentTotal, '$')}\n                            </div>\n                        </div>\n\n                        <div\n                            className='shadow-sm w-100 mt-10 h-md-160px mb-5 bg-white cursor-pointer'\n                            onClick={handleShowHistory}\n                            style={{borderRadius: 10}}\n                        >\n                            <div\n                                className='text-center text-text-cmGrey800'\n                                style={{\n                                    fontSize: '14px',\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 600,\n                                }}\n                            >\n                                <label\n                                    className='mt-5 text-decoration-underline cursor-pointer'\n                                    onClick={handleShowHistory}\n                                >\n                                    One-time Payments History\n                                </label>\n                            </div>\n                            <div\n                                className='text-center text-cmGrey600 p-5 '\n                                style={{fontSize: '14px', fontFamily: 'Manrope', fontWeight: 500}}\n                            >\n                                <label className='cursor-pointer'>View one-time payments to</label>\n                                <label className='cursor-pointer'>\n                                    employees that are in queue\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <OneTimePaymentHistory handleShowHistory={handleShowHistory} />\n            )}\n        </div>\n    )\n}\n","import React, {useCallback, useEffect, useState} from 'react'\nimport PaymentRequestTabel from './PaymentRequestTabel'\nimport {\n    getAdvancePaymentRequestDetailsService,\n    getPaymentRequestDetailsService,\n    payNowPaymentRequestService,\n    updatePaymentRequestService,\n} from '../../../../../../services/Services'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport {REQUEST_APPROVAL_TYPE_DROPDOWN_VALUES} from '../../../../../../constants/constants'\nimport debounce from 'lodash.debounce'\n\nexport default function PaymentRequest() {\n    const [page, setPage] = useState(1)\n    const [paymentRequestData, setPaymetRequestData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [showPaymentRequest, setShowPaymentRequest] = useState(false)\n    const [selectedArr, setSelectedArr] = useState([])\n    const [search, setSearch] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [typeFilter, setTypeFilter] = useState(null)\n    const [requestType, setRequestType] = useState('PaymentRequest')\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        // if (showPaymentRequest) getAdvancePayment()\n        // else\n        getPaymentRequestData()\n    }, [page, search, typeFilter, sortValue, sortingOrder, requestType])\n\n    const getPaymentRequestData = () => {\n        setLoading(true)\n        getPaymentRequestDetailsService({\n            page,\n            search,\n            filter: typeFilter,\n            type: requestType,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        })\n            .then((res) => {\n                setPaymetRequestData(res?.data)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    const handleAdvancePayment = (val) => {\n        setRequestType(val)\n        setPage(1)\n        setSearch('')\n        setSearchVal('')\n        setTypeFilter('')\n    }\n\n    const getAdvancePayment = () => {\n        setLoading(true)\n        getAdvancePaymentRequestDetailsService({page, search})\n            .then((res) => {\n                setPaymetRequestData(res?.data)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    const updatePaymentList = (status, id) => {\n        setLoading(true)\n        const body = {\n            request_ids: id ? [id] : selectedArr,\n            type: status,\n        }\n        updatePaymentRequestService(body)\n            .then(() => {\n                CustomToast.success(\n                    status == 'Accept'\n                        ? 'Payment Request gone to payroll'\n                        : 'Payment Request declined'\n                )\n                getPaymentRequestData()\n                setSelectedArr([])\n            })\n            .catch((e) => {\n                setLoading(false)\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n\n    const onPayNow = (id) => {\n        const body = {\n            request_id: id,\n        }\n        CustomDialog.warn('Are you sure you want to pay this request ?', () => {\n            payNowPaymentRequestService(body)\n                .then(() => {\n                    getPaymentRequestData()\n                    setSelectedArr([])\n                })\n                .finally(() => {\n                    CustomToast.success('Paid successfully')\n                })\n        })\n    }\n\n    const handleSearchChange = (e) => {\n        setSearchVal(e.target.value)\n        delaySaveToDb(e.target.value)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setSearch(val)\n        }, 500),\n        []\n    )\n\n    const onTypeFilterChange = (e) => {\n        setSearch('')\n        setSearchVal('')\n        setPage(1)\n        setTypeFilter(e.target.value)\n    }\n\n    return (\n        <div\n            className=''\n            style={{\n                fontFamily: fontsFamily.manrope,\n                borderRadius: '0 10px 10px 10px',\n            }}\n        >\n            <div\n                className='bg-cmwhite card'\n                style={{\n                    fontSize: '14px',\n                    borderRadius: '0 10px 0px 0px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div className='w-100 p-6 d-flex align-items-center flex-wrap justify-content-between'>\n                    <div className='text-cmGrey900' style={{fontSize: '16px', fontWeight: 600}}>\n                        {/* Create approve and pay advance salary to your employees */}\n                        {requestType === 'PaymentRequest' ? 'Requests' : 'Advance Requests'}\n                    </div>\n                    <div>\n                        <CustomInput\n                            type={INPUT_TYPE.search}\n                            onChange={handleSearchChange}\n                            value={searchVal}\n                        />\n                    </div>\n                    <div className='d-flex gap-5'>\n                        {selectedArr?.length > 0 ? (\n                            <div>\n                                <CustomButton\n                                    buttonLabel='With Payroll'\n                                    onClick={() => updatePaymentList('Accept')}\n                                />\n                            </div>\n                        ) : (\n                            <></>\n                        )}\n                        {selectedArr?.length > 0 ? (\n                            <div>\n                                <CustomButton\n                                    buttonType={BUTTON_TYPE.error}\n                                    buttonLabel='Decline'\n                                    onClick={() => updatePaymentList('Decline')}\n                                />\n                            </div>\n                        ) : (\n                            <></>\n                        )}\n                    </div>\n                    <div className='d-flex flex-center gap-5'>\n                        {requestType === 'PaymentRequest' ? (\n                            <div>\n                                <CustomDropdown\n                                    placeholder='Select Type'\n                                    options={REQUEST_APPROVAL_TYPE_DROPDOWN_VALUES}\n                                    onChange={onTypeFilterChange}\n                                    searching={false}\n                                    value={typeFilter}\n                                />\n                            </div>\n                        ) : null}\n                        <div>\n                            {requestType === 'PaymentRequest' ? (\n                                <CustomButton\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonLabel={'Advance Requests'}\n                                    onClick={() => handleAdvancePayment('AdvancePaymentRequest')}\n                                    buttonSize={BUTTON_SIZE.normal}\n                                />\n                            ) : (\n                                <CustomButton\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonLabel={'Other  Requests'}\n                                    onClick={() => handleAdvancePayment('PaymentRequest')}\n                                    buttonSize={BUTTON_SIZE.normal}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <PaymentRequestTabel\n                    className='mx-0 px-0'\n                    paymentRequestData={paymentRequestData}\n                    page={page}\n                    setPage={setPage}\n                    requestType={requestType}\n                    loading={loading}\n                    getPaymentList={getPaymentRequestData}\n                    setSelectedUsers={setSelectedArr}\n                    onChangesPaymentRequest={(status, id) => updatePaymentList(status, id)}\n                    onChangePayNow={(id) => onPayNow(id)}\n                    sortingOrder={sortingOrder}\n                    sortValue={sortValue}\n                    onPress={(item) => {\n                        setSortValue(item)\n                        setSortingOrder(\n                            sortValue !== item ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                        )\n                        setPage(1)\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useRef, useEffect} from 'react'\nimport {\n    formattedNumberFields,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {updateReconciliationDetailService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nconst EditReconciliation = ({\n    show,\n    handleClose,\n    preData,\n    getReconciliationData,\n    startDate,\n    endDate,\n}) => {\n    const [commission, setCommission] = useState(null)\n    const [overrides, setOverrides] = useState(null)\n    const [clawback, setClawback] = useState(null)\n    const [comment, setComment] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [commentError, setCommentError] = useState(null)\n\n    const onSaveReconciliation = () => {\n        const body = {\n            reconciliation_id: preData?.id,\n            user_id: preData?.user_id,\n            commission_withheld: commission,\n            overrides_due: overrides,\n            clawback: clawback,\n            comment: comment,\n            start_date: getValidDate(startDate, 'YYYY/MM/DD'),\n            end_date: getValidDate(endDate, 'YYYY/MM/DD'),\n        }\n        if (!body.comment) return setCommentError('Enter Comment')\n        setLoading(true)\n        updateReconciliationDetailService(body)\n            .then(() => {\n                getReconciliationData()\n                handleClose()\n                CustomToast.success('Updated Successfully')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    return (\n        <CustomModal show={show} onHide={handleClose} title={'Edit Reconciliation'} maxWidth='1000'>\n            <CustomLoader full visible={loading} />\n\n            <div className='py-5'>\n                <div className='py-lg-0 ms-sm-12 d-flex justify-content-center'>\n                    <div className='container mt-2' style={{fontSize: '14px'}}>\n                        <div className='row gap-5'>\n                            <div className='col-sm'>\n                                <div\n                                    className='mb-4'\n                                    style={{\n                                        color: '',\n                                        fontFamily: 'Manrope',\n                                        fontSize: '15px',\n                                    }}\n                                >\n                                    <CustomImage src={preData?.emp_img} className='avatar me-1' />\n                                    <label className='text-cmGrey900' style={{fontWeight: 700}}>\n                                        {preData?.emp_name}\n                                    </label>\n                                    <label\n                                        className='ms-1 text-cmGrey700'\n                                        style={{fontWeight: 500}}\n                                    >\n                                        ({getValidDate(startDate)}-{getValidDate(endDate)})\n                                    </label>\n                                </div>\n                                <div\n                                    className=' shadow-sm w-md-325px mb-5 bg-white border border-cmGrey200 border-2 p-3'\n                                    style={{borderRadius: '10px'}}\n                                >\n                                    <div\n                                        className='container border-bottom border-cmGrey200 border-2'\n                                        style={{fontSize: '14px'}}\n                                    >\n                                        <div className='row g-2 my-1 p-2 align-items-center'>\n                                            <div\n                                                className='col-6 text-cmGrey600'\n                                                style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                                            >\n                                                Commission Withheld\n                                            </div>\n                                            <div\n                                                className='col-6 text-cmGrey800 '\n                                                style={{fontFamily: 'Manrope', fontWeight: 600}}\n                                            >\n                                                {formattedNumberFields(\n                                                    preData?.commissionWithholding ?? '0'\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div\n                                        className='container border-bottom border-cmGrey200 border-2'\n                                        style={{fontSize: '14px'}}\n                                    >\n                                        <div className='row g-2 my-1 p-2 align-items-center'>\n                                            <div\n                                                className='col-6 text-cmGrey700 '\n                                                style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                                            >\n                                                Overrides Due\n                                            </div>\n                                            <div\n                                                className='col-6 text-cmGrey800'\n                                                style={{fontFamily: 'Manrope', fontWeight: 600}}\n                                            >\n                                                {/* <label className='text-cmGrey500'>\n                                                    {formattedNumberFields(\n                                                        preData?.override_due,\n                                                        '$'\n                                                    )}\n                                                </label>{' '} */}\n                                                {formattedNumberFields(preData?.override_due, '$')}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div\n                                        className='container border-bottom border-cmGrey200 border-2'\n                                        style={{fontSize: '14px'}}\n                                    >\n                                        <div className='row g-2 my-1 p-2 align-items-center'>\n                                            <div\n                                                className='col-6 text-cmGrey700'\n                                                style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                                            >\n                                                Clawbacks\n                                            </div>\n                                            <div\n                                                className='col-6 text-cmGrey800'\n                                                style={{fontFamily: 'Manrope', fontWeight: 600}}\n                                            >\n                                                {formattedNumberFields(preData?.deduction_due, '$')}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div\n                                        className='container border-bottom border-cmGrey200 border-2'\n                                        style={{fontSize: '14px'}}\n                                    >\n                                        <div className='row g-2 my-1 p-2 align-items-center'>\n                                            <div\n                                                className='col-6 text-cmGrey700 '\n                                                style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                                            >\n                                                Total Due\n                                            </div>\n                                            <div\n                                                className='col-6 text-cmGrey800'\n                                                style={{fontFamily: 'Manrope', fontWeight: 600}}\n                                            >\n                                                {formattedNumberFields(preData?.total_due, '$')}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className='container ' style={{fontSize: '14px'}}>\n                                        <div className='row g-2 my-1 p-2 align-items-center text-cmGrey900'>\n                                            <div\n                                                className='col-6 '\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '700',\n                                                }}\n                                            >\n                                                Net Pay\n                                            </div>\n                                            <div\n                                                className='col-6'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '600',\n                                                }}\n                                            >\n                                                {formattedNumberFields(preData?.total_paid, '$')}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='col-sm'>\n                                <div\n                                    className=' text-cmGrey800'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: '600',\n                                    }}\n                                >\n                                    Adjust Amount\n                                </div>\n                                <div className='container mt-5' style={{fontSize: '14px'}}>\n                                    <div className='row align-items-center'>\n                                        <div\n                                            className='col-sm text-cmGrey800'\n                                            style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                                        >\n                                            Commission Withheld\n                                        </div>\n                                        <div\n                                            className='col-sm text-cmGrey800'\n                                            style={{fontFamily: 'Manrope'}}\n                                        >\n                                            <CustomInput\n                                                type={INPUT_TYPE.number}\n                                                placeholder='Amount'\n                                                onChange={(e) => setCommission(e.target.value)}\n                                                value={commission}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='container mt-5' style={{fontSize: '14px'}}>\n                                    <div className='row align-items-center'>\n                                        <div\n                                            className='col-sm text-cmGrey800'\n                                            style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                                        >\n                                            Overrides Due\n                                        </div>\n                                        <div\n                                            className='col-sm text-cmGrey800'\n                                            style={{fontFamily: 'Manrope'}}\n                                        >\n                                            <CustomInput\n                                                type={INPUT_TYPE.number}\n                                                placeholder='Amount'\n                                                onChange={(e) => setOverrides(e.target.value)}\n                                                value={overrides}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='container mt-5' style={{fontSize: '14px'}}>\n                                    <div className='row align-items-center'>\n                                        <div\n                                            className='col-sm text-cmGrey800'\n                                            style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                                        >\n                                            Clawbacks\n                                        </div>\n                                        <div\n                                            className='col-sm text-cmGrey800'\n                                            style={{fontFamily: 'Manrope'}}\n                                        >\n                                            <CustomInput\n                                                type={INPUT_TYPE.number}\n                                                placeholder='Amount'\n                                                onChange={(e) => setClawback(e.target.value)}\n                                                value={clawback}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='mt-2 w-75 mx-auto'>\n                <CustomInput\n                    type={INPUT_TYPE.textarea}\n                    errorMessage={commentError}\n                    placeholder='Add a Comment (required)'\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n            </div>\n\n            <div className='d-flex justify-content-center my-10'>\n                <button\n                    type='button'\n                    className='text-cmwhite mb-13 mt-3 bg-cmBlue-Crayola'\n                    style={{\n                        height: '46px',\n                        width: '187px',\n                        borderRadius: '6px',\n                        fontSize: '16px',\n                        borderWidth: 0,\n                        fontWeight: 700,\n                    }}\n                    onClick={() => onSaveReconciliation()}\n                >\n                    Edit Reconciliation\n                </button>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {EditReconciliation}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {Dialog} from 'primereact/dialog'\nimport usePayFrequency from '../../../../../../hooks/usePayFrequency'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {addToPayrollReconciliationService} from '../../../../../../services/Services'\nimport {\n    ADD_TO_PAYROLL_VALIDATION_FIELD,\n    addToPayrollValidation,\n} from '../../../../../../validations/validations'\nimport {\n    getErrorMessageFromResponse,\n    isEmptyObjectValue,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst AddToPayrollPopUp = ({show, handleClose, getReconciliationData}) => {\n    const [loading, setLoading] = useState(false)\n    const [payrollError, setPayrollError] = useState(ADD_TO_PAYROLL_VALIDATION_FIELD)\n    const [addToPayrollBody, setAddToPayrollBody] = useState({\n        daily: null,\n        weekly: null,\n        biweekly: null,\n        semimonthly: null,\n        monthly: null,\n    })\n\n    const {payPeriodList, monthlyPayPeriodList, weekDropdownList} = usePayFrequency()\n\n    const handleWeekPayPeriod = (e) => {\n        let data =\n            payPeriodList?.length > 0\n                ? payPeriodList?.find((item) => item?.id == e.target.value)\n                : null\n        setAddToPayrollBody((prevState) => ({\n            ...prevState,\n            weekly: {\n                pay_period_from: data?.pay_period_from,\n                pay_period_to: data?.pay_period_to,\n                id: data?.id,\n            },\n        }))\n    }\n    const handleMonthPayPeriod = (e) => {\n        let data =\n            payPeriodList?.length > 0\n                ? monthlyPayPeriodList?.find((item) => item?.id == e.target.value)\n                : null\n\n        setAddToPayrollBody((prevState) => ({\n            ...prevState,\n            monthly: {\n                pay_period_from: data?.pay_period_from,\n                pay_period_to: data?.pay_period_to,\n                id: data?.id,\n            },\n        }))\n    }\n\n    const closeModal = () => {\n        handleClose()\n    }\n    const onAddToPayroll = () => {\n        const obj = Object.fromEntries(\n            Object.entries(addToPayrollBody).filter(([key, val]) => val !== null)\n        )\n        const body = {\n            data: obj,\n        }\n        const toCheckWeekly = hasPayFrequencyEnabled(2)\n        const toCheckMonthly = hasPayFrequencyEnabled(5)\n\n        const validationErrors = addToPayrollValidation(body, toCheckWeekly, toCheckMonthly)\n        setPayrollError(validationErrors)\n\n        if (isEmptyObjectValue(validationErrors)) {\n            setLoading(true)\n            addToPayrollReconciliationService(body)\n                .then(() => {\n                    closeModal()\n                    CustomToast.success('Added to payroll successfully')\n                    getReconciliationData()\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => setLoading(false))\n        }\n    }\n\n    const periodList = useMemo(() => {\n        return payPeriodList?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.pay_period_from)} to ${getValidDate(\n                item?.pay_period_to\n            )}`,\n        }))\n    }, [payPeriodList])\n\n    const monthlyPeriodList = useMemo(() => {\n        return monthlyPayPeriodList?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.pay_period_from)} to ${getValidDate(\n                item?.pay_period_to\n            )}`,\n        }))\n    }, [monthlyPayPeriodList])\n\n    const hasPayFrequencyEnabled = (keyToFind) => {\n        return weekDropdownList.some((item) => item.frequency_type_id === keyToFind)\n    }\n\n    return (\n        <Dialog\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            header='Add To Payroll'\n            className='mw-sm-800px w-sm-75'\n            visible={show}\n            onHide={closeModal}\n            backdrop={true}\n        >\n            <hr className='m-0 p-0 text-cmGrey900' />\n            <div\n                className='m-0 p-0'\n                style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n            >\n                <CustomLoader full visible={loading} />\n\n                <div className=''>\n                    <div className='modal-body  py-2 px-lg-10 mb-5'>\n                        <div className='py-lg-3 px-lg-10 mt-3'>\n                            <>\n                                <div\n                                    className='d-flex align-items-center flex-wrap justify-content-between w-sm-75 mx-auto'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    <div className='w-50'>\n                                        <h4\n                                            className='text-cmGrey800 mb-sm-5 mb-3 text-decoration-underline'\n                                            style={{fontWeight: '900'}}\n                                        >\n                                            Pay Frequency\n                                        </h4>\n                                    </div>\n                                    <div className='w-50 text-center'>\n                                        <h4\n                                            className='text-cmGrey800 mb-sm-5 mb-3 text-decoration-underline'\n                                            style={{fontWeight: '900'}}\n                                        >\n                                            Pay Period\n                                        </h4>\n                                    </div>\n                                </div>\n                                <hr style={{height: '2px'}} />\n                            </>\n                        </div>\n                        {hasPayFrequencyEnabled(2) ? (\n                            <div className='py-lg-3 px-lg-10 '>\n                                <>\n                                    <div\n                                        className='d-flex align-items-center flex-wrap justify-content-between w-sm-75 mx-auto'\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    >\n                                        <div>\n                                            <h4\n                                                className='text-cmGrey800 mb-sm-5 mb-3'\n                                                style={{fontWeight: '900'}}\n                                            >\n                                                Weekly:\n                                            </h4>\n                                        </div>\n                                        <div className='w-sm-auto w-100'>\n                                            <CustomDropdown\n                                                options={periodList}\n                                                displayKey='period'\n                                                valueKey='id'\n                                                value={addToPayrollBody?.weekly?.id}\n                                                onChange={handleWeekPayPeriod}\n                                                errorMessage={payrollError?.week}\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr style={{height: '2px'}} />\n                                </>\n                            </div>\n                        ) : (\n                            <></>\n                        )}\n                        {hasPayFrequencyEnabled(5) ? (\n                            <div className='py-lg-3 px-lg-10 '>\n                                <>\n                                    <div\n                                        className='d-flex align-items-center flex-wrap justify-content-between w-sm-75 mx-auto'\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    >\n                                        <div>\n                                            <h4\n                                                className='text-cmGrey800 mb-sm-5 mb-3'\n                                                style={{fontWeight: '900'}}\n                                            >\n                                                Monthly:\n                                            </h4>\n                                        </div>\n                                        <div className='w-sm-auto w-100'>\n                                            <CustomDropdown\n                                                options={monthlyPeriodList}\n                                                displayKey='period'\n                                                onChange={handleMonthPayPeriod}\n                                                valueKey='id'\n                                                value={addToPayrollBody?.monthly?.id}\n                                                errorMessage={payrollError?.month}\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr style={{height: '2px'}} />\n                                </>\n                            </div>\n                        ) : null}\n                    </div>\n                    <div className='text-center'>\n                        <div\n                            className='btn bg-cmBlue-Crayola py-2 text-cmwhite'\n                            style={{fontWeight: '500'}}\n                            onClick={onAddToPayroll}\n                        >\n                            Add To Payroll\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default AddToPayrollPopUp\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useMemo} from 'react'\nimport {EditReconciliation} from './EditReconciliation'\nimport Edit from '../../../sequidocs/Icon/edit.png'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport {ReconOverridesTable} from './ReconOverridesTable'\nimport {ReconCommissionTable} from './ReconCommissionTable '\nimport {ReconClawbackTable} from './ReconClawbackTable'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {ReconAdjustmentTable} from './ReconAdjustmentTable'\nimport AddToPayrollPopUp from './addToPayrollPopUp'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomNoData from '../../../../../../customComponents/customNoData/CustomNoData'\n\nconst ReconciliationTabel = ({\n    className,\n    tableData,\n    onSearch,\n    onFinilize,\n    dateDropDown,\n    setStartDate,\n    setEndDate,\n    getReconciliationData,\n    onPageChange,\n    activePage,\n    startDate,\n    endDate,\n    selectedPeriod,\n    setSelectedPeriod,\n    payrollReconHistory,\n    setPayrollReconHistory,\n    search,\n}) => {\n    const [open, setOpen] = useState(false)\n    const [editData, setEditData] = useState(null)\n    const [showAddPayroll, setShowAddPayroll] = useState(false)\n    const [showOverridesModal, setShowOverridesModal] = useState(false)\n    const [showCommissionModal, setShowCommissionModal] = useState(false)\n    const [showClawbackModal, setShowClawbackModal] = useState(false)\n    const [showAdjustmentModal, setShowAdjustmentModal] = useState(false)\n    const [searchTerm, setSearchTerm] = useState(null)\n\n    const [userData, setUserData] = useState(null)\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleFinilizeAdd = () => {\n        CustomDialog.warn('Are you sure you want to finalize ?', () => {\n            onFinilize()\n        })\n    }\n\n    const periodChange = (e) => {\n        const periodData = dateDropDown?.find((item) => item.id == e.target.value)\n        setSelectedPeriod(periodData)\n        setPayrollReconHistory(false)\n        onPageChange(1)\n        setStartDate(periodData?.period_from)\n        setEndDate(periodData?.period_to)\n    }\n\n    const handleAddToPayroll = () => {\n        setShowAddPayroll(true)\n    }\n    const handleOverrides = () => {\n        setShowOverridesModal(false)\n    }\n    const openOverrideModal = (item) => {\n        setShowOverridesModal(true)\n        setUserData(item)\n    }\n    const handleCommssion = () => {\n        setShowCommissionModal(false)\n    }\n    const openCommissionModal = (item) => {\n        setShowCommissionModal(true)\n        setUserData(item)\n    }\n    const handleClawback = () => {\n        setShowClawbackModal(false)\n    }\n    const handleAdjustment = () => {\n        setShowAdjustmentModal(false)\n    }\n    const openClawbackModal = (item) => {\n        setShowClawbackModal(true)\n        setUserData(item)\n    }\n    const openAdjustmentModal = (item) => {\n        setShowAdjustmentModal(true)\n        setUserData(item)\n    }\n\n    const periodList = useMemo(() => {\n        return dateDropDown?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.period_from)} to ${getValidDate(item?.period_to)}`,\n        }))\n    })\n\n    const onHandleSearch = (e) => {\n        setSearchTerm(e.target.value)\n        onSearch(e.target.value)\n    }\n\n    return (\n        <>\n            <div className={`card shadow-sm mt-7 ${className}`}>\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div className=' bg-cmwhite' style={{fontSize: '14px', fontFamily: 'Manrope'}}>\n                        <div className='m-5 d-flex gap-5 flex-wrap justify-content-between'>\n                            <div>\n                                {/* Reconcilation Search Input */}\n                                <CustomInput\n                                    type={INPUT_TYPE.search}\n                                    name='search'\n                                    onChange={onHandleSearch}\n                                    value={searchTerm || ''}\n                                />\n                            </div>\n\n                            <div>\n                                <CustomDropdown\n                                    name='status'\n                                    onChange={periodChange}\n                                    options={periodList}\n                                    valueKey='id'\n                                    displayKey='period'\n                                    showClear={false}\n                                    value={selectedPeriod?.id}\n                                />\n                            </div>\n                            {/* <button\n                                // id='bu'\n                                type='button'\n                                className={\n                                    ' me-sm-14 w-sm-250px mx-sm-0 mx-auto cursor-pointer text-cmwhite'\n                                }\n                                style={{\n                                    height: '43px',\n                                    border: 'none',\n                                    fontFamily: 'Manrope',\n                                    borderRadius: '6px',\n                                    fontSize: '16px',\n                                    fontWeight: 700,\n                                    background: '#F4C2C2',\n                                }}\n                                onClick={handlePayrollReconHistory}\n                            >\n                                {!payrollReconHistory ? (\n                                    <label>Payroll-Recon History</label>\n                                ) : (\n                                    <label>Pending Payroll</label>\n                                )}\n                            </button> */}\n                            {tableData?.data?.data?.length > 0 && !payrollReconHistory ? (\n                                <CustomButton\n                                    buttonType={\n                                        !tableData?.finalize_status\n                                            ? BUTTON_TYPE.primary\n                                            : BUTTON_TYPE.success\n                                    }\n                                    buttonLabel={\n                                        !tableData?.finalize_status ? (\n                                            <label>Finalize Reconciliation</label>\n                                        ) : (\n                                            <label>Add to Payroll</label>\n                                        )\n                                    }\n                                    onClick={() =>\n                                        !tableData?.finalize_status\n                                            ? handleFinilizeAdd()\n                                            : handleAddToPayroll()\n                                    }\n                                />\n                            ) : // <button\n                            //     // id='bu'\n                            //     type='button'\n                            //     className={\n                            //         ' me-sm-14 w-sm-250px mx-sm-0 mx-auto cursor-pointer text-cmwhite ' +\n                            //         (!tableData?.finalize_status\n                            //             ? 'bg-cmBlue-Crayola'\n                            //             : 'bg-cmSuccess')\n                            //     }\n                            //     style={{\n                            //         height: '43px',\n                            //         border: 'none',\n                            //         fontFamily: 'Manrope',\n                            //         borderRadius: '6px',\n                            //         fontSize: '16px',\n                            //         fontWeight: 700,\n                            //     }}\n                            //     onClick={() =>\n                            //         !tableData?.finalize_status\n                            //             ? handleFinilizeAdd()\n                            //             : handleAddToPayroll()\n                            //     }\n                            //     // onClick={() => handleAddToPayroll()}\n                            // >\n                            //     {!tableData?.finalize_status ? (\n                            //         <label>Finalize Reconciliation</label>\n                            //     ) : (\n                            //         <label>Add to Payroll</label>\n                            //     )}\n                            // </button>\n                            null}\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table' style={{tableLayout: 'fixed', width: '100%'}}>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='w-200px p-5 '>Employee Name</th>\n                                    <th className='w-200px p-5 '>Commission Withheld</th>\n                                    <th className='w-150px p-5 '>Override Due</th>\n                                    <th className='p-5 w-125px'>Clawbacks</th>\n                                    <th className='p-5 w-175px'>Total Adjustments</th>\n                                    <th className='w-100px p-5 '>Total Due</th>\n                                    {payrollReconHistory && (\n                                        <th className='w-100px p-5 '>Pay Period</th>\n                                    )}\n\n                                    <th className='w-75px p-5'></th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {tableData?.data?.data?.length > 0 ? (\n                                    <>\n                                        {tableData?.data?.data?.map((item, i) => (\n                                            <tr\n                                                key={i}\n                                                className='text-cmGrey600 '\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <td\n                                                    className='p-5 text-cmGrey800'\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                    }}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.user_id}\n                                                    >\n                                                        <CustomImage\n                                                            src={item?.emp_img}\n                                                            className='avatar me-3'\n                                                        />{' '}\n                                                        {item?.emp_name ?? '-'}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openCommissionModal(item)}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.commissionWithholding,\n                                                        '$'\n                                                    )}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openOverrideModal(item)}\n                                                >\n                                                    {formattedNumberFields(item?.overrideDue, '$')}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openClawbackModal(item)}\n                                                >\n                                                    {formattedNumberFields(item?.clawbackDue, '$')}\n                                                </td>\n\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openAdjustmentModal(item)}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.totalAdjustments,\n                                                        '$'\n                                                    )}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey900'\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    {formattedNumberFields(item?.total_due, '$')}\n                                                </td>\n                                                {payrollReconHistory && (\n                                                    <td\n                                                        className='p-5 text-cmGrey900'\n                                                        style={{fontWeight: 700}}\n                                                    >\n                                                        {getValidDate(item?.pay_period_from)} -{' '}\n                                                        {getValidDate(item?.pay_period_to)}\n                                                    </td>\n                                                )}\n\n                                                <td\n                                                    className='text-center'\n                                                    style={{cursor: 'pointer'}}\n                                                >\n                                                    {!tableData?.finalize_status ? (\n                                                        <CustomEditIcon\n                                                            onClick={() => {\n                                                                setEditData(item)\n                                                                setOpen(true)\n                                                            }}\n                                                        />\n                                                    ) : null}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr key='no-data'>\n                                        <td colSpan={7} className='p-5'>\n                                            <CustomNoData label={'No data found'} />\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            {tableData?.data?.data?.length > 0 ? (\n                <Pagination\n                    page={activePage && activePage}\n                    totalPages={tableData?.data?.last_page}\n                    setPage={(changedPage) => onPageChange(changedPage)}\n                />\n            ) : null}\n            <EditReconciliation\n                show={open}\n                handleClose={handleClose}\n                preData={editData}\n                getReconciliationData={getReconciliationData}\n                startDate={startDate}\n                endDate={endDate}\n            />\n            {showAddPayroll ? (\n                <AddToPayrollPopUp\n                    show={showAddPayroll}\n                    handleClose={() => setShowAddPayroll(false)}\n                    getReconciliationData={getReconciliationData}\n                />\n            ) : null}\n            {showOverridesModal ? (\n                <ReconOverridesTable\n                    show={showOverridesModal}\n                    handleClose={handleOverrides}\n                    userData={userData}\n                />\n            ) : null}\n            {showCommissionModal ? (\n                <ReconCommissionTable\n                    show={showCommissionModal}\n                    handleClose={handleCommssion}\n                    userData={userData}\n                />\n            ) : null}\n            {showClawbackModal ? (\n                <ReconClawbackTable\n                    show={showClawbackModal}\n                    handleClose={handleClawback}\n                    userData={userData}\n                />\n            ) : null}\n            {showAdjustmentModal ? (\n                <ReconAdjustmentTable\n                    show={showAdjustmentModal}\n                    handleClose={handleAdjustment}\n                    userData={userData}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default ReconciliationTabel\n","import {useCallback, useEffect, useState} from 'react'\nimport ReconciliationTabel from './ReconciliationTabel'\nimport {\n    finilizeReconciliationService,\n    getReconciliationDetailService,\n    payrollReconciliationHistoryService,\n} from '../../../../../../services/Services'\nimport debounce from 'lodash.debounce'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getReconciliationScheduleSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport {useSelector} from 'react-redux'\nimport {getCompanyReconciliationAction} from '../../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport {useLocation} from 'react-router-dom'\nimport {getValidDate} from '../../../../../../constants/constants'\n\nexport default function Reconciliation() {\n    const reconciliationSchedule = useSelector(getReconciliationScheduleSelector)\n    const [loading, setLoading] = useState(false)\n    const [reconciliationData, setReconcilliationData] = useState(null)\n    const [startDate, setStartDate] = useState(reconciliationSchedule[0]?.period_from)\n    const [endDate, setEndDate] = useState(reconciliationSchedule[0]?.period_to)\n    const [search, setSearch] = useState('')\n    const [activePage, setActivePage] = useState(1)\n    const [payrollReconHistory, setPayrollReconHistory] = useState(false)\n    const [selectedPeriod, setSelectedPeriod] = useState(reconciliationSchedule?.[0])\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getCompanyReconciliationAction())\n    }, [])\n    useEffect(() => {\n        // if (location?.search?.includes('?currentRecon')) {\n        let data = reconciliationSchedule?.find(\n            (item) =>\n                getValidDate(item?.period_from, 'YYYY-MM-DD 00:00', true) <=\n                    getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) &&\n                getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) <=\n                    getValidDate(item?.period_to, 'YYYY-MM-DD 00:00', true)\n        )\n        setSelectedPeriod(data)\n        // }\n    }, [])\n\n    useEffect(() => {\n        getReconciliation()\n    }, [search, selectedPeriod, activePage])\n\n    const getReconciliation = () => {\n        setLoading(true)\n        const body = {\n            start_date: selectedPeriod?.period_from,\n            end_date: selectedPeriod?.period_to,\n            search: search,\n            page: activePage,\n        }\n        getReconciliationDetailService(body)\n            .then((res) => {\n                setReconcilliationData(res)\n            })\n            .finally(() => setLoading(false))\n    }\n    const onPayrollReconHistory = () => {\n        setLoading(true)\n        const body = {\n            start_date: startDate,\n            end_date: endDate,\n        }\n        payrollReconciliationHistoryService(body)\n            .then((res) => {\n                setReconcilliationData(res)\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => setLoading(false))\n    }\n\n    const delaySearch = useCallback(\n        debounce((val) => {\n            setSearch(val)\n        }, 500),\n        []\n    )\n    const handleFinilizeAdd = () => {\n        setLoading(true)\n        const body = {\n            start_date: startDate,\n            end_date: endDate,\n        }\n        finilizeReconciliationService(body)\n            .then(() => getReconciliation())\n            .catch((e) => {\n                setLoading(false)\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n\n    const onPageChange = (page) => {\n        setActivePage(page)\n    }\n    const handlePayrollReconHistory = (type) => {\n        setPayrollReconHistory(!payrollReconHistory)\n\n        if (!payrollReconHistory) {\n            onPayrollReconHistory()\n        } else {\n            getReconciliation()\n        }\n    }\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div className='engage-toolba r d-flex position-fixed px-5  zindex-2 top-50 end-0 transform-90 mt-20 gap-2'></div>\n            <div className='card bg-white h-auto' style={{fontSize: '14px'}}>\n                <div className='px-5  py-5 d-flex flex-wrap justify-content-start'>\n                    <div className='d-flex justify-content-between gap-3'>\n                        {/* <div\n                            href=''\n                            className={clsx(\n                                'btn btn-sm btn-flex fw-bold bg-cmGrey100 text-cmGrey600'\n                            )}\n                            data-kt-menu-trigger='click'\n                            data-kt-menu-placement='bottom-end'\n                            style={{\n                                fontSize: '14px',\n                                width: '99px',\n                                height: '43px',\n                                fontWeight: 600,\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            <KTSVG\n                                path='/media/icons/duotune/general/gen031.svg'\n                                className='me-3 svg-icon-6 svg-icon-muted me-1'\n                            />\n                            Export\n                        </div> */}\n                        <div>\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.secondary}\n                                style={{height: '43px'}}\n                                buttonLabel={\n                                    !payrollReconHistory ? (\n                                        <label>Payroll-Recon History</label>\n                                    ) : (\n                                        <label>Pending Payroll</label>\n                                    )\n                                }\n                                onClick={handlePayrollReconHistory}\n                                icon='bi bi-clock-history'\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <ReconciliationTabel\n                    key='reconcilation-table'\n                    className='mx-0 px-0'\n                    tableData={reconciliationData}\n                    onSearch={(value) => delaySearch(value)}\n                    setEndDate={setEndDate}\n                    startDate={startDate}\n                    endDate={endDate}\n                    setStartDate={setStartDate}\n                    onFinilize={handleFinilizeAdd}\n                    dateDropDown={reconciliationSchedule}\n                    getReconciliationData={getReconciliation}\n                    activePage={activePage}\n                    onPageChange={(page) => onPageChange(page)}\n                    onPayrollReconHistory={onPayrollReconHistory}\n                    setPayrollReconHistory={setPayrollReconHistory}\n                    payrollReconHistory={payrollReconHistory}\n                    search={search}\n                    setSelectedPeriod={setSelectedPeriod}\n                    selectedPeriod={selectedPeriod}\n                />\n            </div>\n        </div>\n    )\n}\n","import {Navigate, Routes, Route, Outlet} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../../_metronic/layout/core'\nimport {ProfileHeader} from './ProfileHeader'\nimport {SuspensedView} from '../../../../routing/PrivateRoutes'\nimport RunPayroll from './component/runpayroll/RunPayroll'\nimport OneTimePayment from './component/onetimepayment/OneTimePayment'\nimport PaymentRequest from './component/paymentrequest/PaymentRequest'\nimport Reconciliation from './component/reconciliation/Reconciliation'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard/',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n    {\n        title: 'Payroll/',\n        path: 'payroll/run-payroll',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst SettingHeader = () => {\n    return (\n        <div className='px-sm-10' style={{marginTop: -20}}>\n            <Routes>\n                <Route\n                    element={\n                        <>\n                            <ProfileHeader />\n                            <Outlet />\n                        </>\n                    }\n                >\n                    <Route\n                        path='run-payroll'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Run-Payroll</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.payroll\n                                            .runPayrollAndApprovals.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <RunPayroll />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='one-time-payment'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    One-Time Payment\n                                </PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.payroll.oneTimePayment\n                                            .view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <OneTimePayment />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='payment-request'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Payment Request\n                                </PageTitle>\n\n                                <PaymentRequest />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='reconciliation'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Reconciliation\n                                </PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.payroll\n                                            .payrollReconciliation.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Reconciliation />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route index element={<Navigate to='/payroll' />} />\n                </Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default SettingHeader\n","import {useCallback, useEffect, useRef, useState} from 'react'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport CustomLoader from '../../customLoader/CustomLoader'\nimport _ from 'lodash'\nimport CustomInput, {INPUT_TYPE} from '../customInput/CustomInput'\n\nconst CustomSearchInput = ({\n    zIndex = 10,\n    onSearch,\n    onSelectValue = () => {},\n    selectedValue = '',\n    display_field_name = 'name',\n    placeholder = 'Who hired this Person',\n    style,\n    errorMessage = '',\n    customEmptyMessage = 'No Data Found',\n}) => {\n    const searchTextInputRef = useRef(null)\n    const mainInputRef = useRef(null)\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [searchText, setSearchText] = useState('')\n    const [openSearchList, setOpenSearchList] = useState(false)\n\n    useEffect(() => {\n        if (!searchText) {\n            setData([])\n        }\n    }, [searchText])\n\n    const searchFunc = useCallback(\n        _.debounce((e) => {\n            setSearchText(e?.target?.value)\n            setLoading(true)\n            onSearch(e?.target?.value)\n                .then(setData)\n                .finally(() => setLoading(false))\n        }, 500),\n        []\n    )\n\n    useEffect(() => {\n        if (openSearchList) searchTextInputRef?.current?.focus()\n        else {\n            setSearchText('')\n            setData([])\n        }\n    }, [openSearchList])\n\n    const onOptionPress = useCallback(\n        (item) => {\n            onSelectValue(item)\n            setOpenSearchList(false)\n        },\n        [onSelectValue]\n    )\n\n    const onInputBlur = useCallback(() => {\n        setTimeout(() => {\n            setOpenSearchList(false)\n        }, 300)\n    }, [])\n\n    const onInputClick = useCallback(() => {\n        setOpenSearchList((val) => !val)\n    }, [])\n\n    return (\n        <div style={{width: '100%', zIndex}}>\n            <div style={{width: '100%'}}>\n                <input\n                    autoComplete='off'\n                    ref={mainInputRef}\n                    readOnly\n                    type='search'\n                    value={selectedValue ?? ''}\n                    onClick={onInputClick}\n                    style={{\n                        background: '#FAFAFA',\n                        fontWeight: 600,\n                        color: '#424242',\n                        fontSize: '14px',\n                        width: '100%',\n                        ...style,\n                    }}\n                    name='input'\n                    placeholder={placeholder}\n                    className={`form-select p-3 h-50px form-select-black form-select-sm ${\n                        errorMessage ? 'border-cmError' : ''\n                    }`}\n                />\n            </div>\n            <div\n                className='p-error ms-2 text-cmError'\n                style={{fontSize: '12px', fontWeight: 600, fontFamily: 'Manrope'}}\n            >\n                {errorMessage}\n            </div>\n            {openSearchList && (\n                <div\n                    className='d-flex justify-content-center'\n                    style={{width: '100%', position: 'relative'}}\n                >\n                    <div\n                        className='shadow bg-white'\n                        style={{\n                            position: 'absolute',\n                            width: '100%',\n                            zIndex,\n                            background: 'green',\n                            borderTopLeftRadius: 0,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 10,\n                            borderBottomLeftRadius: 10,\n                            fontWeight: 600,\n                        }}\n                    >\n                        <div>\n                            <div className='' style={{width: '100%'}}>\n                                <div className='mb-1 mx-auto py-3'>\n                                    {/* <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={searchFunc}\n                                        ref={searchTextInputRef}\n                                        onBlur={onInputBlur}\n                                        value={searchText}\n                                    /> */}\n                                    <KTSVG\n                                        path='/media/icons/duotune/general/gen021.svg'\n                                        className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute mt-6 ms-3 translate-middle-y'\n                                    />\n\n                                    <input\n                                        autoComplete='off'\n                                        ref={searchTextInputRef}\n                                        onBlur={onInputBlur}\n                                        type='search'\n                                        style={{\n                                            background: 'white',\n                                            border: 'none',\n                                            width: '100%',\n                                        }}\n                                        onChange={searchFunc}\n                                        className='form-control form-control-solid px-12 '\n                                        name='search'\n                                        placeholder='Search...'\n                                    />\n                                </div>\n                                <div\n                                    style={{\n                                        border: '0.5px solid #E0E0E0',\n                                        width: '100%',\n                                        marginTop: '-5px',\n                                    }}\n                                ></div>\n                            </div>\n                            <div\n                                className='my-4 '\n                                style={{\n                                    width: '100%',\n                                    overflowY: 'scroll',\n                                }}\n                            >\n                                <CustomLoader visible={loading} opacity={0} />\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    {!loading && searchText && data?.length <= 0 && (\n                                        <span\n                                            className='text-cmGrey300'\n                                            style={{\n                                                fontSize: 14,\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            {customEmptyMessage}\n                                        </span>\n                                    )}\n                                    {!loading && !searchText && (\n                                        <span className='text-cmGrey500'>Please search</span>\n                                    )}\n                                </div>\n                                <div\n                                    style={{\n                                        maxHeight: 200,\n                                    }}\n                                >\n                                    {!loading &&\n                                        searchText &&\n                                        data.map((item, index) => {\n                                            return (\n                                                <div\n                                                    key={index}\n                                                    className='d-flex flex-row'\n                                                    style={{\n                                                        paddingLeft: 15,\n                                                        paddingRight: 15,\n                                                        border: '2px solid lightgrey',\n                                                        borderTopWidth: 0,\n                                                        borderBottomWidth:\n                                                            data?.length - 1 == index ? 0 : 2,\n                                                        borderLeftWidth: 0,\n                                                        borderRightWidth: 0,\n                                                        width: '100%',\n                                                        height: '100%',\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={() => {\n                                                        onOptionPress(item)\n                                                    }}\n                                                >\n                                                    <div\n                                                        style={{\n                                                            fontFmaily: 'Manrope ms-10 mt-5',\n                                                            fontWeight: '600',\n                                                            fontSize: '14px',\n                                                            width: '100%',\n                                                            height: '100%',\n                                                        }}\n                                                    >\n                                                        <p className='mt-2'>\n                                                            {item?.[display_field_name]}\n                                                        </p>\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default CustomSearchInput\n","import {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isUserManagerSelector, isUserSuperAdminSelector} from '../../redux/selectors/AuthSelectors'\n\nconst RedirectToEmployeeProfile = ({\n    employeeId = null,\n    children,\n    underline = true,\n    className = null,\n    style = null,\n    target = '_self',\n}) => {\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const isManager = useSelector(isUserManagerSelector)\n\n    const hasAccess = employeeId && (isSuperAdmin || isManager)\n    return (\n        <Link\n            to={hasAccess ? `/user/personal-info?employeeId=${employeeId}` : ''}\n            target={''}\n            state={{\n                employee_id: employeeId,\n            }}\n            style={{\n                pointerEvents: hasAccess ? 'auto' : 'none',\n            }}\n        >\n            <span\n                className={`${hasAccess ? 'cursor-pointer' : ''} text-cmGrey800 d-flex align-items-center ${className}`}\n                style={{\n                    fontWeight: 700,\n                    ...(hasAccess && underline ? {textDecoration: 'underline'} : null),\n                    ...style, \n                }}\n            >\n                {children}\n            </span>\n        </Link>\n    )\n}\n\nexport default RedirectToEmployeeProfile\n"],"names":["CustomSortSvg","_ref","className","onClick","sortingOrder","_jsxs","children","_jsx","class","ProfileHeader","location","useLocation","companySetting","useSelector","getCompanySettingSelector","style","fontSize","fontWeight","fontFamily","fontsFamily","AccessRights","customCondition","allPermissionsAccess","Link","concat","pathname","to","borderRadius","reconciliation","selectedArr","_paymentData$data","_paymentData$data2","_paymentData$data3","paymentRequestData","loading","page","setPage","getPaymentList","setSelectedUsers","onChangesPaymentRequest","requestType","onChangePayNow","onPress","sortValue","showTypeCol","selectAll","setSelectAll","useState","paymentData","setPaymentData","useEffect","position","CustomLoader","full","visible","TABLE_BORDER","data","length","CustomCheckbox","onChange","e","_paymentRequestData$d","_selectAllData$filter","target","checked","selectAllData","map","item","isChecked","filter","item2","id","selectAllCheckbox","title","_Fragment","i","_item$approved_by","_item$type","_selectedArr2","_selectedArr3","height","handleChceckbox","userData","_updatedData","_updatedData2","_updatedData2$filter","_updatedData3","_selectedArr","updatedData","textDecoration","RedirectToEmployeeProfile","employeeId","user_id","CustomImage","src","image","first_name","last_name","getValidDate","request_on","approved_by","formattedNumberFields","amount","type","CustomButton","buttonSize","BUTTON_SIZE","buttonType","BUTTON_TYPE","buttonLabel","CustomDialog","colSpan","textAlign","paddingTop","paddingBottom","Pagination","totalPages","last_page","changedPage","_payrollMetaData$name","show","handleClose","payrollMetaData","getPayrollData","requestData","setRequestData","setLoading","setSelectedArr","setSortValue","setSortingOrder","getPaymentRequestData","search","name","getPaymentRequestDetailsService","sort","sort_val","then","res","finally","updatePaymentList","status","body","request_ids","updatePaymentRequestService","CustomToast","catch","getErrorMessageFromResponse","subTotal","useMemo","_requestData$data","reduce","acc","obj","_obj$amount","Number","CustomModal","onHide","maxWidth","PaymentRequestTabel","request_id","payNowPaymentRequestService","onPayNow","RunPayrollTabel","_tableData$data4","_tableData$data5","_tableData$data6","selectedPayroll","setSelectedPayrollData","tableData","finalize_status","activePage","onPageChange","currentPayPeriod","setSelectedPageType","selectedPageType","isAllPayrollPaid","pay_period_from","pay_period_to","showCreateAppModal","setShowCreateAppModal","showAdjustmentModal","setShowAdjustmentModal","showReimbursementsModal","setShowReimbursementsModal","showDeductionsModal","setShowDeductionsModal","showOverridesModal","setShowOverridesModal","showRequestModal","setShowRequestModal","setPayrollMetaData","menu","useRef","navigate","useNavigate","items","label","command","handleSelectAllPage","isAllSelected","_tableData$data","_tableData$data$filte","is_mark_paid","PAYROLL_PROCESS_STATUS","includes","status_id","push","payroll_id","every","_tableData$data2","payrollItem","_tableData$data3","marginLeft","tableLayout","width","CustomArrow","arrowDirection","ARROW_DIRECTION","current","toggle","TieredMenu","model","popup","ref","breakpoint","cursor","_item$first_name","_item$last_name","_item$override","_item$adjustment","_item$reimbursement","_item$deduction","_item$reconciliation","_item$net_pay","_item$net_pay2","verticalAlign","PayrollShiftHistorie_count","handleCheckbox","some","disable","alt","approvals_and_requests_status","commission","override","adjustment","reimbursement","deduction","net_pay","CustomTooltip","KTSVG","path","svgClassName","paidBody","payrollId","undoPaidPayrollService","undoReconPayrollService","undoMoveToNextPayrollService","handleUndo","comment","PayRollCommissionsTable","handleCloseCommissions","PayrollAdjustments","handleCloseAdjustment","PayRollReimbursTable","handleReimbursement","PayRollDeductionTable","handleDeduction","PayRollOverridesTable","handleOverrides","ViewPayrollRequestModal","ViewSummary","selectedPeriod","setSelectedPeriod","payrollError","setPayrollError","reconciliationSchedule","getReconciliationScheduleSelector","Dialog","tabIndex","header","backdrop","period","find","value","background","period_from","period_to","onMoveToRecon","moveToReconciliationPayrollService","FILTER_KEYS","initialFilter","onApplyFilter","resetFilter","filterProps","filterData","setFilterData","useFilterButton","onChangeInputData","getPositionsSelector","useCallback","val","_e$target","_e$target2","resetFilterData","CustomFilterButton","onResetClick","CustomDropdown","options","refreshPayFrequency","selectedPayPeriod","naviagte","showHeader","CustomLottie","lottieJson","CheckAnimation","lineHeight","padding","redirectToReport","state","showline","borderColor","position_filter","netpay_filter","commission_filter","RunPayroll","_payrollTableData$dat","payrollTableData","setPayrollTableData","showReconModal","setShowReconModal","showOnlyEnabledReconciliation","setShowOnlyEnabledReconciliation","weekDropdownList","payPeriodList","handleSelectedWeekData","nextPayPeriod","setSelectedPayPeriod","selectedWeekData","usePayFrequency","searchTerm","setSearchTerm","searchVal","setSearchVal","showSummary","setShowSummary","buttonLoading","setButtonLoading","payrollConfigData","setPayrollConfigData","executePayroll","setExecutePayroll","executeConfirm","setExecuteConfirm","dispatch","useDispatch","getPayFrequencySettingAction","_currentPayPeriod$pay","_currentPayPeriod$pay2","startDate","endDate","_weekDropdownList$fin","office_id","start_date","end_date","is_reconciliation","pay_frequency","frequency_type_name","frequency_type_id","getPayrollDataService","_res$data","_res$data$data","a","b","localeCompare","all_paid","delaySaveToDb","debounce","handleViewSummary","periodList","onShowReconciliationsPosiitons","getWeeklyPayPeriodAction","getMonthlyPayPeriodAction","downloadCsvFile","_currentPayPeriod$pay3","_currentPayPeriod$pay4","_weekDropdownList$fin2","exportPayrollReportService","fileName","moment","Date","format","downloadAnyFileHelper","zIndex","border","process","REACT_APP_THEME_NAME","color","boxShadow","autoComplete","CustomInput","INPUT_TYPE","showClear","searching","valueKey","displayKey","RunPayrollFilter","updatedFilter","onResetFilter","handleFinilizeAdd","executePayrollService","select_type","finilizePayrollService","icon","CustomLink","handleClosePayroll","closePayrollService","onMarkAsPaid","markAsPaidPayrollService","disabled","onMoveToReconciliation","onMoveToNextPayroll","moveToNextPayrollService","total","selectedPage","open","close","MoveToReconcilitationPopUp","PayrollExecuteModal","handlePayrolModal","ExecuteConfirmModal","handleExecute","_historyData$data","_historyData$data2","_historyData$data3","handleShowHistory","historyData","setHistoryData","setStatus","setFilter","setStartDate","setEndDate","setSearch","csvData","setCsvData","csvLink","isValid","oneTimePaymentHistoryService","resetState","REPORTS_DURATION_DROPDOWN_LIST","onChangeFilter","CustomDatePicker","placeholderText","event","maxDate","overflow","_event$target","minDate","_item$user_data","_item$user_data2","_item$user_data3","cost_date","DEFAULT_DATE_FORMAT","user_data","description","txn_id","downloadCsvFileService","setTimeout","link","click","CSVLink","filename","OneTimePayment","selectedEmployee","setSelectedEmployee","payAmount","setPayAmount","setDescription","paymentFormError","setPaymentFormError","ONETIME_PAYMENT_VALIDATION_FIELD","showHistory","setshowHistory","paymentTotal","setPaymentTotal","getFinilizePayrollService","oneTimePaymentTotalService","onSeachLead","searchText","Promise","resolve","getRecuiterFilterService","onSelectTeamLead","payNow","preventDefault","adjustment_type_id","validationErrors","oneTimePaymentValidation","isEmptyObjectValue","oneTimePaymentService","OneTimePaymentHistory","onSubmit","CustomSearchInput","placeholder","onSearch","onSelectValue","selectedValue","payToEmployee","errorMessage","required","paymentType","paymentAmount","PaymentRequest","setPaymetRequestData","showPaymentRequest","setShowPaymentRequest","typeFilter","setTypeFilter","setRequestType","handleAdvancePayment","REQUEST_APPROVAL_TYPE_DROPDOWN_VALUES","EditReconciliation","_preData$commissionWi","preData","getReconciliationData","setCommission","overrides","setOverrides","clawback","setClawback","setComment","commentError","setCommentError","emp_img","emp_name","commissionWithholding","override_due","deduction_due","total_due","total_paid","borderWidth","onSaveReconciliation","reconciliation_id","commission_withheld","overrides_due","updateReconciliationDetailService","_addToPayrollBody$wee","_addToPayrollBody$mon","ADD_TO_PAYROLL_VALIDATION_FIELD","addToPayrollBody","setAddToPayrollBody","daily","weekly","biweekly","semimonthly","monthly","monthlyPayPeriodList","closeModal","monthlyPeriodList","hasPayFrequencyEnabled","keyToFind","prevState","week","month","onAddToPayroll","Object","fromEntries","entries","_ref2","key","toCheckWeekly","toCheckMonthly","addToPayrollValidation","addToPayrollReconciliationService","_tableData$data$data","_tableData$data2$data","_tableData$data3$data","_tableData$data4$data","onFinilize","dateDropDown","payrollReconHistory","setPayrollReconHistory","setOpen","editData","setEditData","showAddPayroll","setShowAddPayroll","showCommissionModal","setShowCommissionModal","showClawbackModal","setShowClawbackModal","setUserData","periodData","_item$emp_name","openCommissionModal","openOverrideModal","overrideDue","openClawbackModal","clawbackDue","openAdjustmentModal","totalAdjustments","CustomEditIcon","CustomNoData","AddToPayrollPopUp","ReconOverridesTable","ReconCommissionTable","handleCommssion","ReconClawbackTable","handleClawback","ReconAdjustmentTable","handleAdjustment","Reconciliation","_reconciliationSchedu","_reconciliationSchedu2","reconciliationData","setReconcilliationData","setActivePage","getCompanyReconciliationAction","getReconciliation","getReconciliationDetailService","onPayrollReconHistory","payrollReconciliationHistoryService","delaySearch","ReconciliationTabel","finilizeReconciliationService","profileBreadCrumbs","isSeparator","isActive","SettingHeader","marginTop","Routes","Route","element","Outlet","PageTitle","breadcrumbs","showPlaceHolder","index","Navigate","display_field_name","customEmptyMessage","searchTextInputRef","mainInputRef","setData","setSearchText","openSearchList","setOpenSearchList","searchFunc","_","_searchTextInputRef$c","focus","onOptionPress","onInputBlur","onInputClick","readOnly","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","onBlur","overflowY","opacity","display","alignItems","justifyContent","maxHeight","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","fontFmaily","underline","isSuperAdmin","isUserSuperAdminSelector","isManager","isUserManagerSelector","hasAccess","employee_id","pointerEvents"],"sourceRoot":""}