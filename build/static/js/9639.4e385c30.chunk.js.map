{"version":3,"file":"static/js/9639.4e385c30.chunk.js","mappings":"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","sources":["app/modules/admin/Setting/components/Location/LocatonAddManualAddress.js","app/modules/admin/Setting/components/Location/ViewLocationRedlineChanges.js","app/modules/admin/Setting/components/Location/EditLocationRedlineModal.js","app/modules/admin/Setting/components/Location/ManageLocation.js","customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile.js","hooks/usePayFrequency.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useMemo, useState} from 'react'\nimport {getAllStatesAndCitiesSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport {useSelector} from 'react-redux'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\n\nconst FIELD_KEYS = {\n    business_city: 'business_city',\n    business_address: 'business_address',\n    business_state: 'business_state',\n    business_zip: 'business_zip',\n    mailing_address: 'mailing_address',\n    mailing_city: 'mailing_city',\n    mailing_state: 'mailing_state',\n    mailing_zip: 'mailing_zip',\n}\nconst LocatonAddManualAddress = ({\n    show,\n    handleClose,\n    stateList,\n    onChangeInputData,\n    locationData,\n    setLocationData,\n}) => {\n    const allStatCity = useSelector(getAllStatesAndCitiesSelector)\n    const [manualData, setManualData] = useState({\n        mailing_address: null,\n        mailing_city: null,\n        mailing_state: null,\n        mailing_zip: null,\n        business_city: null,\n        business_address: null,\n        business_state: null,\n        business_zip: null,\n    })\n\n    const cityList = useMemo(() => {\n        return (\n            allStatCity?.find((item) => item?.state_code == manualData?.business_state)?.cities ??\n            []\n        )\n    }, [allStatCity, manualData?.state_id, manualData?.business_state])\n    const mailingCityList = useMemo(() => {\n        return (\n            allStatCity?.find((item) => item?.state_code == manualData?.mailing_state)?.cities ?? []\n        )\n    }, [allStatCity, manualData?.mailing_state])\n\n    const onSetManualData = (field, value) => {\n        setManualData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }\n    const onSameAsBusiness = (e) => {\n        let data = {...manualData}\n        if (e.target.checked) {\n            data['mailing_address'] = manualData?.business_address\n            data['mailing_city'] = manualData?.business_city\n            data['mailing_state'] = manualData?.business_state\n            data['mailing_zip'] = manualData?.business_zip\n        } else {\n            data['mailing_address'] = ''\n            data['mailing_city'] = ''\n            data['mailing_state'] = ''\n            data['mailing_zip'] = ''\n        }\n        setManualData(data)\n    }\n\n    const handleSave = (e) => {\n        let data = {...locationData}\n        let completeBusinessAddress = [\n            manualData?.business_address,\n            manualData?.business_city,\n            manualData?.business_state,\n            manualData?.business_zip,\n        ]\n            .filter(function (val) {\n                return val\n            })\n            .join(', ')\n\n        data['business_address'] = completeBusinessAddress\n        data['business_city'] = manualData?.business_city\n        data['business_state'] = manualData?.business_state\n        data['business_zip'] = manualData?.business_zip\n        data['mailing_address'] = manualData?.mailing_address\n        data['mailing_city'] = manualData?.mailing_city\n        data['mailing_state'] = manualData?.mailing_state\n        data['mailing_zip'] = manualData?.mailing_zip\n        setLocationData(data)\n        handleClose()\n    }\n    const onChnageState = (e) => {\n        let data = {...locationData}\n        data['business_city'] = null\n        setManualData(data)\n        onSetManualData(e)\n    }\n    return (\n        <CustomModal show={show} onHide={handleClose} title={'Enter Address'} maxWidth='650'>\n            <div\n                className='w-sm-75 mx-5 mx-sm-auto'\n                style={{fontSize: '14px', fontWeight: '600', fontFamily: 'Manrope'}}\n            >\n                {/* line */}\n                <div className='mb-5'>\n                    <CustomInput\n                        label={'Business Address'}\n                        placeholder='Enter Address'\n                        name={FIELD_KEYS?.business_address}\n                        onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                        value={manualData?.business_address}\n                    />\n                </div>\n                {/* line */}\n                <div className='row gap-sm-0  gap-5 align-items-center mb-5'>\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'State'}\n                            options={stateList}\n                            name={FIELD_KEYS.business_state}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            value={manualData?.business_state}\n                            valueKey='state_code'\n                        />\n                    </div>\n\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'City'}\n                            options={cityList}\n                            name={FIELD_KEYS.business_city}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            value={manualData?.business_city}\n                            valueKey='name'\n                        />\n                    </div>\n                </div>\n                {/* line */}\n                <div className='mb-15'>\n                    <CustomInput\n                        label={'ZIP'}\n                        type={INPUT_TYPE.number}\n                        placeholder='Enter ZIP'\n                        name={FIELD_KEYS.business_zip}\n                        value={manualData?.business_zip}\n                        onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                    />\n                </div>\n                {/* Mailing Address */}\n                <div className='mb-5'>\n                    <div className='d-flex align-items-center gap-3 justify-content-end'>\n                        <div>\n                            <CustomCheckbox\n                                onChange={onSameAsBusiness}\n                                checked={\n                                    manualData?.business_address\n                                        ? manualData?.business_address ===\n                                          manualData?.mailing_address\n                                        : false\n                                }\n                            />\n                        </div>\n                        <div\n                            className=' text-cmGrey600'\n                            style={{fontWeight: '600', fontSize: '12px'}}\n                        >\n                            Same as business address\n                        </div>\n                    </div>\n                    <div>\n                        <CustomInput\n                            label={'Mailing Address'}\n                            placeholder='Enter Mailing Address'\n                            value={manualData?.mailing_address}\n                            name={FIELD_KEYS?.mailing_address}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                        />\n                    </div>\n                </div>\n                {/* City & State */}\n                {/* line */}\n                <div className='row gap-5 align-items-center mb-5 '>\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'State'}\n                            options={stateList}\n                            name={FIELD_KEYS.mailing_state}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            value={manualData?.mailing_state}\n                            valueKey='state_code'\n                        />\n                    </div>\n                    {/* line2 */}\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'City'}\n                            options={mailingCityList}\n                            name={FIELD_KEYS.mailing_city}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            value={manualData?.mailing_city}\n                            valueKey='name'\n                        />\n                    </div>\n                </div>\n                <div className='mb-15'>\n                    <CustomInput\n                        label={'ZIP'}\n                        type={INPUT_TYPE.number}\n                        placeholder='Enter ZIP'\n                        name={FIELD_KEYS?.mailing_zip}\n                        value={manualData?.mailing_zip}\n                        onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                    />\n                </div>\n\n                <div className='text-center'>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel='Add Location'\n                        onClick={handleSave}\n                    />\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {LocatonAddManualAddress}\n","import React, {useEffect, useState} from 'react'\n\nimport {Sidebar} from 'primereact/sidebar'\nimport moment from 'moment'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    getUserRedlineService,\n    upComingLocationRedlinesService,\n} from '../../../../../../services/Services'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\n\nexport default function ViewLocationRedlineChanges({toggleView, closeToggle, locationData}) {\n    const [loading, setLoading] = useState(false)\n    const [redlineData, setRedlineData] = useState([])\n    useEffect(() => {\n        setLoading(true)\n        upComingLocationRedlinesService(locationData?.id)\n            .then((res) => {\n                setRedlineData(res?.data)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [locationData])\n\n    return (\n        <>\n            <Sidebar\n                visible={toggleView}\n                position='right'\n                onHide={closeToggle}\n                className={'w-sm-25 w-100 px-0 mx-0'}\n                icons={() => (\n                    <div\n                        className='w-100'\n                        style={{\n                            fontSize: '16px',\n                            color: '#0D1821',\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                        }}\n                    >\n                        Redline Changes\n                    </div>\n                )}\n            >\n                <div className='' id='kt_explore_body'>\n                    <CustomLoader full visible={loading} />\n                    <>\n                        <div className='py-lg-0 py-5 mx-auto'>\n                            <div\n                                className='text-cmGrey700 '\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontSize: '14px',\n                                    fontWeight: '600',\n                                }}\n                            >\n                                First Redline\n                            </div>\n                            <div\n                                style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                className='row py-3 gap-5 me-sm-6 justify-content-between w-100 '\n                            >\n                                {/* Min */}\n                                <div className='col-sm '>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <input\n                                            type='radio'\n                                            style={{marginTop: '1px'}}\n                                            id='specifyColor'\n                                            // name='radio7'\n                                            value='GFG'\n                                            checked\n                                            readOnly\n                                        />\n                                        <label\n                                            style={{fontSize: '16px', fontWeight: '600'}}\n                                            className='text-cmGrey800 '\n                                        >\n                                            {formattedNumberFields(locationData?.redline_min)}\n                                        </label>\n                                    </div>\n                                </div>\n\n                                <div className='col-sm'>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <input\n                                            type='radio'\n                                            style={{marginTop: '1px'}}\n                                            id='specifyColor1'\n                                            // name='radio1'\n                                            value='GFG'\n                                            checked\n                                            readOnly\n                                            required\n                                        />\n                                        <label\n                                            style={{fontSize: '16px', fontWeight: '600'}}\n                                            className='text-cmGrey800 '\n                                        >\n                                            {formattedNumberFields(locationData?.redline_standard)}\n                                        </label>\n                                    </div>\n                                </div>\n\n                                <div className='col-sm'>\n                                    <div className='d-flex align-items-center gap-3 '>\n                                        <input\n                                            type='radio'\n                                            style={{marginTop: '1px'}}\n                                            id='specifyColor2'\n                                            // name='radio2'\n                                            value='GFG'\n                                            checked\n                                            readOnly\n                                        />\n                                        <label\n                                            style={{fontSize: '16px', fontWeight: '600'}}\n                                            className='text-cmGrey800 '\n                                        >\n                                            {formattedNumberFields(locationData?.redline_max)}\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div\n                            className='py-3 mx-auto d-flex align-items-center gap-5'\n                            style={{\n                                fontFamily: 'Manrope',\n                                fontSize: '14px',\n                                fontWeight: '600',\n                            }}\n                        >\n                            <div className='text-nowrap text-cmGrey700'>Effective From:</div>\n\n                            <div className='text-nowrap text-cmGrey800'>\n                                {getValidDate(locationData?.effective_date, 'MM/DD/YYYY')}\n                            </div>\n                        </div>\n                        {/* Added by */}\n                        <div\n                            className='py-3 mx-auto d-flex flex-wrap align-items-center gap-5'\n                            style={{\n                                fontFamily: 'Manrope',\n                                fontSize: '14px',\n                                fontWeight: '600',\n                            }}\n                        >\n                            <div className='text-cmGrey700 text-nowrap'>Added By:</div>\n\n                            <div className='text-nowrap'>\n                                <CustomImage\n                                    src={locationData?.created_by?.image}\n                                    className='avatar me-3'\n                                />\n                                {locationData?.created_by?.first_name ?? '-'}\n                                {locationData?.created_by?.last_name ?? '-'}\n                            </div>\n                        </div>\n                        <hr></hr>\n                    </>\n                    {redlineData?.map((item) => (\n                        <div key={item?.id}>\n                            <div className='py-lg-0 py-5 mx-auto mt-5'>\n                                <div\n                                    className='text-cmGrey700 d-flex justify-content-between'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: '600',\n                                    }}\n                                >\n                                    Changes\n                                </div>\n                                <div\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    className='row py-3 gap-5 me-sm-6 justify-content-between w-100 '\n                                >\n                                    {/* Min */}\n                                    <div className='col-sm '>\n                                        <div className='d-flex align-items-center gap-3'>\n                                            <input\n                                                type='radio'\n                                                style={{marginTop: '1px'}}\n                                                id='specifyColor'\n                                                // name='radio7'\n                                                value='GFG'\n                                                checked\n                                                readOnly\n                                            />\n                                            <label\n                                                style={{fontSize: '16px', fontWeight: '600'}}\n                                                className='text-cmGrey800 '\n                                            >\n                                                {formattedNumberFields(item?.redline_min)}\n                                            </label>\n                                        </div>\n                                    </div>\n\n                                    <div className='col-sm'>\n                                        <div className='d-flex align-items-center gap-3'>\n                                            <input\n                                                type='radio'\n                                                style={{marginTop: '1px'}}\n                                                id='specifyColor1'\n                                                // name='radio1'\n                                                value='GFG'\n                                                checked\n                                                readOnly\n                                                required\n                                            />\n                                            <label\n                                                style={{fontSize: '16px', fontWeight: '600'}}\n                                                className='text-cmGrey800 '\n                                            >\n                                                {formattedNumberFields(item?.redline_standard)}\n                                            </label>\n                                        </div>\n                                    </div>\n\n                                    <div className='col-sm'>\n                                        <div className='d-flex align-items-center gap-3 '>\n                                            <input\n                                                type='radio'\n                                                style={{marginTop: '1px'}}\n                                                id='specifyColor2'\n                                                // name='radio2'\n                                                value='GFG'\n                                                checked\n                                                readOnly\n                                            />\n                                            <label\n                                                style={{fontSize: '16px', fontWeight: '600'}}\n                                                className='text-cmGrey800 '\n                                            >\n                                                {formattedNumberFields(item?.redline_max)}\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/* Date */}\n                            <div\n                                className='py-3 mx-auto d-flex align-items-center gap-5'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontSize: '14px',\n                                    fontWeight: '600',\n                                }}\n                            >\n                                <div className='text-cmGrey700'>Effective From:</div>\n\n                                <div className='text-cmGrey800'>\n                                    {getValidDate(item?.effective_date, 'MM-DD-YYYY')}\n                                </div>\n                            </div>\n\n                            <div\n                                className='py-3 mx-auto d-flex align-items-center gap-5'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontSize: '14px',\n                                    fontWeight: '600',\n                                }}\n                            >\n                                <div className='text-cmGrey700'>Updated By:</div>\n\n                                <div className='col-sm-6'>\n                                    <RedirectToEmployeeProfile employeeId={item?.id}>\n                                        <CustomImage\n                                            src={item?.updated_by?.image}\n                                            className='avatar me-3'\n                                        />{' '}\n                                        {`${item?.updated_by?.first_name} ${item?.updated_by?.last_name}` ??\n                                            '-'}\n                                    </RedirectToEmployeeProfile>\n                                </div>\n                            </div>\n                            <hr></hr>\n                        </div>\n                    ))}\n                </div>\n            </Sidebar>\n        </>\n    )\n}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport _ from 'lodash'\nimport {TabView, TabPanel} from 'primereact/tabview'\nimport moment from 'moment'\nimport CustomDatePicker from '../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {\n    formattedNumberFields,\n    getLocationRedlineHelper,\n} from '../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport ViewLocationRedlineChanges from './ViewLocationRedlineChanges'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomLink from '../../../../../../customComponents/customButtton/CustomLink'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\n\nconst EditLocationRedlineModal = ({\n    onSavePress,\n    redline_data = [],\n    locationData,\n    show,\n    handleClose,\n}) => {\n    const [redlineData, setRedlineData] = useState(redline_data ?? [])\n    const [toggleView, setToggleView] = useState(false)\n\n    const closeToggle = () => {\n        setToggleView(false)\n    }\n\n    useEffect(() => {\n        const data = redline_data?.map((item) => ({\n            ...item,\n            edit: false,\n        }))\n        setRedlineData(data)\n    }, [redline_data])\n\n    const onEditPress = useCallback(\n        (index) => {\n            const data = [...redlineData]\n            data[index].edit = true\n            setRedlineData(data)\n        },\n        [redlineData]\n    )\n\n    const onEditSavePress = useCallback(\n        (index) => {\n            const data = [...redlineData]\n\n            if (\n                data?.[index]?.redline_max &&\n                Number(data?.[index]?.redline_max) < Number(data?.[index]?.redline_standard)\n            )\n                return CustomToast.error('Max redline should be greater than standard redline')\n            if (\n                data?.[index]?.redline_min &&\n                Number(data?.[index]?.redline_min) > Number(data?.[index]?.redline_standard)\n            )\n                return CustomToast.error('Min redline should be less than standard redline')\n            data[index].edit = false\n            setRedlineData(data)\n        },\n        [redlineData]\n    )\n\n    const onDeletePress = useCallback(\n        (index) => {\n            const data = redlineData?.filter((item, ind) => ind != index)\n            setRedlineData(data)\n        },\n        [redlineData]\n    )\n\n    const handleSave = useCallback(() => {\n        const isFilledData = redlineData.map((item) =>\n            item?.redline_standard && item?.effective_date ? true : false\n        )\n        const isValidData = redlineData.map((item) => item?.edit)\n        if (isValidData.includes(true)) {\n            return CustomToast.error('Please save redline data')\n        }\n        if (isFilledData.includes(false)) {\n            return CustomToast.error('Please fill empty data')\n        }\n        onSavePress(redlineData)\n    }, [onSavePress, redlineData])\n\n    const updadteRedline = useCallback(() => {}, [])\n\n    const currentRedline = useMemo(() => {\n        const data = getLocationRedlineHelper(locationData)?.current\n        return data\n    }, [locationData])\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            title={`Edit Location Redline - ${locationData?.state} | ${locationData?.general_code} `}\n            maxWidth='1000'\n        >\n            <div\n                style={{\n                    fontSize: 14,\n                    fontFamily: fontsFamily.manrope,\n                }}\n                className='px-sm-15 px-5 mx-auto'\n            >\n                <div\n                    style={{\n                        fontWeight: 600,\n                    }}\n                >\n                    <div className='d-flex justify-content-between align-items-center mb-5'>\n                        <div className='d-flex align-items-center gap-3'>\n                            <div className='text-cmGrey900'>Current Redline</div>\n                            <div className='text-cmGrey700'>\n                                since{' '}\n                                {currentRedline?.effective_date\n                                    ? getValidDate(currentRedline?.effective_date)\n                                    : ' -'}\n                            </div>\n\n                            <CustomLink label={'Audit log'} onClick={() => setToggleView(true)} />\n                        </div>\n                    </div>\n                    {/* min max standard */}\n                    <div className='row align-items-center text-center'>\n                        <div className='col-sm d-flex flex-center gap-3  '>\n                            <div className='text-cmGrey600'>Min</div>\n                            <div className='text-cmGrey800' style={{fontSize: 16}}>\n                                {currentRedline?.redline_min\n                                    ? formattedNumberFields(currentRedline?.redline_min)\n                                    : '-'}\n                            </div>\n                        </div>\n\n                        <div className='col-sm d-flex flex-center gap-3'>\n                            <div className='text-cmGrey600 required'>Standard</div>\n                            <div className='text-cmGrey800' style={{fontSize: 16}}>\n                                {currentRedline?.redline_standard\n                                    ? formattedNumberFields(currentRedline?.redline_standard)\n                                    : '-'}\n                            </div>\n                        </div>\n\n                        <div className='col-sm d-flex flex-center gap-3'>\n                            <div className='text-cmGrey600'>Max</div>\n                            <div className='text-cmGrey800' style={{fontSize: 16}}>\n                                {currentRedline?.redline_max\n                                    ? formattedNumberFields(currentRedline?.redline_max)\n                                    : '-'}\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                </div>\n\n                <div\n                    className='d-flex justify-content-between align-items-center mb-5'\n                    style={{\n                        fontWeight: 600,\n                    }}\n                >\n                    <div className='text-cmGrey900'>Other Redlines</div>\n                </div>\n                {/* Header ends */}\n                <div>\n                    <TabView>\n                        <TabPanel header='Past'>\n                            <CommonRedlineTable\n                                type='past'\n                                redlineData={redlineData}\n                                setRedlineData={setRedlineData}\n                                onEditPress={onEditPress}\n                                onDeletePress={onDeletePress}\n                                onEditSavePress={onEditSavePress}\n                            />\n                        </TabPanel>\n                        <TabPanel header='Upcoming'>\n                            <CommonRedlineTable\n                                type='upcoming'\n                                redlineData={redlineData}\n                                updateRedline={updadteRedline}\n                                onEditPress={onEditPress}\n                                onDeletePress={onDeletePress}\n                                onEditSavePress={onEditSavePress}\n                                setRedlineData={setRedlineData}\n                            />\n                        </TabPanel>\n                    </TabView>\n                </div>\n                <div className='d-flex flex-center gap-10 w-75 mx-auto'>\n                    <div className=''>\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.error}\n                            buttonLabel='Cancel'\n                            onClick={handleClose}\n                            buttonSize={BUTTON_SIZE.normal}\n                        />\n                    </div>\n                    <div className=''>\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel='Save'\n                            onClick={handleSave}\n                            buttonSize={BUTTON_SIZE.normal}\n                        />\n                    </div>\n                </div>\n            </div>\n            {toggleView ? (\n                <ViewLocationRedlineChanges\n                    toggleView={toggleView}\n                    closeToggle={closeToggle}\n                    locationData={locationData}\n                />\n            ) : null}\n        </CustomModal>\n    )\n}\n\nexport default EditLocationRedlineModal\n\nconst CommonRedlineTable = ({\n    onEditPress,\n    onDeletePress,\n    onEditSavePress,\n    type = 'past',\n    redlineData = [],\n    setRedlineData = null,\n}) => {\n    const changeRedline = (index, key, value) => {\n        const data = _.cloneDeep(redlineData)\n        data[index][key] = value\n        setRedlineData(data)\n    }\n    return (\n        <div className='table-responsive table-bordered'>\n            <table className='table'>\n                <thead>\n                    <tr\n                        className='text-cmGrey500 text-cmGrey800 border-cmGrey400'\n                        style={{\n                            fontSize: '14px',\n                            fontWeight: '600',\n                            fontFamily: fontsFamily.manrope,\n                        }}\n                    >\n                        <th className='text-nowrap p-3 required'>Effective date</th>\n                        <th className='text-nowrap p-3 '>Min</th>\n                        <th className='text-nowrap p-3 required'>Standard</th>\n                        <th className='text-nowrap p-3 '>Max</th>\n                        <th className='text-nowrap p-3 '></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {redlineData?.map((item, index) => {\n                        let show = false\n                        if (type == 'past') {\n                            show =\n                                (item?.new && item?.type == 'past') ||\n                                new Date(\n                                    moment(item?.effective_date, 'YYYYY-MM-DD').format(\n                                        'YYYY-MM-DD 00:00:00'\n                                    )\n                                ) < new Date(moment().format('YYYY-MM-DD 00:00:00'))\n                        } else {\n                            show =\n                                (item?.new && item?.type == 'upcoming') ||\n                                new Date(\n                                    moment(item?.effective_date, 'YYYYY-MM-DD').format(\n                                        'YYYY-MM-DD 00:00:00'\n                                    )\n                                ) >= new Date(moment().format('YYYY-MM-DD 00:00:00'))\n                        }\n                        return (\n                            <>\n                                {show && (\n                                    <>\n                                        {item?.edit ? (\n                                            <tr\n                                                className='text-cmGrey800 stripRow'\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: fontsFamily.manrope,\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <td className='p-3 text-nowrap text-center'>\n                                                    {(item?.new &&\n                                                        item?.type == 'past' &&\n                                                        item?.edit) ||\n                                                    (item?.edit && item?.type == 'upcoming') ? (\n                                                        <div className='w-150px'>\n                                                            <CustomDatePicker\n                                                                minDate={\n                                                                    type == 'upcoming'\n                                                                        ? new Date()\n                                                                        : null\n                                                                }\n                                                                maxDate={\n                                                                    type == 'past'\n                                                                        ? new Date(\n                                                                              new Date().setDate(\n                                                                                  new Date().getDate() -\n                                                                                      1\n                                                                              )\n                                                                          )\n                                                                        : null\n                                                                }\n                                                                value={\n                                                                    item?.effective_date\n                                                                        ? new Date(\n                                                                              item?.effective_date\n                                                                          )\n                                                                        : null\n                                                                }\n                                                                onChange={(e) => {\n                                                                    changeRedline(\n                                                                        index,\n                                                                        'effective_date',\n                                                                        getValidDate(\n                                                                            e?.target?.value,\n                                                                            'YYYY-MM-DD'\n                                                                        )\n                                                                    )\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    ) : (\n                                                        // getValidDate(item?.effective_date)\n                                                        <div className='w-150px'>\n                                                            <CustomDatePicker\n                                                                minDate={\n                                                                    type == 'upcoming'\n                                                                        ? new Date()\n                                                                        : null\n                                                                }\n                                                                value={\n                                                                    item?.effective_date\n                                                                        ? new Date(\n                                                                              item?.effective_date\n                                                                          )\n                                                                        : null\n                                                                }\n                                                                onChange={(e) => {\n                                                                    changeRedline(\n                                                                        index,\n                                                                        'effective_date',\n                                                                        getValidDate(\n                                                                            e?.target?.value,\n                                                                            'YYYY-MM-DD'\n                                                                        )\n                                                                    )\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    )}\n                                                </td>\n                                                <td className='p-3 text-nowrap'>\n                                                    <div className='w-150px'>\n                                                        <CustomInput\n                                                            type={INPUT_TYPE.currency}\n                                                            // placeholder={formattedNumberFields()}\n                                                            value={item?.redline_min}\n                                                            onChange={(e) =>\n                                                                changeRedline(\n                                                                    index,\n                                                                    'redline_min',\n                                                                    e?.target?.value\n                                                                )\n                                                            }\n                                                            prefixText='$'\n                                                        />\n                                                    </div>\n                                                </td>\n                                                <td className='p-3 text-nowrap'>\n                                                    <div className='w-150px'>\n                                                        <CustomInput\n                                                            type={INPUT_TYPE.currency}\n                                                            // placeholder={formattedNumberFields()}\n                                                            prefixText='$'\n                                                            value={item?.redline_standard}\n                                                            onChange={(e) =>\n                                                                changeRedline(\n                                                                    index,\n                                                                    'redline_standard',\n                                                                    e?.target?.value\n                                                                )\n                                                            }\n                                                        />\n                                                    </div>\n                                                </td>\n                                                <td className='p-3 '>\n                                                    <div className='w-150px'>\n                                                        <CustomInput\n                                                            type={INPUT_TYPE.currency}\n                                                            // placeholder={formattedNumberFields()}\n                                                            prefixText='$'\n                                                            value={item?.redline_max}\n                                                            onChange={(e) =>\n                                                                changeRedline(\n                                                                    index,\n                                                                    'redline_max',\n                                                                    e?.target?.value\n                                                                )\n                                                            }\n                                                        />\n                                                    </div>\n                                                </td>\n                                                <td className='p-3 text-nowrap'>\n                                                    <i\n                                                        class='fa-solid fa-square-check text-cmBlue-Crayola cursor-pointer'\n                                                        style={{fontSize: '35px'}}\n                                                        onClick={() => onEditSavePress(index)}\n                                                    ></i>\n                                                </td>\n                                                {type == 'upcoming' || item?.new ? (\n                                                    <td className='p-3 text-nowrap'>\n                                                        <CustomDelete\n                                                            onClick={() => onDeletePress(index)}\n                                                        />\n                                                    </td>\n                                                ) : (\n                                                    <td></td>\n                                                )}\n                                            </tr>\n                                        ) : (\n                                            <tr\n                                                className='text-cmGrey800 stripRow'\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: fontsFamily.manrope,\n                                                    fontWeight: 600,\n                                                    lineHeight: '20px',\n                                                }}\n                                            >\n                                                <td className='p-3 text-nowrap'>\n                                                    {getValidDate(item?.effective_date)}\n                                                </td>\n                                                <td className='p-3 text-nowrap'>\n                                                    {item?.redline_min}\n                                                </td>\n                                                <td className='p-3 text-nowrap text-cmGrey700'>\n                                                    {item?.redline_standard}\n                                                </td>\n                                                <td className='p-3 text-nowrap'>\n                                                    {item?.redline_max}\n                                                </td>\n                                                <td className='p-3 text-nowrap d-flex gap-5 align-items-center '>\n                                                    <div\n                                                        className='bi bi-pencil fs-5 cursor-pointer'\n                                                        onClick={() => onEditPress(index)}\n                                                    />\n                                                    {type == 'upcoming' || item?.new ? (\n                                                        <div\n                                                            className='bi bi-trash fs-3 cursor-pointer'\n                                                            onClick={() => onDeletePress(index)}\n                                                        />\n                                                    ) : null}\n                                                </td>\n                                            </tr>\n                                        )}\n                                    </>\n                                )}\n                            </>\n                        )\n                    })}\n                    {/* <>\n                        <tr>\n                            <td className='text-cmGrey600 fw-bold text-center py-5' colSpan={5}>\n                                No data found\n                            </td>\n                        </tr>\n                    </> */}\n                    <tr colSpan={5} className=''>\n                        <div style={{padding: 5}} className=''>\n                            <CustomLink\n                                label={'Add Redline'}\n                                icon={'bi bi-plus-square'}\n                                onClick={() => {\n                                    const data = _.cloneDeep(redlineData)\n                                    data.push({\n                                        type,\n                                        new: true,\n                                        edit: true,\n                                        redline_min: null,\n                                        redline_standard: null,\n                                        redline_max: null,\n                                        effective_date: null,\n                                    })\n                                    setRedlineData(data)\n                                }}\n                            />\n                        </div>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import {useState, useEffect, useCallback, useMemo} from 'react'\n// import {createPortal} from 'react-dom'\nimport _ from 'lodash'\nimport {\n    addLocationService,\n    getLatLongByLocationService,\n    getPlaceAddressService,\n    updateLocationService,\n} from '../../../../../../services/Services'\nimport {useSelector} from 'react-redux'\nimport {getAllStatesAndCitiesSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {INITIAL_ADDRESS_FIELD} from '../../../../../../customComponents/customInputs/customAddressInput/CustomAddressInput2'\nimport {\n    newLocationValidation,\n    NEW_LOCATION_VALIDATION_FIELD,\n} from '../../../../../../validations/validations'\nimport {\n    formattedNumberFields,\n    getErrorMessageFromResponse,\n    getLocationRedlineHelper,\n    isEmptyObjectValue,\n} from '../../../../../../helpers/CommonHelpers'\nimport {LocatonAddManualAddress} from './LocatonAddManualAddress'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomDatePicker from '../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport EditLocationRedlineModal from './EditLocationRedlineModal'\nimport ViewLocationRedlineChanges from './ViewLocationRedlineChanges'\nimport CustomAddressInput from '../../../../../../customComponents/customInputs/customAddressInput/CustomAddressInput'\nimport CustomAddressInput2 from '../../../../../../customComponents/customInputs/customAddressInput/CustomAddressInput2'\nimport CustomLink from '../../../../../../customComponents/customButtton/CustomLink'\n\nconst FIELD_KEYS = {\n    state_id: 'state_id',\n    city_id: 'city_id',\n    general_code: 'general_code',\n    installation_partner: 'installation_partner',\n    redline_min: 'redline_min',\n    redline_standard: 'redline_standard',\n    redline_max: 'redline_max',\n    redline_data: 'redline_data',\n    marketing_deal_person_id: 'marketing_deal_person_id',\n    type: 'type',\n    lat: 'lat',\n    long: 'long',\n    office_name: 'office_name',\n    effective_date: 'effective_date',\n}\nconst ManageLocation = ({show, handleClose, setLoader, selectedLocation, alert = false}) => {\n    const allStatCity = useSelector(getAllStatesAndCitiesSelector)\n    const [loading, setLoading] = useState(false)\n    const [showExtraFeilds, setShowExtraFeilds] = useState(selectedLocation?.type == 'Office')\n    const [openAddressPopup, setOpenAddressPopup] = useState(false)\n    const [setSelectedBusinessAddress] = useState(null)\n    const [editRedline, setEditRedline] = useState(false)\n    const [toggleView, setToggleView] = useState(false)\n\n    const [locationData, setLocationData] = useState({\n        state_id: null,\n        city_id: null,\n        general_code: null,\n        installation_partner: null,\n        redline_min: null,\n        redline_standard: null,\n        redline_max: null,\n        marketing_deal_person_id: null,\n        type: 'Redline',\n        lat: null,\n        long: null,\n        mailing_address: null,\n        mailing_city: null,\n        mailing_state: null,\n        mailing_zip: null,\n        business_city: null,\n        business_address: null,\n        business_state: null,\n        business_zip: null,\n        effective_date: null,\n        redline_data: [],\n        ...selectedLocation,\n    })\n\n    useEffect(() => {\n        setShowExtraFeilds(selectedLocation?.type == 'Office')\n    }, [selectedLocation])\n    const [addLocationError, setAddLocationError] = useState(NEW_LOCATION_VALIDATION_FIELD)\n\n    const updateFieldsData = useCallback(\n        (key, value) => {\n            Object.freeze(locationData)\n            let temp = _.cloneDeep(locationData)\n            temp[key] = value\n\n            setLocationData(temp)\n        },\n        [locationData]\n    )\n    const onChangeInputData = useCallback(\n        (e) => {\n            updateFieldsData(e?.target?.name, e?.target?.value)\n        },\n        [updateFieldsData]\n    )\n    const addOrUpdateLocationPress = (e) => {\n        e.preventDefault()\n        callApiAddOrUpdateLocation()\n    }\n\n    const callApiAddOrUpdateLocation = useCallback(\n        (redlineData = null) => {\n            let body = {}\n            const callApi = () => {\n                if (locationData?.id) {\n                    updateLocationService(body)\n                        .then((res) => {\n                            if (res.status) {\n                                handleClose()\n                                CustomToast.success('Location updated')\n                                setLoader(true)\n                            } else {\n                                CustomToast.error(getErrorMessageFromResponse(res))\n                            }\n                        })\n                        .catch((e) => {\n                            CustomToast.error(getErrorMessageFromResponse(e))\n                        })\n                        .finally(() => {\n                            setLoading(false)\n                        })\n                } else {\n                    addLocationService(body)\n                        .then((res) => {\n                            if (res?.status) {\n                                handleClose()\n                                CustomToast.success('Location added')\n                                setLoader(true)\n                            } else {\n                                CustomToast.error(getErrorMessageFromResponse(res))\n                            }\n                        })\n                        .catch((e) => {\n                            CustomToast.error(getErrorMessageFromResponse(e))\n                        })\n                        .finally(() => {\n                            setLoading(false)\n                        })\n                }\n            }\n\n            body = {\n                state_id: locationData?.state_id,\n                city_id: locationData?.city_id,\n                general_code: locationData?.general_code,\n                installation_partner: locationData?.installation_partner,\n                redline_min: locationData?.redline_min,\n                redline_standard: locationData?.redline_standard,\n                redline_max: locationData?.redline_max,\n                redline_data: redlineData ?? locationData?.redline_data,\n                type: locationData?.type,\n                lat: locationData?.lat,\n                long: locationData?.long,\n                time_zone: locationData?.time_zone,\n                office_name: locationData?.office_name,\n                business_address: locationData?.business_address,\n                business_city: locationData?.business_city,\n                business_state: locationData?.business_state,\n                business_zip: locationData?.business_zip,\n                mailing_address: locationData?.mailing_address,\n                mailing_state: locationData?.mailing_state,\n                mailing_city: locationData?.mailing_city,\n                mailing_zip: locationData?.mailing_zip,\n                effective_date: locationData?.effective_date\n                    ? getValidDate(locationData?.effective_date, 'YYYY-MM-DD')\n                    : null,\n            }\n            if (locationData?.id) body.id = locationData?.id\n            const validationErrors = newLocationValidation(body)\n            setAddLocationError(validationErrors)\n\n            if (isEmptyObjectValue(validationErrors)) {\n                setLoading(true)\n                callApi()\n            }\n        },\n        [\n            handleClose,\n            locationData?.business_address,\n            locationData?.business_city,\n            locationData?.business_state,\n            locationData?.business_zip,\n            locationData?.city_id,\n            locationData?.effective_date,\n            locationData?.general_code,\n            locationData?.id,\n            locationData?.installation_partner,\n            locationData?.lat,\n            locationData?.long,\n            locationData?.mailing_address,\n            locationData?.mailing_city,\n            locationData?.mailing_state,\n            locationData?.mailing_zip,\n            locationData?.office_name,\n            locationData?.redline_data,\n            locationData?.redline_max,\n            locationData?.redline_min,\n            locationData?.redline_standard,\n            locationData?.state_id,\n            locationData?.time_zone,\n            locationData?.type,\n            setLoader,\n        ]\n    )\n\n    const onSeachAddress = useCallback(\n        (searchText) =>\n            new Promise((resolve) => {\n                getPlaceAddressService(encodeURI(`${searchText}`))\n                    .then((res) => {\n                        const data = res?.predictions?.map((item) => ({\n                            ...item,\n                            address: item?.description,\n                            city: item?.terms[item?.terms?.length - 2],\n                        }))\n\n                        resolve(data)\n                    })\n                    .catch(() => {\n                        resolve([])\n                    })\n            }),\n        []\n    )\n    const onSelectAddress = useCallback(\n        (value) => {\n            // updateFieldsData('business_address', value?.address)\n            getLatLongByLocationService(encodeURI(`${value?.address}`)).then((res) => {\n                const data = {\n                    address: value?.address,\n                    city: res?.results[0]?.address_components\n                        ?.filter((item) => item?.types?.includes('administrative_area_level_3'))\n                        .map((res) => res?.long_name),\n                    state: res?.results[0]?.address_components\n                        ?.filter((item) => item?.types?.includes('administrative_area_level_1'))\n                        .map((res) => res?.short_name),\n                    zip: res?.results[0]?.address_components\n                        ?.filter((item) => item?.types?.includes('postal_code'))\n                        .map((res) => res?.long_name),\n                    // lat: res?.results[0]?.geometry?.location?.lat,\n                    // lng: res?.results[0]?.geometry?.location?.lng,\n                }\n                let tempData = {...locationData}\n                tempData['business_address'] = data?.address?.toString()\n                tempData['business_city'] = data?.city?.toString()\n                tempData['business_state'] = data?.state?.toString()\n                tempData['business_zip'] = data?.zip?.toString()\n                // tempData['lat'] = data?.lat\n                // tempData['long'] = data?.lng\n                // tempData['type'] = 'Office'\n\n                setLocationData(tempData)\n                setSelectedBusinessAddress(data)\n            })\n        },\n        [locationData]\n    )\n    const closeAddressPopup = () => {\n        setOpenAddressPopup(false)\n    }\n    const closeRedlinePopup = () => {\n        setEditRedline(false)\n    }\n\n    const handleAddManually = () => {\n        let tempData = {...locationData}\n        tempData['business_address'] = null\n        tempData['business_city'] = null\n        tempData['business_state'] = null\n        tempData['business_zip'] = null\n\n        setLocationData(tempData)\n        setOpenAddressPopup(true)\n    }\n\n    const onSaveOtherRedlinePress = useCallback(\n        (redlineData) => {\n            setEditRedline(false)\n            callApiAddOrUpdateLocation(redlineData)\n        },\n        [callApiAddOrUpdateLocation]\n    )\n\n    const closeToggle = () => {\n        setToggleView(false)\n    }\n\n    const currentRedline = useMemo(() => {\n        const data = getLocationRedlineHelper(locationData)?.current\n        return data\n    }, [locationData])\n\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth={650}\n            title={selectedLocation?.id ? 'Edit Location' : 'Add Location'}\n        >\n            <CustomLoader visible={loading} full />\n            <div className='px-lg-10'>\n                <form onSubmit={addOrUpdateLocationPress}>\n                    <div className='w-sm-100 w-100 mx-auto'>\n                        <div className='modal-body  py-lg-7 '>\n                            <div>\n                                <div className='row justify-content-between align-items-start mb-5'>\n                                    <div\n                                        className='col-sm-6'\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    >\n                                        <CustomDropdown\n                                            label={'State'}\n                                            required\n                                            options={allStatCity}\n                                            name={FIELD_KEYS.state_id}\n                                            value={locationData?.state_id}\n                                            onChange={(e) => {\n                                                const code = allStatCity?.find(\n                                                    (item) => item?.id == e?.target?.value\n                                                )?.state_code\n                                                setLocationData((val) => ({\n                                                    ...val,\n                                                    [FIELD_KEYS.state_id]: e?.target?.value,\n                                                    [FIELD_KEYS?.general_code]: code,\n                                                }))\n                                            }}\n                                            errorMessage={addLocationError?.locationState}\n                                            valueKey='id'\n                                            disabled={alert}\n                                        />\n                                    </div>\n\n                                    <div\n                                        className='col-sm-6'\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '14px',\n                                        }}\n                                    >\n                                        <CustomInput\n                                            errorMessage={addLocationError.locationGeneralCode}\n                                            label='General Code'\n                                            required={true}\n                                            placeholder='Ex. CA , CA-PH&GWY'\n                                            name={FIELD_KEYS.general_code}\n                                            value={locationData?.general_code}\n                                            onChange={onChangeInputData}\n                                            disabled={alert}\n                                        />\n                                        <div\n                                            className={`text-cmGrey600  mt-2`}\n                                            style={{\n                                                fontSize: '12px',\n                                                fontWeight: 500,\n                                                lineHeight: '15px',\n                                            }}\n                                        >\n                                            State Codes must match the state code in the CRM Data\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='mb-5'>\n                                    <div className='d-flex align-itmes-center gap-5'>\n                                        <CustomCheckbox\n                                            disable={locationData?.people > 0}\n                                            checked={locationData?.type == 'Office'}\n                                            onChange={(e) => {\n                                                setShowExtraFeilds(e.target.checked)\n                                                updateFieldsData(\n                                                    FIELD_KEYS.type,\n                                                    locationData?.type == 'Office'\n                                                        ? 'Redline'\n                                                        : 'Office'\n                                                )\n                                            }}\n                                        />\n\n                                        <label\n                                            className='form-check-label text-cmGrey700'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                            htmlFor='flexCheckboxLg'\n                                        >\n                                            Office ( Work Location)\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {showExtraFeilds && (\n                                <div className=' mx-auto'>\n                                    <div className='mb-5 '>\n                                        <CustomInput\n                                            label={'Office Name'}\n                                            required\n                                            placeholder='E.g. SF Office'\n                                            name={FIELD_KEYS.office_name}\n                                            value={locationData?.office_name}\n                                            onChange={onChangeInputData}\n                                            errorMessage={addLocationError?.officeName}\n                                        />\n                                    </div>\n                                    <div className='mb-5 '>\n                                        <CustomAddressInput2\n                                            showAddressLine2={false}\n                                            setData={(data) => {\n                                                setLocationData((val) => ({\n                                                    ...val,\n                                                    business_address: data?.address_line1,\n                                                    business_city: data?.city,\n                                                    business_state: data?.state,\n                                                    business_zip: data?.zip,\n                                                    lat: data?.lat,\n                                                    long: data?.long,\n                                                    time_zone: data?.time_zone,\n                                                }))\n                                            }}\n                                            data={{\n                                                ...INITIAL_ADDRESS_FIELD,\n                                                address_line1: locationData?.business_address,\n                                                city: locationData?.business_city,\n                                                state: locationData?.business_state,\n                                                zip: locationData?.business_zip,\n                                                lat: locationData?.lat,\n                                                long: locationData?.long,\n                                                time_zone: locationData?.time_zone,\n                                            }}\n                                            required\n                                            needTimeZone\n                                            label={'Office (Work Location) Address'}\n                                            modalTitle={'Set Office Adress'}\n                                            name={'business_address'}\n                                            errorMessage={\n                                                addLocationError?.officeAddress ||\n                                                addLocationError?.business_address\n                                            }\n                                        />\n                                        <div className='d-flex flex-wrap align-items-center justify-content-between mt-1 text-cmGrey600'>\n                                            <span style={{fontWeight: '500', fontSize: '12px'}}>\n                                                {' '}\n                                                Enter complete address for the work location{' '}\n                                            </span>{' '}\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                            <div className='py-lg-7 py-5  d-flex justify-content-center'>\n                                <div className='col'>\n                                    <CustomInput\n                                        label='Installation Partner'\n                                        name={FIELD_KEYS.installation_partner}\n                                        value={locationData?.installation_partner}\n                                        onChange={onChangeInputData}\n                                        placeholder='Enter'\n                                    />\n                                </div>\n                            </div>\n\n                            {!selectedLocation?.id ? (\n                                <div className='py-lg-0 py-5 mx-auto'>\n                                    <div\n                                        className='text-cmGrey900'\n                                        style={{\n                                            fontFamily: fontsFamily.manrope,\n                                            fontSize: '14px',\n                                            fontWeight: '600',\n                                        }}\n                                    >\n                                        Redline\n                                    </div>\n\n                                    <div\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                        className='row mb-5  mt-1 justify-content-between w-100'\n                                    >\n                                        {/* Min */}\n                                        <div className='col-sm'>\n                                            <CustomInput\n                                                label={'Min'}\n                                                prefixText='$'\n                                                onChange={onChangeInputData}\n                                                className=''\n                                                placeholder='0.00'\n                                                type={INPUT_TYPE.number}\n                                                name={FIELD_KEYS.redline_min}\n                                                value={locationData?.redline_min}\n                                                errorMessage={addLocationError.minRedline}\n                                            />\n                                        </div>\n\n                                        {/* Standard */}\n                                        <div className='col-sm'>\n                                            <CustomInput\n                                                label={'Standard'}\n                                                prefixText='$'\n                                                type={INPUT_TYPE.number}\n                                                errorMessage={addLocationError.standerdRedline}\n                                                name={FIELD_KEYS.redline_standard}\n                                                value={locationData?.redline_standard}\n                                                onChange={onChangeInputData}\n                                                className=''\n                                                placeholder='0.00'\n                                                required\n                                            />\n                                        </div>\n\n                                        {/* Max */}\n                                        <div className='col-sm'>\n                                            <CustomInput\n                                                label={'Max'}\n                                                prefixText='$'\n                                                name={FIELD_KEYS.redline_max}\n                                                value={locationData?.redline_max}\n                                                onChange={onChangeInputData}\n                                                className=''\n                                                placeholder='0.00'\n                                                type={INPUT_TYPE.currency}\n                                                errorMessage={addLocationError.maxRedline}\n                                            />\n                                        </div>\n                                    </div>\n                                    {/* Effective Date */}\n                                    <div className='d-flex align-items-center gap-5'>\n                                        <div\n                                            className='text-cmGrey900 required'\n                                            style={{\n                                                fontWeight: 600,\n                                                fontFamily: fontsFamily.manrope,\n                                                fontSize: '14px',\n                                            }}\n                                        >\n                                            Effective From\n                                        </div>\n                                        <CustomDatePicker\n                                            className={'w-auto'}\n                                            placeholderText={'End Date'}\n                                            errorMessage={addLocationError?.effective_date}\n                                            name={FIELD_KEYS.effective_date}\n                                            value={locationData?.effective_date}\n                                            onChange={onChangeInputData}\n                                        />\n                                    </div>\n                                </div>\n                            ) : null}\n                            {selectedLocation?.id ? (\n                                <>\n                                    {/* Current Redline block */}\n                                    <div\n                                        style={{\n                                            fontWeight: 600,\n                                            fontSize: 14,\n                                            fontFamily: fontsFamily.manrope,\n                                        }}\n                                    >\n                                        <div className='d-flex justify-content-between align-items-center mb-5'>\n                                            <div className='d-flex align-items-center gap-3'>\n                                                <div className='text-cmGrey900'>\n                                                    Current Redline\n                                                </div>\n                                                <div className='text-cmGrey700'>\n                                                    since{' '}\n                                                    {currentRedline?.effective_date\n                                                        ? getValidDate(\n                                                              currentRedline?.effective_date\n                                                          )\n                                                        : '-'}\n                                                </div>\n\n                                                <CustomLink\n                                                    label={'Audit log'}\n                                                    onClick={() => setToggleView(true)}\n                                                />\n                                            </div>\n                                            <div\n                                                className='bi bi-pencil fs-5 cursor-pointer'\n                                                onClick={() => setEditRedline(!editRedline)}\n                                            />\n                                        </div>\n                                        {/* min max standard */}\n                                        <div className='d-flex justify-content-between align-items-center'>\n                                            <div className='d-flex align-items-center gap-3'>\n                                                <div className='text-cmGrey600'>Min</div>\n                                                <div\n                                                    className='text-cmGrey800'\n                                                    style={{fontSize: 16}}\n                                                >\n                                                    {currentRedline?.redline_min\n                                                        ? formattedNumberFields(\n                                                              currentRedline?.redline_min\n                                                          )\n                                                        : '-'}\n                                                </div>\n                                            </div>\n                                            <div className='d-flex align-items-center gap-3'>\n                                                <div className='text-cmGrey600 required'>\n                                                    Standard\n                                                </div>\n                                                <div\n                                                    className='text-cmGrey800'\n                                                    style={{fontSize: 16}}\n                                                >\n                                                    {currentRedline?.redline_standard\n                                                        ? formattedNumberFields(\n                                                              currentRedline?.redline_standard\n                                                          )\n                                                        : '-'}\n                                                </div>\n                                            </div>\n                                            <div className='d-flex align-items-center gap-3'>\n                                                <div className='text-cmGrey600'>Max</div>\n                                                <div\n                                                    className='text-cmGrey800'\n                                                    style={{fontSize: 16}}\n                                                >\n                                                    {currentRedline?.redline_max\n                                                        ? formattedNumberFields(\n                                                              currentRedline?.redline_max\n                                                          )\n                                                        : '-'}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className='d-flex justify-content-center mt-4 mb-12'>\n                        <CustomButton\n                            type='submit'\n                            buttonSize={BUTTON_SIZE.large}\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel={selectedLocation?.id ? 'Update Location' : 'Add Location'}\n                            onClick={addOrUpdateLocationPress}\n                        />\n                    </div>\n                </form>\n                {openAddressPopup ? (\n                    <LocatonAddManualAddress\n                        show={openAddressPopup}\n                        handleClose={closeAddressPopup}\n                        locationData={locationData}\n                        stateList={allStatCity}\n                        onChangeInputData={onChangeInputData}\n                        setLocationData={setLocationData}\n                    />\n                ) : null}\n\n                {editRedline ? (\n                    <EditLocationRedlineModal\n                        locationData={locationData}\n                        redline_data={locationData?.redline_data}\n                        onSavePress={onSaveOtherRedlinePress}\n                        show={editRedline}\n                        handleClose={closeRedlinePopup}\n                    />\n                ) : null}\n            </div>\n            {toggleView ? (\n                <ViewLocationRedlineChanges\n                    toggleView={toggleView}\n                    closeToggle={closeToggle}\n                    locationData={locationData}\n                />\n            ) : null}\n        </CustomModal>\n    )\n}\n\nexport default ManageLocation\n","import {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isUserManagerSelector, isUserSuperAdminSelector} from '../../redux/selectors/AuthSelectors'\n\nconst RedirectToEmployeeProfile = ({\n    employeeId = null,\n    children,\n    underline = true,\n    className = null,\n    style = null,\n    target = '_self',\n}) => {\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const isManager = useSelector(isUserManagerSelector)\n\n    const hasAccess = employeeId && (isSuperAdmin || isManager)\n    return (\n        <Link\n            to={hasAccess ? `/user/personal-info?employeeId=${employeeId}` : ''}\n            target={''}\n            state={{\n                employee_id: employeeId,\n            }}\n            style={{\n                pointerEvents: hasAccess ? 'auto' : 'none',\n            }}\n        >\n            <span\n                className={`${hasAccess ? 'cursor-pointer' : ''} text-cmGrey800 d-flex align-items-center ${className}`}\n                style={{\n                    fontWeight: 700,\n                    ...(hasAccess && underline ? {textDecoration: 'underline'} : null),\n                    ...style, \n                }}\n            >\n                {children}\n            </span>\n        </Link>\n    )\n}\n\nexport default RedirectToEmployeeProfile\n","import {useEffect, useMemo, useState} from 'react'\nimport {useSelector} from 'react-redux'\n\nimport {\n    getMonthlyPayPeriodSelector,\n    getPayFrequencySettingSelector,\n    getWeeklyPayPeriodSelector,\n} from '../redux/selectors/SettingsSelectors'\nimport {getValidDate} from '../constants/constants'\nimport {getMonthlyPayPeriodAction, getWeeklyPayPeriodAction} from '../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {\n    getAllMonthlyPayPeriodService,\n    getAllWeeklyPayPeriodService,\n    getMonthlyExecutedPayPeriodService,\n    getWeeklyExecutedPayPeriodService,\n} from '../services/Services'\n\nconst usePayFrequency = () => {\n    const [selectedWeekData, setSelectedWeekData] = useState(null)\n    const getPayFrequencyData = useSelector(getPayFrequencySettingSelector)\n    const weeklyPayPeriod = useSelector(getWeeklyPayPeriodSelector)\n    const monthlyPayPeriodList = useSelector(getMonthlyPayPeriodSelector)\n    const [payPeriodList, setPagePayPeriodList] = useState([])\n    const [executedPayPeriodList, setExecutedPayPeriodList] = useState([])\n    const [allPayPeriodList, setAllPayPeriodList] = useState([])\n\n    const [selectedPayPeriod, setSelectedPayPeriod] = useState(null)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getWeeklyPayPeriodAction())\n        dispatch(getMonthlyPayPeriodAction())\n    }, [])\n\n    // Set Present Pay Period\n    useEffect(() => {\n        if (payPeriodList?.length > 0) {\n            let presentPeriod = payPeriodList?.find(\n                (item) =>\n                    getValidDate(item?.pay_period_from, 'YYYY-MM-DD 00:00', true) <=\n                        getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) &&\n                    getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) <=\n                        getValidDate(item?.pay_period_to, 'YYYY-MM-DD 00:00', true)\n            )\n            if (presentPeriod) {\n                setSelectedPayPeriod(presentPeriod?.id)\n            } else setSelectedPayPeriod(payPeriodList?.[0]?.id)\n        }\n    }, [payPeriodList])\n\n    //Return the list of current payPeriod\n    const currentPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            payPeriodList?.length > 0\n                ? payPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [selectedPayPeriod, payPeriodList])\n\n    const currentPayPeriodFromAllPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            allPayPeriodList?.length > 0\n                ? allPayPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [allPayPeriodList, selectedPayPeriod])\n\n    const executedCurrentPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            executedPayPeriodList?.length > 0\n                ? executedPayPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [selectedPayPeriod, executedPayPeriodList])\n\n    //Return the list of next payPeriod\n    const nextPayPeriod = useMemo(() => {\n        const currPayPeriodIndex =\n            payPeriodList?.length > 0\n                ? payPeriodList?.findIndex((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriodIndex > -1 ? payPeriodList?.[currPayPeriodIndex + 1] : null\n    }, [selectedPayPeriod, payPeriodList])\n\n    //Return the list of executed pay period\n    const pastPayPeriodList = useMemo(() => {\n        return payPeriodList?.filter((item) => item?.execute)\n    }, [payPeriodList])\n\n    useEffect(() => {\n        if (selectedWeekData == 'Weekly') {\n            getWeeklyExecutedPayPeriodService().then((res) => {\n                setExecutedPayPeriodList(res.data)\n            })\n            getAllWeeklyPayPeriodService().then((res) => {\n                setAllPayPeriodList(res.data)\n            })\n        } else if (selectedWeekData == 'Monthly') {\n            getMonthlyExecutedPayPeriodService().then((res) => {\n                setExecutedPayPeriodList(res.data)\n            })\n            getAllMonthlyPayPeriodService().then((res) => {\n                setAllPayPeriodList(res.data)\n            })\n        }\n    }, [selectedWeekData])\n\n    //Handle Frequency type change\n    const handleSelectedWeekData = (weekType) => {\n        let data = getPayFrequencyData?.filter((item) => item?.frequency_type_name == weekType)\n        setSelectedWeekData(data[0]?.frequency_type_name)\n    }\n\n    //Create dropdown list of payFrequency type that is enabled\n    const weekDropdownList = useMemo(() => {\n        let weekName = []\n        getPayFrequencyData?.map((item, index) => {\n            // if (item.status && index != 0) {\n            if (item.status) {\n                weekName.push({...item, name: item?.frequency_type_name})\n            }\n        })\n        return weekName\n    }, [getPayFrequencyData])\n\n    //Changes pay period list according to the selected pay frequency type\n    useEffect(() => {\n        if (selectedWeekData == 'Weekly') {\n            setPagePayPeriodList(weeklyPayPeriod)\n        } else if (selectedWeekData == 'Monthly') {\n            setPagePayPeriodList(monthlyPayPeriodList)\n        } else {\n            setPagePayPeriodList([])\n        }\n    }, [selectedWeekData, weeklyPayPeriod, monthlyPayPeriodList])\n\n    useEffect(() => {\n        if (weekDropdownList?.length > 0) {\n            setSelectedWeekData(weekDropdownList?.[0]?.frequency_type_name)\n        }\n    }, [weekDropdownList])\n\n    return {\n        weekDropdownList,\n        payPeriodList,\n        allPayPeriodList,\n        handleSelectedWeekData,\n        selectedPayPeriod,\n        currentPayPeriod,\n        currentPayPeriodFromAllPayPeriod,\n        nextPayPeriod,\n        setSelectedPayPeriod,\n        selectedWeekData,\n        monthlyPayPeriodList,\n        setSelectedWeekData,\n        pastPayPeriodList,\n        executedPayPeriodList,\n        executedCurrentPayPeriod,\n        weeklyPayPeriod,\n    }\n}\n\nexport default usePayFrequency\n"],"names":["FIELD_KEYS","business_city","business_address","business_state","business_zip","mailing_address","mailing_city","mailing_state","mailing_zip","LocatonAddManualAddress","_ref","show","handleClose","stateList","onChangeInputData","locationData","setLocationData","allStatCity","useSelector","getAllStatesAndCitiesSelector","manualData","setManualData","useState","cityList","useMemo","_allStatCity$find$cit","_allStatCity$find","find","item","state_code","cities","state_id","mailingCityList","_allStatCity$find$cit2","_allStatCity$find2","onSetManualData","field","value","val","_jsx","CustomModal","onHide","title","maxWidth","children","_jsxs","className","style","fontSize","fontWeight","fontFamily","CustomInput","label","placeholder","name","onChange","e","target","CustomDropdown","options","valueKey","type","INPUT_TYPE","CustomCheckbox","data","checked","CustomButton","buttonType","BUTTON_TYPE","buttonLabel","onClick","completeBusinessAddress","filter","join","ViewLocationRedlineChanges","_locationData$created","_locationData$created2","_locationData$created3","_locationData$created4","_locationData$created5","toggleView","closeToggle","loading","setLoading","redlineData","setRedlineData","useEffect","upComingLocationRedlinesService","id","then","res","finally","_Fragment","Sidebar","visible","position","icons","color","CustomLoader","full","marginTop","readOnly","formattedNumberFields","redline_min","required","redline_standard","redline_max","getValidDate","effective_date","CustomImage","src","created_by","image","first_name","last_name","map","_item$updated_by","_ref2","_item$updated_by2","_item$updated_by3","RedirectToEmployeeProfile","employeeId","updated_by","concat","onSavePress","redline_data","setToggleView","edit","onEditPress","useCallback","index","onEditSavePress","_data$index","_data$index2","_data$index3","_data$index4","_data$index5","_data$index6","Number","CustomToast","onDeletePress","ind","handleSave","isFilledData","includes","updadteRedline","currentRedline","_getLocationRedlineHe","getLocationRedlineHelper","current","state","general_code","fontsFamily","CustomLink","TabView","TabPanel","header","CommonRedlineTable","updateRedline","buttonSize","BUTTON_SIZE","changeRedline","key","_","new","Date","moment","format","CustomDatePicker","minDate","maxDate","setDate","getDate","_e$target","_e$target2","_e$target3","prefixText","_e$target4","_e$target5","class","CustomDelete","lineHeight","colSpan","padding","icon","push","city_id","installation_partner","marketing_deal_person_id","lat","long","office_name","setLoader","selectedLocation","alert","showExtraFeilds","setShowExtraFeilds","openAddressPopup","setOpenAddressPopup","setSelectedBusinessAddress","editRedline","setEditRedline","addLocationError","setAddLocationError","NEW_LOCATION_VALIDATION_FIELD","updateFieldsData","Object","freeze","temp","addOrUpdateLocationPress","preventDefault","callApiAddOrUpdateLocation","arguments","length","undefined","body","time_zone","validationErrors","newLocationValidation","isEmptyObjectValue","updateLocationService","status","getErrorMessageFromResponse","catch","addLocationService","onSaveOtherRedlinePress","searchText","Promise","resolve","getPlaceAddressService","encodeURI","_res$predictions","predictions","_item$terms","address","description","city","terms","getLatLongByLocationService","_res$results$","_res$results$$address","_res$results$2","_res$results$2$addres","_res$results$3","_res$results$3$addres","_data$address","_data$city","_data$state","_data$zip","results","address_components","_item$types","types","long_name","_item$types2","short_name","zip","_item$types3","tempData","toString","onSubmit","code","errorMessage","locationState","disabled","locationGeneralCode","disable","people","htmlFor","officeName","CustomAddressInput2","showAddressLine2","setData","address_line1","INITIAL_ADDRESS_FIELD","needTimeZone","modalTitle","officeAddress","minRedline","standerdRedline","maxRedline","placeholderText","closeAddressPopup","EditLocationRedlineModal","closeRedlinePopup","underline","isSuperAdmin","isUserSuperAdminSelector","isManager","isUserManagerSelector","hasAccess","Link","to","employee_id","pointerEvents","textDecoration","usePayFrequency","selectedWeekData","setSelectedWeekData","getPayFrequencyData","getPayFrequencySettingSelector","weeklyPayPeriod","getWeeklyPayPeriodSelector","monthlyPayPeriodList","getMonthlyPayPeriodSelector","payPeriodList","setPagePayPeriodList","executedPayPeriodList","setExecutedPayPeriodList","allPayPeriodList","setAllPayPeriodList","selectedPayPeriod","setSelectedPayPeriod","dispatch","useDispatch","getWeeklyPayPeriodAction","getMonthlyPayPeriodAction","_payPeriodList$","presentPeriod","pay_period_from","pay_period_to","currentPayPeriod","currentPayPeriodFromAllPayPeriod","executedCurrentPayPeriod","nextPayPeriod","currPayPeriodIndex","findIndex","pastPayPeriodList","execute","getWeeklyExecutedPayPeriodService","getAllWeeklyPayPeriodService","getMonthlyExecutedPayPeriodService","getAllMonthlyPayPeriodService","weekDropdownList","weekName","frequency_type_name","_weekDropdownList$","handleSelectedWeekData","weekType","_data$"],"sourceRoot":""}