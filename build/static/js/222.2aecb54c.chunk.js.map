{"version":3,"file":"static/js/222.2aecb54c.chunk.js","mappings":"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","sources":["app/modules/standard_manager/filters/OnboardingEmployeeFilter.js","app/modules/standard_manager/hiring/onBoardingEmp/OnBoardingTable.js","app/modules/standard_manager/filters/LeadsTableFilter.js","app/modules/standard_manager/hiring/hiringLeads/LeadsTable.js","app/modules/standard_manager/hiring/hiringProcess/HiringProgressCards.js","app/modules/standard_manager/hiring/hiringProcess/HiringTable.js","app/modules/standard_manager/hiring/hiringProcess/OfficeChart.js","app/modules/standard_manager/hiring/hiringProcess/RecentlyHiredList.js","app/modules/standard_manager/hiring/hiringProcess/HiringCalendar.js","app/modules/standard_manager/hiring/hiringProcess/HiringProcessPage.js","app/modules/standard_manager/hiring/hiringRoutes/HiringHeader.js","app/modules/standard_manager/hiring/onBoardingEmp/ConfigureEmploye.js","app/modules/standard_manager/hiring/pipeLine/PipeLineCard.js","app/modules/standard_manager/hiring/hiringRoutes/HiringRoutes.js","customComponents/customRadioButton/CustomRadioButton.js","customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile.js","hooks/useFilterButton.js"],"sourcesContent":["import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {useSelector} from 'react-redux'\nimport {getPositionsSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport useOfficeLocation from '../../../../hooks/useOfficeLocation'\nimport {getAllManagerListService} from '../../../../services/Services'\nimport {HIRING_PROCESS_STATUS} from '../../../../constants/constants'\n\nconst OnboardingEmployeeFilter = ({\n    initialFilter = null,\n    onApplyFilter = null,\n    resetFilter = null,\n    office_id = '',\n}) => {\n    const FILTER_KEYS = {\n        status: 'status_filter',\n        position: 'position_filter',\n        manager: 'manager_filter',\n        office: 'office_id',\n        other_status_filter: 'other_status_filter',\n    }\n    const HIRING_STATUS = [\n        {name: 'Offer Letter Resent', value: HIRING_PROCESS_STATUS.offerLetterResent},\n        {name: 'Offer Letter Sent', value: HIRING_PROCESS_STATUS.offerLetterSent},\n        {name: 'Offer Letter Accepted', value: HIRING_PROCESS_STATUS.offerLetterAccepted},\n        {name: 'Offer Expired', value: HIRING_PROCESS_STATUS.offerExpired},\n        {name: 'Onboarding', value: HIRING_PROCESS_STATUS.onboarding},\n        {name: 'Requested Change', value: HIRING_PROCESS_STATUS.requestedChange},\n        {name: 'Admin Rejected', value: HIRING_PROCESS_STATUS.adminRejected},\n        {name: 'Offer Letter Rejected', value: HIRING_PROCESS_STATUS.declined},\n        {name: 'Draft', value: HIRING_PROCESS_STATUS.draft},\n        {name: 'Hire Now', value: HIRING_PROCESS_STATUS.accepted},\n    ]\n    // Lead Status\n\n    const [filterProps, filterData, setFilterData] = useFilterButton(\n        initialFilter,\n        onApplyFilter,\n        resetFilter\n    )\n    const positionList = useSelector(getPositionsSelector)\n    const [stateList] = useOfficeLocation(null, false)\n    const [managerList, setManagerList] = useState([])\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n    useEffect(() => {\n        setManagerList([])\n        getAllManagerListService(office_id)\n            .then((res) => {\n                setManagerList(res?.data)\n            })\n            .finally(() => {})\n    }, [office_id])\n\n    const managerNames = useMemo(() => {\n        return managerList?.map((item) => ({\n            ...item,\n            name: `${item?.first_name}  ${item?.last_name}`,\n        }))\n    }, [managerList])\n\n    return (\n        <div className='text-cmGrey800'>\n            <CustomFilterButton {...filterProps} filterData={filterData}>\n                {/* Status */}\n                <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    <CustomDropdown\n                        label={'Status'}\n                        value={filterData?.[FILTER_KEYS.status]}\n                        name={FILTER_KEYS.status}\n                        onChange={(e) => {\n                            setFilterData((val) => ({\n                                ...val,\n                                status_filter: e?.target?.value,\n                            }))\n                        }}\n                        options={HIRING_STATUS}\n                    />\n                </div>\n                {/* Position */}\n                <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    <CustomDropdown\n                        label={'Position'}\n                        value={filterData?.[FILTER_KEYS.position]}\n                        name={FILTER_KEYS.position}\n                        onChange={onChangeInputData}\n                        options={positionList}\n                        displayKey='position'\n                        valueKey='id'\n                    />\n                </div>\n                {/* Office */}\n                {/* <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    <CustomDropdown\n                        label={'Office'}\n                        value={filterData?.[FILTER_KEYS.office]}\n                        name={FILTER_KEYS.office}\n                        onChange={onChangeInputData}\n                        options={stateList}\n                    />\n                </div> */}\n                {/* Manager */}\n                <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    <CustomDropdown\n                        label={'Manager'}\n                        value={filterData?.[FILTER_KEYS.manager]}\n                        name={FILTER_KEYS.manager}\n                        onChange={onChangeInputData}\n                        options={managerNames}\n                        valueKey='id'\n                    />\n                </div>\n            </CustomFilterButton>\n        </div>\n    )\n}\n\nexport default OnboardingEmployeeFilter\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n    deleteOnBoardingEmployeeListService,\n    exportOnBoardingEmployeeListService,\n    getOnBoardingEmployeeListService,\n} from '../../../../../services/Services'\nimport _ from 'lodash'\nimport HireNew from './CompensationPlan/HireNew'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport Pagination from '../../../admin/sequidocs/component/Pagination'\nimport debounce from 'lodash.debounce'\nimport AccessRights, {\n    isPermittedForAccess,\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../accessRights/AccessRights'\nimport useOfficeLocation from '../../../../../hooks/useOfficeLocation'\nimport {\n    TABLE_BORDER,\n    downloadAnyFileHelper,\n    formattedPhoneNumber,\n    getBooleanValue,\n    getErrorMessageFromResponse,\n} from '../../../../../helpers/CommonHelpers'\nimport {useNavigate} from 'react-router-dom'\nimport {HireNowModal} from './hireNowModal/HireNowModal'\nimport {allPermissionsAccess} from '../../../../../accessRights/useCustomAccessRights'\nimport {\n    DIGISIGNER_CONFIG,\n    HIRING_PROCESS_STATUS,\n    getValidDate,\n} from '../../../../../constants/constants'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport OnboardingEmployeeFilter from '../../filters/OnboardingEmployeeFilter'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {TieredMenu} from 'primereact/tieredmenu'\nimport CustomDialog from '../../../../../customComponents/customDialog/CustomDialog'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport {getPositionsAction} from '../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport moment from 'moment'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {CustomSortSvg} from '../../../../../_metronic/helpers/components/CustomSortSVG'\n\nconst initialFilter = {\n    status_filter: '',\n    position_filter: '',\n    manager_filter: '',\n    other_status_filter: '',\n}\nconst OnBoardingTable = () => {\n    const dispatch = useDispatch()\n    const [open, setOpen] = useState(false)\n    const filtereDataRef = useRef()\n    const [tableData, setTableData] = useState([])\n    const [totalData, setTotalData] = useState(null)\n    const [loader, setLoader] = useState(false)\n    const [id, setid] = useState()\n    const [showHireNowModal, setShowHireNowModal] = useState(false)\n    const [stateList, selectedLocation, setSelectedLocation] = useOfficeLocation(null, true)\n    const [searchValue, setSearchValue] = useState('')\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    const [filterData, setFilterData] = useState({\n        page: 1,\n        filter: '',\n    })\n\n    useEffect(() => {\n        filtereDataRef.current = filterData\n    }, [filterData])\n\n    useEffect(() => {\n        dispatch(getPositionsAction())\n    }, [])\n\n    const menu = useRef(null)\n    const [selectedEmployee, setSelectedEmployee] = useState('')\n    const menuItems = [\n        {\n            label: 'Delete',\n            command: (e) => onDeleteDraftTable(),\n        },\n    ]\n\n    const onDeleteDraftTable = () => {\n        CustomDialog.warn('Are you sure you want to delete ?', () => {\n            deleteOnBoardingEmployeeListService(selectedEmployee)\n                .then(() => {\n                    CustomToast.success('Employee deleted successfully')\n                    getonbording()\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n        })\n    }\n\n    const navigate = useNavigate()\n\n    const handleClose = () => {\n        setOpen(false)\n        setid(null)\n    }\n    useEffect(() => {\n        if (selectedLocation) {\n            getonbording()\n        }\n    }, [filterData, sortValue, sortingOrder, selectedLocation])\n\n    const getonbording = useCallback(() => {\n        setLoader(true)\n        let filters = {...filterData}\n        getOnBoardingEmployeeListService({\n            ...filters,\n            office_id: selectedLocation,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        })\n            .then((res) => {\n                setTableData(res?.data?.data)\n                setTotalData(res?.data?.last_page)\n            })\n            .finally(() => {\n                setLoader(false)\n            })\n    }, [filterData, selectedLocation, sortValue, sortingOrder])\n\n    const onChangeSearch = (e) => {\n        delaySearch(e?.target?.value)\n        setSearchValue(e?.target?.value)\n    }\n    const onLocationChange = (e) => {\n        setFilterData((val) => ({\n            ...val,\n            page: 1,\n        }))\n        setSelectedLocation(e.target.value)\n    }\n    const delaySearch = useCallback(\n        debounce((value) => {\n            setFilterData((val) => ({\n                ...val,\n                filter: value,\n            }))\n        }, 500),\n        []\n    )\n    const onHireNowPress = useCallback((item) => {\n        setid(item?.id)\n        setShowHireNowModal(true)\n    }, [])\n\n    const onApplyFilter = useCallback((filter) => {\n        setFilterData((val) => ({\n            ...val,\n            ...filter,\n            page: 1,\n        }))\n    }, [])\n    const onResetFilter = () => {\n        setFilterData((val) => ({\n            ...val,\n            ...initialFilter,\n            page: 1,\n        }))\n    }\n\n    const handleHireNowModalClose = useCallback(() => {\n        setShowHireNowModal(false)\n        setid(null)\n        getonbording()\n    }, [getonbording])\n\n    const onExportOnBoardingData = useCallback(() => {\n        setLoader(true)\n        const body = {\n            position_filter: filterData?.position_filter,\n            status_filter: filterData?.status_filter,\n            manager_filter: filterData?.manager_filter,\n            office_id: selectedLocation,\n        }\n        exportOnBoardingEmployeeListService(body)\n            .then((res) => {\n                const fileName = `OnBoarding User List - ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((err) => {\n                CustomToast.success(getErrorMessageFromResponse(err))\n            })\n            .finally(() => {\n                setLoader(false)\n            })\n    }, [filterData, selectedLocation])\n\n    if (!selectedLocation) {\n        return (\n            <div\n                className={`card d-flex align-items-center justify-content-center p-10`}\n                style={{fontFamily: 'Manrope', fontSize: '16px'}}\n            >\n                There is no offices on system\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <div\n                className={`card`}\n                style={{\n                    fontFamily: 'Manrope',\n                    borderRadius: '0 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '17px', fontFamily: 'Manrope', fontWeight: 600}}\n                    >\n                        <div className='mt-4 mx-sm-7 mb-3 d-flex flex-wrap gap-3 justify-content-between align-items-center'>\n                            {/* customer info */}\n                            <div className='mx-sm-0 mx-auto d-flex gap-3'>\n                                <div style={{alignSelf: 'center'}}>Office:</div>\n                                <CustomDropdown\n                                    onChange={onLocationChange}\n                                    options={stateList}\n                                    value={selectedLocation}\n                                    showClear={false}\n                                />\n                            </div>\n\n                            {/* Search form */}\n                            <div className='mx-sm-0 mx-auto'>\n                                <form className='position-relative' autoComplete='off'>\n                                    {/* Onboarding Table Search Input */}\n                                    <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={onChangeSearch}\n                                        value={searchValue ?? ''}\n                                    />\n                                </form>\n                            </div>\n\n                            <div className='px-2 d-flex align-items-center flex-wrap gap-5 mx-sm-0 mx-auto'>\n                                <OnboardingEmployeeFilter\n                                    office_id={selectedLocation}\n                                    initialFilter={initialFilter}\n                                    onApplyFilter={onApplyFilter}\n                                    resetFilter={onResetFilter}\n                                />\n\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.hiring.onboardingEmployees.add\n                                    }\n                                >\n                                    <CustomButton\n                                        buttonSize={BUTTON_SIZE.small}\n                                        buttonType={BUTTON_TYPE.primary}\n                                        buttonLabel='Hire New'\n                                        onClick={() => {\n                                            setid(null)\n                                            setOpen(true)\n                                        }}\n                                    />\n                                </AccessRights>\n                                <div className=''>\n                                    <CustomButton\n                                        buttonSize={BUTTON_SIZE.small}\n                                        buttonType={BUTTON_TYPE.disabled}\n                                        buttonLabel='Export'\n                                        onClick={onExportOnBoardingData}\n                                        icon={'pi pi-file-export'}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '800',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                    className=' text-cmGrey800 bg-cmGrey300'\n                                >\n                                    <th className='w-auto p-5 '>ID</th>\n                                    <th className='w-auto p-5 text-cmGrey800'>Name</th>\n                                    <th className='w-auto p-5 '>Position</th>\n                                    <th className='w-auto p-5'>Office</th>\n                                    <th\n                                        className='w-auto p-5'\n                                        data-toggle='tooltip'\n                                        data-placement='left'\n                                        title='Value is higher than expected '\n                                    >\n                                        Manager\n                                    </th>\n                                    <th\n                                        data-toggle='tooltip'\n                                        data-placement='left'\n                                        title='bonuses, advances, incentives                    '\n                                        className='w-auto p-5'\n                                    >\n                                        Phone\n                                    </th>\n                                    <th className='w-auto p-5'>Status</th>\n                                    <th className='w-auto p-5 text-nowrap'>\n                                        <div className='d-flex'>\n                                            Last Update\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'last_update'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('last_update')\n                                                    setSortingOrder(\n                                                        sortValue !== 'last_update' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                    setFilterData(() => ({\n                                                        page: 1,\n                                                    }))\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='w-auto p-5 text-nowrap'></th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {tableData?.length > 0 ? (\n                                    <>\n                                        {tableData?.map((item, index) => {\n                                            return (\n                                                <OnboardEmployeeRow\n                                                    menu={menu}\n                                                    menuItems={menuItems}\n                                                    navigate={navigate}\n                                                    setOpen={setOpen}\n                                                    item={item}\n                                                    getonbording={getonbording}\n                                                    index={index}\n                                                    onHireNowPress={onHireNowPress}\n                                                    setid={setid}\n                                                    setLoader={setLoader}\n                                                    setSelectedEmployee={setSelectedEmployee}\n                                                />\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <tr className='no-data'>\n                                        <td\n                                            colSpan={8}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <CustomLoader full visible={loader}></CustomLoader>\n            </div>\n            {tableData?.length > 0 ? (\n                <Pagination\n                    setPage={(pg) => {\n                        setFilterData((val) => ({\n                            ...val,\n                            page: pg,\n                        }))\n                    }}\n                    page={filterData?.page}\n                    totalPages={totalData}\n                />\n            ) : null}\n\n            {open ? (\n                <HireNew\n                    show={open}\n                    handleClose={handleClose}\n                    getonbording={getonbording}\n                    setLoader={setLoader}\n                />\n            ) : null}\n\n            {showHireNowModal ? (\n                <HireNowModal\n                    handleClose={handleHireNowModalClose}\n                    show={showHireNowModal}\n                    id={id}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default OnBoardingTable\n\nconst OnboardEmployeeRow = ({\n    item,\n    index,\n    menu,\n    menuItems,\n    navigate,\n    onHireNowPress,\n    setid,\n    setSelectedEmployee,\n    getonbording,\n    setLoader,\n}) => {\n    const [open, setOpen] = useState(false)\n    const handleClose = () => {\n        setOpen(false)\n        setid(null)\n    }\n\n    return (\n        <>\n            {open ? (\n                <HireNew\n                    id={item?.id}\n                    show={open}\n                    handleClose={handleClose}\n                    getonbording={getonbording}\n                    setLoader={setLoader}\n                />\n            ) : null}\n            <tr\n                key={item?.id}\n                style={{\n                    height: '40px',\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    fontWeight: '500',\n                }}\n                className='stripRow '\n            >\n                <td className='text-cmGrey700 p-5' style={{fontWeight: 500}}>\n                    {item?.id ?? 'null'}\n                </td>\n                <td className='p-5 text-start  text-nowrap text-cmGrey800 text-decoration-underline cursor-pointer'>\n                    <div\n                        onClick={() =>\n                            navigate('/onboard-employe-profile/employement-package', {\n                                state: {\n                                    id: item?.id,\n                                    moduleType: 'onboarding',\n                                },\n                            })\n                        }\n                    >\n                        <p\n                            style={{\n                                textAlign: 'start',\n                                fontWeight: 600,\n                            }}\n                            className=''\n                        >\n                            {item.first_name} {item.last_name}\n                        </p>\n                    </div>\n                </td>\n\n                <td className='p-5 text-cmGrey700' style={{fontWeight: 500}}>\n                    {item.sub_position_name ?? 'null'}\n                </td>\n\n                <td className='p-5 text-cmGrey700' style={{fontWeight: 500}}>\n                    <p>{item.office_name ?? 'null'}</p>\n                </td>\n\n                <td className='p-5 text-cmGrey700 text-nowrap' style={{fontWeight: 500}}>\n                    {item.manager_name ?? 'null'}\n                </td>\n                <td className='p-5 text-cmGrey700 text-nowrap' style={{fontWeight: 500}}>\n                    {formattedPhoneNumber(item.mobile_no) ?? 'NA'}\n                </td>\n\n                <td\n                    className='px-5 py-3 text-cmGrey700 d-flex gap-3 '\n                    style={{\n                        fontWeight: 500,\n                    }}\n                >\n                    {[HIRING_PROCESS_STATUS.declined].includes(item?.status_id) ? (\n                        <span className='text-nowrap pt-2 text-danger'>Offer Letter Rejected</span>\n                    ) : null}\n\n                    {[HIRING_PROCESS_STATUS.adminRejected].includes(item?.status_id) ? (\n                        <span className='text-nowrap pt-2 text-danger'>Admin Rejected</span>\n                    ) : null}\n\n                    {[HIRING_PROCESS_STATUS.active].includes(item?.status_id) ? (\n                        <span className='text-nowrap pt-2 text-success'>{item?.status_name}</span>\n                    ) : null}\n\n                    {[\n                        HIRING_PROCESS_STATUS.offerLetterSent,\n                        HIRING_PROCESS_STATUS.requestedChange,\n                        HIRING_PROCESS_STATUS.onboardFollowUp,\n                        HIRING_PROCESS_STATUS.offerLetterRejected,\n                        HIRING_PROCESS_STATUS.offerLetterAccepted,\n                        HIRING_PROCESS_STATUS.offerLetterResent,\n                    ].includes(item.status_id) ? (\n                        <span className='text-nowrap pt-2'>{item.status_name}</span>\n                    ) : null}\n\n                    {[HIRING_PROCESS_STATUS.onboarding].includes(item.status_id) ? (\n                        <span className='text-nowrap pt-2'>Onboarding</span>\n                    ) : null}\n\n                    {item.status_id === HIRING_PROCESS_STATUS.offerExpired && (\n                        <span className='text-cmError pt-2'>{item.status_name}</span>\n                    )}\n\n                    {item.status_id === HIRING_PROCESS_STATUS.draft && (\n                        <span\n                            className='cursor-pointer text-cmBlue-Crayola text-nowrap '\n                            style={{\n                                textDecoration: 'underline',\n                                fontWeight: 500,\n                            }}\n                            onClick={() => {\n                                if (\n                                    isPermittedForAccess({\n                                        permission:\n                                            PERMISSIONS_GROUP.standard.hiring.onboardingEmployees,\n                                        type: PERMISSION_TYPE.edit,\n                                        forManager: true,\n                                    })\n                                ) {\n                                    setid(item.id)\n                                    setOpen(true)\n                                }\n                            }}\n                        >\n                            {item.status_name}\n                        </span>\n                    )}\n\n                    {item.status_id === HIRING_PROCESS_STATUS.accepted && (\n                        <>\n                            {allPermissionsAccess.standard.hiring.onboardingEmployees.hireNowFunc() ? (\n                                <>\n                                    {[1, 2]?.includes(item?.other_doc_status?.w9) &&\n                                    [1, 2]?.includes(\n                                        item?.other_doc_status?.backgroundVerification\n                                    ) ? (\n                                        <div className='text-nowrap pt-1'>\n                                            <CustomButton\n                                                buttonType={BUTTON_TYPE.primary}\n                                                buttonLabel=' Hire Now'\n                                                onClick={() => onHireNowPress(item)}\n                                                buttonSize={BUTTON_SIZE.small}\n                                            />\n                                        </div>\n                                    ) : (\n                                        <>{'Offer Letter Accepted'}</>\n                                    )}\n                                </>\n                            ) : (\n                                <>{item?.status_name}</>\n                            )}\n                        </>\n                    )}\n                </td>\n\n                <td className='p-5 text-cmGrey700 ' style={{fontWeight: 500}}>\n                    {getValidDate(item.last_update)}\n                </td>\n\n                <td className='p-5 text-cmGrey700 ' style={{fontWeight: 500}}>\n                    {[\n                        HIRING_PROCESS_STATUS.draft,\n                        HIRING_PROCESS_STATUS.declined,\n                        HIRING_PROCESS_STATUS.offerExpired,\n                        HIRING_PROCESS_STATUS.offerLetterAccepted,\n                        HIRING_PROCESS_STATUS.offerLetterSent,\n                        HIRING_PROCESS_STATUS.offerLetterResent,\n                        HIRING_PROCESS_STATUS.requestedChange,\n                    ].includes(Number(item.status_id)) ? (\n                        <div className=''>\n                            <TieredMenu\n                                className='bg-cmwhite '\n                                style={{borderRadius: '10px'}}\n                                model={menuItems}\n                                popup\n                                ref={menu}\n                                breakpoint='767px'\n                            />\n                            <div\n                                className='bi bi-three-dots-vertical fs-2 text-cmGrey500 cursor-pointer'\n                                onClick={(e) => {\n                                    setSelectedEmployee(item.id)\n                                    menu.current.toggle(e)\n                                }}\n                            ></div>\n                        </div>\n                    ) : null}\n                </td>\n            </tr>\n        </>\n    )\n}\n","import React, {useCallback, useEffect, useMemo} from 'react'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomRadioButton from '../../../../customComponents/customRadioButton/CustomRadioButton'\nimport {getRecuiterFilterService} from '../../../../services/Services'\nimport {getAllStatesAndCitiesSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport {useSelector} from 'react-redux'\nimport {displayfilterCounts} from '../../../../helpers/CommonHelpers'\n\nconst LeadsTableFilter = ({initialFilter = null, onApplyFilter = null, resetFilter = null}) => {\n    const FILTER_KEYS = {\n        status: 'status_filter',\n        homeState: 'home_state_filter',\n        recruiterFilter: 'recruter_filter',\n        source: 'source_filter',\n    }\n\n    const LEAD_STATUS = [\n        {name: 'Follow Up', value: 'Follow Up'},\n        {name: 'Interview Scheduled', value: 'Interview Scheduled'},\n        {name: 'Interview Rescheduled', value: 'Interview Rescheduled'},\n        {name: 'Interview Done', value: 'Interview Done'},\n        {name: 'Rejected', value: 'Rejected'},\n    ]\n    const [filterProps, filterData, setFilterData] = useFilterButton(initialFilter, onApplyFilter)\n    const allState = useSelector(getAllStatesAndCitiesSelector)\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n\n    const resetFilterData = useCallback(() => {\n        setFilterData(initialFilter)\n        resetFilter()\n    }, [filterData])\n    return (\n        <div className='text-cmGrey800'>\n            <CustomFilterButton\n                {...filterProps}\n                filterData={filterData}\n                onResetClick={resetFilterData}\n            >\n                {/* Status */}\n                <div className='mb-5 text-cmGrey800'>\n                    <CustomDropdown\n                        label={'Status'}\n                        value={filterData?.[FILTER_KEYS.status]}\n                        name={FILTER_KEYS.status}\n                        onChange={onChangeInputData}\n                        options={LEAD_STATUS}\n                    />\n                </div>\n                {/* Home State */}\n                <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    <CustomDropdown\n                        label={'Home State'}\n                        value={filterData?.[FILTER_KEYS.homeState]}\n                        name={FILTER_KEYS.homeState}\n                        onChange={onChangeInputData}\n                        options={allState}\n                        valueKey='id'\n                    />\n                </div>\n                {/* Recruiter */}\n                {/* <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    <CustomDropdown\n                        label={'Recruiter'}\n                        vaue={filterData?.[FILTER_KEYS.recruiterFilter]}\n                        name={FILTER_KEYS.recruiterFilter}\n                        onChange={onChangeInputData}\n                    />\n                </div> */}\n                {/* Sources */}\n                {/* <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                    <div className='mb-1'>Sources</div>\n                    <div className='d-flex align-items-center flex-wrap gap-5'>\n                        <CustomRadioButton\n                            label='Manual'\n                            handleChange={onChangeInputData}\n                            isChecked={filterData?.[FILTER_KEYS.source] === 'Manual' ? true : false}\n                            value={'Manual'}\n                            name={FILTER_KEYS.source}\n                        />\n                        <CustomRadioButton\n                            label='Campaign'\n                            handleChange={onChangeInputData}\n                            isChecked={\n                                filterData?.[FILTER_KEYS.source] === 'Campaign' ? true : false\n                            }\n                            value={'Campaign'}\n                            name={FILTER_KEYS.source}\n                        />\n                    </div>\n                </div> */}\n            </CustomFilterButton>\n        </div>\n    )\n}\n\nexport default LeadsTableFilter\n","import {useCallback, useEffect, useState} from 'react'\nimport clsx from 'clsx'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {AddNewLeadsPopUp} from './AddNewLeadsPopUp'\nimport {\n    changeLeadStatusService,\n    deleteLeadService,\n    exportLeadsDataService,\n    getHireLeadsListService,\n    leadsFilterService,\n} from '../../../../../services/Services'\nimport {SchedulePopup} from './SchedulePopup'\nimport {HIRING_PROCESS_STATUS} from '../../../../../constants/constants'\nimport Pagination from '../../../admin/sequidocs/component/Pagination'\nimport debounce from 'lodash.debounce'\n\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport HireNew from '../onBoardingEmp/CompensationPlan/HireNew'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../accessRights/AccessRights'\nimport {\n    TABLE_BORDER,\n    downloadAnyFileHelper,\n    formattedPhoneNumber,\n    getErrorMessageFromResponse,\n} from '../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport {useNavigate} from 'react-router-dom'\nimport {AssignModal} from '../../onBoardEmployeProfile/AssignModal'\nimport {Dialog} from 'primereact/dialog'\nimport CustomDialog from '../../../../../customComponents/customDialog/CustomDialog'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport LeadsTableFilter from '../../filters/LeadsTableFilter'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {allPermissionsAccess} from '../../../../../accessRights/useCustomAccessRights'\nimport moment from 'moment'\n\nconst initialFilter = {\n    status_filter: '',\n    home_state_filter: '',\n    recruter_filter: '',\n    sources: '',\n}\n\nconst LeadsTable = () => {\n    const [open, setOpen] = useState(false)\n    const [hireOpen, setHireOpen] = useState(false)\n    const [statusPopup, setStatusPopup] = useState(false)\n    const [tableData, setTableData] = useState([])\n    const [hireData, setHireData] = useState([])\n    const [openAssigne, setOpenAssigne] = useState(false)\n    const [updatedStatus, setUpdatedStatus] = useState(null)\n    const [totalData, setTotalData] = useState(null)\n    const [page, setPage] = useState(1)\n    const [userData, setUserData] = useState(null)\n    const [editData, setEditData] = useState(null)\n    const [search, setSearch] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [loading, setLoading] = useState(true)\n    const navigate = useNavigate()\n    const [statusModal, setStatusModal] = useState(false)\n    const [filterData, setFilterData] = useState(initialFilter)\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleHireClose = () => {\n        setHireOpen(false)\n        getHiringList()\n    }\n    const handleStatusPopup = () => {\n        setStatusPopup(false)\n    }\n    const handleAssignePopup = () => {\n        setOpenAssigne(false)\n        getHiringList()\n    }\n    // const handleReject = (id) => {\n    //   const body = {\n    //     interview_date: moment(new Date()).format('YYYY-MM-DD HH:mm:ss'),\n    //     // interview_schedule_by_id: null,\n    //     action_status: 'Rejected',\n    //   }\n    //   postRescheduleInterviewService(id, body).finally(\n    //     () => getHiringList(),\n    //     CustomToast.error('Rejected')\n    //   )\n    // }\n    const handleReject = (id) => {\n        setLoading(true)\n        changeLeadStatusService(id, HIRING_PROCESS_STATUS.rejected)\n            .then(() => {\n                getHiringList()\n                CustomToast.success('Status updated')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n\n    const handleInterviewDone = (id) => {\n        setLoading(true)\n        changeLeadStatusService(id, HIRING_PROCESS_STATUS.interviewDone)\n            .then(() => {\n                CustomToast.success('Status updated')\n                getHiringList()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n\n    const handleReconsider = (id) => {\n        setLoading(true)\n        changeLeadStatusService(id, HIRING_PROCESS_STATUS.followUp)\n            .then(() => {\n                getHiringList()\n                CustomToast.success('Status updated')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n\n    const handleHire = (data, hireDirect = false) => {\n        setHireData({\n            first_name: data?.first_name,\n            last_name: data?.last_name,\n            email: data?.email,\n            mobile_no: data?.mobile_no,\n            recruiter_id: data?.recruiter?.id,\n            recruiter_name: `${data?.recruiter?.first_name} ${data?.recruiter?.last_name}`,\n            hireDirect,\n        })\n        setHireOpen(true)\n    }\n\n    const changeStatus = (statusValue) =>\n        new Promise((resolve, reject) => {\n            setLoading(true)\n            changeLeadStatusService(userData?.id, statusValue)\n                .then(resolve)\n                .catch(reject)\n                .finally(getHiringList)\n        })\n\n    useEffect(() => {\n        getHiringList()\n    }, [page, search, filterData])\n\n    const data = {page: page, filter: search, ...filterData}\n    const getHiringList = () => {\n        setLoading(true)\n        getHireLeadsListService(data)\n            .then((res) => {\n                setTableData(res?.data)\n                setTotalData(res?.data?.last_page)\n            })\n            .finally(() => setLoading(false))\n    }\n\n    const onChangeSearch = (e) => {\n        setSearchVal(e?.target?.value)\n        delaySearch(e?.target?.value)\n    }\n    const delaySearch = useCallback(\n        debounce((value) => {\n            setSearch(value)\n        }, 500),\n        []\n    )\n\n    const handleAction = (e, data) => {\n        setUserData(data)\n        if (e == 1) setStatusPopup(true)\n        if (e == 2) {\n            handleHire(data)\n        }\n        if (e == 3) handleReject(data?.id)\n        if (e == 4) setOpenAssigne(true)\n        if (e == 5) handleInterviewDone(data?.id)\n        if (e == 6) {\n            setEditData(data)\n            setOpen(true)\n        }\n\n        if (e == 7) {\n            CustomDialog.warn('Are you sure you want to delete ?', () => {\n                setLoading(true)\n                deleteLeadService(data?.id)\n                    .then(() => getHiringList())\n                    .finally(() => {\n                        setLoading(false)\n                        CustomToast.success('Lead deleted successfully')\n                    })\n            })\n        }\n        if (e == 8) handleReconsider(data?.id)\n        if (e == 9) handleHire(data, true)\n    }\n\n    const onStatusChange = (status) => {\n        changeLeadStatusService(userData?.id, updatedStatus)\n            .then(() => {\n                getHiringList()\n                setStatusModal(false)\n                CustomToast.success('Status updated')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n\n    //    DropDown Options\n    const getOptions = useCallback((item) => {\n        let data = []\n        // / Schedule / Reschedule Interview /\n        if (HIRING_PROCESS_STATUS.Leadhired != item?.status) {\n            if (\n                [\n                    HIRING_PROCESS_STATUS.followUp,\n                    HIRING_PROCESS_STATUS.interviewScheduled,\n                    HIRING_PROCESS_STATUS.interviewRescheduled,\n                ].includes(item?.status)\n            ) {\n                data.push({\n                    name: item?.interview_time ? 'Reschedule Interview' : 'Schedule Interview',\n                    value: 1,\n                })\n            }\n\n            // / Hire /\n            if (\n                item?.status == HIRING_PROCESS_STATUS.interviewDone &&\n                item?.status != HIRING_PROCESS_STATUS.rejected &&\n                allPermissionsAccess.standard.hiring.onboardingEmployees.hireNowFunc()\n            ) {\n                data.push({name: 'Hire', value: 2})\n            }\n\n            // / Hire Directly /\n            if (allPermissionsAccess.standard.hiring.onboardingEmployees.hireNowFunc()) {\n                data.push({name: 'Hire Directly', value: 2})\n            }\n\n            // / Assign /\n            if (\n                [\n                    HIRING_PROCESS_STATUS.followUp,\n                    HIRING_PROCESS_STATUS.interviewScheduled,\n                    HIRING_PROCESS_STATUS.interviewRescheduled,\n                ].includes(item?.status)\n            ) {\n                data.push({name: 'Assign', value: 4})\n            }\n\n            // / Interview Done /\n            if (\n                item?.interview_time &&\n                ![HIRING_PROCESS_STATUS.rejected, HIRING_PROCESS_STATUS.interviewDone].includes(\n                    item?.status\n                )\n            ) {\n                data.push({name: 'Interview Done', value: 5})\n            }\n\n            // / Edit Lead /\n            if (item?.status != HIRING_PROCESS_STATUS.rejected) {\n                data.push({name: 'Edit Lead', value: 6})\n            }\n\n            // / Reject /\n            if (item?.status != HIRING_PROCESS_STATUS.rejected) {\n                data.push({name: 'Reject', value: 3})\n            }\n\n            // / Delete /\n            data.push({name: 'Delete', value: 7})\n\n            // / Reconcider /\n            if ([HIRING_PROCESS_STATUS.rejected].includes(item?.status)) {\n                data.push({name: 'Reconsider', value: 8})\n            }\n        }\n\n        return data\n    }, [])\n    const applyFilter = (filter) => {\n        setPage(1)\n        // setLoading(true)\n        setFilterData(filter)\n        setSearch('')\n        setSearchVal('')\n    }\n\n    const onResetFilter = () => {\n        setPage(1)\n\n        setFilterData(initialFilter)\n        // getlocation()\n    }\n    const onExportLeadsData = useCallback(() => {\n        setLoading(true)\n        const body = {\n            status: filterData?.status_filter,\n            state: filterData?.home_state_filter,\n        }\n        exportLeadsDataService(body)\n            .then((res) => {\n                const fileName = `Leads List - ${moment(new Date()).format('DD MMM YY hh:mm')}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((err) => {\n                CustomToast.success(getErrorMessageFromResponse(err))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [filterData?.home_state_filter, filterData?.status_filter])\n\n    return (\n        <>\n            <div\n                className={`bg-cmwhite`}\n                style={{\n                    fontFamily: 'Manrope',\n                    position: 'relative',\n                    borderRadius: '0px 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <Dialog\n                    header='Update Status'\n                    visible={statusModal}\n                    style={{width: '40vw', height: '15vw', background: '#c1cde4'}}\n                    onHide={() => {\n                        setStatusModal(false)\n                    }}\n                >\n                    <div className='mt-6' style={{fontSize: '14px'}}>\n                        <div className='justify-content-between w-100 px-sm-0 px-1   text-center fs-3 mb-10'>\n                            <select\n                                className='form-select py-2 cursor-pointer w-225px mx-auto bg-cmGrey200 border-0 fw-bold'\n                                onChange={(e) => setUpdatedStatus(e.target.value)}\n                                value={updatedStatus}\n                            >\n                                <option value={''}>Select</option>\n                                <option value={HIRING_PROCESS_STATUS.interviewDone}>\n                                    {HIRING_PROCESS_STATUS.interviewDone}\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className='justify-content-between text-center fs-3'>\n                        <button\n                            onClick={() => {\n                                onStatusChange()\n                            }}\n                            className={clsx('btn btn-sm fw-bold text-cmwhite bg-cmBlue-Crayola')}\n                            style={{\n                                fontSize: '12px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            Update Status\n                        </button>\n                    </div>\n                </Dialog>\n                <CustomLoader full visible={loading} />\n\n                <div className='py-0 px-0 mx-0'>\n                    <div\n                        className='d-flex flex-wrap h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='w-100 mt-4 ms-sm-7 ms-5 mb-3 d-flex flex-wrap gap-3 justify-content-between align-items-center'>\n                            {/* customer info */}\n                            <div\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '600',\n                                    fontSize: '17px',\n                                }}\n                                className='text-cmGrey900'\n                            >\n                                Leads\n                            </div>\n\n                            {/* Search form */}\n                            <div\n                                style={{height: '43px', borderRadius: '20px'}}\n                                className='me-2 mb-1 me-sm-12'\n                                id='kt_chat_contacts_header'\n                            >\n                                <form\n                                    className='position-relative'\n                                    style={{borderRadius: '90px'}}\n                                    autoComplete='off'\n                                >\n                                    {/* LEADS Table Search Input */}\n                                    <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={onChangeSearch}\n                                        value={searchVal}\n                                    />\n                                </form>\n                            </div>\n\n                            <div className='me-7 d-flex gap-5'>\n                                {/* filter button */}\n                                <LeadsTableFilter\n                                    initialFilter={initialFilter}\n                                    onApplyFilter={(updatedFilter) => applyFilter(updatedFilter)}\n                                    resetFilter={onResetFilter}\n                                />\n\n                                <AccessRights\n                                    customCondition={allPermissionsAccess.standard.hiring.leads.add}\n                                >\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.primary}\n                                        buttonLabel=' Add New'\n                                        buttonSize={BUTTON_SIZE.small}\n                                        onClick={() => {\n                                            setEditData(null)\n                                            setOpen(true)\n                                        }}\n                                    />\n                                </AccessRights>\n                                <CustomButton\n                                    buttonType={BUTTON_TYPE.disabled}\n                                    buttonLabel='Export'\n                                    onClick={onExportLeadsData}\n                                    buttonSize={BUTTON_SIZE.small}\n                                    icon={'pi pi-file-export'}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900 '\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>Name</th>\n                                    <th className='text-nowrap p-5'>Source</th>\n                                    <th className='text-nowrap p-5'>Phone</th>\n                                    <th className='text-nowrap p-5'>Email</th>\n                                    <th className='text-nowrap p-5'>Home Location</th>\n                                    <th className='text-nowrap p-5'>Reporting Manager</th>\n                                    <th className='text-nowrap p-5'>Status</th>\n                                    <th className='text-nowrap p-5'>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {tableData?.data?.length > 0 ? (\n                                    <>\n                                        {tableData?.data?.map((item, index) => (\n                                            <tr\n                                                key={item?.id}\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '500',\n                                                }}\n                                                className='stripRow '\n                                            >\n                                                <td\n                                                    className='p-5 text-nowrap text-cmGrey800 text-decoration-underline cursor-pointer'\n                                                    style={{fontWeight: '600'}}\n                                                    onClick={() =>\n                                                        navigate(\n                                                            '/onboard-employe-profile/personal-info',\n                                                            {\n                                                                state: {\n                                                                    id: item?.id,\n                                                                    moduleType: 'leads',\n                                                                },\n                                                            }\n                                                        )\n                                                    }\n                                                >\n                                                    {item?.first_name} {item?.last_name}\n                                                </td>\n                                                <td className='p-5 text-nowrap text-start'>\n                                                    {item?.source ?? '-'}{' '}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>\n                                                    {formattedPhoneNumber(item?.mobile_no)}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>{item?.email}</td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.state?.name ?? ''}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.reporting_manager?.first_name}{' '}\n                                                    {item?.reporting_manager?.last_name}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>{item?.status}</td>\n\n                                                <AccessRights\n                                                    customCondition={\n                                                        allPermissionsAccess.standard.hiring.leads\n                                                            .edit\n                                                    }\n                                                >\n                                                    <td className='p-5 text-nowrap'>\n                                                        <CustomDropdown\n                                                            options={getOptions(item)}\n                                                            searching={false}\n                                                            showClear={false}\n                                                            value={item?.status}\n                                                            placeholder='Do Action'\n                                                            onChange={(e) =>\n                                                                handleAction(e.target.value, item)\n                                                            }\n                                                        />\n                                                    </td>\n                                                </AccessRights>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={7}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            {hireOpen ? (\n                <HireNew\n                    show={hireOpen}\n                    handleClose={handleHireClose}\n                    hireDirect={hireData?.hireDirect}\n                    getonbording={() => {}}\n                    lead_id={userData?.id}\n                    recruiter_id={userData?.recruiter_id}\n                    prefieldData={hireData}\n                />\n            ) : null}\n            {openAssigne ? (\n                <AssignModal\n                    show={openAssigne}\n                    handleClose={handleAssignePopup}\n                    leadId={userData?.id}\n                    setLoading={setLoading}\n                />\n            ) : null}\n\n            {tableData?.data?.length > 0 ? (\n                <Pagination setPage={setPage} page={page} totalPages={totalData} />\n            ) : null}\n            {open ? (\n                <AddNewLeadsPopUp\n                    show={open}\n                    handleClose={handleClose}\n                    getList={getHiringList}\n                    preData={editData}\n                />\n            ) : null}\n            {statusPopup ? (\n                <SchedulePopup\n                    show={statusPopup}\n                    handleClose={handleStatusPopup}\n                    userData={userData}\n                    getHiringList={getHiringList}\n                    changeStatus={changeStatus}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default LeadsTable\n","const HiringProgressCards = ({\n    className,\n    description,\n    icon,\n    stats,\n    labelColor,\n    textColor,\n    borderColor,\n    background,\n    heading,\n    content,\n}) => (\n    <div\n        className={`card card-flush ${className} border py-8 ps-5 shadow-sm w-sm-225px w-100`}\n        style={{\n            background: background,\n        }}\n    >\n        <div\n            className='text-cmGrey900'\n            style={{fontFamily: 'Manrope', fontWeight: '700', fontSize: '20px'}}\n        >\n            {heading}\n        </div>\n        <div\n            className='text-cmGrey900'\n            style={{\n                fontFamily: 'Manrope',\n                fontWeight: '600',\n                fontStyle: 'normal',\n                fontSize: '14px',\n            }}\n        >\n            {content}\n        </div>\n    </div>\n)\nexport {HiringProgressCards}\n","import {useCallback, useEffect, useState} from 'react'\n\n// import {toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\nimport clsx from 'clsx'\n\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport DatePicker from 'react-datepicker'\nimport moment from 'moment'\nimport {getHiringProgressListService} from '../../../../../services/Services'\nimport Pagination from '../../../admin/sequidocs/component/Pagination'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../../constants/constants'\nimport CustomDatePicker from '../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport RedirectToEmployeeProfile from '../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport CustomImage from '../../../../../customComponents/customImage/CustomImage'\nimport {TABLE_BORDER} from '../../../../../helpers/CommonHelpers'\nimport {CustomSortSvg} from '../../../../../_metronic/helpers/components/CustomSortSVG'\n\n// import Select from '../../Icon/select.png'\n// import ViewCostomer from './ViewCostomer'\n\nconst HiringTable = ({getCardData, selectedLocation}) => {\n    const [open, setOpen] = useState(false)\n    const [btn, setBtn] = useState(false)\n    const [value, setValue] = useState()\n    const [tableData, setTableData] = useState([])\n    // const [startDate, setStartDate] = useState(moment().add(-30, 'day').toDate())\n    const [startDate, setStartDate] = useState(null)\n    const [endDate, setEndDate] = useState(null)\n    const [page, setPage] = useState(1)\n    const [loading, setLoading] = useState(false)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    const startDateChange = (e) => {\n        setPage(1)\n        if (moment(e).format('YYYY-MM-DD') > moment(endDate).format('YYYY-MM-DD')) {\n            setEndDate(null)\n        }\n\n        setStartDate(e)\n    }\n\n    const endDateChange = (e) => {\n        setPage(1)\n        setEndDate(e)\n    }\n\n    // const startDateChange = (e) => {\n    //     if (moment(e).format('yyyy-MM-DD') > moment(endDate).format('yyyy-MM-DD')) {\n    //         setEndDate(null)\n    //     }\n    //     setStartDate(e)\n    // }\n    // const endDateChange = (e) => {\n    //     setEndDate(e)\n    // }\n\n    useEffect(() => {\n        hiringListApi()\n    }, [\n        selectedLocation,\n        startDate && startDate <= endDate ? endDate : null,\n        endDate && startDate <= endDate ? startDate : null,\n        page,\n        sortValue,\n        sortingOrder\n    ])\n\n    const hiringListApi = () => {\n        if (selectedLocation) {\n            const data = {\n                from_date: startDate ? getValidDate(startDate, 'YYYY-MM-DD') : null,\n                to_date: endDate ? getValidDate(endDate, 'YYYY-MM-DD') : null,\n                order_by: 'DESC',\n                page: page,\n                office_id: selectedLocation,\n                sort: sortValue,\n                sort_val: sortingOrder,\n            }\n            setLoading(true)\n            getHiringProgressListService(data)\n                .then((res) => {\n                    setTableData(res?.data)\n                    getCardData(res)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n\n    const checkZeroColumn = useCallback((col1, col2, col3) => {\n        let colArr = [col1, col2, col3]\n        return colArr.every((item) => item == 0)\n    }, [])\n\n    return (\n        <>\n            <div\n                className={`card shadow-sm mt-7`}\n                style={{fontFamily: 'Manrope', position: 'relative'}}\n            >\n                <CustomLoader full visible={loading} />\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto px-2 '\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='mt-2 mx-sm-7 py-3 mb-2 d-sm-flex flex-wrap justify-content-between align-items-center'>\n                            {/* Hiring Progress*/}\n                            <div\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '700',\n                                    fontSize: '16px',\n                                }}\n                                className='text-cmGrey900 mb-2 '\n                            >\n                                Hiring Progress\n                            </div>\n\n                            {/* search date */}\n                            <div className=' d-sm-flex flex-row flex-wrap align-items-center'>\n                                <div\n                                    style={{\n                                        borderRadius: '6px',\n                                    }}\n                                    className='form-group mx-auto'\n                                >\n                                    {/* <DatePicker\n                    className='border-0 bg2 fw-bold text-cmGrey900'\n                    placeholderText={'End Date'}\n                    onChange={(event) => {\n                      setEndDate(moment(event).format('YYYY-MM-DD'))\n                    }}\n                    name='startDate'\n                    dateFormat='YYYY-MM-DD'\n                    clearIcon={false}\n                    calendarIcon={false}\n                    value={endDate}\n                  /> */}\n                                    <CustomDatePicker\n                                        value={startDate}\n                                        placeholder='Start Date'\n                                        name='startDate'\n                                        onChange={(event) => startDateChange(event.target.value)}\n                                        maxDate={new Date()}\n                                    />\n                                </div>\n                                <label className='text-cmGrey600 mx-3  ' style={{fontWeight: 500}}>\n                                    to\n                                </label>\n\n                                <div\n                                    style={{\n                                        borderRadius: '6px',\n                                    }}\n                                    className='form-group mx-auto'\n                                >\n                                    {/* <DatePicker\n                    className='border-0 bg2 fw-bold text-cmGrey900'\n                    placeholderText={'End Date'}\n                    onChange={(event) => {\n                      setEndDate(moment(event).format('YYYY-MM-DD'))\n                    }}\n                    name='startDate'\n                    dateFormat='YYYY-MM-DD'\n                    clearIcon={false}\n                    calendarIcon={false}\n                    value={endDate}\n                  /> */}\n                                    <CustomDatePicker\n                                        value={endDate}\n                                        placeholder='End Date'\n                                        name='startDate'\n                                        onChange={(event) => endDateChange(event.target.value)}\n                                        maxDate={new Date()}\n                                        minDate={startDate}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table '>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5 text-start'>Name</th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Active Leads\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'active_lead'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('active_lead')\n                                                    setSortingOrder(\n                                                        sortValue !== 'active_lead' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                    setPage(1)\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>Rejected</th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Hired\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'hired' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('hired')\n                                                    setSortingOrder(\n                                                        sortValue !== 'hired' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                    setPage(1)\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>Last Hired</th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Conversion Rate\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'conversion_rate'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('conversion_rate')\n                                                    setSortingOrder(\n                                                        sortValue !== 'conversion_rate' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                    setPage(1)\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {tableData?.data?.length > 0 &&\n                                    tableData?.data?.map((item, i) => {\n                                        return (\n                                            <tr\n                                                key={item?.id}\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '500',\n                                                }}\n                                                className={`text-cmGrey700 stripRow`}\n                                            >\n                                                <td\n                                                    className='p-5 text-nowrap text-cmGrey800'\n                                                    style={{\n                                                        fontWeight: '600',\n                                                        textDecoration: 'underline',\n                                                    }}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.id}\n                                                    >\n                                                        <CustomImage\n                                                            src={item?.image}\n                                                            className='avatar me-3'\n                                                        />{' '}\n                                                        {item?.name ?? '-'}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n                                                <td className='p-5 text-nowrap '>\n                                                    {item?.active_lead ?? '-'}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap '>\n                                                    {item?.rejected ?? '-'}\n                                                </td>\n                                                <td className='p-5 text-nowrap '>\n                                                    {item?.hired ?? '-'}\n                                                </td>\n\n                                                <td className='p-5 text-nowrap '>\n                                                    {item?.last_hired\n                                                        ? getValidDate(item?.last_hired)\n                                                        : '-'}\n                                                </td>\n                                                <td className='p-5 text-nowrap'>\n                                                    {item?.conversion_rate ?? '-'}%\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            {tableData?.data?.length > 0 ? (\n                <Pagination\n                    setPage={(pg) => {\n                        setPage(pg)\n                    }}\n                    page={tableData?.current_page}\n                    totalPages={tableData?.last_page}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default HiringTable\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useRef, useState} from 'react'\nimport ApexCharts, {ApexOptions} from 'apexcharts'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {Dropdown1} from '../../../../../_metronic/partials'\n\nimport {getCSS, getCSSVariableValue} from '../../../../../_metronic/assets/ts/_utils'\n\nimport {useThemeMode} from '../../../../../_metronic/partials'\nimport {getHiringProgressChartService} from '../../../../../services/Services'\nimport {MAIN_POSITIONS} from '../../../../../constants/constants'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst OfficeChart = ({className, load, locationList, setSelectedLocation, selectedLocation}) => {\n    const chartRef = useRef(null)\n    const {mode} = useThemeMode()\n    const [chartData, setChartData] = useState([])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            load(true)\n            const body = {\n                office_id: selectedLocation,\n            }\n            getHiringProgressChartService(body)\n                .then((res) => {\n                    setChartData(res?.data[0])\n                })\n                .finally(() => {\n                    load(false)\n                })\n        }\n    }, [selectedLocation])\n\n    useEffect(() => {\n        const chart = refreshChart()\n        return () => {\n            if (chart) {\n                chart.destroy()\n            }\n        }\n    }, [chartRef, chartData])\n\n    const refreshChart = () => {\n        if (!chartRef.current) {\n            return\n        }\n\n        const height = parseInt(getCSS(chartRef.current, 'height'))\n\n        const chart = new ApexCharts(chartRef.current, getChartOptions(height, chartData))\n        if (chart) {\n            chart.render()\n        }\n\n        return chart\n    }\n\n    return (\n        <div\n            className={`bg-cmwhite`}\n            style={{\n                borderRadius: '0 10px 10px 10px',\n                boxShadow:\n                    'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n            }}\n        >\n            {/* begin::Header */}\n            <div className='w-sm-25 p-5'>\n                {/* begin::Title */}\n\n                {/* end::Title */}\n                <div className='text-cmGrey500'>\n                    <CustomDropdown\n                        // label={'Office'}\n                        searching={false}\n                        showClear={false}\n                        options={locationList}\n                        onChange={(e) => {\n                            setSelectedLocation(e?.target?.value)\n                        }}\n                        value={selectedLocation}\n                    />\n                </div>\n            </div>\n\n            <div className=' my-0'>\n                <div ref={chartRef} id='kt_charts_widget_1_chart' style={{height: '350px'}} />\n            </div>\n            <div className='d-flex flex-center gap-10 pb-5'>\n                <div className='d-flex flex-center gap-1'>\n                    <i class='bi bi-square-fill' style={{color: '#FFB03A'}}></i>\n                    <b className='text-cmGrey600 fs-8 '>Hirings</b>\n                </div>\n                <div className='d-flex flex-center gap-1'>\n                    <i class='bi bi-square-fill' style={{color: '#E0E0E0'}}></i>\n                    <b className='text-cmGrey600 fs-8'>Leads</b>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {OfficeChart}\n\nfunction getChartOptions(height, chartData) {\n    const labelColor = getCSSVariableValue('--kt-gray-500')\n    const borderColor = getCSSVariableValue('--kt-gray-200')\n\n    // const newArray = Object.keys(chartData).filter((lead_count) => chartData.includes(lead_count))\n    const keysData = Object.keys(chartData)\n    const lead_count = keysData?.map((item) => chartData[item]?.lead_count)\n    const hired_count = keysData?.map((item) => chartData[item]?.hired_count)\n    return {\n        series: [\n            {\n                name: 'Hirings',\n                data: hired_count,\n            },\n            {\n                name: 'Leads',\n                data: lead_count,\n            },\n        ],\n        chart: {\n            fontFamily: 'inherit',\n            type: 'bar',\n            height: height,\n            toolbar: {\n                show: false,\n            },\n            zoom: {\n                enabled: true,\n                type: 'xy',\n                autoScaleYaxis: true,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '50%',\n                borderRadius: 5,\n            },\n        },\n        legend: {\n            show: false,\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent'],\n        },\n        xaxis: {\n            categories: Object.keys(chartData),\n            // categories: ['Jan', 'Feb', 'Mar', 'Apr'],\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    colors: labelColor,\n                    fontSize: '12px',\n                    fontFamily: 'Manrope',\n                    fontWeight: '500',\n                },\n            },\n        },\n        yaxis: {\n            labels: {\n                style: {\n                    colors: labelColor,\n                    fontSize: '12px',\n                },\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        responsive: [\n            {\n                breakpoint: 700,\n                options: {\n                    plotOptions: {\n                        bar: {\n                            horizontal: true,\n                        },\n                    },\n                },\n            },\n        ],\n        states: {\n            normal: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            hover: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            active: {\n                allowMultipleDataPointsSelection: false,\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n        },\n        tooltip: {\n            style: {\n                fontSize: '12px',\n            },\n            y: {\n                formatter: function (val) {\n                    return val\n                },\n            },\n        },\n        colors: ['#FFB03A', '#E0E0E0'],\n        grid: {\n            borderColor: borderColor,\n            strokeDashArray: 4,\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n        },\n    }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\nimport {getRecentlyHiredListService} from '../../../../../services/Services'\n\nimport {formattedPhoneNumber} from '../../../../../helpers/CommonHelpers'\n\nconst RecentlyHiredList = ({className, selectedLocation}) => {\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            getRecentlyHiredListService(selectedLocation).then((res) => {\n                // setData(res?.data?.reverse())\n                setData(res?.data)\n            })\n        }\n    }, [selectedLocation])\n\n    return (\n        <div\n            className={`card ${className} shadow-sm`}\n            style={{fontFamily: 'Manrope', borderRadius: 10}}\n        >\n            {/* begin::Header */}\n            <div className='ps-6 pt-6 border-0 py-0 '>\n                <div\n                    className=' fw-bold text-cmGrey900 '\n                    style={{fontSize: '16px', fontWeight: '700'}}\n                >\n                    Recently Hired\n                </div>\n            </div>\n            <div className='my-3 mx-6 border border-cmGrey200' />\n            {/* end::Header */}\n            {/* begin::Body */}\n            <div className='card-body pt-2 mx-3'>\n                {data?.length <= 0 ? (\n                    <div\n                        style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <p>No data found</p>\n                    </div>\n                ) : (\n                    <div>\n                        {data?.length > 0 &&\n                            data?.map((item) => (\n                                <div key={item.id}>\n                                    <div className='d-flex justify-content-between'>\n                                        <div>\n                                            <span\n                                                style={{\n                                                    fontWeight: '500',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                                className='text-cmGrey800'\n                                            >\n                                                {item?.first_name} {item?.last_name}\n                                            </span>\n                                            <span\n                                                className={\n                                                    `badge ms-2` +\n                                                    (item.position_name === 'Setter'\n                                                        ? ' bg-cminfo bg-opacity-10 text-cminfo'\n                                                        : ' bg-info bg-opacity-10 text-info')\n                                                }\n                                                style={{\n                                                    fontSize: '12px',\n                                                    fontWeight: '500',\n                                                }}\n                                            >\n                                                {item?.sub_position_name}\n                                            </span>\n                                        </div>\n                                        <div\n                                            className='text-cmGrey700'\n                                            style={{fontWeight: '500', fontSize: '14px'}}\n                                        >\n                                            {formattedPhoneNumber(item?.mobile_no)}\n                                        </div>\n                                    </div>\n                                    <hr style={{borderTop: '1px dashed grey'}} />\n                                </div>\n                            ))}\n                    </div>\n                )}\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport {RecentlyHiredList}\n","import React, {useState, useEffect} from 'react'\n\nimport {Calendar} from 'primereact/calendar'\nimport {getHiringCalendarEventsService} from '../../../../../services/Services'\nimport {getValidDate} from '../../../../../constants/constants'\nimport moment from 'moment'\n\nconst HiringCalendar2 = ({location}) => {\n    const [dates, setDates] = useState(null)\n    const [eventData, setEventData] = useState(null)\n    const [eventDates, setEventDates] = useState(null)\n    const [startDate, setStartDate] = useState(moment().startOf('month').format('YYYY-MM-DD'))\n    const [endDate, setEndDate] = useState(moment().endOf('month').format('YYYY-MM-DD'))\n\n    useEffect(() => {\n        if (location) {\n            const body = {\n                office_id: location,\n                start_date: startDate,\n                end_date: endDate,\n            }\n            getHiringCalendarEventsService(body).then((res) => {\n                let data = res?.data?.map((item) => {\n                    // return {\n                    //     fullDate: item.event_date,\n                    //     day: moment(item?.event_date).date(),\n                    //     month: moment(item?.event_date).month(),\n                    //     year: moment(item?.event_date).year(),\n                    //     type: item?.type,\n                    // }\n                    return {\n                        fullDate: item.event_date,\n                        day: moment(item?.event_date, 'YYYY/MM/DD').date(),\n                        month: moment(item?.event_date, 'YYYY/MM/DD').month(),\n                        year: moment(item?.event_date, 'YYYY/MM/DD').year(),\n                        type: item?.type,\n                    }\n                })\n\n                setEventDates(data)\n                setEventData(res)\n            })\n        }\n    }, [startDate, endDate, location])\n\n    const dateTemplate = (date) => {\n        const checkEvent = (item) => {\n            return item?.day == date.day && item?.month == date.month && item?.year == date.year\n        }\n        let currentEvent = eventDates?.length > 0 ? eventDates?.find(checkEvent) : null\n\n        // Printing result of includes()\n        date = {\n            ...date,\n            hasEvent: currentEvent ? true : false,\n            color:\n                currentEvent?.type == 'Interview'\n                    ? '#00c247'\n                    : currentEvent?.type == 'Hired'\n                    ? '#fe679d'\n                    : '#ffb03a',\n        }\n\n        if (date?.hasEvent) {\n            return (\n                <div\n                    className='badge bg-cmwhite text-cmGrey900 rounded-pill w-30px h-30px d-flex flex-center'\n                    style={{\n                        border: `3px solid ${date.color}`,\n                    }}\n                >\n                    {date?.day}\n                </div>\n            )\n        } else {\n            return date?.day\n        }\n    }\n    const onChangeValues = (e) => {\n        setDates(e.value)\n        setStartDate(moment(e.value).startOf('month').format('YYYY-MM-DD'))\n        setEndDate(moment(e.value).endOf('month').format('YYYY-MM-DD'))\n    }\n\n    return (\n        <div className='card shadow-sm  ' style={{borderRadius: '10px'}}>\n            <Calendar\n                dateTemplate={dateTemplate}\n                value={dates}\n                onViewDateChange={onChangeValues}\n                inline\n                showWeek\n                selectionMode=''\n                panelClassName=' border-0 overflow-hidden'\n                panelStyle={{borderRadius: '10px'}}\n            />\n            <div className='d-flex flex-wrap px-5 py-6 justify-content-between '>\n                <div className='d-flex px-1' style={{fontWeight: 600, alignSelf: 'center'}}>\n                    <div className='bi bi-circle-fill text-cmSuccess px-1 fs-7 '></div>\n                    <span className='text-cmSuccess'>Interviews</span>\n                </div>\n                <div className='d-flex px-2' style={{fontWeight: 600, alignSelf: 'center'}}>\n                    <div className='bi bi-circle-fill text-cmpink px-1 fs-7 '></div>\n                    <span className='text-cmpink'>Start Dates</span>\n                </div>\n                <div className='d-flex px-2' style={{fontWeight: 600, alignSelf: 'center'}}>\n                    <div className='bi bi-circle-fill text-cmOrange px-1 fs-7 '></div>\n                    <span className='text-cmOrange'>Others</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HiringCalendar2\n","import React, {useState} from 'react'\nimport {HiringProgressCards} from './HiringProgressCards'\nimport HiringTable from './HiringTable'\nimport {OfficeChart} from './OfficeChart'\nimport {RecentlyHiredList} from './RecentlyHiredList'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport useOfficeLocation from '../../../../../hooks/useOfficeLocation'\nimport HiringCalendar2 from './HiringCalendar'\n\nconst HiringProcessPage = () => {\n    const [loading, setLoading] = useState(true)\n    const [cardsData, setCardsData] = useState(null)\n    const [officeList, selectedLocation, setSelectedLocation] = useOfficeLocation()\n    return (\n        <div className='row' style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n\n            <div className='col-xxl-8' >\n                <div style={{borderRadius: '0 10px 10px 10px'}} >\n                    <OfficeChart\n                        setSelectedLocation={setSelectedLocation}\n                        load={setLoading}\n                        selectedLocation={selectedLocation}\n                        locationList={officeList}\n                    />\n                </div>\n                <div className='row m-4 mx-auto my-10  gap-8'>\n                    <HiringProgressCards\n                        heading={cardsData?.active_lead ?? '0'}\n                        content='Active Leads'\n                        className='col-sm '\n                        background='#FFF4DE'\n                    />\n                    <HiringProgressCards\n                        heading={cardsData?.total_lead ?? '0'}\n                        content='Total Leads'\n                        className='col-sm '\n                        background='#E1E9FF'\n                    />\n                    <HiringProgressCards\n                        heading={cardsData?.Hired ?? '0'}\n                        content='Hired'\n                        className='col-sm'\n                        background='#D7F9EF'\n                    />\n                </div>\n                <div className='mb-5'>\n                    <HiringTable\n                        selectedLocation={selectedLocation}\n                        getCardData={(data) => setCardsData(data)}\n                    />\n                </div>\n            </div>\n            <div className='col-xxl-4'>\n                <div className='d-flex flex-column gap-10 w-auto'>\n                    <div>\n                        {/* <HiringCalendar /> */}\n                        <HiringCalendar2 location={selectedLocation} />\n                    </div>\n                    <div>\n                        <RecentlyHiredList selectedLocation={selectedLocation} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HiringProcessPage\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../accessRights/AccessRights'\nimport {allPermissionsAccess} from '../../../../../accessRights/useCustomAccessRights'\nimport {fontsFamily} from '../../../../../assets/fonts/fonts'\n\nconst HiringHeader = () => {\n    const location = useLocation()\n\n    return (\n        <div\n            style={{fontSize: '16px', fontWeight: '800', fontFamily: fontsFamily.manrope}}\n            className='d-flex flex-nowrap gap-7 text-cmGrey500'\n        >\n            <AccessRights\n                customCondition={allPermissionsAccess.standard.hiring.hiringProgress.view}\n            >\n                <Link\n                    className={`px-3 py-2 bg-cmwhite shadow-sm text-nowrap ${\n                        location.pathname === '/hiring/hiring-process' && 'active'\n                            ? 'text-cmBlue-Crayola  cursor-pointer'\n                            : 'text-cmGrey500 '\n                    }`}\n                    to='/hiring/hiring-process'\n                    style={{borderRadius: '10px 10px 0 0'}}\n                >\n                    Hiring Progress\n                </Link>\n            </AccessRights>\n\n            <AccessRights customCondition={allPermissionsAccess.standard.hiring.leads.view}>\n                <Link\n                    className={\n                        `px-3 py-2 bg-cmwhite shadow-sm text-nowrap ` +\n                        (location.pathname === '/hiring/hiring-leads' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500')\n                    }\n                    to='/hiring/hiring-leads'\n                    style={{borderRadius: '10px 10px 0 0'}}\n                >\n                    Leads\n                </Link>\n            </AccessRights>\n\n            {/* Pipeline */}\n\n            <AccessRights\n                customCondition={allPermissionsAccess.standard.hiring.onboardingEmployees.view}\n            >\n                <Link\n                    className={\n                        `px-3 py-2 bg-cmwhite shadow-sm text-nowrap ` +\n                        (location.pathname === '/hiring/hiring-onBoardingEmployees' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500')\n                    }\n                    to='/hiring/hiring-onBoardingEmployees'\n                    style={{borderRadius: '10px 10px 0 0'}}\n                >\n                    Onboarding Employees\n                </Link>\n            </AccessRights>\n        </div>\n    )\n}\n\nexport default HiringHeader\n","import React, {useState, useCallback, useEffect} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport More1 from '../../Setting/components/Path1.png'\nimport More from '../../Setting/components/Path.png'\nimport {DYNAMIC_FIELD_TYPE} from '../../../../../constants/constants'\nimport {\n    addOnBoardingConfigurationService,\n    getOnBoardingConfigurationService,\n    getTemplateListByCategoryService,\n} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {getOnBoardingConfigurationAction} from '../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {getErrorMessageFromResponse} from '../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomDelete from '../../../../../customComponents/customIcons/CustomDelete'\nvar selectedArr = null\nconst ConfigureEmploye = () => {\n    const navigate = useNavigate()\n    const [more, setMore] = useState(false)\n    const [more1, setMore1] = useState(false)\n    const [more2, setMore2] = useState(false)\n    const [configurationData, setConfigurationData] = useState([])\n    const [templateDropdown, setTemplateDropdown] = useState(null)\n    const [contractToSignData, setContractToSignData] = useState(null)\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const [checkedAll, setCheckedAll] = useState(false)\n\n    useEffect(() => {\n        getConfigurationData()\n        const body = {\n            category_id: 1,\n        }\n        getTemplateListByCategoryService(body).then((res) => {\n            let data = res?.data?.map((item) => ({id: item?.id, value: item?.template_name}))\n            setTemplateDropdown(data)\n        })\n\n        dispatch(getOnBoardingConfigurationAction())\n    }, [])\n    const getConfigurationData = () => {\n        setLoading(true)\n        const body = {\n            id: '1',\n        }\n        getOnBoardingConfigurationService(body)\n            .then((res) => {\n                let data = {...res.data?.[0]}\n                data['employee_personal_detail'] =\n                    data?.employee_personal_detail?.map((res) => ({\n                        ...res,\n                        attribute_option: JSON.parse(res?.attribute_option ?? '[]'),\n                    })) ?? []\n                data['additional_info_for_employee_to_get_started'] =\n                    data?.additional_info_for_employee_to_get_started?.map((res) => ({\n                        ...res,\n                        attribute_option: JSON.parse(res?.attribute_option ?? '[]'),\n                    })) ?? []\n\n                setConfigurationData(data)\n                getAgreementData(data?.select_agreement_to_sign)\n            })\n            .finally(() => setLoading(false))\n    }\n    const getAgreementData = (selectedAgreement) => {\n        const formBody = {\n            category_id: 2,\n        }\n        getTemplateListByCategoryService(formBody).then((res) => {\n            let data = res?.data?.map((item) => ({id: item?.id, value: item?.template_name}))\n            let SignDataArr = selectedAgreement?.split(',')\n\n            let checkedData = data?.map((item) => {\n                return {...item, isChecked: SignDataArr?.includes((item?.id).toString())}\n            })\n\n            setContractToSignData(checkedData)\n        })\n    }\n    const handleAddAnotherPersonalDetail = (name) => {\n        const dumbData = {...configurationData}\n        dumbData[name].push({\n            id: null,\n            field_name: null,\n            field_type: 'text',\n            field_required: 'optional',\n            configuration_id: null,\n            attribute_option: null,\n        })\n        setConfigurationData(dumbData)\n    }\n    let arr = []\n    const addDropDownFields = (name, index) => {\n        const dumbData = {...configurationData}\n        if (dumbData?.[name]?.[index]?.['attribute_option']?.length > 0) {\n            dumbData[name][index]['attribute_option'] = [\n                ...dumbData?.[name]?.[index]?.['attribute_option'],\n                '',\n            ]\n        } else {\n            dumbData[name][index]['attribute_option'] = ['']\n        }\n        // dumbData[name][index]['attribute_option'].push({\n        //   id: null,\n        //   field_value: null,\n        // })\n        setConfigurationData(dumbData)\n    }\n    const onDeleteDropdownField = useCallback(\n        (name, itemIndex, subIndex) => {\n            let tempData = {...configurationData}\n\n            tempData = configurationData[name]?.map((item, index) => {\n                if (index === itemIndex) {\n                    item.attribute_option = item?.attribute_option?.filter(\n                        (subItem, i) => subIndex != i\n                    )\n                }\n\n                return item\n            })\n\n            setConfigurationData({...configurationData, [name]: tempData})\n        },\n        [configurationData]\n    )\n\n    const handleFieldsChange = (main_name, field_name, index, value) => {\n        const tempData = {...configurationData}\n        tempData[main_name][index][field_name] = value\n        setConfigurationData(tempData)\n    }\n    const handleDropdownFieldsChange = (main_name, index, value, subIndex) => {\n        const tempData = {...configurationData}\n\n        tempData[main_name][index]['attribute_option'][subIndex] = value\n        setConfigurationData(tempData)\n    }\n\n    const handleChange = (field_name, value) => {\n        const tempData = {...configurationData}\n        tempData[field_name] = value\n        setConfigurationData(tempData)\n    }\n    const onDeleteField = useCallback(\n        (main_name, itemIndex) => {\n            let tempData = {...configurationData}\n            tempData = configurationData[main_name]?.filter((item, index) => index != itemIndex)\n\n            setConfigurationData({...configurationData, [main_name]: tempData})\n        },\n        [configurationData]\n    )\n\n    const onSaveConfiguration = () => {\n        setLoading(true)\n        let bodyData = {...configurationData}\n        bodyData['employee_personal_detail'] = bodyData?.employee_personal_detail?.map((res) => ({\n            ...res,\n            attribute_option: JSON.stringify(res?.attribute_option),\n        }))\n        bodyData['additional_info_for_employee_to_get_started'] =\n            bodyData?.additional_info_for_employee_to_get_started?.map((res) => ({\n                ...res,\n                attribute_option: JSON.stringify(res?.attribute_option),\n            }))\n        addOnBoardingConfigurationService(bodyData)\n            .then(() => navigate(-1))\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                getConfigurationData()\n            })\n    }\n    const handleChceckbox = (id, e) => {\n        let updatedData = [...contractToSignData]\n        updatedData = updatedData?.map((item) => {\n            if (item?.id == id) {\n                return {...item, isChecked: e.target.checked}\n            } else {\n                return item\n            }\n        })\n        selectedArr = updatedData?.filter((item) => item?.isChecked)?.map((item2) => item2?.id)\n        setContractToSignData(updatedData)\n        if (contractToSignData?.length == selectedArr?.length) setCheckedAll(true)\n        else setCheckedAll(false)\n        handleChange('select_agreement_to_sign', selectedArr.join(','))\n    }\n    const selectAllCheckbox = (e) => {\n        let selectAllData = contractToSignData?.map((item) => {\n            return {...item, isChecked: e.target.checked}\n        })\n        selectedArr = selectAllData?.filter((item) => item?.isChecked)?.map((item2) => item2?.id)\n        setContractToSignData(selectAllData)\n        setCheckedAll(e.target.checked)\n        handleChange('select_agreement_to_sign', selectedArr.join(','))\n    }\n\n    return (\n        <div\n            className='bg-cmwhite shadow-sm'\n            style={{borderRadius: '10px', fontSize: '14px', position: 'relative'}}\n        >\n            <CustomLoader full visible={loading} />\n            <div className='d-flex flex-wrap gap-2 gap-sm-0 justify-content-between align-items-center px-5 py-4'>\n                <div className=' d-flex  align-items-center gap-3 text-cmGrey900 mx-auto mx-sm-0'>\n                    <span className='bi bi-gear fs-1' />\n                    <div\n                        style={{\n                            fontSize: '18px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '600',\n                        }}\n                    >\n                        Configuration\n                    </div>\n                </div>\n                <div className='d-flex align-items-center gap-2 mx-sm-0 mx-auto'>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.error}\n                        buttonLabel='Cancel'\n                        onClick={() => navigate(-1)}\n                    />\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel='Save'\n                        onClick={() => onSaveConfiguration()}\n                    />\n                </div>\n            </div>\n\n            <div className='m-0 border border-gray-200'></div>\n\n            <div\n                className='py-10 px-sm-0 px-3 w-xl-50 mx-sm-10'\n                style={{fontFamily: 'Manrope', fontSize: '14px'}}\n            >\n                {/* Employee ID Settings */}\n                <div className=''>\n                    <div className='mb-5' style={{fontSize: '16px', fontWeight: '600'}}>\n                        Employee ID Settings\n                    </div>\n                    <div className='ms-sm-10 mb-5'>\n                        <div className='mb-1' style={{fontWeight: '600'}}>\n                            ID Code\n                        </div>\n                        <div className='d-flex flex-wrap align-items-center gap-sm-10 gap-5'>\n                            <div>\n                                <CustomDropdown\n                                    options={[\n                                        {name: 'Prefix', value: 'prefix'},\n                                        {name: 'None', value: 'none'},\n                                    ]}\n                                    value={configurationData?.prefix}\n                                    onChange={(e) => {\n                                        handleChange(e.target.name, e.target.value)\n                                    }}\n                                    name={'prefix'}\n                                    showClear={false}\n                                    searching={false}\n                                />\n                            </div>\n                            <div>\n                                <CustomInput\n                                    placeholder='Enter ID Code'\n                                    name='id_code'\n                                    value={\n                                        configurationData?.prefix == 'none'\n                                            ? ''\n                                            : configurationData?.id_code\n                                    }\n                                    onChange={(e) => handleChange(e.target.name, e.target.value)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='ms-sm-10 mb-5'>\n                        <CustomInput\n                            label={'ID Code number to start from'}\n                            type={INPUT_TYPE.number}\n                            placeholder='Enter Number'\n                            name='id_code_no_to_start_from'\n                            value={configurationData?.id_code_no_to_start_from}\n                            onChange={(e) => handleChange(e.target.name, e.target.value)}\n                        />\n                    </div>\n\n                    <div\n                        className='text-Grey800 mb-5'\n                        style={{fontSize: '16px', fontWeight: '600'}}\n                    >\n                        Offer Letter Settings\n                    </div>\n                    {/* question */}\n                    <div className='mb-10 ms-sm-10'>\n                        {/* slect box */}\n                        <div className=''>\n                            <CustomDropdown\n                                label={'Select Offer Letter to send'}\n                                name='select_offer_letter_to_send'\n                                onChange={(e) => handleChange(e?.target?.name, e?.target?.value)}\n                                value={configurationData?.select_offer_letter_to_send}\n                                options={templateDropdown}\n                                valueKey='id'\n                                displayKey='value'\n                                placeholder='Select Offer Letter'\n                            />\n                        </div>\n                    </div>\n\n                    <div\n                        className='text-Grey800 mb-5'\n                        style={{fontSize: '16px', fontWeight: '600'}}\n                    >\n                        Select Agreements to sign\n                    </div>\n                    <div\n                        className='bg-cmwhite rounded border mb-10 ms-sm-10  border-2'\n                        // style={{width: '352px', height: '214px'}}\n                    >\n                        <div className='d-flex justify-content-between py-2 mx-5 text-cmGrey500'>\n                            <div>\n                                {selectedArr?.length ?? '0'}/{contractToSignData?.length} selected\n                            </div>\n                            {/* select box */}\n                            {contractToSignData?.length > 0 ? (\n                                <div className=''>\n                                    <div className='form-check form-check-custom form-check-solid '>\n                                        <CustomCheckbox\n                                            checked={checkedAll}\n                                            onChange={(e) => selectAllCheckbox(e)}\n                                        />\n                                        <label\n                                            className='form-check-label'\n                                            style={{fontFamily: 'Manrope'}}\n                                        >\n                                            Select all\n                                        </label>\n                                    </div>\n                                </div>\n                            ) : null}\n                        </div>\n                        <hr className='m-0' style={{borderTop: '1px solid gray'}} />\n                        <div\n                            className='d-flex flex-column px-5 mt-5 gap-5 my-auto overflow-auto'\n                            style={{height: '150px'}}\n                        >\n                            {/* check box */}\n                            {contractToSignData?.map((item) => (\n                                <div className='' key={item?.id}>\n                                    <div className='form-check form-check-custom form-check-solid '>\n                                        <div>\n                                            <CustomCheckbox\n                                                checked={item?.isChecked}\n                                                name='select_agreement_to_sign'\n                                                onChange={(e) => handleChceckbox(item?.id, e)}\n                                            />\n                                        </div>\n                                        <div>\n                                            <label\n                                                className='form-check-label text-cmGrey600'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 500,\n                                                    fontSize: '14px',\n                                                }}\n                                            >\n                                                {item?.value}\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <div\n                        className='text-Grey800 mb-5'\n                        style={{fontSize: '16px', fontWeight: '600'}}\n                    >\n                        Employee Personal Details\n                        <>\n                            {!more ? (\n                                <img\n                                    style={{\n                                        marginLeft: '17px',\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={() => setMore(true)}\n                                    src={More1}\n                                ></img>\n                            ) : (\n                                <img\n                                    style={{\n                                        marginLeft: '17px',\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={() => setMore(false)}\n                                    src={More}\n                                ></img>\n                            )}\n                        </>\n                    </div>\n                    <div className='ms-sm-10 mb-10'>\n                        {more && (\n                            <>\n                                <div className='text-cmGrey800 mb-2' style={{fontWeight: '600  '}}>\n                                    Dynamic Fields\n                                </div>\n                                {configurationData?.employee_personal_detail?.map((item, index) => (\n                                    <>\n                                        <div className='mb-5' key={index}>\n                                            <div className='row align-items-center gap-5 mb-2'>\n                                                <div className='col-sm'>\n                                                    <CustomInput\n                                                        type={INPUT_TYPE.text}\n                                                        placeholder='Enter'\n                                                        onChange={(e) =>\n                                                            handleFieldsChange(\n                                                                'employee_personal_detail',\n                                                                e.target.name,\n                                                                index,\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                        value={item?.field_name}\n                                                        name={'field_name'}\n                                                    />\n                                                </div>\n\n                                                <div className='col-sm'>\n                                                    <CustomDropdown\n                                                        options={DYNAMIC_FIELD_TYPE}\n                                                        searching={false}\n                                                        value={item?.field_type}\n                                                        name={'field_type'}\n                                                        onChange={(e) =>\n                                                            handleFieldsChange(\n                                                                'employee_personal_detail',\n                                                                e.target.name,\n                                                                index,\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className='col-sm'>\n                                                    <CustomDropdown\n                                                        options={[\n                                                            {name: 'Optional', value: 'optional'},\n                                                            {name: 'Mandatory', value: 'required'},\n                                                        ]}\n                                                        searching={false}\n                                                        value={item?.field_required}\n                                                        name={'field_required'}\n                                                        onChange={(e) =>\n                                                            handleFieldsChange(\n                                                                'employee_personal_detail',\n                                                                e.target.name,\n                                                                index,\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className='col-sm-1 text-center'>\n                                                    <CustomDelete\n                                                        onClick={() =>\n                                                            onDeleteField(\n                                                                'employee_personal_detail',\n                                                                index\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            {item?.field_type == 'dropdown' &&\n                                                item?.attribute_option != null &&\n                                                item?.attribute_option?.length > 0 &&\n                                                // JSON.parse(JSON.stringify(item?.attribute_option ?? '[]'))?.map((val, i) => (\n                                                item?.attribute_option?.map((val, i) => (\n                                                    <div key={i}>\n                                                        {i == 0 && (\n                                                            <div\n                                                                className='text-cmGrey800'\n                                                                style={{fontWeight: '600  '}}\n                                                            >\n                                                                Options:\n                                                            </div>\n                                                        )}\n                                                        <div className='d-flex align-items-center justify-content-center mx-auto gap-5  text-center mb-5'>\n                                                            <div className='w-auto'>\n                                                                <CustomInput\n                                                                    type={INPUT_TYPE.text}\n                                                                    placeholder='Enter'\n                                                                    value={val}\n                                                                    onChange={(e) =>\n                                                                        handleDropdownFieldsChange(\n                                                                            'employee_personal_detail',\n                                                                            index,\n                                                                            e.target.value,\n                                                                            i\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </div>\n                                                            {\n                                                                <CustomDelete\n                                                                    onClick={() =>\n                                                                        onDeleteDropdownField(\n                                                                            'employee_personal_detail',\n                                                                            index,\n                                                                            i\n                                                                        )\n                                                                    }\n                                                                />\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                            {item?.field_type == 'dropdown' ? (\n                                                <div className='d-flex align-items-center  justify-content-center text-cmBlue-Crayola gap-1'>\n                                                    <span\n                                                        className='cursor-pointer'\n                                                        onClick={() =>\n                                                            addDropDownFields(\n                                                                'employee_personal_detail',\n                                                                index\n                                                            )\n                                                        }\n                                                    >\n                                                        <span className='bi bi-plus-square  fs-4'></span>{' '}\n                                                        <span className='fw-bold text-decoration-underline'>\n                                                            {' '}\n                                                            Add Options\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            ) : null}\n                                        </div>\n                                        {configurationData?.employee_personal_detail.length - 1 ===\n                                        index ? null : (\n                                            <hr />\n                                        )}\n                                    </>\n                                ))}\n\n                                <div className='d-flex align-items-center text-cmBlue-Crayola gap-1'>\n                                    <span\n                                        className='cursor-pointer'\n                                        onClick={() =>\n                                            handleAddAnotherPersonalDetail(\n                                                'employee_personal_detail'\n                                            )\n                                        }\n                                    >\n                                        <span className='bi bi-plus-square  fs-4'></span>{' '}\n                                        <span className='fw-bold text-decoration-underline'>\n                                            {' '}\n                                            Add Another\n                                        </span>\n                                    </span>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                    <div\n                        className='text-Grey800 mb-5'\n                        style={{fontSize: '16px', fontWeight: '600'}}\n                    >\n                        Additional Info for Employee to Get Started\n                        <>\n                            {!more1 ? (\n                                <img\n                                    style={{\n                                        marginLeft: '17px',\n                                        marginTop: '-3px',\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={() => setMore1(true)}\n                                    src={More1}\n                                ></img>\n                            ) : (\n                                <img\n                                    style={{\n                                        marginLeft: '17px',\n                                        marginTop: '-3px',\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={() => setMore1(false)}\n                                    src={More}\n                                ></img>\n                            )}\n                        </>\n                    </div>\n                    {more1 && (\n                        <>\n                            <div className='ms-sm-10 mb-10'>\n                                <div className='text-cmGrey800 mb-2' style={{fontWeight: '600  '}}>\n                                    Dynamic Fields\n                                </div>\n                                {configurationData?.additional_info_for_employee_to_get_started?.map(\n                                    (item, index) => {\n                                        return (\n                                            <div key={index}>\n                                                <div className='mb-5'>\n                                                    <div className='row align-items-center gap-5 mb-2 mx-sm-0 mx-2'>\n                                                        <div className='col-sm'>\n                                                            <CustomInput\n                                                                type={INPUT_TYPE.text}\n                                                                placeholder='Enter'\n                                                                value={item?.field_name}\n                                                                name={'field_name'}\n                                                                onChange={(e) =>\n                                                                    handleFieldsChange(\n                                                                        'additional_info_for_employee_to_get_started',\n                                                                        e.target.name,\n                                                                        index,\n                                                                        e.target.value\n                                                                    )\n                                                                }\n                                                            />\n                                                        </div>\n                                                        <div className='col-sm'>\n                                                            <CustomDropdown\n                                                                options={DYNAMIC_FIELD_TYPE}\n                                                                searching={false}\n                                                                value={item?.field_type}\n                                                                name={'field_type'}\n                                                                onChange={(e) =>\n                                                                    handleFieldsChange(\n                                                                        'additional_info_for_employee_to_get_started',\n                                                                        e.target.name,\n                                                                        index,\n                                                                        e.target.value\n                                                                    )\n                                                                }\n                                                            />\n                                                        </div>\n\n                                                        <div className='col-sm'>\n                                                            <CustomDropdown\n                                                                value={item?.field_required}\n                                                                searching={false}\n                                                                name={'field_required'}\n                                                                onChange={(e) =>\n                                                                    handleFieldsChange(\n                                                                        'additional_info_for_employee_to_get_started',\n                                                                        e.target.name,\n                                                                        index,\n                                                                        e.target.value\n                                                                    )\n                                                                }\n                                                                options={[\n                                                                    {\n                                                                        name: 'Optional',\n                                                                        value: 'optional',\n                                                                    },\n                                                                    {\n                                                                        name: 'Mandatory',\n                                                                        value: 'required',\n                                                                    },\n                                                                ]}\n                                                            />\n                                                        </div>\n\n                                                        <div className='col-sm-1 text-center'>\n                                                            <CustomDelete\n                                                                onClick={() =>\n                                                                    onDeleteField(\n                                                                        'additional_info_for_employee_to_get_started',\n                                                                        index\n                                                                    )\n                                                                }\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    {item?.field_type == 'dropdown' &&\n                                                        item?.attribute_option != null &&\n                                                        item?.attribute_option?.length > 0 &&\n                                                        // JSON.parse(JSON.stringify(item?.attribute_option ?? '[]'))?.map((val, i) => (\n                                                        item?.attribute_option?.map((val, i) => (\n                                                            <>\n                                                                {i == 0 && (\n                                                                    <div\n                                                                        className='text-cmGrey800'\n                                                                        style={{\n                                                                            fontWeight: '600  ',\n                                                                        }}\n                                                                    >\n                                                                        Options:\n                                                                    </div>\n                                                                )}\n                                                                <div className='d-flex align-items-center justify-content-center mx-auto gap-5 w-sm-75  text-center mb-5'>\n                                                                    <CustomInput\n                                                                        type={INPUT_TYPE.text}\n                                                                        placeholder='Enter'\n                                                                        value={val}\n                                                                        onChange={(e) =>\n                                                                            handleDropdownFieldsChange(\n                                                                                'additional_info_for_employee_to_get_started',\n\n                                                                                index,\n                                                                                e.target.value,\n                                                                                i\n                                                                            )\n                                                                        }\n                                                                    />\n                                                                    {\n                                                                        <CustomDelete\n                                                                            onClick={() =>\n                                                                                onDeleteDropdownField(\n                                                                                    'additional_info_for_employee_to_get_started',\n                                                                                    index,\n                                                                                    i\n                                                                                )\n                                                                            }\n                                                                        />\n                                                                    }\n                                                                </div>\n                                                            </>\n                                                        ))}\n                                                    {item?.field_type == 'dropdown' ? (\n                                                        <div className='d-flex align-items-center  justify-content-center text-cmBlue-Crayola gap-1'>\n                                                            <span\n                                                                className='cursor-pointer'\n                                                                onClick={() =>\n                                                                    addDropDownFields(\n                                                                        'additional_info_for_employee_to_get_started',\n                                                                        index\n                                                                    )\n                                                                }\n                                                            >\n                                                                <span className='bi bi-plus-square  fs-4'></span>{' '}\n                                                                <span className='fw-bold text-decoration-underline'>\n                                                                    {' '}\n                                                                    Add Options\n                                                                </span>\n                                                            </span>\n                                                        </div>\n                                                    ) : null}\n                                                </div>\n                                                {configurationData\n                                                    ?.additional_info_for_employee_to_get_started\n                                                    .length -\n                                                    1 ===\n                                                index ? null : (\n                                                    <hr />\n                                                )}\n                                            </div>\n                                        )\n                                    }\n                                )}\n\n                                <div className='d-flex align-items-center text-cmBlue-Crayola gap-1 cursor-pointer'>\n                                    <span\n                                        onClick={() =>\n                                            handleAddAnotherPersonalDetail(\n                                                'additional_info_for_employee_to_get_started'\n                                            )\n                                        }\n                                    >\n                                        <span className='bi bi-plus-square  fs-4 '></span>{' '}\n                                        <span className='fw-bold text-decoration-underline'>\n                                            {' '}\n                                            Add Another\n                                        </span>\n                                    </span>\n                                </div>\n                            </div>\n                        </>\n                    )}\n\n                    <div\n                        className='text-Grey800 mb-5'\n                        style={{fontSize: '16px', fontWeight: '600'}}\n                    >\n                        Documents to Upload\n                        <>\n                            {!more2 ? (\n                                <img\n                                    style={{\n                                        marginLeft: '17px',\n                                        marginTop: '-3px',\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={() => setMore2(true)}\n                                    src={More1}\n                                ></img>\n                            ) : (\n                                <img\n                                    style={{\n                                        marginLeft: '17px',\n                                        marginTop: '-3px',\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={() => setMore2(false)}\n                                    src={More}\n                                ></img>\n                            )}\n                        </>\n                    </div>\n                    <div className='ms-sm-10 mb-10'>\n                        {more2 && (\n                            <>\n                                <div className='text-cmGrey800 mb-2' style={{fontWeight: '600  '}}>\n                                    Dynamic Fields\n                                </div>\n                                {configurationData?.document_to_update?.map((item, index) => (\n                                    <div key={index}>\n                                        <div className='row align-items-center gap-5 mb-5'>\n                                            <div className='col-sm-5'>\n                                                <CustomInput\n                                                    type={INPUT_TYPE.text}\n                                                    placeholder='Enter'\n                                                    value={item?.field_name}\n                                                    name={'field_name'}\n                                                    onChange={(e) =>\n                                                        handleFieldsChange(\n                                                            'document_to_update',\n                                                            e.target.name,\n                                                            index,\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                />\n                                            </div>\n                                            <div className='col-sm-5'>\n                                                <CustomDropdown\n                                                    options={[\n                                                        {name: 'Optional', value: 'optional'},\n                                                        {name: 'Mandatory', value: 'required'},\n                                                    ]}\n                                                    searching={false}\n                                                    value={item?.field_required}\n                                                    name={'field_required'}\n                                                    onChange={(e) =>\n                                                        handleFieldsChange(\n                                                            'document_to_update',\n                                                            e.target.name,\n                                                            index,\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                />\n                                            </div>\n                                            <div className='col-sm text-center'>\n                                                <CustomDelete\n                                                    onClick={() =>\n                                                        onDeleteField('document_to_update', index)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {configurationData?.document_to_update?.length - 1 ===\n                                        index ? null : (\n                                            <hr />\n                                        )}\n                                    </div>\n                                ))}\n\n                                <div className='d-flex align-items-center text-cmBlue-Crayola gap-1'>\n                                    <span\n                                        className='cursor-pointer'\n                                        onClick={() =>\n                                            handleAddAnotherPersonalDetail('document_to_update')\n                                        }\n                                    >\n                                        <span className='bi bi-plus-square  fs-4'></span>{' '}\n                                        <span className='fw-bold text-decoration-underline'>\n                                            {' '}\n                                            Add Another\n                                        </span>\n                                    </span>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ConfigureEmploye\n","import React from 'react'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\n\nconst PipeLineCard = () => {\n    return (\n        <div className='bg-white shadow'>\n            {/* header */}\n            <div className='p-5 mb-10'>\n                {' '}\n                <div\n                    style={{height: '43px', borderRadius: '20px'}}\n                    className='w-md-300px '\n                    id='kt_chat_contacts_header'\n                >\n                    <form\n                        className='position-relative'\n                        style={{borderRadius: '90px'}}\n                        autoComplete='off'\n                    >\n                        {/* PIPELINE Table Search Input */}\n                        <CustomInput\n                            type={INPUT_TYPE.search}\n                            name='search'\n                            //    onChange={onChangeSearch}\n                        />\n                        \n                    </form>\n                </div>\n            </div>\n\n            <div className=''></div>\n        </div>\n    )\n}\n\nexport default PipeLineCard\n","import {Navigate, Routes, Route, Outlet} from 'react-router-dom'\nimport {PageTitle} from '../../../../../_metronic/layout/core'\nimport OnBoardingTable from '../onBoardingEmp/OnBoardingTable'\nimport LeadsTable from '../hiringLeads/LeadsTable'\nimport HiringProcessPage from '../hiringProcess/HiringProcessPage'\nimport HiringHeader from './HiringHeader'\nimport ConfigureEmploye from '../onBoardingEmp/ConfigureEmploye'\nimport PipeLineCard from '../pipeLine/PipeLineCard'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../accessRights/AccessRights'\nimport useCustomAccessRights, {\n    allPermissionsAccess,\n} from '../../../../../accessRights/useCustomAccessRights'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard/',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n    {\n        title: 'Hiring/',\n        path: '/hiring/hiring-process',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst HiringRoutes = () => {\n    const {hiringAccess} = useCustomAccessRights()\n\n    return (\n        <div className='px-sm-10' style={{marginTop: -20}}>\n            <Routes>\n                <Route\n                    element={\n                        <>\n                            <HiringHeader />\n                            <Outlet />\n                        </>\n                    }\n                >\n                    <Route\n                        path='hiring-process'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Hiring Process\n                                </PageTitle>\n                                {/* <Overview /> */}\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.hiring.hiringProgress.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <HiringProcessPage />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='hiring-leads'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Leads</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.hiring.leads.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <LeadsTable />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n\n                    <Route\n                        path='hiring-pipeline'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Pipeline</PageTitle>\n                                <PipeLineCard />\n                            </>\n                        }\n                    />\n\n                    <Route\n                        path='hiring-onBoardingEmployees'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Onboarding Employees\n                                </PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.hiring.onboardingEmployees\n                                            .view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <OnBoardingTable />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='cost-center'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Cost Center</PageTitle>\n                                {/* <CostCenter /> */}\n                            </>\n                        }\n                    />\n                    <Route\n                        path='hiring-onBoardingEmployees/config'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Configuration\n                                </PageTitle>\n                                <AccessRights\n                                    customCondition={hiringAccess.showConfigurationButtonAccess}\n                                >\n                                    <ConfigureEmploye />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n\n                    <Route index element={<Navigate to='/hiring' />} />\n                </Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default HiringRoutes\n","import {RadioButton} from 'primereact/radiobutton'\nimport React from 'react'\n\nconst CustomRadioButton = ({label, name, value, isChecked, handleChange, children, childClass}) => {\n    return (\n        <div\n            className='form-check form-check-custom form-check-solid'\n            style={{fontFamily: 'Manrope', fontWeight: 600}}\n        >\n            {/* <input className='form-check-input' type='radio' value='' id='flexRadioDefault' /> */}\n            <RadioButton\n                inputId='ingredient2'\n                name={name}\n                value={value}\n                onChange={handleChange}\n                checked={isChecked}\n            />\n            {label ? (\n                <label htmlFor='ingredient2' className='ms-3'>\n                    {label}\n                </label>\n            ) : (\n                <div className={`ms-3 ${childClass}`}> {children}</div>\n            )}\n        </div>\n    )\n}\n\nexport default CustomRadioButton\n","import {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isUserManagerSelector, isUserSuperAdminSelector} from '../../redux/selectors/AuthSelectors'\n\nconst RedirectToEmployeeProfile = ({\n    employeeId = null,\n    children,\n    underline = true,\n    className = null,\n    style = null,\n    target = '_self',\n}) => {\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const isManager = useSelector(isUserManagerSelector)\n\n    const hasAccess = employeeId && (isSuperAdmin || isManager)\n    return (\n        <Link\n            to={hasAccess ? `/user/personal-info?employeeId=${employeeId}` : ''}\n            target={''}\n            state={{\n                employee_id: employeeId,\n            }}\n            style={{\n                pointerEvents: hasAccess ? 'auto' : 'none',\n            }}\n        >\n            <span\n                className={`${hasAccess ? 'cursor-pointer' : ''} text-cmGrey800 d-flex align-items-center ${className}`}\n                style={{\n                    fontWeight: 700,\n                    ...(hasAccess && underline ? {textDecoration: 'underline'} : null),\n                    ...style, \n                }}\n            >\n                {children}\n            </span>\n        </Link>\n    )\n}\n\nexport default RedirectToEmployeeProfile\n","import {useCallback, useMemo, useState} from 'react'\n\nconst useFilterButton = (initialFilter, onApplyFilter, onResetFilter) => {\n    const [storedFilteredData, setStoredFilteredData] = useState(initialFilter)\n    const [filterData, setFilterData] = useState(initialFilter)\n\n    const onApplyClick = useCallback(() => {\n        onApplyFilter(filterData)\n        setStoredFilteredData(filterData)\n    }, [filterData, onApplyFilter])\n\n    const onResetClick = useCallback(() => {\n        onResetFilter()\n        setFilterData(initialFilter)\n        onApplyFilter(initialFilter)\n        setStoredFilteredData(storedFilteredData)\n    }, [initialFilter, onApplyFilter, onResetFilter, storedFilteredData])\n\n    const onCancelClick = useCallback(() => {\n        setFilterData(storedFilteredData)\n    }, [storedFilteredData])\n\n    const filterProps = useMemo(\n        () => ({\n            onApplyClick,\n            onResetClick,\n            onCancelClick,\n        }),\n        [onApplyClick, onCancelClick, onResetClick]\n    )\n\n    return [filterProps, filterData, setFilterData]\n}\n\nexport default useFilterButton\n"],"names":["_ref","initialFilter","onApplyFilter","resetFilter","office_id","FILTER_KEYS","HIRING_STATUS","name","value","HIRING_PROCESS_STATUS","filterProps","filterData","setFilterData","useFilterButton","positionList","useSelector","getPositionsSelector","stateList","useOfficeLocation","managerList","setManagerList","useState","onChangeInputData","useCallback","e","val","_e$target","_e$target2","target","useEffect","getAllManagerListService","then","res","data","finally","managerNames","useMemo","map","item","concat","first_name","last_name","_jsx","className","children","_jsxs","CustomFilterButton","style","fontSize","fontWeight","CustomDropdown","label","onChange","_e$target3","status_filter","options","displayKey","valueKey","position_filter","manager_filter","other_status_filter","OnBoardingTable","dispatch","useDispatch","open","setOpen","filtereDataRef","useRef","tableData","setTableData","totalData","setTotalData","loader","setLoader","id","setid","showHireNowModal","setShowHireNowModal","selectedLocation","setSelectedLocation","searchValue","setSearchValue","sortValue","setSortValue","sortingOrder","setSortingOrder","page","filter","current","getPositionsAction","menu","selectedEmployee","setSelectedEmployee","menuItems","command","onDeleteDraftTable","CustomDialog","deleteOnBoardingEmployeeListService","CustomToast","getonbording","catch","getErrorMessageFromResponse","navigate","useNavigate","filters","getOnBoardingEmployeeListService","sort","sort_val","_res$data","_res$data2","last_page","delaySearch","debounce","onHireNowPress","handleHireNowModalClose","onExportOnBoardingData","body","exportOnBoardingEmployeeListService","fileName","moment","Date","format","downloadAnyFileHelper","err","_Fragment","fontFamily","borderRadius","boxShadow","alignSelf","showClear","autoComplete","CustomInput","type","INPUT_TYPE","OnboardingEmployeeFilter","onResetFilter","AccessRights","customCondition","allPermissionsAccess","CustomButton","buttonSize","BUTTON_SIZE","buttonType","BUTTON_TYPE","buttonLabel","onClick","icon","TABLE_BORDER","title","CustomSortSvg","length","index","OnboardEmployeeRow","colSpan","textAlign","paddingTop","paddingBottom","CustomLoader","full","visible","Pagination","setPage","pg","totalPages","HireNew","show","handleClose","HireNowModal","_item$id","_item$sub_position_na","_item$office_name","_item$manager_name","_formattedPhoneNumber","_ref2","_item$other_doc_statu","_ref3","_item$other_doc_statu2","height","state","moduleType","sub_position_name","office_name","manager_name","formattedPhoneNumber","mobile_no","includes","status_id","status_name","textDecoration","isPermittedForAccess","permission","PERMISSIONS_GROUP","PERMISSION_TYPE","forManager","other_doc_status","w9","backgroundVerification","getValidDate","last_update","Number","TieredMenu","model","popup","ref","breakpoint","toggle","allState","getAllStatesAndCitiesSelector","resetFilterData","onResetClick","home_state_filter","recruter_filter","sources","LeadsTable","_tableData$data","_tableData$data2","_tableData$data3","hireOpen","setHireOpen","statusPopup","setStatusPopup","hireData","setHireData","openAssigne","setOpenAssigne","updatedStatus","setUpdatedStatus","userData","setUserData","editData","setEditData","search","setSearch","searchVal","setSearchVal","loading","setLoading","statusModal","setStatusModal","handleHire","_data$recruiter","_data$recruiter2","_data$recruiter3","hireDirect","arguments","undefined","email","recruiter_id","recruiter","recruiter_name","getHiringList","getHireLeadsListService","handleAction","changeLeadStatusService","handleInterviewDone","deleteLeadService","handleReconsider","getOptions","status","push","interview_time","onExportLeadsData","exportLeadsDataService","position","Dialog","header","width","background","onHide","clsx","LeadsTableFilter","updatedFilter","applyFilter","_item$source","_item$state$name","_item$state","_item$reporting_manag","_item$reporting_manag2","source","reporting_manager","searching","placeholder","handleHireClose","lead_id","prefieldData","AssignModal","handleAssignePopup","leadId","AddNewLeadsPopUp","getList","preData","SchedulePopup","handleStatusPopup","changeStatus","statusValue","Promise","resolve","reject","HiringProgressCards","description","stats","labelColor","textColor","borderColor","heading","content","fontStyle","getCardData","btn","setBtn","setValue","startDate","setStartDate","endDate","setEndDate","hiringListApi","from_date","to_date","order_by","getHiringProgressListService","col1","col2","col3","every","CustomDatePicker","event","startDateChange","maxDate","endDateChange","minDate","i","_item$name","_item$active_lead","_item$rejected","_item$hired","_item$conversion_rate","RedirectToEmployeeProfile","employeeId","CustomImage","src","image","active_lead","rejected","hired","last_hired","conversion_rate","current_page","OfficeChart","load","locationList","chartRef","mode","useThemeMode","chartData","setChartData","getHiringProgressChartService","chart","refreshChart","destroy","parseInt","getCSS","ApexCharts","getCSSVariableValue","keysData","Object","keys","lead_count","_chartData$item","hired_count","_chartData$item2","series","toolbar","zoom","enabled","autoScaleYaxis","plotOptions","bar","horizontal","columnWidth","legend","dataLabels","stroke","colors","xaxis","categories","axisBorder","axisTicks","labels","yaxis","fill","opacity","responsive","states","normal","hover","active","allowMultipleDataPointsSelection","tooltip","y","formatter","grid","strokeDashArray","lines","getChartOptions","render","class","color","RecentlyHiredList","setData","getRecentlyHiredListService","display","alignItems","justifyContent","position_name","borderTop","location","dates","setDates","eventData","setEventData","eventDates","setEventDates","startOf","endOf","start_date","end_date","getHiringCalendarEventsService","fullDate","event_date","day","date","month","year","Calendar","dateTemplate","_date","currentEvent","find","_date2","_date3","hasEvent","border","onViewDateChange","inline","showWeek","selectionMode","panelClassName","panelStyle","HiringProcessPage","_cardsData$active_lea","_cardsData$total_lead","_cardsData$Hired","cardsData","setCardsData","officeList","total_lead","Hired","HiringTable","HiringCalendar2","HiringHeader","useLocation","fontsFamily","Link","pathname","to","selectedArr","ConfigureEmploye","_selectedArr$length","_selectedArr2","_configurationData$em","_configurationData$ad","_configurationData$do","more","setMore","more1","setMore1","more2","setMore2","configurationData","setConfigurationData","templateDropdown","setTemplateDropdown","contractToSignData","setContractToSignData","checkedAll","setCheckedAll","getConfigurationData","getTemplateListByCategoryService","category_id","template_name","getOnBoardingConfigurationAction","getOnBoardingConfigurationService","_data$employee_person","_data$employee_person2","_data$additional_info","_data$additional_info2","employee_personal_detail","_res$attribute_option","attribute_option","JSON","parse","additional_info_for_employee_to_get_started","_res$attribute_option2","getAgreementData","select_agreement_to_sign","selectedAgreement","_res$data3","SignDataArr","split","checkedData","isChecked","toString","handleAddAnotherPersonalDetail","dumbData","field_name","field_type","field_required","configuration_id","addDropDownFields","_dumbData$name","_dumbData$name$index","_dumbData$name$index$","_dumbData$name2","_dumbData$name2$index","onDeleteDropdownField","itemIndex","subIndex","_configurationData$na","tempData","_item$attribute_optio","subItem","handleFieldsChange","main_name","handleDropdownFieldsChange","handleChange","onDeleteField","_configurationData$ma","onSaveConfiguration","_bodyData$employee_pe","_bodyData$additional_","bodyData","stringify","addOnBoardingConfigurationService","prefix","id_code","id_code_no_to_start_from","select_offer_letter_to_send","CustomCheckbox","checked","_selectAllData$filter","selectAllData","item2","join","selectAllCheckbox","handleChceckbox","_updatedData","_updatedData2","_updatedData2$filter","_selectedArr","updatedData","marginLeft","cursor","More","More1","_item$attribute_optio2","_item$attribute_optio3","DYNAMIC_FIELD_TYPE","CustomDelete","marginTop","_item$attribute_optio4","_item$attribute_optio5","document_to_update","_configurationData$do2","PipeLineCard","profileBreadCrumbs","path","isSeparator","isActive","HiringRoutes","hiringAccess","useCustomAccessRights","Routes","Route","element","Outlet","PageTitle","breadcrumbs","showPlaceHolder","showConfigurationButtonAccess","Navigate","childClass","RadioButton","inputId","htmlFor","underline","isSuperAdmin","isUserSuperAdminSelector","isManager","isUserManagerSelector","hasAccess","employee_id","pointerEvents","storedFilteredData","setStoredFilteredData","onApplyClick","onCancelClick"],"sourceRoot":""}