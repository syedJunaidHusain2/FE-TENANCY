{"version":3,"file":"static/js/4230.cec9d15a.chunk.js","mappings":"2VAmCA,MAAMA,EAAmBC,IAA4C,IAADC,EAAAC,EAAA,IAA1C,KAACC,EAAI,YAAEC,EAAW,QAAEC,EAAO,QAAEC,GAAQN,EAC3D,MAAOO,EAAWC,IAAgBC,EAAAA,EAAAA,UAAgB,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASI,aAC7CC,EAAUC,IAAeH,EAAAA,EAAAA,UAAgB,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASO,YAC3CC,EAAOC,IAAYN,EAAAA,EAAAA,UAAgB,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASU,YACrCC,EAASC,IAAcT,EAAAA,EAAAA,UAAgB,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASa,WACzCC,EAAWC,IAAgBZ,EAAAA,EAAAA,UAAgB,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASgB,WAC7CC,EAAOC,IAAYf,EAAAA,EAAAA,UAAgB,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASiB,QACrCE,EAASC,IAAcjB,EAAAA,EAAAA,WAAS,IAChCkB,EAAkBC,IAAuBnB,EAAAA,EAAAA,UAASoB,EAAAA,IACnDC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BC,GAAgBC,EAAAA,EAAAA,SAAO,GACvBC,GAAWJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEvBC,EAAY,GAAAC,OAAMC,OAAOC,SAASC,OAAM,sBAAAH,OAAmC,OAAdR,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,IAEnF,IAAIC,EAAO,CACPjC,WAAYH,EACZM,UAAWF,EACXY,MAAOA,EACPP,WAAW4B,EAAAA,EAAAA,IAA2B9B,GACtCQ,SAAUF,EACVD,SAAUF,EACV4B,OAAQC,EAAAA,GAAAA,SACRC,cAAe,sBACfC,qBAAoC,OAAdlB,QAAc,IAAdA,GAAAA,EAAgBmB,WAClB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,GACU,QADRzC,EACJ,OAAd6B,QAAc,IAAdA,OAAc,EAAdA,EAAgBoB,kBAAU,IAAAjD,EAAAA,EAAkB,OAAd6B,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,KAExDS,EAAAA,EAAAA,YAAU,KACFlB,EAAcmB,UACdnB,EAAcmB,SAAU,EAExB,GAEL,CAAC7C,EAAWI,EAAUY,IACzB,MAAM8B,EAAWA,KACb,MAAMC,GAAmBC,EAAAA,EAAAA,IAAsBZ,GAE/C,OADAf,EAAoB0B,IACbE,EAAAA,EAAAA,IAAmBF,EAAiB,EA+CzCG,EAAeC,IACjBA,EAAEC,iBACEN,MACA3B,GAAW,GACXkC,IAEJ,EAEEA,EAAUA,MACZC,EAAAA,EAAAA,KAAsBlB,GACjBmB,MAAMC,IACHC,EAAAA,EAAAA,QAAoB,iCACpB3D,IACAD,GAAa,IAEhB6D,OAAOP,IACJM,EAAAA,EAAAA,OAAkBE,EAAAA,EAAAA,IAA4BR,GAAG,IAEpDS,SAAQ,KACLzC,GAAW,EAAM,GACnB,EAEJ0C,EAAcV,IAChBA,EAAEC,iBACF,IAAIU,EAAa,CACb3D,WAAYH,EACZM,UAAWF,EACXY,MAAOA,EACPP,WAAW4B,EAAAA,EAAAA,IAA2B9B,GACtCQ,SAAUF,EACVD,SAAUF,EACV4B,OAAe,OAAPvC,QAAO,IAAPA,OAAO,EAAPA,EAASuC,OACjBG,qBAA6B,OAAP1C,QAAO,IAAPA,OAAO,EAAPA,EAASgE,cAE/BjB,MACA3B,GAAW,IACX6C,EAAAA,EAAAA,KAAgC,OAAPjE,QAAO,IAAPA,OAAO,EAAPA,EAASoC,GAAI2B,GACjCP,MAAMC,IACHC,EAAAA,EAAAA,QAAoB,wBACpB3D,IACAD,GAAa,IAEhB+D,SAAQ,KACLzC,GAAW,EAAM,IAE7B,GAEG8C,EAAWC,IAAgBhE,EAAAA,EAAAA,UAAS,IAU3C,OATA0C,EAAAA,EAAAA,YAAU,YACNuB,EAAAA,EAAAA,OACKZ,MAAMC,IACHU,EAAaV,EAAIY,KAAK,IAEzBV,OAAOP,IACJe,EAAa,GAAG,GAE5B,GAAG,KAECG,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CACR1E,KAAMA,EACN2E,OAAQ1E,EACR2E,MAAOzE,EAAU,cAAgB,eACjC0E,SAAS,MAAKC,SAAA,EAEdC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACC,QAAS3D,EAAS4D,MAAI,EAACC,KAAM,OAG3CV,EAAAA,EAAAA,MAAA,OACIW,UAAU,uGACVC,MAAO,CAACC,aAAc,OAAQC,WAAYC,EAAAA,EAAAA,SAAqBV,SAAA,EAG/DC,EAAAA,EAAAA,KAAA,OACIM,MAAO,CAACI,OAAQ,QAASC,MAAO,SAChCN,UAAU,gCAA+BN,UAEzCC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CAACC,MAAO1D,EAAckD,UAAU,mBAG3CX,EAAAA,EAAAA,MAAA,OAAKW,UAAU,kCAAiCN,SAAA,EAC5CL,EAAAA,EAAAA,MAAA,OAAKW,UAAU,gBAAeN,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OACIK,UAAU,4BACVC,MAAO,CAACQ,SAAU,OAAQC,WAAY,KAAKhB,SAC9C,wBAGDC,EAAAA,EAAAA,KAAA,OACIK,UAAU,iBACVC,MAAO,CAACQ,SAAU,OAAQC,WAAY,IAAKC,WAAY,QAAQjB,SAClE,qGAKLL,EAAAA,EAAAA,MAAA,OACIW,UAAU,yBACVC,MAAO,CAACQ,SAAU,OAAQC,WAAY,KAAKhB,SAAA,EAE3CC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CACDZ,UAAU,+DACVa,GAAE,qBAAA9D,OAAqC,OAAdR,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,IACzC2D,OAAO,SAAQpB,SAEd5C,KAELuC,EAAAA,EAAAA,MAAA,OAAKW,UAAU,kCAAiCN,SAAA,EAC5CC,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CACFC,QAASA,KACLC,UAAUC,UAAUC,UAAUrE,GAC9B2B,EAAAA,EAAAA,QAAoB,cAAc,EAEtC2C,KAAK,6CACLC,aAAa,kCAEjB1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CACNlC,KAAM,CACFmC,KAAM,qBACNC,IAAK1E,EACL0C,MAAO,WACTE,UAEFC,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CACFK,KAAK,0CACLC,aAAa,gDAQrC1B,EAAAA,EAAAA,KAAA,OACIK,UAAU,kCACVC,MAAO,CAACS,WAAY,MAAOD,SAAU,QAAQf,SAChD,qBAIDL,EAAAA,EAAAA,MAAA,QACIW,UAAU,wCACVyB,SAAU1G,EAAU8D,EAAaX,EAAYwB,SAAA,EAE7CL,EAAAA,EAAAA,MAAA,OAAKW,UAAU,cAAcC,MAAO,CAACE,WAAY,UAAWM,SAAU,QAAQf,SAAA,EAG1EL,EAAAA,EAAAA,MAAA,OAAKW,UAAU,WAAUN,SAAA,EAErBC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAAQN,UACnBC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAW,CACRC,MAAO,aACPC,UAAQ,EACRC,YAAY,mBACZC,SAAW3D,IACPlD,EAAakD,EAAE2C,OAAON,MAAM,EAEhCuB,aAA8B,OAAhB3F,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB4F,UAChCxB,MAAOxF,EACPiH,MAAO,mBAKftC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAAQN,UACnBC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAW,CACRC,MAAO,YACPC,UAAQ,EACRC,YAAY,kBACZC,SAAW3D,IACP9C,EAAY8C,EAAE2C,OAAON,MAAM,EAG/BuB,aAA8B,OAAhB3F,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB8F,SAChC1B,MAAOpF,EACP6G,MAAO,sBAMnBtC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,GAAEN,UACbC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMN,UACjBC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAW,CACRC,MAAO,QACPC,UAAQ,EACRC,YAAY,cACZC,SAAW3D,IACPlC,EAASkC,EAAE2C,OAAON,MAAM,EAE5BuB,aAA8B,OAAhB3F,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBJ,MAChCwE,MAAOxE,EACPmG,KAAMC,EAAAA,GAAAA,aAKlBzC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,GAAEN,UACbC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMN,UACjBC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAW,CACRC,MAAO,eACPnB,MAAOjF,EACPuG,SAAW3D,GAAM3C,EAAS2C,EAAE2C,OAAON,OACnCqB,YAAY,uBACZM,KAAMC,EAAAA,GAAAA,cAMlBzC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMN,UACjBC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAc,CACXV,MAAO,2CACPW,SAAS,KACTC,QAAS3F,EACT4D,MAAO3E,EACPiG,SAAW3D,GAAMrC,EAAaqC,EAAE2C,OAAON,OACvCuB,aAAc,QAItBpC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,GAAEN,UACbC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMN,UACjBC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAW,CACRC,MAAO,oBACPE,YACkB,OAAdtF,QAAc,IAAdA,GAAAA,EAAgBmB,WAAU,GAAAX,OACH,OAAdR,QAAc,IAAdA,OAAc,EAAdA,EAAgBpB,WAAU,KAAA4B,OAAkB,OAAdR,QAAc,IAAdA,OAAc,EAAdA,EAAgBjB,WACrB,QAD8BX,EAC5C,OAAd4B,QAAc,IAAdA,OAAc,EAAdA,EAAgBiG,oBAAY,IAAA7H,EAAAA,GACd,OAAd4B,QAAc,IAAdA,OAAc,EAAdA,EAAgBpB,aAA2B,OAAdoB,QAAc,IAAdA,OAAc,EAAdA,EAAgBjB,WAEvDmH,UAAU,SAKtB9C,EAAAA,EAAAA,KAAA,OAAKK,UAAU,GAAEN,SACZ3E,GASG4E,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,KAEA/C,EAAAA,EAAAA,KAAA,OAAKK,UAAU,GAAEN,UACbC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAW,CACRC,MAAO,WACPE,YAAY,eACZM,KAAMC,EAAAA,GAAAA,SACNN,SAAW3D,IACPxC,EAAWwC,EAAE2C,OAAON,MAAM,EAE9BA,MAAO9E,YAM3BiE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2DAA0DN,UACrEC,EAAAA,EAAAA,KAACgD,EAAAA,GAAY,CACTF,SAAUvG,EACV0G,WAAYC,EAAAA,GAAAA,QACZC,QAAS,QACTC,YAAahI,EAAU,SAAW,SAClCiG,QAAU7C,GAAOpD,EAAU8D,EAAWV,GAAKD,EAAYC,YAIzD,C,4MChXH6E,SAASC,eAAe,gBAAkBD,SAAS5F,KAAtE,MAEM8F,EAAgBzI,IAA4E,IAAD0I,EAAAC,EAAA,IAA1E,KAACxI,EAAI,YAAEC,EAAW,SAAEwI,EAAQ,cAAEC,EAAgBA,SAAQ,aAAEC,GAAa9I,EACxF,MAAO+I,EAAWC,IAAgBvI,EAAAA,EAAAA,UAAS,OACpCwI,EAAMC,IAAWzI,EAAAA,EAAAA,UAAS,KAC1B0I,EAAMC,IAAW3I,EAAAA,EAAAA,UAAS,KAC1B4I,EAAmBC,IAAwB7I,EAAAA,EAAAA,UAAS,KACpDgB,EAASC,IAAcjB,EAAAA,EAAAA,WAAS,IAChC8I,EAAiBC,IAAsB/I,EAAAA,EAAAA,WAAS,IAChDgJ,EAAeC,IAAoBjJ,EAAAA,EAAAA,UAASkJ,EAAAA,IAC7C7H,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,KAC5B4H,EAAsBC,IAA2BpJ,EAAAA,EAAAA,UAAuB,OAAdqB,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,IAM3EoH,EAAkBpG,IACpB,MAAMf,EAAO,CACToH,QAAiB,OAARnB,QAAQ,IAARA,OAAQ,EAARA,EAAUlG,GACnBsH,QAAuB,OAAdlI,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,GACzBuG,MAAMgB,EAAAA,EAAAA,IAAahB,EAAM,cACzBiB,SAAUf,GAER7F,GAAmB6G,EAAAA,EAAAA,IAA4BxH,GACrD+G,EAAiBpG,IACbE,EAAAA,EAAAA,IAAmBF,KACnB5B,GAAW,IACX0I,EAAAA,EAAAA,KAAyBzH,GACpBmB,MAAK,KACFE,EAAAA,EAAAA,QAAoB,uBACpB5D,IACAyI,IACAC,EACY,OAARF,QAAQ,IAARA,GAAAA,EAAUyB,eACJvH,EAAAA,GAAAA,qBACAA,EAAAA,GAAAA,mBACT,IAEJmB,OAAOP,IACJM,EAAAA,EAAAA,OAAkBE,EAAAA,EAAAA,IAA4BR,GAAG,IAEpDS,SAAQ,KACLzC,GAAW,EAAM,IAE7B,EAGE4I,GAAkBC,EAAAA,EAAAA,UAAQ,KAC5B,MAAMC,EAAO,CACT,CACIC,KAAK,GAADnI,OAAmB,OAAdR,QAAc,IAAdA,OAAc,EAAdA,EAAgBpB,WAAU,KAAA4B,OAAkB,OAAdR,QAAc,IAAdA,OAAc,EAAdA,EAAgBjB,UAAS,QAChE6B,GAAkB,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,KAGM,IAADgI,EAAAC,EAAd,OAAd7I,QAAc,IAAdA,GAAAA,EAAgBmB,YACjBuH,EAAKI,KAAK,CACNH,KAAK,GAADnI,OAAa,OAARsG,QAAQ,IAARA,GAA2B,QAAnB8B,EAAR9B,EAAUiC,yBAAiB,IAAAH,OAAnB,EAARA,EAA6BhK,WAAU,KAAA4B,OAAY,OAARsG,QAAQ,IAARA,GAA2B,QAAnB+B,EAAR/B,EAAUiC,yBAAiB,IAAAF,OAAnB,EAARA,EAA6B9J,UAAS,wBAC1F6B,GAAY,OAARkG,QAAQ,IAARA,OAAQ,EAARA,EAAU5F,uBAGtB,OAAOwH,CAAI,GACZ,CACe,OAAd1I,QAAc,IAAdA,OAAc,EAAdA,EAAgBpB,WACF,OAAdoB,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,GACF,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBmB,WACF,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBjB,UACR,OAAR+H,QAAQ,IAARA,GAA2B,QAAnBF,EAARE,EAAUiC,yBAAiB,IAAAnC,OAAnB,EAARA,EAA6BhI,WACrB,OAARkI,QAAQ,IAARA,GAA2B,QAAnBD,EAARC,EAAUiC,yBAAiB,IAAAlC,OAAnB,EAARA,EAA6B9H,UACrB,OAAR+H,QAAQ,IAARA,OAAQ,EAARA,EAAU5F,uBAGR8H,GAA+BP,EAAAA,EAAAA,UAAQ,IAClCD,EAAgBS,MAAMC,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMtI,KAAMkH,KACnD,CAACU,EAAiBV,IAiCrB,OACI1E,EAAAA,EAAAA,KAACL,EAAAA,EAAW,CAAC1E,KAAMA,EAAM2E,OAAQ1E,EAAa2E,MAAO,qBAAsBC,SAAS,MAAKC,UACrFL,EAAAA,EAAAA,MAAA,OAAKW,UAAU,GAAGC,MAAO,CAACyF,SAAU,YAAYhG,SAAA,EAC5CC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACE,MAAI,EAACD,QAAS3D,KAE5ByD,EAAAA,EAAAA,KAAA,QAAM8B,SAAU8C,EAAe7E,UAC3BL,EAAAA,EAAAA,MAAA,OACIW,UAAU,4BACVC,MAAO,CAACE,WAAY,UAAWM,SAAU,QAAQf,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMN,UACjBC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAc,CACXC,SAAS,KACTX,MAAO,4BACPC,UAAQ,EACR+D,WAAW,EACXpD,QAASwC,EACTvE,MAAO6D,EACPvC,SAAW3D,IAAO,IAADyH,EACbtB,EAAyB,OAADnG,QAAC,IAADA,GAAS,QAARyH,EAADzH,EAAG2C,cAAM,IAAA8E,OAAR,EAADA,EAAWpF,OACnCmD,EAAQ,MACRF,EAAa,MACbI,EAAQ,KAAK,EAEjBhC,YAAa,+BAGrBlC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMN,UACjBC,EAAAA,EAAAA,KAACkG,EAAAA,EAAgB,CACblE,MAAO,OACPC,UAAQ,EACRC,YAAa,iBACbrB,MAAO,KACPsB,SAAW3D,IAhEjB2H,KAClB7B,GAAmB,GACnB,MAAM8B,GAAYrB,EAAAA,EAAAA,IAAa,IAAIsB,KAAQ,cACrCC,GAAYvB,EAAAA,EAAAA,IAAaoB,EAAc,cACvC1I,EAAO,CACTqH,QAAqC,OAA5Bc,QAA4B,IAA5BA,OAA4B,EAA5BA,EAA8BpI,GACvCuG,KAAMuC,IAEVC,EAAAA,EAAAA,KAA4B9I,GACvBmB,MAAMC,IAAS,IAAD2H,EAAAC,EAAAC,EACX,IAAIC,GACG,OAAH9H,QAAG,IAAHA,GAAS,QAAN2H,EAAH3H,EAAKY,YAAI,IAAA+G,OAAN,EAAHA,EAAWI,QAAS,EAAO,OAAH/H,QAAG,IAAHA,GAAS,QAAN4H,EAAH5H,EAAKY,YAAI,IAAAgH,OAAN,EAAHA,EAAWI,KAAKf,IAAI,CAAOjF,MAAOiF,MAAU,GAC3C,IAADgB,EAAAC,EAUrBC,EAVHZ,GAAaE,GACbK,EAA2B,QAAfG,EAAGH,SAAY,IAAAG,OAAA,EAAZA,EAAcG,QAAQnB,IAAU,IAADoB,EAAAC,EAC1C,MAAMC,EAAc,OAAJtB,QAAI,IAAJA,GACC,QADGoB,EAAJpB,EAAMjF,MACjBwG,MAAM,cAAM,IAAAH,GAAK,QAALC,EADDD,EACI,UAAE,IAAAC,OADF,EAAJA,EAEVG,QAAQ,KAAM,OACfA,QAAQ,KAAM,OAEnB,OADoB,IAAIjB,KAAK,GAADjJ,OAAIgJ,EAAS,KAAAhJ,OAAIgK,IACxB,IAAIf,IAAM,IAEnCjC,EAAiC,QAAb2C,EAACJ,SAAY,IAAAI,EAAAA,EAAI,KAErC3C,EAAiC,QAAb4C,EAACL,SAAY,IAAAK,EAAAA,EAAI,IAEzC5C,EAAiC,QAAbsC,EAACC,SAAY,IAAAD,EAAAA,EAAI,GAAG,IAE3CzH,SAAQ,IAAMqF,GAAmB,KACtCN,EAAQsC,EAAU,EAqCUiB,CAAa/I,EAAE2C,OAAON,OACtBiD,EAAa,KAAK,EAEtBzD,UAAU,QACV+B,aAA2B,OAAbmC,QAAa,IAAbA,OAAa,EAAbA,EAAeiD,cAC7BC,QAAS,IAAIpB,UAGrBrG,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMN,UACjBC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAc,CACXV,MAAO,YACPC,UAAQ,EACRW,QAASuB,EACTtD,MAAOgD,EACP6D,WAAW,QACXvF,SAAW3D,IACPsF,EAAatF,EAAE2C,OAAON,OACtBqD,EAAQ1F,EAAE2C,OAAON,MAAM,EAE3BqB,YACImC,EACM,cACiB,OAAjBF,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmByC,QAAS,EAC5B,mBACA,yBAEVxE,aAA2B,OAAbmC,QAAa,IAAbA,OAAa,EAAbA,EAAeoD,mBAIrC3H,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaN,UACxBC,EAAAA,EAAAA,KAACgD,EAAAA,GAAY,CACTC,WAAYC,EAAAA,GAAAA,QACZE,YAAY,WACZ/B,QAAU7C,GAlKhBA,KAClBA,EAAEC,iBACFmG,GAAgB,EAgKwBgD,CAAapJ,gBAMvC,C,yRC/KtB,MA0aA,EA1akBqJ,KAAO,IAADC,EAAAC,EAAAC,EACpB,MAAOC,EAAMC,IAAW3M,EAAAA,EAAAA,WAAS,IAC1B4M,EAAUC,IAAe7M,EAAAA,EAAAA,WAAS,IAClC8M,EAAaC,IAAkB/M,EAAAA,EAAAA,WAAS,IACxCgN,EAAWC,IAAgBjN,EAAAA,EAAAA,UAAS,KACpCkN,EAAUC,IAAenN,EAAAA,EAAAA,UAAS,KAClCoN,EAAaC,IAAkBrN,EAAAA,EAAAA,WAAS,IAExCsN,EAAWC,IAAgBvN,EAAAA,EAAAA,UAAS,OACpCwN,EAAMC,IAAWzN,EAAAA,EAAAA,UAAS,IAC1B0N,EAAWC,IAAgB3N,EAAAA,EAAAA,UAAS,KACpC4N,EAAQC,IAAa7N,EAAAA,EAAAA,UAAS,OAC9B8N,EAAQC,IAAa/N,EAAAA,EAAAA,UAAS,KAC9BgB,EAASC,IAAcjB,EAAAA,EAAAA,WAAS,IAGhCwI,EAAMC,IAAWzI,EAAAA,EAAAA,UAAS,KAC1B0I,EAAMC,IAAW3I,EAAAA,EAAAA,UAAS,KAC1BmI,EAAU6F,IAAehO,EAAAA,EAAAA,UAAS,OAClCiO,EAAUC,IAAelO,EAAAA,EAAAA,UAAS,MAEnCqB,IAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAS7B4M,GAAoBA,KACtBpB,GAAe,EAAM,EAyBnB1E,GAAgB+F,GAClB,IAAIC,SAAQ,CAACC,EAASC,KAClBtN,GAAW,IACXuN,EAAAA,EAAAA,KAAgC,OAARrG,QAAQ,IAARA,OAAQ,EAARA,EAAUlG,GAAImM,GACjC/K,KAAKiL,GACL9K,MAAM+K,GACN7K,QAAQ0E,GAAc,KAEnC1F,EAAAA,EAAAA,YAAU,KACN0F,IAAe,GAChB,CAACoF,EAAMM,IAEV,MAAM5J,GAAO,CAACsJ,KAAMA,EAAM9B,OAAQoC,GAC5B1F,GAAgBA,KAClBnH,GAAW,IACXwN,EAAAA,EAAAA,KAAwBvK,IACnBb,MAAMC,IAAS,IAAD2H,EACXgC,EAAgB,OAAH3J,QAAG,IAAHA,OAAG,EAAHA,EAAKY,MAClBqJ,EAAgB,OAAHjK,QAAG,IAAHA,GAAS,QAAN2H,EAAH3H,EAAKY,YAAI,IAAA+G,OAAN,EAAHA,EAAWyD,UAAU,IAErChL,SAAQ,IAAMzC,GAAW,IAAO,EAMnC0N,IAAcC,EAAAA,EAAAA,aAChBC,KAAUvJ,IACNyI,EAAUzI,EAAM,GACjB,KACH,IA2BJ,OACInB,EAAAA,EAAAA,MAAAqD,EAAAA,SAAA,CAAAhD,SAAA,EACIL,EAAAA,EAAAA,MAAA,OAAKW,UAAS,iBAAoBC,MAAO,CAACE,WAAY,UAAWuF,SAAU,YAAYhG,SAAA,EACnFC,EAAAA,EAAAA,KAACqK,EAAAA,EAAM,CACHC,OAAO,gBACPpK,QAASyI,EACTrI,MAAO,CAACK,MAAO,OAAQD,OAAQ,OAAQ6J,WAAY,WACnD3K,OAAQA,KACJgJ,GAAe,EAAM,EACvB7I,UAEFC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAOC,MAAO,CAACQ,SAAU,QAAQf,UAC5CC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gEAA+DN,UAC1EL,EAAAA,EAAAA,MAAA,UACIW,UAAU,gFACV8B,SAAW3D,IAAMgM,OA/BrB7M,EA+BoCa,EAAE2C,OAAON,MA9BjErE,GAAW,QACXuN,EAAAA,EAAAA,KAAgC,OAARrG,QAAQ,IAARA,OAAQ,EAARA,EAAUlG,GAAIG,GACjCiB,MAAK,KACF+E,KACAiF,GAAe,EAAM,IAExB7J,OAAOP,IACJM,EAAAA,EAAAA,OAAkBE,EAAAA,EAAAA,IAA4BR,GAAG,IAEpDS,SAAQ,KAELH,EAAAA,EAAAA,QAAoB,iBAAiB,IAZzBnB,KA+BoD,EAChDkD,MAAe,OAAR6C,QAAQ,IAARA,OAAQ,EAARA,EAAU/F,OAAOoC,SAAA,EAExBC,EAAAA,EAAAA,KAAA,UAAQa,MAAO,GAAGd,SAAC,YACnBC,EAAAA,EAAAA,KAAA,UAAQa,MAAOjD,EAAAA,GAAAA,cAAoCmC,SAC9CnC,EAAAA,GAAAA,0BAMrBoC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACE,MAAI,EAACD,QAAS3D,KAE5BmD,EAAAA,EAAAA,MAAA,OAAKW,UAAU,iBAAgBN,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAASC,MAAO,CAACQ,SAAU,OAAQN,WAAY,WAAWT,UACrEL,EAAAA,EAAAA,MAAA,OAAKW,UAAU,iGAAgGN,SAAA,EAE3GC,EAAAA,EAAAA,KAAA,OACIM,MAAO,CACHE,WAAY,UACZO,WAAY,MACZD,SAAU,QAEdT,UAAU,iBAAgBN,SAC7B,eAKDC,EAAAA,EAAAA,KAAA,OACIM,MAAO,CAACI,OAAQ,OAAQH,aAAc,QACtCF,UAAU,2BACV7C,GAAG,0BAAyBuC,UAE5BL,EAAAA,EAAAA,MAAA,QACIW,UAAU,oBACVC,MAAO,CAACC,aAAc,QACtBkK,aAAa,MAAK1K,SAAA,EAElBC,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CACFK,KAAK,0CACLpB,UAAU,iGAGdL,EAAAA,EAAAA,KAAA,SACIM,MAAO,CACHC,aAAc,OACdQ,WAAY,IACZP,WAAY,WAEhBgC,KAAK,OACLnC,UAAU,iDACVkF,KAAK,SACLrD,YAAY,qBACZC,SAvGZ3D,IAAO,IAADyH,EAC1BiE,GAAa,OAAD1L,QAAC,IAADA,GAAS,QAARyH,EAADzH,EAAG2C,cAAM,IAAA8E,OAAR,EAADA,EAAWpF,MAAM,UA2GTb,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBN,UAiB/BC,EAAAA,EAAAA,KAAC0K,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,SAAAA,UAAAA,UAAAA,IACH7K,UAEDC,EAAAA,EAAAA,KAAA,UACIqB,QAASA,KACLoI,EAAY,MACZvB,GAAQ,EAAK,EAEjB7H,WAAWwK,EAAAA,EAAAA,GACP,qDAEJ,uBAAqB,QACrB,yBAAuB,aACvBvK,MAAO,CACHQ,SAAU,OACVN,WAAY,UACZG,MAAO,OACPD,OAAQ,QACVX,SACL,sBA4CjBC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6CAA4CN,UACvDL,EAAAA,EAAAA,MAAA,SAAOW,UAAU,QAAON,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIL,EAAAA,EAAAA,MAAA,MACIW,UAAU,+BACVC,MAAO,CACHQ,SAAU,OACVC,WAAY,MACZP,WAAY,WACdT,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAC,UAChCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAC,YAChCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAC,WAChCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAC,WAChCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAC,gBAChCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAC,YAChCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAC,kBAGxCC,EAAAA,EAAAA,KAAA,SAAAD,UACc,OAATwI,QAAS,IAATA,GAAe,QAANT,EAATS,EAAW9I,YAAI,IAAAqI,OAAN,EAATA,EAAiBlB,QAAS,EACd,OAAT2B,QAAS,IAATA,GAAe,QAANR,EAATQ,EAAW9I,YAAI,IAAAsI,OAAN,EAATA,EAAiBlB,KAAI,CAACf,EAAMgF,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC7BxL,EAAAA,EAAAA,MAAA,MAEIY,MAAO,CACHI,OAAQ,OACRI,SAAU,OACVN,WAAY,UACZO,WAAY,OAEhBV,WACKyK,EAAQ,GAAK,IAAM,EAAC,0CAGxB/K,SAAA,EAEDL,EAAAA,EAAAA,MAAA,MAAIW,UAAU,iCAAgCN,SAAA,CACrC,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMtK,WAAW,IAAM,OAAJsK,QAAI,IAAJA,OAAI,EAAJA,EAAMnK,cAE9B+D,EAAAA,EAAAA,MAAA,MAAIW,UAAU,kBAAiBN,SAAA,CACd,QADcgL,EACtB,OAAJjF,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,cAAM,IAAAJ,EAAAA,EAAI,UAAW,QAGhC/K,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,UAC1BqL,EAAAA,EAAAA,IAAyB,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMhK,cAGhCkE,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SAAM,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMzJ,SACvC2D,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SACT,QADSiL,EACtB,OAAJlF,QAAI,IAAJA,GAAW,QAAPmF,EAAJnF,EAAMuF,aAAK,IAAAJ,OAAP,EAAJA,EAAa1F,YAAI,IAAAyF,EAAAA,EAAI,MAE1BhL,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,SACd,QADcmL,EACtB,OAAJpF,QAAI,IAAJA,OAAI,EAAJA,EAAMnI,cAAM,IAAAuN,EAAAA,EAAI,MAErBlL,EAAAA,EAAAA,KAAA,MAAIK,UAAU,kBAAiBN,UAC3BL,EAAAA,EAAAA,MAAA,UACIW,UAAU,wEACV8B,SAAW3D,GA/OtC8M,EAAC9M,EAAGiB,KACrB8J,EAAY9J,GACH,GAALjB,GAAQ8J,GAAe,GAClB,GAAL9J,GAAQoK,GAAe,GAClB,GAALpK,IACAiL,EAAYhK,GACZyI,GAAQ,GACZ,EAyOgDoD,CAAa9M,EAAE2C,OAAON,MAAOiF,GAEjCjF,MAAW,OAAJiF,QAAI,IAAJA,OAAI,EAAJA,EAAMnI,OAAOoC,SAAA,EAEpBC,EAAAA,EAAAA,KAAA,UAAQa,MAAO,GAAGd,UACT,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMnI,SACPC,EAAAA,GAAAA,SACM,UACA,eAET,CACGA,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,mBACAA,EAAAA,GAAAA,sBACF2N,SAAa,OAAJzF,QAAI,IAAJA,OAAI,EAAJA,EAAMnI,UACbqC,EAAAA,EAAAA,KAAA,UAAQa,MAAO,EAAGR,UAAU,UAASN,SAC5B,OAAJ+F,QAAI,IAAJA,GAAAA,EAAMX,eACD,uBACA,wBAGT,OAAJW,QAAI,IAAJA,OAAI,EAAJA,EAAMX,kBACF,CACGvH,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,eACF2N,SAAa,OAAJzF,QAAI,IAAJA,OAAI,EAAJA,EAAMnI,UACbqC,EAAAA,EAAAA,KAAA,UAAQa,MAAO,EAAGR,UAAU,UAASN,SAAC,mBAKzC,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMnI,SACHC,EAAAA,GAAAA,WACAoC,EAAAA,EAAAA,KAAA,UAAQa,MAAO,EAAGR,UAAU,UAASN,SAAC,qBApE7C+K,EA0EJ,KAGT9K,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MACIwL,QAAS,EACTlL,MAAO,CACHmL,UAAW,SACXjL,WAAY,UACZO,WAAY,MACZD,SAAU,GACV4K,WAAY,GACZC,cAAe,IACjB5L,SACL,sCAU5BoI,GACGnI,EAAAA,EAAAA,KAAC4L,EAAAA,EAAO,CACJ3Q,KAAMkN,EACNjN,YA/WQ2Q,KACpBzD,GAAY,EAAM,EA+WN0D,aAAcA,OACdC,UAAWvP,EACXrB,QAASwI,GACTqI,aAAcvD,IAElB,MACM,OAATF,QAAS,IAATA,GAAe,QAANP,EAATO,EAAW9I,YAAI,IAAAuI,OAAN,EAATA,EAAiBpB,QAAS,GACvB5G,EAAAA,EAAAA,KAACiM,EAAAA,EAAU,CAACjD,QAASA,EAASD,KAAMA,EAAMmD,WAAYrD,IACtD,KACHZ,GACGjI,EAAAA,EAAAA,KAACnF,EAAAA,EAAgB,CACbI,KAAMgN,EACN/M,YAhYIA,KAChBgN,GAAQ,EAAM,EAgYF/M,QAASwI,GACTvI,QAASoO,IAEb,MACJxJ,EAAAA,EAAAA,KAACuD,EAAAA,EAAa,CACVtI,KAAMoN,EACNnN,YAAawO,GACbT,UAAWA,EACX/E,QAASA,EACTF,QAASA,EACTJ,aAAcA,GACdgB,eAjYYpG,IACpBhC,GAAW,GACX,MAAMiB,EAAO,CACToH,QAAiB,OAARnB,QAAQ,IAARA,OAAQ,EAARA,EAAUlG,GACnBsH,QAAuB,OAAdlI,SAAc,IAAdA,QAAc,EAAdA,GAAgBY,GACzBuG,MAAMgB,EAAAA,EAAAA,IAAahB,GACnBiB,SAAUf,IAEdiB,EAAAA,EAAAA,KAAyBzH,GACpBmB,MAAK,KACFE,EAAAA,EAAAA,QAAoB,uBACpB8E,GACY,OAARF,QAAQ,IAARA,GAAAA,EAAUyB,eACJvH,EAAAA,GAAAA,qBACAA,EAAAA,GAAAA,oBAEV8L,IAAmB,IAEtB3K,OAAM,KACHvC,GAAW,EAAM,GACnB,EA8WEkH,SAAUA,MAEf,C","sources":["app/modules/standard_manager/hiring/hiringLeads/AddNewLeadsPopUp.js","app/modules/standard_manager/hiring/hiringLeads/SchedulePopup.js","app/modules/standard_manager/referrals/Referrals.js"],"sourcesContent":["import {useState, useRef, useEffect} from 'react'\nimport {\n    addHiringLeadsService,\n    checkDuplicateLeadServce,\n    getStateListService,\n    updateHiringLeadsService,\n} from '../../../../../services/Services'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {RWebShare} from 'react-web-share'\nimport {\n    ReferalFormValidation,\n    REFERAL_VALIDATION_FIELD,\n} from '../../../../../validations/validations'\nimport {\n    getErrorMessageFromResponse,\n    getMobileNumberWithoutMask,\n    isEmptyObjectValue,\n} from '../../../../../helpers/CommonHelpers'\nimport {getUserDataSelector} from '../../../../../redux/selectors/AuthSelectors'\nimport {useSelector} from 'react-redux'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {getAllStatesAndCitiesSelector} from '../../../../../redux/selectors/SettingsSelectors'\nimport {HIRING_PROCESS_STATUS} from '../../../../../constants/constants'\nimport CustomDialog from '../../../../../customComponents/customDialog/CustomDialog'\nimport CustomModal from '../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {BUTTON_TYPE} from '../../../../../customComponents/customButtton/CustomButton'\nimport {fontsFamily} from '../../../../../assets/fonts/fonts'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport QRCode from 'react-qr-code'\nimport {Link} from 'react-router-dom'\n\nconst AddNewLeadsPopUp = ({show, handleClose, getList, preData}) => {\n    const [firstname, setFirstName] = useState(preData?.first_name)\n    const [lastname, setLastName] = useState(preData?.last_name)\n    const [phone, setPhone] = useState(preData?.mobile_no)\n    const [comment, setComment] = useState(preData?.comments)\n    const [homestate, setHomeState] = useState(preData?.state_id)\n    const [email, setEmail] = useState(preData?.email)\n    const [loading, setLoading] = useState(false)\n    const [referalFormError, setReferalFormError] = useState(REFERAL_VALIDATION_FIELD)\n    const loggedUserData = useSelector(getUserDataSelector)\n    const initialRender = useRef(true)\n    const allState = useSelector(getAllStatesAndCitiesSelector)\n\n    const redirectLink = `${window.location.origin}/referral?user_id=${loggedUserData?.id}`\n\n    var body = {\n        first_name: firstname,\n        last_name: lastname,\n        email: email,\n        mobile_no: getMobileNumberWithoutMask(phone),\n        state_id: homestate,\n        comments: comment,\n        status: HIRING_PROCESS_STATUS.followUp,\n        action_status: ' Schedule Interview',\n        reporting_manager_id: loggedUserData?.is_manager\n            ? loggedUserData?.id\n            : loggedUserData?.manager_id ?? loggedUserData?.id,\n    }\n    useEffect(() => {\n        if (initialRender.current) {\n            initialRender.current = false\n        } else {\n            // validate()\n        }\n    }, [firstname, lastname, email])\n    const validate = () => {\n        const validationErrors = ReferalFormValidation(body)\n        setReferalFormError(validationErrors)\n        return isEmptyObjectValue(validationErrors)\n    }\n    const checkDuplicate = () => {\n        const form = {\n            email: body?.email,\n            mobile_number: body?.mobile_no,\n        }\n        checkDuplicateLeadServce(form).then((res) => {\n            if (res?.data?.email_status && res?.data?.mobile_status) {\n                setLoading(false)\n                CustomDialog.warn(\n                    'A Lead with the same email and mobile number already exist. Are you sure you want to add this lead ?',\n                    () => {\n                        setLoading(true)\n                        addLead()\n                    },\n                    () => {\n                        handleClose()\n                    }\n                )\n            } else if (res?.data?.email_status) {\n                setLoading(false)\n                CustomDialog.warn(\n                    'A Lead with the same email and mobile already exist. Are you sure you want to add this lead ?',\n                    () => {\n                        setLoading(true)\n                        addLead()\n                    },\n                    () => {\n                        handleClose()\n                    }\n                )\n            } else if (res?.data?.mobile_status) {\n                setLoading(false)\n                CustomDialog.warn(\n                    'A Lead with the same mobile number already exist. Are you sure you want to add this lead ?',\n                    () => {\n                        setLoading(true)\n                        addLead()\n                    },\n                    () => {\n                        handleClose()\n                    }\n                )\n            } else addLead()\n        })\n    }\n    const handleRefer = (e) => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true)\n            addLead()\n            // checkDuplicate()\n        }\n    }\n    const addLead = () => {\n        addHiringLeadsService(body)\n            .then((res) => {\n                CustomToast.success('Referral created Successfully')\n                getList()\n                handleClose()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    const updateLead = (e) => {\n        e.preventDefault()\n        var updateBody = {\n            first_name: firstname,\n            last_name: lastname,\n            email: email,\n            mobile_no: getMobileNumberWithoutMask(phone),\n            state_id: homestate,\n            comments: comment,\n            status: preData?.status,\n            reporting_manager_id: preData?.recruiter_id,\n        }\n        if (validate()) {\n            setLoading(true)\n            updateHiringLeadsService(preData?.id, updateBody)\n                .then((res) => {\n                    CustomToast.success('Updated Successfully')\n                    getList()\n                    handleClose()\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n    const [statelist, setStateList] = useState([])\n    useEffect(function () {\n        getStateListService()\n            .then((res) => {\n                setStateList(res.data)\n            })\n            .catch((e) => {\n                setStateList([])\n            })\n    }, [])\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            title={preData ? 'Update Lead' : 'Add New Lead'}\n            maxWidth='750'\n        >\n            <CustomLoader visible={loading} full size={100} />\n\n            {/* Top Qr scanner */}\n            <div\n                className='bg-cmGrey100 d-flex align-items-start justify-content-center flex-wrap gap-5 p-5 mx-sm-20 mx-10 mb-5'\n                style={{borderRadius: '10px', fontFamily: fontsFamily.manrope}}\n            >\n                {/* QR Code*/}\n                <div\n                    style={{height: '147px', width: '146px'}}\n                    className='bg-cmwhite rounded p-3 shadow'\n                >\n                    <QRCode value={redirectLink} className='w-100 h-100' />\n                </div>\n\n                <div className='card p-0 bg-transparent w-sm-50'>\n                    <div className='card-body p-0'>\n                        <div\n                            className='card-title text-cmGrey900'\n                            style={{fontSize: '14px', fontWeight: 600}}\n                        >\n                            Your Referral Code\n                        </div>\n                        <div\n                            className='text-cmGrey600'\n                            style={{fontSize: '11px', fontWeight: 600, lineHeight: '16px'}}\n                        >\n                            Streamline the lead generation process by quickly sharing the link, to\n                            input valuable leads.\n                        </div>\n                    </div>\n                    <div\n                        className='card-footer pb-0 px-0 '\n                        style={{fontSize: '11px', fontWeight: 500}}\n                    >\n                        <Link\n                            className='text-decoration-underline cursor-pointer mb-2 text-cmGrey800'\n                            to={`/referral?user_id=${loggedUserData?.id}`}\n                            target='_blank'\n                        >\n                            {redirectLink}\n                        </Link>\n                        <div className='d-flex align-items-center gap-3'>\n                            <KTSVG\n                                onClick={() => {\n                                    navigator.clipboard.writeText(redirectLink)\n                                    CustomToast.success('Link Copied')\n                                }}\n                                path='/media/icons/duotune/art/CopyButtonSVG.svg'\n                                svgClassName='h-35px w-35px cursor-pointer'\n                            />\n                            <RWebShare\n                                data={{\n                                    text: 'Sequifi | Referral',\n                                    url: redirectLink,\n                                    title: 'Sequifi',\n                                }}\n                            >\n                                <KTSVG\n                                    path='/media/icons/duotune/art/ButtonEdit.svg'\n                                    svgClassName='h-35px w-35px cursor-pointer'\n                                />\n                            </RWebShare>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div\n                className='text-cmGrey600 text-center mb-5'\n                style={{fontWeight: '600', fontSize: '12px'}}\n            >\n                Or add Manually\n            </div>\n\n            <form\n                className='w-sm-75 mx-auto mb-10 overflow-hidden'\n                onSubmit={preData ? updateLead : handleRefer}\n            >\n                <div className='px-15 mb-10' style={{fontFamily: 'Manrope', fontSize: '14px'}}>\n                    {/*begin::Stepper */}\n                    {/* Nmae */}\n                    <div className='row mb-5'>\n                        {/* first name */}\n                        <div className='col-sm'>\n                            <CustomInput\n                                label={'First Name'}\n                                required\n                                placeholder='Enter First Name'\n                                onChange={(e) => {\n                                    setFirstName(e.target.value)\n                                }}\n                                errorMessage={referalFormError?.firstName}\n                                value={firstname}\n                                rejex={/^[\\w\\-\\s]+$/}\n                                // className='w-sm-auto w-100'\n                            />\n                        </div>\n                        {/* last name */}\n                        <div className='col-sm'>\n                            <CustomInput\n                                label={'Last Name'}\n                                required\n                                placeholder='Enter Last Name'\n                                onChange={(e) => {\n                                    setLastName(e.target.value)\n                                }}\n                                // className='w-sm-auto w-100'\n                                errorMessage={referalFormError?.lastName}\n                                value={lastname}\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Email */}\n                    <div className=''>\n                        <div className='mb-5'>\n                            <CustomInput\n                                label={'Email'}\n                                required\n                                placeholder='Enter Email'\n                                onChange={(e) => {\n                                    setEmail(e.target.value)\n                                }}\n                                errorMessage={referalFormError?.email}\n                                value={email}\n                                type={INPUT_TYPE.email}\n                            />\n                        </div>\n                    </div>\n                    {/* Phone */}\n                    <div className=''>\n                        <div className='mb-5'>\n                            <CustomInput\n                                label={'Phone Number'}\n                                value={phone}\n                                onChange={(e) => setPhone(e.target.value)}\n                                placeholder='Enter Contact Number'\n                                type={INPUT_TYPE.mobile}\n                            />\n                        </div>\n                    </div>\n                    {/* Home State */}\n\n                    <div className='mb-5'>\n                        <CustomDropdown\n                            label={'Current (Home Location of the candidate)'}\n                            valueKey='id'\n                            options={allState}\n                            value={homestate}\n                            onChange={(e) => setHomeState(e.target.value)}\n                            errorMessage={''}\n                        />\n                    </div>\n\n                    <div className=''>\n                        <div className='mb-5'>\n                            <CustomInput\n                                label={'Reporting Manager'}\n                                placeholder={\n                                    loggedUserData?.is_manager\n                                        ? `${loggedUserData?.first_name} ${loggedUserData?.last_name}`\n                                        : loggedUserData?.manager_name ??\n                                          loggedUserData?.first_name + loggedUserData?.last_name\n                                }\n                                disabled={true}\n                            />\n                        </div>\n                    </div>\n                    {/* Comments */}\n                    <div className=''>\n                        {preData ? (\n                            //   <div className='mb-5'>\n                            //     <label className='form-label text-cmGrey700' style={{fontWeight: '600'}}>\n                            //       Lead Status\n                            //     </label>\n                            //     <select className='form-select cursor-pointer w-100 bg-cmGrey100 fw-bold'>\n                            //       <option value=''>Follow up (Interview done)</option>\n                            //     </select>\n                            //   </div>\n                            <></>\n                        ) : (\n                            <div className=''>\n                                <CustomInput\n                                    label={'Comments'}\n                                    placeholder='Add Comments'\n                                    type={INPUT_TYPE.textarea}\n                                    onChange={(e) => {\n                                        setComment(e.target.value)\n                                    }}\n                                    value={comment}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className='d-flex mx-auto justify-content-center align-items-center'>\n                    <CustomButton\n                        disabled={loading}\n                        buttonType={BUTTON_TYPE.primary}\n                        padding={'px-20'}\n                        buttonLabel={preData ? 'Update' : 'Submit'}\n                        onClick={(e) => (preData ? updateLead(e) : handleRefer(e))}\n                    />\n                </div>\n            </form>\n        </CustomModal>\n    )\n}\n\nexport {AddNewLeadsPopUp}\n","import {useMemo, useState} from 'react'\nimport {createPortal} from 'react-dom'\n\nimport {Dialog} from 'primereact/dialog'\nimport CustomDatePicker from '../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {getValidDate, HIRING_PROCESS_STATUS} from '../../../../../constants/constants'\nimport {\n    getInterviewTimeSlotService,\n    scheduleInterviewService,\n} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {useSelector} from 'react-redux'\nimport {getUserDataSelector} from '../../../../../redux/selectors/AuthSelectors'\nimport {\n    SCHEDULE_INTERVIEW_VALIDATION_FIELD,\n    scheduleInterviewValidation,\n} from '../../../../../validations/validations'\nimport {getErrorMessageFromResponse, isEmptyObjectValue} from '../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport CustomButton, {BUTTON_TYPE} from '../../../../../customComponents/customButtton/CustomButton'\nimport CustomModal from '../../../../../customComponents/customModal/CustomModal'\n\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst SchedulePopup = ({show, handleClose, userData, getHiringList = () => {}, changeStatus}) => {\n    const [timeValue, setTimeValue] = useState(null)\n    const [date, setDate] = useState('')\n    const [time, setTime] = useState('')\n    const [interViewTimeSlot, setInterviewTimeSlot] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [timeSlotLoading, setTimeSlotLoading] = useState(false)\n    const [scheduleError, setScheduleError] = useState(SCHEDULE_INTERVIEW_VALIDATION_FIELD)\n    const loggedUserData = useSelector(getUserDataSelector)\n    const [whoWillTakeInterview, setWhoWillTakeInterview] = useState(loggedUserData?.id)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        handleSchedule()\n    }\n    const handleSchedule = (e) => {\n        const body = {\n            lead_id: userData?.id,\n            user_id: loggedUserData?.id,\n            date: getValidDate(date, 'YYYY-MM-DD'),\n            schedule: time,\n        }\n        const validationErrors = scheduleInterviewValidation(body)\n        setScheduleError(validationErrors)\n        if (isEmptyObjectValue(validationErrors)) {\n            setLoading(true)\n            scheduleInterviewService(body)\n                .then(() => {\n                    CustomToast.success('Interview Scheduled')\n                    handleClose()\n                    getHiringList()\n                    changeStatus(\n                        userData?.interview_time\n                            ? HIRING_PROCESS_STATUS.interviewRescheduled\n                            : HIRING_PROCESS_STATUS.interviewScheduled\n                    )\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n\n    const interviewerList = useMemo(() => {\n        const list = [\n            {\n                name: `${loggedUserData?.first_name} ${loggedUserData?.last_name}(Me)`,\n                id: loggedUserData?.id,\n            },\n        ]\n        if (!loggedUserData?.is_manager) {\n            list.push({\n                name: `${userData?.reporting_manager?.first_name} ${userData?.reporting_manager?.last_name} (Reporting Manager)`,\n                id: userData?.reporting_manager_id,\n            })\n        }\n        return list\n    }, [\n        loggedUserData?.first_name,\n        loggedUserData?.id,\n        loggedUserData?.is_manager,\n        loggedUserData?.last_name,\n        userData?.reporting_manager?.first_name,\n        userData?.reporting_manager?.last_name,\n        userData?.reporting_manager_id,\n    ])\n\n    const selectedWhoWilLTakeInterview = useMemo(() => {\n        return interviewerList.find((item) => item?.id == whoWillTakeInterview)\n    }, [interviewerList, whoWillTakeInterview])\n\n    const onChangeDate = (selectedDate) => {\n        setTimeSlotLoading(true)\n        const todayDate = getValidDate(new Date(), 'YYYY-MM-DD')\n        const foundDate = getValidDate(selectedDate, 'YYYY-MM-DD')\n        const body = {\n            user_id: selectedWhoWilLTakeInterview?.id,\n            date: foundDate,\n        }\n        getInterviewTimeSlotService(body)\n            .then((res) => {\n                let timeDropdown =\n                    res?.data?.length > 0 ? res?.data?.map((item) => ({value: item})) : []\n                if (todayDate == foundDate) {\n                    timeDropdown = timeDropdown?.filter((item) => {\n                        const endTime = item?.value\n                            .split(' - ')?.[1]\n                            ?.replace('PM', ' PM')\n                            .replace('AM', ' AM')\n                        const endDateTime = new Date(`${todayDate} ${endTime}`)\n                        return endDateTime > new Date()\n                    })\n                    setInterviewTimeSlot(timeDropdown ?? [])\n                } else {\n                    setInterviewTimeSlot(timeDropdown ?? [])\n                }\n                setInterviewTimeSlot(timeDropdown ?? [])\n            })\n            .finally(() => setTimeSlotLoading(false))\n        setDate(foundDate)\n    }\n\n    return (\n        <CustomModal show={show} onHide={handleClose} title={'Schedule Interview'} maxWidth='600'>\n            <div className='' style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n\n                <form onSubmit={handleSchedule}>\n                    <div\n                        className='modal-body py-sm-5  px-10'\n                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                    >\n                        <div className='mb-5'>\n                            <CustomDropdown\n                                valueKey='id'\n                                label={'Who will take interview ?'}\n                                required\n                                showClear={false}\n                                options={interviewerList}\n                                value={whoWillTakeInterview}\n                                onChange={(e) => {\n                                    setWhoWillTakeInterview(e?.target?.value)\n                                    setDate(null)\n                                    setTimeValue(null)\n                                    setTime(null)\n                                }}\n                                placeholder={'Who will take interview'}\n                            />\n                        </div>\n                        <div className='mb-5'>\n                            <CustomDatePicker\n                                label={'Date'}\n                                required\n                                placeholder={'Interview date'}\n                                value={null}\n                                onChange={(e) => {\n                                    onChangeDate(e.target.value)\n                                    setTimeValue(null)\n                                }}\n                                className='w-100'\n                                errorMessage={scheduleError?.interviewDate}\n                                minDate={new Date()}\n                            />\n                        </div>\n                        <div className='mb-5'>\n                            <CustomDropdown\n                                label={'Time Slot'}\n                                required\n                                options={interViewTimeSlot}\n                                value={timeValue}\n                                displayKey='value'\n                                onChange={(e) => {\n                                    setTimeValue(e.target.value)\n                                    setTime(e.target.value)\n                                }}\n                                placeholder={\n                                    timeSlotLoading\n                                        ? 'Loading...'\n                                        : interViewTimeSlot?.length > 0\n                                        ? 'Select Time Slot'\n                                        : 'No Time Slot Available'\n                                }\n                                errorMessage={scheduleError?.interviewSlot}\n                            />\n                        </div>\n\n                        <div className='text-center'>\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.primary}\n                                buttonLabel='Schedule'\n                                onClick={(e) => handleSubmit(e)}\n                            />\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {SchedulePopup}\n","import {useCallback, useEffect, useState} from 'react'\nimport clsx from 'clsx'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport {AddNewLeadsPopUp} from '../hiring/hiringLeads/AddNewLeadsPopUp'\nimport {\n    changeLeadStatusService,\n    getHireLeadsListService,\n    postRescheduleInterviewService,\n    scheduleInterviewService,\n} from '../../../../services/Services'\n\nimport moment from 'moment'\nimport {SchedulePopup} from '../hiring/hiringLeads/SchedulePopup'\nimport {HIRING_PROCESS_STATUS, getValidDate} from '../../../../constants/constants'\nimport Pagination from '../../admin/sequidocs/component/Pagination'\nimport debounce from 'lodash.debounce'\nimport CustomLoader from '../../../../customComponents/customLoader/CustomLoader'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {formattedPhoneNumber, getErrorMessageFromResponse} from '../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../customComponents/customToast/CustomToast'\nimport HireNew from '../hiring/onBoardingEmp/CompensationPlan/HireNew'\nimport {getUserDataSelector} from '../../../../redux/selectors/AuthSelectors'\nimport {useSelector} from 'react-redux'\nimport {Dialog} from 'primereact/dialog'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\n\nconst Referrals = () => {\n    const [open, setOpen] = useState(false)\n    const [hireOpen, setHireOpen] = useState(false)\n    const [statusPopup, setStatusPopup] = useState(false)\n    const [tableData, setTableData] = useState([])\n    const [hireData, setHireData] = useState([])\n    const [statusModal, setStatusModal] = useState(false)\n\n    const [totalData, setTotalData] = useState(null)\n    const [page, setPage] = useState(1)\n    const [popupHead, setPopupHead] = useState('')\n    const [itemid, setItemId] = useState(null)\n    const [search, setSearch] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    // for sceduling\n    const [date, setDate] = useState('')\n    const [time, setTime] = useState('')\n    const [userData, setUserData] = useState(null)\n    const [editData, setEditData] = useState(null)\n\n    const loggedUserData = useSelector(getUserDataSelector)\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleHireClose = () => {\n        setHireOpen(false)\n    }\n    const handleStatusPopup = () => {\n        setStatusPopup(false)\n    }\n\n    const handleSchedule = (e) => {\n        setLoading(true)\n        const body = {\n            lead_id: userData?.id,\n            user_id: loggedUserData?.id,\n            date: getValidDate(date),\n            schedule: time,\n        }\n        scheduleInterviewService(body)\n            .then(() => {\n                CustomToast.success('Interview Scheduled')\n                changeStatus(\n                    userData?.interview_time\n                        ? HIRING_PROCESS_STATUS.interviewRescheduled\n                        : HIRING_PROCESS_STATUS.interviewScheduled\n                )\n                handleStatusPopup()\n            })\n            .catch(() => {\n                setLoading(false)\n            })\n    }\n    const changeStatus = (statusValue) =>\n        new Promise((resolve, reject) => {\n            setLoading(true)\n            changeLeadStatusService(userData?.id, statusValue)\n                .then(resolve)\n                .catch(reject)\n                .finally(getHiringList)\n        })\n    useEffect(() => {\n        getHiringList()\n    }, [page, search])\n\n    const data = {page: page, filter: search}\n    const getHiringList = () => {\n        setLoading(true)\n        getHireLeadsListService(data)\n            .then((res) => {\n                setTableData(res?.data)\n                setTotalData(res?.data?.last_page)\n            })\n            .finally(() => setLoading(false))\n    }\n\n    const onChangeSearch = (e) => {\n        delaySearch(e?.target?.value)\n    }\n    const delaySearch = useCallback(\n        debounce((value) => {\n            setSearch(value)\n        }, 500),\n        []\n    )\n    const handleAction = (e, data) => {\n        setUserData(data)\n        if (e == 1) setStatusPopup(true)\n        if (e == 5) setStatusModal(true)\n        if (e == 6) {\n            setEditData(data)\n            setOpen(true)\n        }\n    }\n    const onStatusChange = (status) => {\n        setLoading(true)\n        changeLeadStatusService(userData?.id, status)\n            .then(() => {\n                getHiringList()\n                setStatusModal(false)\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                // setLoading(false)\n                CustomToast.success('Status updated')\n            })\n    }\n\n    return (\n        <>\n            <div className={`card shadow-sm`} style={{fontFamily: 'Manrope', position: 'relative'}}>\n                <Dialog\n                    header='Update Status'\n                    visible={statusModal}\n                    style={{width: '40vw', height: '18vw', background: '#c1cde4'}}\n                    onHide={() => {\n                        setStatusModal(false)\n                    }}\n                >\n                    <div className='mt-6' style={{fontSize: '14px'}}>\n                        <div className='justify-content-between w-100 px-sm-0 px-1   text-center fs-3'>\n                            <select\n                                className='form-select py-2 cursor-pointer w-225px mx-auto bg-cmGrey200 border-0 fw-bold'\n                                onChange={(e) => onStatusChange(e.target.value)}\n                                value={userData?.status}\n                            >\n                                <option value={''}>Select</option>\n                                <option value={HIRING_PROCESS_STATUS.interviewDone}>\n                                    {HIRING_PROCESS_STATUS.interviewDone}\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                </Dialog>\n                <CustomLoader full visible={loading} />\n\n                <div className='py-0 px-0 mx-0'>\n                    <div className='h-auto' style={{fontSize: '14px', fontFamily: 'Manrope'}}>\n                        <div className='w-100 mt-4 ms-sm-7 ms-5 mb-3 d-flex flex-wrap gap-3 justify-content-between align-items-center'>\n                            {/* customer info */}\n                            <div\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '600',\n                                    fontSize: '17px',\n                                }}\n                                className='text-cmGrey900'\n                            >\n                                Referrals\n                            </div>\n\n                            {/* Search form */}\n                            <div\n                                style={{height: '43px', borderRadius: '20px'}}\n                                className='w-md-300px mb-1 me-sm-12'\n                                id='kt_chat_contacts_header'\n                            >\n                                <form\n                                    className='position-relative'\n                                    style={{borderRadius: '90px'}}\n                                    autoComplete='off'\n                                >\n                                    <KTSVG\n                                        path='/media/icons/duotune/general/gen021.svg'\n                                        className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                                    />\n\n                                    <input\n                                        style={{\n                                            borderRadius: '10px',\n                                            fontWeight: 600,\n                                            fontFamily: 'Manrope',\n                                        }}\n                                        type='text'\n                                        className='form-control px-12 bg-cmGrey100 text-cmGrey700'\n                                        name='search'\n                                        placeholder='Search an employee'\n                                        onChange={onChangeSearch}\n                                    />\n                                </form>\n                            </div>\n\n                            <div className='me-20 d-flex gap-5'>\n                                {/* filter button */}\n                                {/* <button\n                  className={clsx('btn btn-sm btn-flex fw-bold text-cmGrey600 bg-cmGrey100')}\n                  data-kt-menu-trigger='click'\n                  data-kt-menu-placement='bottom-end'\n                  style={{\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    width: '99px',\n                    height: '43px',\n                  }}\n                >\n                  <i className='bi bi-funnel fs-5'></i>\n                  Filter\n                </button> */}\n\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.referrals.referrals.add\n                                    }\n                                >\n                                    <button\n                                        onClick={() => {\n                                            setEditData(null)\n                                            setOpen(true)\n                                        }}\n                                        className={clsx(\n                                            'btn btn-sm fw-bold text-cmwhite bg-cmBlue-Crayola'\n                                        )}\n                                        data-kt-menu-trigger='click'\n                                        data-kt-menu-placement='bottom-end'\n                                        style={{\n                                            fontSize: '14px',\n                                            fontFamily: 'Manrope',\n                                            width: '99px',\n                                            height: '43px',\n                                        }}\n                                    >\n                                        Add New\n                                    </button>\n                                </AccessRights>\n                                {/* <a className='me-0'>\n                  <button\n                    style={{\n                      fontSize: '14px',\n                      fontStyle: 'bold',\n                    }}\n                    className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary text-cmGrey900'\n                    data-kt-menu-trigger='click'\n                    data-kt-menu-placement='top-end'\n                    data-kt-menu-flip='bottom-end'\n                  >\n                    <i\n                      style={{marginTop: '-6px'}}\n                      className='bi ms-4 bi-three-dots-vertical  fs-3'\n                    ></i>\n                  </button>\n                </a> */}\n                            </div>\n                            {/* <div className='me-20'>\n                <a className='me-0'>\n                  <button\n                    style={{\n                      color: '#757575',\n                      fontSize: '14px',\n                      fontStyle: 'bold',\n                    }}\n                    className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary'\n                    data-kt-menu-trigger='click'\n                    data-kt-menu-placement='top-end'\n                    data-kt-menu-flip='bottom-end'\n                  >\n                    <i\n                      style={{marginTop: '-6px'}}\n                      className='bi ms-4 bi-three-dots-vertical  fs-3'\n                    ></i>\n                  </button>\n                </a>\n              </div> */}\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='bg-cmGrey200 text-cmGrey800 '\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '800',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>Name</th>\n                                    <th className='text-nowrap p-5'>Source</th>\n                                    <th className='text-nowrap p-5'>Phone</th>\n                                    <th className='text-nowrap p-5'>Email</th>\n                                    <th className='text-nowrap p-5'>Home State</th>\n                                    <th className='text-nowrap p-5'>Status</th>\n                                    <th className='text-nowrap p-5'>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tableData?.data?.length > 0 ? (\n                                    tableData?.data?.map((item, index) => (\n                                        <tr\n                                            key={index}\n                                            style={{\n                                                height: '40px',\n                                                fontSize: '14px',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                            }}\n                                            className={\n                                                (index + 1) % 2 === 0\n                                                    ? `text-cmGrey700 bg-cmbg`\n                                                    : `text-cmGrey700`\n                                            }\n                                        >\n                                            <td className='p-5 text-nowrap text-cmGrey800'>\n                                                {item?.first_name} {item?.last_name}\n                                            </td>\n                                            <td className='p-5 text-nowrap'>\n                                                {item?.source ?? 'Mannual'}{' '}\n                                            </td>\n\n                                            <td className='p-5 text-nowrap'>\n                                                {formattedPhoneNumber(item?.mobile_no)}\n                                            </td>\n\n                                            <td className='p-5 text-nowrap'>{item?.email}</td>\n                                            <td className='p-5 text-nowrap'>\n                                                {item?.state?.name ?? ''}\n                                            </td>\n                                            <td className='p-5 text-nowrap'>\n                                                {item?.status ?? ''}\n                                            </td>\n                                            <td className='p-5 text-nowrap'>\n                                                <select\n                                                    className='form-select py-2 cursor-pointer w-175px bg-cmGrey200 border-0 fw-bold'\n                                                    onChange={(e) =>\n                                                        handleAction(e.target.value, item)\n                                                    }\n                                                    value={item?.status}\n                                                >\n                                                    <option value={''}>\n                                                        {item?.status !=\n                                                        HIRING_PROCESS_STATUS.rejected\n                                                            ? 'Actions'\n                                                            : 'No Actions'}\n                                                    </option>\n                                                    {[\n                                                        HIRING_PROCESS_STATUS.followUp,\n                                                        HIRING_PROCESS_STATUS.interviewScheduled,\n                                                        HIRING_PROCESS_STATUS.interviewRescheduled,\n                                                    ].includes(item?.status) && (\n                                                        <option value={1} className='fw-bold'>\n                                                            {item?.interview_time\n                                                                ? 'Reschedule Interview'\n                                                                : 'Schedule Interview'}\n                                                        </option>\n                                                    )}\n                                                    {item?.interview_time &&\n                                                        ![\n                                                            HIRING_PROCESS_STATUS.rejected,\n                                                            HIRING_PROCESS_STATUS.interviewDone,\n                                                        ].includes(item?.status) && (\n                                                            <option value={5} className='fw-bold'>\n                                                                Update Status\n                                                            </option>\n                                                        )}\n\n                                                    {item?.status !=\n                                                        HIRING_PROCESS_STATUS.rejected && (\n                                                        <option value={6} className='fw-bold'>\n                                                            Edit Lead\n                                                        </option>\n                                                    )}\n                                                </select>\n                                            </td>\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={7}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No referrals found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            {hireOpen ? (\n                <HireNew\n                    show={hireOpen}\n                    handleClose={handleHireClose}\n                    getonbording={() => {}}\n                    setLoader={setLoading}\n                    getList={getHiringList}\n                    prefieldData={hireData}\n                />\n            ) : null}\n            {tableData?.data?.length > 0 ? (\n                <Pagination setPage={setPage} page={page} totalPages={totalData} />\n            ) : null}\n            {open ? (\n                <AddNewLeadsPopUp\n                    show={open}\n                    handleClose={handleClose}\n                    getList={getHiringList}\n                    preData={editData}\n                />\n            ) : null}\n            <SchedulePopup\n                show={statusPopup}\n                handleClose={handleStatusPopup}\n                popupHead={popupHead}\n                setTime={setTime}\n                setDate={setDate}\n                changeStatus={changeStatus}\n                handleSchedule={handleSchedule}\n                userData={userData}\n            />\n        </>\n    )\n}\n\nexport default Referrals\n"],"names":["AddNewLeadsPopUp","_ref","_loggedUserData$manag","_loggedUserData$manag2","show","handleClose","getList","preData","firstname","setFirstName","useState","first_name","lastname","setLastName","last_name","phone","setPhone","mobile_no","comment","setComment","comments","homestate","setHomeState","state_id","email","setEmail","loading","setLoading","referalFormError","setReferalFormError","REFERAL_VALIDATION_FIELD","loggedUserData","useSelector","getUserDataSelector","initialRender","useRef","allState","getAllStatesAndCitiesSelector","redirectLink","concat","window","location","origin","id","body","getMobileNumberWithoutMask","status","HIRING_PROCESS_STATUS","action_status","reporting_manager_id","is_manager","manager_id","useEffect","current","validate","validationErrors","ReferalFormValidation","isEmptyObjectValue","handleRefer","e","preventDefault","addLead","addHiringLeadsService","then","res","CustomToast","catch","getErrorMessageFromResponse","finally","updateLead","updateBody","recruiter_id","updateHiringLeadsService","statelist","setStateList","getStateListService","data","_jsxs","CustomModal","onHide","title","maxWidth","children","_jsx","CustomLoader","visible","full","size","className","style","borderRadius","fontFamily","fontsFamily","height","width","QRCode","value","fontSize","fontWeight","lineHeight","Link","to","target","KTSVG","onClick","navigator","clipboard","writeText","path","svgClassName","RWebShare","text","url","onSubmit","CustomInput","label","required","placeholder","onChange","errorMessage","firstName","rejex","lastName","type","INPUT_TYPE","CustomDropdown","valueKey","options","manager_name","disabled","_Fragment","CustomButton","buttonType","BUTTON_TYPE","padding","buttonLabel","document","getElementById","SchedulePopup","_userData$reporting_m3","_userData$reporting_m4","userData","getHiringList","changeStatus","timeValue","setTimeValue","date","setDate","time","setTime","interViewTimeSlot","setInterviewTimeSlot","timeSlotLoading","setTimeSlotLoading","scheduleError","setScheduleError","SCHEDULE_INTERVIEW_VALIDATION_FIELD","whoWillTakeInterview","setWhoWillTakeInterview","handleSchedule","lead_id","user_id","getValidDate","schedule","scheduleInterviewValidation","scheduleInterviewService","interview_time","interviewerList","useMemo","list","name","_userData$reporting_m","_userData$reporting_m2","push","reporting_manager","selectedWhoWilLTakeInterview","find","item","position","showClear","_e$target","CustomDatePicker","selectedDate","todayDate","Date","foundDate","getInterviewTimeSlotService","_res$data","_res$data2","_timeDropdown4","timeDropdown","length","map","_timeDropdown","_timeDropdown2","_timeDropdown3","filter","_item$value$split","_item$value$split$","endTime","split","replace","onChangeDate","interviewDate","minDate","displayKey","interviewSlot","handleSubmit","Referrals","_tableData$data","_tableData$data2","_tableData$data3","open","setOpen","hireOpen","setHireOpen","statusPopup","setStatusPopup","tableData","setTableData","hireData","setHireData","statusModal","setStatusModal","totalData","setTotalData","page","setPage","popupHead","setPopupHead","itemid","setItemId","search","setSearch","setUserData","editData","setEditData","handleStatusPopup","statusValue","Promise","resolve","reject","changeLeadStatusService","getHireLeadsListService","last_page","delaySearch","useCallback","debounce","Dialog","header","background","onStatusChange","autoComplete","AccessRights","customCondition","allPermissionsAccess","clsx","index","_item$source","_item$state$name","_item$state","_item$status","source","formattedPhoneNumber","state","handleAction","includes","colSpan","textAlign","paddingTop","paddingBottom","HireNew","handleHireClose","getonbording","setLoader","prefieldData","Pagination","totalPages"],"sourceRoot":""}