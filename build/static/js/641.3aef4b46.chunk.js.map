{"version":3,"file":"static/js/641.3aef4b46.chunk.js","mappings":"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","sources":["app/modules/standard_manager/management/particularEmployee/compoents/network/NetworkOrg.js","app/modules/standard_manager/management/particularEmployee/compoents/network/AddNewOverrideOnEmployePop.js","app/modules/standard_manager/management/particularEmployee/compoents/network/AddNewOverrideOfEmployePop.js","app/modules/standard_manager/management/particularEmployee/compoents/network/NetorkPage.js","app/modules/standard_manager/management/particularEmployee/compoents/permissions/PermissionsPage.js","app/modules/standard_manager/management/particularEmployee/TransferModal.js","app/modules/standard_manager/management/particularEmployee/ChangePasswordModal.js","app/modules/standard_manager/management/particularEmployee/ParticularEmployeHeader.js","app/modules/standard_manager/management/particularEmployee/compoents/UserEmployementPackage.js","app/modules/common/components/ProfilePersonalTax.js","app/modules/common/components/ProfilePersonalBanking.js","app/modules/common/components/ProfilePersonalAdditionalInfo.js","app/modules/common/components/ProfilePersonalInfoPage.js","app/modules/standard_manager/management/particularEmployee/ParticularEmployePage.js","customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile.js"],"sourcesContent":["import React from 'react'\nimport {Tree, TreeNode} from 'react-organizational-chart'\nimport CustomImage from '../../../../../../../customComponents/customImage/CustomImage'\n\nconst NetworkOrg = ({chartData}) => {\n    const UserNode = ({item, isYou = false}) => (\n        <div className='my-5' style={{fontFamily: 'Manrope'}}>\n            <div>\n                <CustomImage\n                    src={item?.image}\n                    style={{width: '38.69px', height: '43.85px'}}\n                    className='avatar'\n                />\n            </div>\n            <div>\n                <span className='text-cmGrey900' style={{fontWeight: 700}}>\n                    {item?.first_name} {item?.last_name}\n                </span>\n                {isYou && (\n                    <span\n                        className='text-cmGrey700 ms-2'\n                        style={{fontWeight: 500, fontSize: '12px'}}\n                    >\n                        You\n                    </span>\n                )}\n            </div>\n        </div>\n    )\n\n    const ChildeNode = ({item}) => {\n        return (\n            <>\n                {item?.childs?.length > 0 ? (\n                    <TreeNode label={<UserNode item={item} />}>\n                        {item?.childs?.length > 0 &&\n                            item?.childs.map((item1) => <ChildeNode item={item1} />)}\n                    </TreeNode>\n                ) : (\n                    <TreeNode label={<UserNode item={item} />} />\n                )}\n            </>\n        )\n    }\n\n    return (\n        <div\n            className='bg-cmwhite my-10 py-10 shadow-sm overflow-auto'\n            style={{borderRadius: '10px'}}\n        >\n            <Tree\n                lineWidth={'2px'}\n                lineColor={'grey'}\n                lineHeight={'35px'}\n                label={<UserNode item={chartData} isYou />}\n            >\n                {chartData?.childs?.length > 0 &&\n                    chartData?.childs?.map((item) => <ChildeNode item={item} />)}\n            </Tree>\n        </div>\n    )\n}\n\nexport default NetworkOrg\n","import {useState, useEffect, useCallback, useMemo} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport {\n    addManualOverrideService,\n    getRecuiterFilterService,\n} from '../../../../../../../services/Services'\nimport CustomSearchInput from '../../../../../../../customComponents/customInputs/customSearchInput/CustomSearchInput'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomImage from '../../../../../../../customComponents/customImage/CustomImage'\nimport debounce from 'lodash.debounce'\nimport arr084 from '../../../../../standard_manager/management/component/team/assets/arr084.png'\nimport {\n    getErrorMessageFromResponse,\n    percentageLimitCheck,\n} from '../../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {OVERRIDE_TYPE, UNIT_TYPE1, getValidDate} from '../../../../../../../constants/constants'\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst AddNewOverrideOnEmployePop = ({show, handleClose, employeeData, manualOverrideData}) => {\n    const [selectedEmployee, setSelectedEmployee] = useState(null)\n    const [overrideAmount, setOverrideAmount] = useState(null)\n    const [overrideType, setOverrideType] = useState('per sale')\n    const [loading, setLoading] = useState(false)\n    const [teamMember, setTeamMember] = useState([])\n    const [search, setSearch] = useState(null)\n    const [effectiveDate, setEffectiveDate] = useState(null)\n    const [selectedEmployees, setSelectedEmployees] = useState(null)\n    const [tableLoder, setTableLoader] = useState(false)\n    const onSeachLead = useCallback(\n        (searchText) =>\n            new Promise((resolve) => {\n                getRecuiterFilterService(searchText)\n                    .then((res) => {\n                        const data = res?.data?.map((item) => ({\n                            ...item,\n                            name: `${item?.first_name} ${item?.last_name}`,\n                        }))\n\n                        resolve(data)\n                    })\n                    .catch(() => {\n                        resolve([])\n                    })\n            }),\n        []\n    )\n\n    const manualOverrideUsers = useMemo(() => {\n        return manualOverrideData?.map((item) => item?.id)\n    }, [manualOverrideData])\n\n    const onSeachRecruiter = useCallback(\n        (searchText) =>\n            new Promise((resolve) => {\n                setTableLoader(true)\n                getRecuiterFilterService(searchText)\n                    .then((res) => {\n                        const filteredData = res?.data?.filter(\n                            (item) => !manualOverrideUsers.includes(item?.id)\n                        )\n                        const data = filteredData?.map((item) => ({\n                            ...item,\n                            name: `${item?.first_name} ${item?.last_name}`,\n                        }))\n                        setTableLoader(false)\n                        setSelectedEmployees(data)\n                        resolve(data)\n                    })\n                    .catch(() => {\n                        resolve([])\n                    })\n            }),\n        []\n    )\n    const onOptionPress = useCallback((item) => {\n        setTeamMember((val) => [\n            ...val,\n            {\n                first_name: item?.first_name,\n                last_name: item?.last_name,\n                id: item?.id,\n                image: item?.image,\n            },\n        ])\n        // setSelectedEmployee(null)\n    }, [])\n\n    const addOverride = (e) => {\n        e.preventDefault()\n        const userIds = teamMember?.map((item) => item?.id)\n\n        if (!effectiveDate) return CustomToast.error('Please select efective date')\n        if (!overrideAmount) return CustomToast.error('Please select a override amount')\n        if (!overrideType) return CustomToast.error('Please select a override type')\n        if (userIds?.length <= 0) return CustomToast.error('Please select a employee')\n\n        setLoading(true)\n        let body = {\n            manual_user_id: userIds,\n            user_id: employeeData?.id,\n            effective_date: getValidDate(effectiveDate, 'YYYY-MM-DD'),\n            overrides_amount: overrideAmount,\n            overrides_type: overrideType,\n        }\n        addManualOverrideService(body)\n            .then(() => {\n                CustomToast.success('Added manual override')\n                handleClose()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    const onChangeSearch = (e) => {\n        delaySearch(e?.target?.value)\n    }\n    const delaySearch = useCallback(\n        debounce((value) => {\n            setSearch(value)\n            onSeachRecruiter(value)\n        }, 500),\n        []\n    )\n    const onRemovePress = useCallback(\n        (id) => {\n            const updateTeam = teamMember?.filter((item) => item?.id !== id)\n            setTeamMember(updateTeam)\n        },\n        [teamMember]\n    )\n\n    const onChangeOverridesType = (e) => {\n        setOverrideAmount(null)\n        setOverrideType(e.target.value)\n    }\n\n    const onChangeInputDataWithLimit = (e) => {\n        if (percentageLimitCheck(100, e.target.value)) setOverrideAmount(e.target.value)\n    }\n\n    const onChangeOverrideAmount = (e) => {\n        setOverrideAmount(e.target.value)\n    }\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='500'\n            title='Add new | Manual Override'\n        >\n            <form onSubmit={addOverride}>\n                {/* body */}\n                <div\n                    className='my-sm-20 my-10 w-sm-100 '\n                    style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n                >\n                    <CustomLoader full visible={loading} />\n\n                    <div className='d-flex gap-sm-10 gap-5 my-10 w-sm-75 mx-auto align-items-end'>\n                        <div className='w-100'>\n                            <div className='w-100'>\n                                <CustomDatePicker\n                                    required\n                                    label={'Effective date'}\n                                    name='effective_date'\n                                    onChange={(e) => setEffectiveDate(e?.target?.value)}\n                                    value={effectiveDate}\n                                    placeholder='Select / Effective Date'\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='d-flex gap-sm-10 gap-5 mb-10 w-sm-75 mx-auto align-items-end'>\n                        <div className=''>\n                            <CustomInput\n                                prefixText={overrideType == 'percent' ? '%' : '$'}\n                                required\n                                label={`Overrides on ${employeeData?.first_name} ${employeeData?.last_name}`}\n                                type={INPUT_TYPE.number}\n                                placeholder={\n                                    overrideType == 'percent' ? 'Enter Percent' : 'Enter Amount'\n                                }\n                                value={overrideAmount}\n                                onChange={\n                                    overrideType == 'percent'\n                                        ? onChangeInputDataWithLimit\n                                        : onChangeOverrideAmount\n                                }\n                            />{' '}\n                        </div>\n\n                        <CustomDropdown\n                            options={OVERRIDE_TYPE}\n                            onChange={onChangeOverridesType}\n                            value={overrideType}\n                            searching={false}\n                        />\n                    </div>\n                    <div className=''>\n                        <div className='modal-body'>\n                            <div\n                                className='d-flex justify-content-center mb-10'\n                                style={{color: '#424242', fontWeight: '600', fontSize: '16px'}}\n                            >\n                                Who will get this override <span className='text-danger'>*</span>\n                                <label\n                                    className='btn ms-0 cursor-pointer'\n                                    style={{\n                                        fontWeight: '700',\n                                        fontSize: '14px',\n                                        color: '#6078EC',\n                                        marginTop: '-7px',\n                                    }}\n                                    // onClick={() => {\n                                    //   handleUse(selectedTemplate)\n                                    // }}\n                                >\n                                    {/* {selectedTemplate?.template_name} */}\n                                </label>\n                            </div>\n                            <div className='container d-flex justify-content-center '>\n                                <div className='row w-sm-800px' style={{position: 'relative'}}>\n                                    <div className='d-flex justify-content-center gap-10 mb-5'>\n                                        {teamMember?.map((item, index) => (\n                                            <div\n                                                key={`employee-${item?.id}`}\n                                                className='text-center'\n                                            >\n                                                <div\n                                                    className='ms-16 bi bi-x-circle-fill'\n                                                    onClick={() => onRemovePress(item?.id)}\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                        marginBottom: '-20px',\n                                                        zIndex: '450',\n                                                        left: '50',\n                                                        fontSize: '18px',\n                                                        color: '#6078EC',\n                                                    }}\n                                                />\n                                                <div style={{zIndex: '50px'}}>\n                                                    <CustomImage\n                                                        src={item?.image}\n                                                        className='avatar'\n                                                        style={{width: '48px', height: '48px'}}\n                                                        alt=''\n                                                    />\n                                                </div>\n                                                <div\n                                                    style={{\n                                                        fontWeight: '500',\n                                                        fontSize: '12px',\n                                                        color: '#868686',\n                                                    }}\n                                                >{`${item?.first_name} ${item?.last_name}`}</div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div className='d-sm-flex justify-content-center'>\n                                        <div className='w-sm-325px'>\n                                            <div\n                                                style={{\n                                                    background: '#F5F5F5',\n                                                    height: '43px',\n                                                    borderRadius: '20px',\n                                                }}\n                                                className='w-md-100 mb-0'\n                                                id='kt_chat_contacts_header'\n                                            >\n                                                <input\n                                                    autoComplete='off'\n                                                    style={{\n                                                        background: '#EEEEEE',\n                                                        borderRadius: '10px',\n                                                    }}\n                                                    value={search}\n                                                    type='text'\n                                                    className='form-control form-control-solid px-12 '\n                                                    name='search'\n                                                    placeholder='Search...'\n                                                    onChange={onChangeSearch}\n                                                />\n                                            </div>\n                                            {search ? (\n                                                <div\n                                                    className='shadow'\n                                                    style={{\n                                                        position: 'absolute',\n                                                        backgroundColor: 'white',\n                                                        borderBottomLeftRadius: 10,\n                                                        borderBottomRightRadius: 10,\n                                                    }}\n                                                >\n                                                    <div\n                                                        className=' h-150px '\n                                                        style={{\n                                                            overflowY: 'scroll',\n                                                        }}\n                                                    >\n                                                        <CustomLoader visible={tableLoder} />\n                                                        {search &&\n                                                            selectedEmployees?.map((item) => {\n                                                                const isThereInTeamList =\n                                                                    teamMember?.some(\n                                                                        (tItem) =>\n                                                                            tItem?.id == item?.id\n                                                                    )\n                                                                return (\n                                                                    item?.id !=\n                                                                        employeeData?.id && (\n                                                                        <div\n                                                                            key={item?.id}\n                                                                            className='d-flex my-5 mx-5 bg-cmwhite cursor-pointer shadow-sm justify-content-between py-2 px-5'\n                                                                            style={{\n                                                                                backgroundColor:\n                                                                                    '#F5F5F5',\n                                                                                borderRadius:\n                                                                                    '10px',\n                                                                            }}\n                                                                            onClick={() => {\n                                                                                !isThereInTeamList &&\n                                                                                    onOptionPress(\n                                                                                        item\n                                                                                    )\n                                                                            }}\n                                                                        >\n                                                                            <div className=''>\n                                                                                <span\n                                                                                    style={{\n                                                                                        color: '#424242',\n                                                                                        fontWeight:\n                                                                                            '500',\n                                                                                        fontSize:\n                                                                                            '14px',\n                                                                                        fontFamily:\n                                                                                            'Manrope',\n                                                                                    }}\n                                                                                >\n                                                                                    <CustomImage\n                                                                                        src={\n                                                                                            item?.image\n                                                                                        }\n                                                                                        className='avatar me-3'\n                                                                                    />\n                                                                                </span>\n                                                                                <span\n                                                                                    style={{\n                                                                                        fontSize:\n                                                                                            '14px',\n                                                                                        fontWeight:\n                                                                                            '500',\n                                                                                        color: '#5E6278',\n                                                                                    }}\n                                                                                >\n                                                                                    {item?.name}({' '}\n                                                                                    {\n                                                                                        item\n                                                                                            ?.position_detail\n                                                                                            ?.position_name\n                                                                                    }{' '}\n                                                                                    )\n                                                                                </span>\n                                                                            </div>\n                                                                            {isThereInTeamList && (\n                                                                                <div className=''>\n                                                                                    <img\n                                                                                        src={arr084}\n                                                                                        alt=''\n                                                                                        className='avatar me-3'\n                                                                                    />\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    )\n                                                                )\n                                                            })}\n                                                    </div>\n                                                    {search ? (\n                                                        <div className='text-center mb-5 mx-5'>\n                                                            <button\n                                                                className='btn bg-cmBlue-Crayola text-cmwhite w-sm-250px py-2 mt-5 px-0'\n                                                                style={{\n                                                                    fontWeight: 700,\n                                                                    fontSize: '16px',\n                                                                }}\n                                                                onClick={(e) => setSearch('')}\n                                                            >\n                                                                Close\n                                                            </button>\n                                                        </div>\n                                                    ) : null}\n                                                </div>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                    {/* button ends*/}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='text-center mb-20'>\n                    <button\n                        // type='submit'\n                        className='btn bg-cmBlue-Crayola text-cmwhite w-sm-250px '\n                        style={{fontWeight: 700, fontSize: '16px'}}\n                        onClick={(e) => addOverride(e)}\n                    >\n                        Add Override\n                    </button>\n                </div>\n            </form>\n        </CustomModal>\n    )\n}\n\nexport {AddNewOverrideOnEmployePop}\n","import {useState, useCallback, useMemo} from 'react'\nimport {\n    addManualOverrideFromService,\n    getRecuiterFilterService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomImage from '../../../../../../../customComponents/customImage/CustomImage'\nimport debounce from 'lodash.debounce'\nimport arr084 from '../../../../../standard_manager/management/component/team/assets/arr084.png'\nimport {\n    getErrorMessageFromResponse,\n    isEmptyObjectValue,\n    percentageLimitCheck,\n} from '../../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {OVERRIDE_TYPE, getValidDate} from '../../../../../../../constants/constants'\nimport useValidation from '../../../../../../../hooks/useValidation'\nimport {\n    ADD_MANUAL_OVERRIDE,\n    AddNewOverrideOfEmploye,\n} from '../../../../../../../validations/validations'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\n\nconst AddNewOverrideOfEmployePop = ({show, handleClose, employeeData, manualOverrideData}) => {\n    const [selectedEmployee, setSelectedEmployee] = useState(null)\n    const [overrideAmount, setOverrideAmount] = useState(null)\n    const [overrideType, setOverrideType] = useState('per sale')\n    const [loading, setLoading] = useState(false)\n    const [teamMember, setTeamMember] = useState([])\n    const [search, setSearch] = useState(null)\n    const [searchVal, setSearchVal] = useState(null)\n    const [effectiveDate, setEffectiveDate] = useState(null)\n    const [selectedEmployees, setSelectedEmployees] = useState(null)\n    const [tableLoder, setTableLoader] = useState(false)\n    const [validateOverrideData, OverrideErrorData] = useValidation()\n    const [addError, setAddError] = useState(ADD_MANUAL_OVERRIDE)\n\n    const manualOverrideUsers = useMemo(() => {\n        return manualOverrideData?.map((item) => item?.id)\n    }, [manualOverrideData])\n\n    const onSeachRecruiter = useCallback(\n        (searchText) =>\n            new Promise((resolve) => {\n                setTableLoader(true)\n                getRecuiterFilterService(searchText)\n                    .then((res) => {\n                        const filteredData = res?.data?.filter(\n                            (item) => !manualOverrideUsers.includes(item?.id)\n                        )\n                        const data = filteredData?.map((item) => ({\n                            ...item,\n                            name: `${item?.first_name} ${item?.last_name}`,\n                        }))\n                        setTableLoader(false)\n                        setSelectedEmployees(data)\n                        resolve(data)\n                    })\n                    .catch(() => {\n                        resolve([])\n                    })\n            }),\n        []\n    )\n    const onOptionPress = useCallback((item) => {\n        setTeamMember((val) => [\n            ...val,\n            {\n                first_name: item?.first_name,\n                last_name: item?.last_name,\n                id: item?.id,\n                image: item?.image,\n            },\n        ])\n        // setSelectedEmployee(null)\n    }, [])\n    const validate = (body) => {\n        const validationErrors = AddNewOverrideOfEmploye(body)\n        setAddError(validationErrors)\n        return isEmptyObjectValue(validationErrors)\n    }\n\n    const addOverride = (e) => {\n        e.preventDefault()\n        const userIds = teamMember?.map((item) => item?.id)\n\n        // if (userIds?.length <= 0) return CustomToast.error('Please select a employee')\n        // if (!effectiveDate) return CustomToast.error('Please select efective date')\n        // if (!overrideAmount) return CustomToast.error('Please select a override amount')\n        // if (!overrideType) return CustomToast.error('Please select a override type')\n\n        let body = {\n            manual_user_id: userIds,\n            user_id: employeeData?.id,\n            effective_date: getValidDate(effectiveDate, 'YYYY-MM-DD'),\n            overrides_amount: overrideAmount,\n            overrides_type: overrideType,\n        }\n        if (validate(body)) {\n            setLoading(true)\n            addManualOverrideFromService(body)\n                .then(() => {\n                    CustomToast.success('Added manual override')\n                    handleClose()\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n    const onChangeSearch = (e) => {\n        setSearchVal(e?.target?.value)\n        delaySearch(e?.target?.value)\n    }\n    const delaySearch = useCallback(\n        debounce((value) => {\n            setSearch(value)\n            onSeachRecruiter(value)\n        }, 500),\n        []\n    )\n    const onRemovePress = useCallback(\n        (id) => {\n            const updateTeam = teamMember?.filter((item) => item?.id !== id)\n            setTeamMember(updateTeam)\n        },\n        [teamMember]\n    )\n\n    const onChangeOverridesType = (e) => {\n        setOverrideAmount(null)\n        setOverrideType(e.target.value)\n    }\n\n    const onChangeInputDataWithLimit = (e) => {\n        if (percentageLimitCheck(100, e.target.value)) setOverrideAmount(e.target.value)\n    }\n\n    const onChnageOverrideAmount = (e) => {\n        setOverrideAmount(e.target.value)\n    }\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='500'\n            title=' Add new | Manual Override'\n        >\n            <form onSubmit={addOverride}>\n                {/* body */}\n                <div\n                    className='w-sm-100 mb-20 mx-sm-auto mx-5'\n                    style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n                >\n                    <CustomLoader full visible={loading} />\n\n                    <div style={{zIndex: 10}}>\n                        <div className='modal-body  py-lg-7'>\n                            <div className='d-flex justify-content-center gap-10 mb-5 w-100 overflow-auto mx-auto'>\n                                {teamMember?.map((item, index) => (\n                                    <div key={`employee-${item?.id}`} className='text-center'>\n                                        <div\n                                            className='ms-16 bi bi-x-circle-fill'\n                                            onClick={() => onRemovePress(item?.id)}\n                                            style={{\n                                                cursor: 'pointer',\n                                                marginBottom: '-20px',\n                                                zIndex: '450',\n                                                left: '50',\n                                                fontSize: '18px',\n                                                color: '#6078EC',\n                                            }}\n                                        />\n                                        <div style={{zIndex: '50px'}}>\n                                            <CustomImage\n                                                src={item?.image}\n                                                className='avatar'\n                                                style={{width: '48px', height: '48px'}}\n                                                alt=''\n                                            />\n                                        </div>\n                                        <div\n                                            style={{\n                                                fontWeight: '500',\n                                                fontSize: '12px',\n                                                color: '#868686',\n                                            }}\n                                        >{`${item?.first_name} ${item?.last_name}`}</div>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className='container d-flex justify-content-center'>\n                                <div className='row w-sm-800px' style={{position: 'relative'}}>\n                                    <div className='d-sm-flex mb-3 justify-content-center'>\n                                        <div className='w-sm-325px'>\n                                            <div\n                                                className='text-cmGrey700 required mb-1'\n                                                style={{fontWeight: '600', fontSize: '15px'}}\n                                            >\n                                                {' '}\n                                                Override from\n                                            </div>\n                                            <div className='w-md-100 mb-0'>\n                                                <input\n                                                    autoComplete='off'\n                                                    style={{\n                                                        background: '#EEEEEE',\n                                                        borderRadius: '10px',\n                                                    }}\n                                                    type='text'\n                                                    className='form-control form-control-solid px-5'\n                                                    name='search'\n                                                    value={searchVal}\n                                                    placeholder='Search...'\n                                                    onChange={onChangeSearch}\n                                                />\n                                                {addError.manual_user_id ? (\n                                                    <p\n                                                        className='text-cmError'\n                                                        style={{\n                                                            fontSize: '12px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                        }}\n                                                    >\n                                                        {addError.manual_user_id}\n                                                    </p>\n                                                ) : null}\n                                            </div>\n                                            {search ? (\n                                                <div\n                                                    className='shadow'\n                                                    style={{\n                                                        zIndex: 100,\n                                                        position: 'absolute',\n                                                        backgroundColor: 'white',\n                                                        borderBottomLeftRadius: 10,\n                                                        borderBottomRightRadius: 10,\n                                                    }}\n                                                >\n                                                    <div\n                                                        className=' h-150px '\n                                                        style={{\n                                                            overflowY: 'scroll',\n                                                        }}\n                                                    >\n                                                        <CustomLoader visible={tableLoder} />\n                                                        {search &&\n                                                            selectedEmployees?.map((item) => {\n                                                                const isThereInTeamList =\n                                                                    teamMember?.some(\n                                                                        (tItem) =>\n                                                                            tItem?.id == item?.id\n                                                                    )\n                                                                return (\n                                                                    item?.id !=\n                                                                        employeeData?.id && (\n                                                                        <div\n                                                                            key={item?.id}\n                                                                            className='d-flex my-5 mx-5 bg-cmwhite cursor-pointer shadow-sm justify-content-between py-2 px-5'\n                                                                            style={{\n                                                                                backgroundColor:\n                                                                                    '#F5F5F5',\n                                                                                borderRadius:\n                                                                                    '10px',\n                                                                            }}\n                                                                            onClick={() => {\n                                                                                !isThereInTeamList &&\n                                                                                    onOptionPress(\n                                                                                        item\n                                                                                    )\n                                                                            }}\n                                                                        >\n                                                                            <div className=''>\n                                                                                <span\n                                                                                    style={{\n                                                                                        color: '#424242',\n                                                                                        fontWeight:\n                                                                                            '500',\n                                                                                        fontSize:\n                                                                                            '14px',\n                                                                                        fontFamily:\n                                                                                            'Manrope',\n                                                                                    }}\n                                                                                >\n                                                                                    <CustomImage\n                                                                                        src={\n                                                                                            item?.image\n                                                                                        }\n                                                                                        className='avatar me-3'\n                                                                                    />\n                                                                                </span>\n                                                                                <span\n                                                                                    style={{\n                                                                                        fontSize:\n                                                                                            '14px',\n                                                                                        fontWeight:\n                                                                                            '500',\n                                                                                        color: '#5E6278',\n                                                                                    }}\n                                                                                >\n                                                                                    {item?.name}({' '}\n                                                                                    {\n                                                                                        item\n                                                                                            ?.subposition_detail\n                                                                                            ?.position_name\n                                                                                    }{' '}\n                                                                                    )\n                                                                                </span>\n                                                                            </div>\n                                                                            {isThereInTeamList && (\n                                                                                <div className=''>\n                                                                                    <img\n                                                                                        src={arr084}\n                                                                                        alt=''\n                                                                                        className='avatar me-3'\n                                                                                    />\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    )\n                                                                )\n                                                            })}\n                                                    </div>\n                                                    {search ? (\n                                                        <div className='text-center mb-5 mx-5'>\n                                                            <button\n                                                                className='btn bg-cmBlue-Crayola text-cmwhite w-sm-250px py-2 mt-5 px-0'\n                                                                style={{\n                                                                    fontWeight: 700,\n                                                                    fontSize: '16px',\n                                                                }}\n                                                                onClick={(e) => {\n                                                                    setSearch('')\n                                                                }}\n                                                            >\n                                                                Close\n                                                            </button>\n                                                        </div>\n                                                    ) : null}\n                                                </div>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                    {/* button ends*/}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{zIndex: -1}}>\n                        <div className='d-flex gap-sm-10 gap-5 my-10 w-sm-75 mx-auto align-items-end'>\n                            <div className='w-100'>\n                                <div className='w-100'>\n                                    <CustomDatePicker\n                                        required\n                                        label={'Effective date'}\n                                        name='effective_date'\n                                        onChange={(e) => setEffectiveDate(e?.target?.value)}\n                                        value={effectiveDate}\n                                        placeholder='Select / Effective Date'\n                                        errorMessage={addError?.effective_date}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='d-flex gap-sm-10 gap-5 mb-10 w-sm-75 mx-auto align-items-end'>\n                            <div className=''>\n                                <div className=''>\n                                    <CustomInput\n                                        label={`Override for ${employeeData?.first_name} ${employeeData?.last_name}`}\n                                        prefixText={overrideType == 'percent' ? '%' : '$'}\n                                        required\n                                        type={INPUT_TYPE.number}\n                                        placeholder={\n                                            overrideType == 'percent'\n                                                ? 'Enter Percent'\n                                                : 'Enter Amount'\n                                        }\n                                        value={overrideAmount}\n                                        onChange={\n                                            overrideType == 'percent'\n                                                ? onChangeInputDataWithLimit\n                                                : onChnageOverrideAmount\n                                        }\n                                        errorMessage={addError.overrides_amount}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <CustomDropdown\n                                    options={OVERRIDE_TYPE}\n                                    onChange={onChangeOverridesType}\n                                    value={overrideType}\n                                    searching={false}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='text-center mb-10'>\n                        <button\n                            // type='submit'\n                            className='btn bg-cmBlue-Crayola text-cmwhite w-sm-250px '\n                            style={{fontWeight: 700, fontSize: '16px'}}\n                            onClick={(e) => addOverride(e)}\n                        >\n                            Add Override\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </CustomModal>\n    )\n}\n\nexport {AddNewOverrideOfEmployePop}\n","import {useState, useEffect, useMemo, useCallback} from 'react'\nimport NetworkCard from './NetworkCard'\nimport NetworkOrg from './NetworkOrg'\nimport {\n    getEmployeeChartService,\n    getOverrideOnUserService,\n    getPositionSettingService,\n    getUserOverideService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {AddNewOverrideOnEmployePop} from './AddNewOverrideOnEmployePop'\nimport {AddNewOverrideOfEmployePop} from './AddNewOverrideOfEmployePop'\nimport AccessRights from '../../../../../../../accessRights/AccessRights'\nimport useCustomAccessRights from '../../../../../../../accessRights/useCustomAccessRights'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {useSelector} from 'react-redux'\nimport {getCompanyOverrideSettingSelector} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport {isUserSuperAdminSelector} from '../../../../../../../redux/selectors/AuthSelectors'\nimport useQueryString from '../../../../../../../hooks/useQueryString'\n\nconst NetorkPage = ({employeeData}) => {\n    const [searchParam] = useQueryString()\n    const [showChart, setShowChart] = useState(false)\n    const [overrideOnOff, setOverrideOnOff] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [newOverrideOfEmploye, setNewOverrideOfEmploye] = useState(false)\n    const [chartData, setChartData] = useState(null)\n    const [overrideData, setOverrideData] = useState(null)\n    const [overrideCategory, setOverrideCategory] = useState(searchParam?.networkType ?? 'all')\n    const [positionSetting, setPositionSettig] = useState()\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const companyOverrideSetting = useSelector(getCompanyOverrideSettingSelector)\n    const {employeeProfileAccess} = useCustomAccessRights({\n        employeeData,\n    })\n\n    useEffect(() => {\n        getPositionSettingService(employeeData?.sub_position_id).then((res) => {\n            setPositionSettig(res?.data)\n        })\n    }, [])\n\n    useEffect(() => {\n        if (employeeData?.id) {\n            setLoading(true)\n            getEmployeeChartService(employeeData?.id)\n                .then((res) => {\n                    setChartData(res.data)\n                })\n                .catch(() => setLoading(false))\n        }\n    }, [employeeData?.id])\n\n    useEffect(() => {\n        if (employeeData?.id) {\n            setLoading(true)\n            if (!overrideOnOff) {\n                getUserOverride()\n            } else {\n                getOverrideOnUser()\n            }\n        }\n    }, [overrideOnOff, employeeData?.id])\n\n    const getUserOverride = () => {\n        if (employeeData?.id) {\n            getUserOverideService(employeeData?.id)\n                .then((res) => {\n                    setOverrideData(res.data)\n                })\n                .catch(() => {})\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n    const getOverrideOnUser = () => {\n        getOverrideOnUserService(employeeData?.id && employeeData?.id)\n            .then((res) => {\n                setOverrideData(res.data)\n            })\n            .catch(() => {})\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n        getOverrideOnUser()\n    }\n    const newOverrideOfEmployeClose = () => {\n        setNewOverrideOfEmploye(false)\n        getUserOverride()\n    }\n    const categoryChange = (e) => {\n        setOverrideCategory(e.target.value)\n    }\n    const overrideDropDownList = useMemo(() => {\n        const tempData = [\n            {name: 'All', value: 'all'},\n            {name: 'Direct', value: 'direct'},\n            {name: 'Indirect', value: 'indirect'},\n            {name: 'Office', value: 'office'},\n            {name: 'Manual', value: 'manual'},\n        ]\n        return tempData\n    }, [])\n\n    const showOverrides = useMemo(() => {\n        return {\n            direct:\n                (overrideCategory == 'direct' || overrideCategory == 'all') &&\n                overrideData?.direct?.length > 0\n                    ? positionSetting?.direct_overrides_status && !overrideOnOff\n                        ? true\n                        : overrideOnOff\n                    : false,\n            indirect:\n                (overrideCategory == 'indirect' || overrideCategory == 'all') &&\n                overrideData?.indirect?.length > 0\n                    ? positionSetting?.indirect_overrides_status && !overrideOnOff\n                        ? true\n                        : overrideOnOff\n                    : false,\n            office:\n                (overrideCategory == 'office' || overrideCategory == 'all') &&\n                overrideData?.office?.length > 0\n                    ? positionSetting?.office_overrides_status && !overrideOnOff\n                        ? true\n                        : overrideOnOff\n                    : false,\n            manual:\n                (overrideCategory == 'manual' || overrideCategory == 'all') &&\n                overrideData?.manual?.length > 0 &&\n                companyOverrideSetting?.allow_manual_override_status\n                    ? !overrideOnOff\n                        ? true\n                        : overrideOnOff\n                    : false,\n        }\n    }, [\n        companyOverrideSetting?.allow_manual_override_status,\n        overrideCategory,\n        overrideData?.direct?.length,\n        overrideData?.indirect?.length,\n        overrideData?.manual?.length,\n        overrideData?.office?.length,\n        overrideOnOff,\n        positionSetting?.direct_overrides_status,\n        positionSetting?.indirect_overrides_status,\n        positionSetting?.office_overrides_status,\n    ])\n\n    const overrideCount = useMemo(() => {\n        return (\n            (showOverrides.direct ? overrideData?.direct?.length : 0) +\n            (showOverrides.indirect ? overrideData?.indirect?.length : 0) +\n            (showOverrides.office ? overrideData?.office?.length : 0) +\n            (showOverrides.manual ? overrideData?.manual?.length : 0)\n        )\n    }, [\n        overrideData?.direct?.length,\n        overrideData?.indirect?.length,\n        overrideData?.manual?.length,\n        overrideData?.office?.length,\n        showOverrides.direct,\n        showOverrides.indirect,\n        showOverrides.manual,\n        showOverrides.office,\n    ])\n\n    const hideDisabledOverrideForNormalUser = useCallback(\n        (item) => {\n            return isSuperAdmin || (!isSuperAdmin && item?.status == 0)\n        },\n        [isSuperAdmin]\n    )\n\n    return (\n        <div style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n\n            <div className='d-flex flex-wrap justify-content-between align-items-center mb-10'>\n                <div className='text-gray-900' style={{fontWeight: '600', fontSize: '20PX'}}>\n                    {overrideData?.first_name ? (\n                        <>\n                            {!overrideOnOff\n                                ? overrideData?.first_name +\n                                  \"'s \" +\n                                  'Override' +\n                                  '(' +\n                                  overrideCount +\n                                  ')'\n                                : 'Override on' +\n                                  ' ' +\n                                  overrideData?.first_name +\n                                  '(' +\n                                  overrideCount +\n                                  ')'}\n                        </>\n                    ) : null}\n                </div>\n                <div className='d-flex flex-wrap gap-sm-10 gap-5 align-items-center'>\n                    <AccessRights\n                        customCondition={employeeProfileAccess.showOverridesOnButtonAccess}\n                    >\n                        {!showChart && (\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.secondary}\n                                buttonLabel={\n                                    !overrideOnOff\n                                        ? 'Overrides on' + ' ' + (overrideData?.first_name ?? '')\n                                        : (overrideData?.first_name ?? '') + ' ' + 'Overrides'\n                                }\n                                onClick={() => setOverrideOnOff(!overrideOnOff)}\n                            />\n                        )}\n                    </AccessRights>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.secondary}\n                        buttonLabel={!showChart ? 'Org. Chart' : 'Override'}\n                        onClick={() => setShowChart(!showChart)}\n                    />\n\n                    <AccessRights\n                        forSuperAdmin={false}\n                        customCondition={\n                            isSuperAdmin &&\n                            companyOverrideSetting?.allow_manual_override_status &&\n                            employeeProfileAccess.addManualOverrideAccess\n                        }\n                    >\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel='Add New'\n                            onClick={() => {\n                                overrideOnOff ? setOpen(true) : setNewOverrideOfEmploye(true)\n                            }}\n                        />\n                    </AccessRights>\n                    <div>\n                        <CustomDropdown\n                            searching={false}\n                            onChange={categoryChange}\n                            showClear={false}\n                            options={overrideDropDownList}\n                            value={overrideCategory}\n                        />\n                    </div>\n                </div>\n            </div>\n            {!showChart &&\n            (overrideData?.direct?.length > 0 ||\n                overrideData?.indirect?.length > 0 ||\n                overrideData?.manual?.length > 0 ||\n                overrideData?.office?.length > 0) ? (\n                <div className='d-flex gap-15 justify-content-center flex-wrap'>\n                    {/* // Direct */}\n                    {showOverrides.direct ? (\n                        overrideData?.direct?.map((item) =>\n                            hideDisabledOverrideForNormalUser(item) ? (\n                                <NetworkCard\n                                    key={item?.id}\n                                    showEnableDisableButton={\n                                        employeeProfileAccess.showEnableDisableOverrideButttonAccess\n                                    }\n                                    data={item}\n                                    userId={overrideData?.id}\n                                    overrideOnOff={overrideOnOff}\n                                    Type='Direct'\n                                    getData={() => {\n                                        if (!overrideOnOff) {\n                                            getUserOverride()\n                                        } else {\n                                            getOverrideOnUser()\n                                        }\n                                    }}\n                                />\n                            ) : null\n                        )\n                    ) : overrideCategory == 'direct' ? (\n                        <div className='d-flex justify-content-center align-item-center py-20 my-20 text-gray-900'>\n                            <span style={{fontWeight: '600', fontSize: '20PX'}}>No Overrides</span>\n                        </div>\n                    ) : null}\n\n                    {/* Indirect */}\n                    {showOverrides.indirect ? (\n                        overrideData?.indirect?.map((item) =>\n                            hideDisabledOverrideForNormalUser(item) ? (\n                                <NetworkCard\n                                    key={item?.id}\n                                    data={item}\n                                    showEnableDisableButton={\n                                        employeeProfileAccess.showEnableDisableOverrideButttonAccess\n                                    }\n                                    Type='Indirect'\n                                    userId={overrideData?.id}\n                                    overrideOnOff={overrideOnOff}\n                                    getData={() => {\n                                        if (!overrideOnOff) {\n                                            getUserOverride()\n                                        } else {\n                                            getOverrideOnUser()\n                                        }\n                                    }}\n                                />\n                            ) : null\n                        )\n                    ) : overrideCategory == 'indirect' ? (\n                        <div className='d-flex justify-content-center align-item-center py-20 my-20 text-gray-900'>\n                            <span style={{fontWeight: '600', fontSize: '20PX'}}>No Overrides</span>\n                        </div>\n                    ) : null}\n\n                    {showOverrides.office ? (\n                        overrideData?.office?.map((item) =>\n                            hideDisabledOverrideForNormalUser(item) ? (\n                                <NetworkCard\n                                    key={item?.id}\n                                    data={item}\n                                    Type='Office'\n                                    showEnableDisableButton={\n                                        employeeProfileAccess.showEnableDisableOverrideButttonAccess\n                                    }\n                                    userId={overrideData?.id}\n                                    overrideOnOff={overrideOnOff}\n                                    getData={() => {\n                                        if (!overrideOnOff) {\n                                            getUserOverride()\n                                        } else {\n                                            getOverrideOnUser()\n                                        }\n                                    }}\n                                />\n                            ) : null\n                        )\n                    ) : overrideCategory == 'office' ? (\n                        <div className='d-flex justify-content-center align-item-center py-20 my-20 text-gray-900'>\n                            <span style={{fontWeight: '600', fontSize: '20PX'}}>No Overrides</span>\n                        </div>\n                    ) : null}\n\n                    {showOverrides.manual ? (\n                        overrideData?.manual?.map((item) =>\n                            hideDisabledOverrideForNormalUser(item) ? (\n                                <NetworkCard\n                                    key={item?.id}\n                                    employeeData={employeeData}\n                                    data={item}\n                                    Type='Manual'\n                                    showEnableDisableButton={\n                                        employeeProfileAccess.showEnableDisableOverrideButttonAccess\n                                    }\n                                    userId={overrideData?.id}\n                                    overrideOnOff={overrideOnOff}\n                                    getData={() => {\n                                        if (!overrideOnOff) {\n                                            getUserOverride()\n                                        } else {\n                                            getOverrideOnUser()\n                                        }\n                                    }}\n                                />\n                            ) : null\n                        )\n                    ) : overrideCategory == 'manual' ? (\n                        <div className='d-flex justify-content-center align-item-center py-20 my-20 text-gray-900'>\n                            <span style={{fontWeight: '600', fontSize: '20PX'}}>No Overrides</span>\n                        </div>\n                    ) : null}\n                </div>\n            ) : (\n                <>\n                    {!showChart && (\n                        <div className='d-flex justify-content-center align-item-center py-20 my-20 text-gray-900'>\n                            <span style={{fontWeight: '600', fontSize: '20PX'}}>No Overrides</span>\n                        </div>\n                    )}\n                </>\n            )}\n\n            {showChart && (\n                <div>\n                    <NetworkOrg chartData={chartData} />\n                </div>\n            )}\n\n            {open ? (\n                <AddNewOverrideOnEmployePop\n                    manualOverrideData={overrideData?.manual}\n                    show={open}\n                    handleClose={handleClose}\n                    employeeData={employeeData}\n                />\n            ) : null}\n            {newOverrideOfEmploye ? (\n                <AddNewOverrideOfEmployePop\n                    manualOverrideData={overrideData?.manual}\n                    show={newOverrideOfEmploye}\n                    handleClose={newOverrideOfEmployeClose}\n                    employeeData={employeeData}\n                />\n            ) : null}\n        </div>\n    )\n}\n\nexport default NetorkPage\n","import React, {useState, useEffect} from 'react'\nimport {\n    getPermissionService,\n    getPermissionGroupListService,\n    updateEmployeeGroupService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport AccessRights from '../../../../../../../accessRights/AccessRights'\nimport useCustomAccessRights from '../../../../../../../accessRights/useCustomAccessRights'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport _ from 'lodash'\n\nconst PermissionsPage = ({employeeData, getEmployeeProfile}) => {\n    const [editMode, setEditMode] = useState(false)\n    const [policyList, setPolicyList] = useState([])\n    const [dropDownList, setDropDownList] = useState(null)\n    const [groupid, setGroupId] = useState(employeeData?.group_id)\n    const [loading, setLoading] = useState(true)\n    const {employeeProfileAccess} = useCustomAccessRights({employeeData})\n\n    useEffect(() => {\n        getEmployeeProfile()\n    }, [])\n\n    useEffect(() => {\n        if (employeeData?.group_id) {\n            getPolicyList(employeeData?.group_id)\n        }\n        getPermissionGroupListService()\n            .then((res) => {\n                setDropDownList(res.data)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [employeeData?.group_id])\n\n    const getPolicyList = (id) => {\n        getPermissionService(id).then((res) => {\n            const data = _.cloneDeep(res?.data)\n            const finalData = data?.map((item) => {\n                let dataItem = {...item, is_open: false}\n                dataItem.groupPolicy = dataItem?.groupPolicy?.map((subItem) => ({\n                    ...subItem,\n                    is_open: false,\n                }))\n                return dataItem\n            })\n            setPolicyList(finalData)\n        })\n    }\n    const handleView = (policyListIndex, policyIndex) => {\n        const data = _.cloneDeep(policyList)\n        data[policyListIndex].groupPolicy[policyIndex].is_open =\n            !data?.[policyListIndex]?.groupPolicy?.[policyIndex]?.is_open\n        setPolicyList(data)\n    }\n\n    const handleMainView = (policyListIndex) => {\n        const data = _.cloneDeep(policyList)\n        data[policyListIndex].is_open = !data[policyListIndex].is_open\n        setPolicyList(data)\n    }\n\n    const chnageID = (e) => {\n        setGroupId(e.target.value)\n    }\n    const updateGroup = () => {\n        setLoading(true)\n        const body = {\n            group_id: groupid,\n            user_id: employeeData?.id,\n        }\n        updateEmployeeGroupService(body)\n            .then(() => {\n                getEmployeeProfile()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setEditMode(!editMode)\n                CustomToast.success('Group Updated')\n                setLoading(false)\n            })\n    }\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader visible={loading} full />\n\n            <div\n                className='bg-cmwhite shadow-sm'\n                style={{borderRadius: '10px', fontSize: '14px', fontFamily: 'Manrope'}}\n            >\n                {/* Begins header */}\n                <div className='d-flex align-items-center justify-content-between flex-wrap gap-5 p-5'>\n                    {/* Texts */}\n                    <div\n                        className='d-flex align-items-center gap-5 mx-sm-0 mx-auto'\n                        style={{fontSize: '18px', fontFamily: 'Manrope', fontWeight: '600'}}\n                    >\n                        <div>Group:</div>\n                        {!editMode && <div>{employeeData?.group_name}</div>}\n                        {editMode && (\n                            <div>\n                                <CustomDropdown\n                                    onChange={(e) => chnageID(e)}\n                                    value={groupid}\n                                    options={dropDownList}\n                                    valueKey='group_id'\n                                    displayKey='group_name'\n                                />\n                            </div>\n                        )}\n                    </div>\n                    {/* Buttons */}\n                    <AccessRights customCondition={employeeProfileAccess.editPermissionsAccess}>\n                        <>\n                            {!editMode && <CustomEditIcon onClick={() => setEditMode(!editMode)} />}\n                            {editMode && (\n                                <div className='d-flex aligns-items-center gap-5 mx-sm-0 mx-auto'>\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.greyText}\n                                        buttonLabel='Cancel'\n                                        buttonSize={BUTTON_SIZE.small}\n                                        onClick={() => setEditMode(!editMode)}\n                                    />\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.secondary}\n                                        buttonLabel='Save'\n                                        buttonSize={BUTTON_SIZE.small}\n                                        onClick={updateGroup}\n                                    />\n                                </div>\n                            )}\n                        </>\n                    </AccessRights>\n                </div>\n                <hr className='py-0 my-0 text-cmgrey100' />\n\n                <div className='p-5'>\n                    {policyList?.length > 0 ? (\n                        policyList?.map((policyListItem, policyListIndex, allPolicyList) => {\n                            return (\n                                <div\n                                    key={policyListIndex}\n                                    className='px-10'\n                                    style={{\n                                        fontWeight: '600',\n                                        fontFamily: 'Manrope',\n                                        fontSize: '16px',\n                                    }}\n                                >\n                                    <div\n                                        className='d-flex gap-3 align-items-start my-5'\n                                        key='no-permissions'\n                                    >\n                                        <CustomArrow\n                                            onClick={() => handleMainView(policyListIndex)}\n                                            arrowDirection={\n                                                policyListItem?.is_open\n                                                    ? ARROW_DIRECTION.right\n                                                    : ARROW_DIRECTION.down\n                                            }\n                                        />\n                                        <span className='text-cmBlack text-nowrap'>\n                                            {' '}\n                                            {policyListItem?.guard_name} :\n                                        </span>{' '}\n                                        <span className='text-cmGrey600'>\n                                            {policyListItem?.groupPolicy\n                                                ?.map((subItem) => subItem?.policies)\n                                                ?.join(', ')}\n                                        </span>\n                                    </div>\n\n                                    {policyListItem?.is_open\n                                        ? policyListItem?.groupPolicy?.map(\n                                              (heading, policyIndex) => {\n                                                  return (\n                                                      <div\n                                                          key={`${policyListIndex}-${policyIndex}`}\n                                                      >\n                                                          {\n                                                              <div>\n                                                                  <hr className='py-0 my-0 text-cmgrey100' />\n                                                                  <div className='d-flex gap-3 align-items-center my-5'>\n                                                                      <span className='text-cmGrey700'>\n                                                                          {heading?.policies}\n                                                                      </span>{' '}\n                                                                      <CustomArrow\n                                                                          onClick={() =>\n                                                                              handleView(\n                                                                                  policyListIndex,\n                                                                                  policyIndex\n                                                                              )\n                                                                          }\n                                                                          arrowDirection={\n                                                                              heading?.is_open\n                                                                                  ? ARROW_DIRECTION.right\n                                                                                  : ARROW_DIRECTION.down\n                                                                          }\n                                                                      />\n                                                                  </div>\n                                                              </div>\n                                                          }\n                                                          {heading?.is_open\n                                                              ? heading?.policyTab?.map(\n                                                                    (tab, policyTabIndex) => {\n                                                                        return (\n                                                                            <div\n                                                                                className=''\n                                                                                key={`${policyListIndex}-${policyIndex}-${policyTabIndex}`}\n                                                                            >\n                                                                                <div className='my-5'>\n                                                                                    <div className='form-check form-check-custom form-check-solid'>\n                                                                                        <label className='form-check-label text-cmGrey900'>\n                                                                                            {\n                                                                                                tab?.tabs\n                                                                                            }\n                                                                                        </label>\n                                                                                    </div>\n\n                                                                                    <div className='ps-sm-20 ps-10 d-sm-flex align-items-center gap-20 mt-5'>\n                                                                                        {tab?.submodule?.map(\n                                                                                            (\n                                                                                                permission,\n                                                                                                permissionIndex\n                                                                                            ) => {\n                                                                                                return (\n                                                                                                    <div\n                                                                                                        className='form-check form-check-custom form-check-solid'\n                                                                                                        key={\n                                                                                                            permissionIndex\n                                                                                                        }\n                                                                                                    >\n                                                                                                        <label className='form-check-label text-cmGrey700'>\n                                                                                                            {\n                                                                                                                permission?.guard_name\n                                                                                                            }\n                                                                                                        </label>\n                                                                                                    </div>\n                                                                                                )\n                                                                                            }\n                                                                                        )}\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div className='border border-cmGrey300'></div>\n                                                                            </div>\n                                                                        )\n                                                                    }\n                                                                )\n                                                              : null}\n                                                      </div>\n                                                  )\n                                              }\n                                          )\n                                        : null}\n                                    {allPolicyList?.length - 1 != policyListIndex ? <hr /> : null}\n                                </div>\n                            )\n                        })\n                    ) : (\n                        <div className='d-flex gap-3 align-items-center my-5'>\n                            <h2\n                                style={{\n                                    textAlign: 'center',\n                                    marginLeft: '45%',\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '500',\n                                    fontSize: 14,\n                                    paddingTop: 20,\n                                    paddingBottom: 20,\n                                }}\n                            >\n                                No Permissions\n                            </h2>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PermissionsPage\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Dialog} from 'primereact/dialog'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    getAllManagerListService,\n    getTeamListService,\n    getUserEmploymentPackageDetailService,\n    transferEmployeeService,\n} from '../../../../../services/Services'\nimport _ from 'lodash'\nimport {getErrorMessageFromResponse} from '../../../../../helpers/CommonHelpers'\nimport {transferValidation} from '../../../../../validations/validations'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomDatePicker from '../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport {\n    MAIN_POSITTIONS_ID,\n    UNIT_TYPE2,\n    getValidDate,\n    SHOW_BASED_ON_HOST,\n} from '../../../../../constants/constants'\nimport {useSelector} from 'react-redux'\nimport {\n    getDepartmentWithPositionSelector,\n    geyAllStatesWithOfficesSelector,\n} from '../../../../../redux/selectors/SettingsSelectors'\nimport useValidation from '../../../../../hooks/useValidation'\nimport {useNavigate} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\nimport {getDepartmentWithPositionAction} from '../../../../../redux/actions/SettingActions'\n\nconst TransferModal = ({show, handleClose, userId, getProfile}) => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const [managerList, setManagerList] = useState([])\n    const [employeeData, setEmployeeData] = useState(null)\n    const [oldOfficeManagerList, setOldOfficeManagerList] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [transferEmployeeData, setsetTransferEmployeeData] = useState({\n        user_id: null,\n        effective_date: null,\n        state_id: null,\n        office_id: null,\n        manager_id: null,\n        team_id: null,\n        redline_amount_type: null,\n        redline: null,\n        redline_type: null,\n        self_gen_redline_amount_type: null,\n        self_gen_redline: null,\n        self_gen_redline_type: null,\n        existing_employee_new_manager_id: null,\n    })\n    const allStatesWithOffices = useSelector(geyAllStatesWithOfficesSelector)\n    const departmentWithPositionList = useSelector(getDepartmentWithPositionSelector)\n    const [teamList, setTeamList] = useState([])\n    const [validateTransferedData, transferedErrorData] = useValidation()\n\n    useEffect(() => {\n        dispatch(getDepartmentWithPositionAction())\n    }, [])\n\n    useEffect(() => {\n        if (transferEmployeeData?.office_id) {\n            getTeamListService(transferEmployeeData?.office_id).then((res) => {\n                setTeamList(res?.data)\n            })\n        }\n    }, [transferEmployeeData?.office_id])\n    useEffect(() => {\n        if (userId) {\n            setLoading(true)\n            getUserEmploymentPackageDetailService(userId)\n                .then((res) => {\n                    const employeeCompensation = res?.data?.employee_compensation\n                    setsetTransferEmployeeData({\n                        ...transferEmployeeData,\n                        redline_amount_type: employeeCompensation?.[0]?.redline_amount_type,\n                        redline: employeeCompensation?.[0]?.redline,\n                        redline_type: employeeCompensation?.[0]?.redline_type,\n                        self_gen_redline_amount_type:\n                            employeeCompensation?.[1]?.redline_amount_type,\n                        self_gen_redline: employeeCompensation?.[1]?.redline,\n                        self_gen_redline_type: employeeCompensation?.[1]?.redline_type,\n                    })\n                    setEmployeeData(res?.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [userId])\n\n    useEffect(() => {\n        if (transferedErrorData?.beginValidating) {\n            validateTransferedData(transferValidation(transferEmployeeData, employeeData))\n        }\n    }, [transferEmployeeData])\n\n    useEffect(() => {\n        if (transferEmployeeData?.office_id) {\n            getAllManagerListService(transferEmployeeData?.office_id).then((res) => {\n                setManagerList(res?.data)\n            })\n        }\n    }, [transferEmployeeData?.office_id])\n\n    useEffect(() => {\n        if (employeeData?.office_id) {\n            getAllManagerListService(employeeData?.office_id).then((res) => {\n                setOldOfficeManagerList(res?.data)\n            })\n        }\n    }, [employeeData?.office_id])\n\n    const positionList = useMemo(\n        () =>\n            departmentWithPositionList?.find((item) => item?.id == employeeData?.department_id)\n                ?.position,\n        [departmentWithPositionList, employeeData?.department_id]\n    )\n\n    const onTransfer = useCallback(() => {\n        const body = {...transferEmployeeData}\n        body.user_id = employeeData?.id\n        body.effective_date = getValidDate(body?.effective_date, 'YYYY/MM/DD')\n        validateTransferedData(transferValidation(transferEmployeeData, employeeData)).then(\n            (res) => {\n                if (res.isValidate) {\n                    setLoading(true)\n                    transferEmployeeService(body)\n                        .then(() => {\n                            handleClose()\n                            navigate(`/user/personal-info?employeeId=${userId}`)\n                            CustomToast.success('Employee has been transferred')\n                        })\n                        .catch((e) => {\n                            CustomToast.error(getErrorMessageFromResponse(e))\n                        })\n                        .finally(() => setLoading(false))\n                }\n            }\n        )\n        return\n    }, [employeeData, handleClose, navigate, transferEmployeeData, userId, validateTransferedData])\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            const data = _.cloneDeep(transferEmployeeData)\n            data[e?.target?.name] = e?.target?.value\n            setsetTransferEmployeeData(data)\n        },\n        [transferEmployeeData]\n    )\n\n    const managerNames = useMemo(() => {\n        const filteredData = managerList?.filter((item) => item?.id != employeeData?.id)\n        return filteredData?.map((item) => ({\n            ...item,\n            name: `${item?.first_name}  ${item?.last_name}`,\n        }))\n    }, [employeeData?.id, managerList])\n\n    const oldOfficeManagerNames = useMemo(() => {\n        const filteredData = oldOfficeManagerList?.filter((item) => item?.id != employeeData?.id)\n        return filteredData?.map((item) => ({\n            ...item,\n            name: `${item?.first_name}  ${item?.last_name}`,\n        }))\n    }, [employeeData?.id, oldOfficeManagerList])\n\n    return (\n        <Dialog\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            header={() => (\n                <div\n                    className=' mb-0 text-center mb-7 '\n                    style={{\n                        fontSize: '16px',\n                        color: '#0D1821',\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                    }}\n                >\n                    Transfer Employee - {employeeData?.first_name} {employeeData?.last_name}\n                </div>\n            )}\n            footer={() => (\n                <div className='text-lg-center text-center pt-5'>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel='Transfer'\n                        onClick={onTransfer}\n                        buttonSize={BUTTON_SIZE.large}\n                        disabled={loading}\n                    />\n                </div>\n            )}\n            icons={false}\n            className='mw-sm-750px w-sm-75 w-100 '\n            visible={show}\n            onHide={handleClose}\n            backdrop='true'\n        >\n            <div\n                className='w-75 mx-auto'\n                style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n            >\n                <CustomLoader full visible={loading} />\n\n                <div className=''>\n                    <div className='modal-body  py-2 px-lg-0 mb-5'>\n                        <div\n                            className='py-2 px-lg-10 mb-3'\n                            style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                        >\n                            Transfer to\n                        </div>\n                        <div className='px-lg-10 '>\n                            <>\n                                <div\n                                    className='row gap-5 align-items-center mb-7'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    <div className='col-sm'>\n                                        <div>\n                                            <CustomDropdown\n                                                required\n                                                name={'state_id'}\n                                                label={'Office State'}\n                                                options={allStatesWithOffices}\n                                                onChange={onChangeInputData}\n                                                placeholder='Select Office State'\n                                                valueKey='id'\n                                                value={transferEmployeeData?.state_id}\n                                                errorMessage={transferedErrorData?.state_id}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className='col-sm '>\n                                        <div className=''>\n                                            <CustomDropdown\n                                                required\n                                                label={'Office Name'}\n                                                name='office_id'\n                                                options={allStatesWithOffices\n                                                    ?.find(\n                                                        (item) =>\n                                                            item?.id ==\n                                                            transferEmployeeData?.state_id\n                                                    )\n                                                    ?.office?.filter(\n                                                        (item) =>\n                                                            item?.id != employeeData?.office_id\n                                                    )}\n                                                onChange={onChangeInputData}\n                                                valueKey='id'\n                                                displayKey='office_name'\n                                                value={transferEmployeeData?.office_id}\n                                                placeholder={'Select Office'}\n                                                errorMessage={transferedErrorData?.office_id}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='row gap-5 align-items-center mb-7'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    <div className='col-sm'>\n                                        <div>\n                                            <CustomDropdown\n                                                required\n                                                disabled\n                                                label={'Department'}\n                                                options={departmentWithPositionList}\n                                                name={'department_id'}\n                                                value={employeeData?.department_id}\n                                                valueKey='id'\n                                                placeholder='Select Department'\n                                            />\n                                        </div>\n                                        <div className='row d-flex  justify-content-center align-items-center mt-3'>\n                                            <div\n                                                className='col text-cmGrey700 d-flex flex-wrap align-items-center'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontSize: '12px',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <div className='m-2'>\n                                                    <CustomCheckbox\n                                                        disable\n                                                        checked={\n                                                            employeeData?.is_manager ? true : false\n                                                        }\n                                                    />\n                                                </div>\n                                                Is Manager ?\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className='col-sm '>\n                                        <div className=''>\n                                            <CustomDropdown\n                                                disabled\n                                                label={'Position'}\n                                                options={positionList}\n                                                valueKey='id'\n                                                required\n                                                value={employeeData?.sub_position_id ?? ''}\n                                                displayKey='position_name'\n                                            />\n                                        </div>\n                                        <div className='d-flex justify-content-center align-items-center mt-3'>\n                                            <div\n                                                className='text-cmGrey700 d-flex'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontSize: '12px',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <div className='m-2'>\n                                                    <CustomCheckbox\n                                                        disable\n                                                        checked={\n                                                            employeeData?.self_gen_accounts\n                                                                ? true\n                                                                : false\n                                                        }\n                                                    />\n                                                </div>\n                                                May act as both setter and closer\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='row gap-5 align-items-center mb-7'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    <div className='col-sm'>\n                                        <div>\n                                            <CustomDropdown\n                                                label={'Select New Manager'}\n                                                required={!employeeData?.is_manager ? true : false}\n                                                options={managerNames}\n                                                name={'manager_id'}\n                                                valueKey='id'\n                                                displayKey='name'\n                                                onChange={onChangeInputData}\n                                                placeholder='Select Manager'\n                                                value={transferEmployeeData?.manager_id}\n                                                errorMessage={transferedErrorData?.manager_id}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className='col-sm '>\n                                        <div className=''>\n                                            <CustomDropdown\n                                                required={\n                                                    SHOW_BASED_ON_HOST?.teamRequiredForOnboarding\n                                                }\n                                                label={'Select Team'}\n                                                options={teamList}\n                                                valueKey='id'\n                                                displayKey='team_name'\n                                                name='team_id'\n                                                value={transferEmployeeData?.team_id}\n                                                errorMessage={transferedErrorData?.team_id}\n                                                onChange={onChangeInputData}\n                                                placeholder={'Select Team'}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='row gap-5 align-items-end mb-7'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    <div className='col-sm'>\n                                        <div>\n                                            <CustomDropdown\n                                                label={`${\n                                                    employeeData?.position_id ==\n                                                    MAIN_POSITTIONS_ID.closer\n                                                        ? 'Closer'\n                                                        : 'Setter'\n                                                } Redline Change (if any)`}\n                                                options={[\n                                                    {\n                                                        name: 'Shift based on Location',\n                                                        value: 'Shift based on Location',\n                                                    },\n                                                    {\n                                                        name: 'Fixed',\n                                                        value: 'Fixed',\n                                                    },\n                                                ]}\n                                                required\n                                                placeholder='Select'\n                                                name='redline_amount_type'\n                                                onChange={onChangeInputData}\n                                                value={transferEmployeeData?.redline_amount_type}\n                                                errorMessage={\n                                                    transferedErrorData?.redline_amount_type\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className='col-sm'>\n                                        <div className='d-flex gap-2'>\n                                            <div className=''>\n                                                <CustomInput\n                                                    hideLabel\n                                                    label='Redline Redline'\n                                                    type={INPUT_TYPE.number}\n                                                    onChange={onChangeInputData}\n                                                    value={transferEmployeeData?.redline}\n                                                    name='redline'\n                                                    placeholder={'0.00'}\n                                                    errorMessage={transferedErrorData?.redline}\n                                                />\n                                            </div>\n                                            <div className=''>\n                                                <CustomDropdown\n                                                    label='Redline Type'\n                                                    hideLabel\n                                                    options={UNIT_TYPE2}\n                                                    name='redline_type'\n                                                    onChange={onChangeInputData}\n                                                    value={transferEmployeeData?.redline_type}\n                                                    placeholder={'Select unit'}\n                                                    errorMessage={transferedErrorData?.redline_type}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {employeeData?.self_gen_accounts ? (\n                                    <div\n                                        className='row gap-5 align-items-end mb-7'\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    >\n                                        <div className='col-sm'>\n                                            <div>\n                                                <CustomDropdown\n                                                    label={`${\n                                                        employeeData?.position_id ==\n                                                        MAIN_POSITTIONS_ID.closer\n                                                            ? 'Setter'\n                                                            : 'Closer'\n                                                    } Redline Change (if any)`}\n                                                    options={[\n                                                        {\n                                                            name: 'Shift based on Location',\n                                                            value: 'Shift based on Location',\n                                                        },\n                                                        {\n                                                            name: 'Fixed',\n                                                            value: 'Fixed',\n                                                        },\n                                                    ]}\n                                                    placeholder='Select'\n                                                    required\n                                                    name='self_gen_redline_amount_type'\n                                                    onChange={onChangeInputData}\n                                                    value={\n                                                        transferEmployeeData?.self_gen_redline_amount_type\n                                                    }\n                                                    errorMessage={\n                                                        transferedErrorData?.self_gen_redline_amount_type\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className='col-sm'>\n                                            <div className='d-flex gap-2'>\n                                                <div className=''>\n                                                    <CustomInput\n                                                        hideLabel\n                                                        label='Redline Redline'\n                                                        type={INPUT_TYPE.number}\n                                                        onChange={onChangeInputData}\n                                                        value={\n                                                            transferEmployeeData?.self_gen_redline\n                                                        }\n                                                        name='self_gen_redline'\n                                                        placeholder={'0.00'}\n                                                        errorMessage={\n                                                            transferedErrorData?.self_gen_redline\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className=''>\n                                                    <CustomDropdown\n                                                        label='Redline Type'\n                                                        hideLabel\n                                                        options={UNIT_TYPE2}\n                                                        name='self_gen_redline_type'\n                                                        onChange={onChangeInputData}\n                                                        value={\n                                                            transferEmployeeData?.self_gen_redline_type\n                                                        }\n                                                        placeholder={'Select unit'}\n                                                        errorMessage={\n                                                            transferedErrorData?.self_gen_redline_type\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ) : null}\n                                {employeeData?.is_manager ? (\n                                    <div\n                                        className='row gap-5 align-items-center mb-7'\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    >\n                                        <div className='col'>\n                                            <div>\n                                                <CustomDropdown\n                                                    label={`Since ${employeeData?.first_name} ${employeeData?.last_name} is a manager in current office, map employees to a new\n                                                manager to complete the transfer`}\n                                                    required\n                                                    name='existing_employee_new_manager_id'\n                                                    options={oldOfficeManagerNames}\n                                                    onChange={onChangeInputData}\n                                                    placeholder='Select Manager'\n                                                    valueKey='id'\n                                                    displayKey='name'\n                                                    value={\n                                                        transferEmployeeData?.existing_employee_new_manager_id\n                                                    }\n                                                    errorMessage={\n                                                        transferedErrorData?.existing_employee_new_manager_id\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                ) : null}\n                                <div\n                                    className='row gap-5 align-items-center mb-5'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    <div className='col-sm-6'>\n                                        <div>\n                                            <CustomDatePicker\n                                                required\n                                                label={`Transfer Effective Date`}\n                                                onChange={onChangeInputData}\n                                                name='effective_date'\n                                                value={transferEmployeeData?.effective_date}\n                                                errorMessage={transferedErrorData?.effective_date}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </>\n\n                            {/* Table */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default TransferModal\n","import React, {useCallback, useEffect, useState} from 'react'\nimport CustomModal from '../../../../../customComponents/customModal/CustomModal'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton from '../../../../../customComponents/customButtton/CustomButton'\nimport {changePasswordService} from '../../../../../services/Services'\nimport useValidation from '../../../../../hooks/useValidation'\nimport {changePasswordValidation} from '../../../../../validations/validations'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport {getErrorMessageFromResponse} from '../../../../../helpers/CommonHelpers'\n\nconst ChangePasswordModal = ({handleClose, show}) => {\n    const [validatePasswordData, changePasswordErrorData] = useValidation()\n    const [loader, setLoader] = useState(false)\n    const [passwordData, setPasswordData] = useState({\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: '',\n    })\n\n    useEffect(() => {\n        if (changePasswordErrorData?.beginValidating) {\n            validatePasswordData(changePasswordValidation(passwordData))\n        }\n    }, [passwordData])\n\n    const onChangeInputData = useCallback((e) => {\n        if (!/\\s/.test(e?.target?.value)) {\n            // If no spaces are found, update the state\n            setPasswordData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        }\n    }, [])\n\n    const onChangePassword = () => {\n        const body = {\n            old_password: passwordData.oldPassword,\n            new_password: passwordData.newPassword,\n        }\n        validatePasswordData(changePasswordValidation(passwordData)).then((res) => {\n            if (res.isValidate) {\n                setLoader(true)\n                changePasswordService(body)\n                    .then(() => {\n                        handleClose()\n                        CustomToast.success('Password has been changed successfully')\n                    })\n                    .catch((e) => {\n                        CustomToast.error(getErrorMessageFromResponse(e))\n                    })\n                    .finally(() => {\n                        setLoader(false)\n                    })\n            }\n        })\n    }\n\n    return (\n        <CustomModal show={show} onHide={handleClose} title={'Change Password'} maxWidth='550'>\n            <div className='w-sm-75 mx-auto py-10'>\n                <div className='mb-5'>\n                    <CustomInput\n                        type={INPUT_TYPE.password}\n                        label={'Old Password'}\n                        placeholder='Enter Old Password'\n                        onChange={onChangeInputData}\n                        name='oldPassword'\n                        value={passwordData?.oldPassword}\n                        errorMessage={changePasswordErrorData?.oldPassword}\n                    />\n                </div>\n                <div className='mb-5'>\n                    <CustomInput\n                        type={INPUT_TYPE.password}\n                        label={'New Password'}\n                        placeholder='Enter New Password'\n                        onChange={onChangeInputData}\n                        name='newPassword'\n                        value={passwordData?.newPassword}\n                        errorMessage={changePasswordErrorData?.newPassword}\n                    />\n                </div>\n                <div className='mb-5'>\n                    <CustomInput\n                        type={INPUT_TYPE.password}\n                        label={'Confirm Password'}\n                        placeholder='Enter Password'\n                        onChange={onChangeInputData}\n                        name='confirmPassword'\n                        value={passwordData?.confirmPassword}\n                        errorMessage={changePasswordErrorData?.confirmPassword}\n                    />\n                </div>\n\n                <div className='text-center mt-15'>\n                    <CustomButton\n                        buttonLabel='Change Password'\n                        padding={'px-20'}\n                        onClick={onChangePassword}\n                        loading={loader}\n                    />\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default ChangePasswordModal\n","import clsx from 'clsx'\nimport React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {useSelector} from 'react-redux'\nimport {Link, useNavigate} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\nimport {\n    getUserDataSelector,\n    isUserManagerSelector,\n} from '../../../../../redux/selectors/AuthSelectors'\nimport {getCompanySettingSelector} from '../../../../../redux/selectors/SettingsSelectors'\nimport {\n    forgotPasswordService,\n    updateUserAccountStatusService,\n    updateUserImageService,\n} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport CustomImage from '../../../../../customComponents/customImage/CustomImage'\nimport {\n    formattedPhoneNumber,\n    getErrorMessageFromResponse,\n} from '../../../../../helpers/CommonHelpers'\nimport AccessRights from '../../../../../accessRights/AccessRights'\nimport TransferModal from './TransferModal'\nimport useCustomAccessRights from '../../../../../accessRights/useCustomAccessRights'\nimport CustomDialog from '../../../../../customComponents/customDialog/CustomDialog'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport ChangePasswordModal from './ChangePasswordModal'\n\nconst ParticularEmployeHeader = ({employeeData, loading, getProfile}) => {\n    const [pageLoading, setPageLoading] = useState(false)\n    const navigate = useNavigate()\n    const [transferModalView, setTransferModalView] = useState(false)\n    const [changePasswordModal, setChangePasswordModal] = useState(false)\n    const location = useLocation()\n    const {employeeProfileAccess} = useCustomAccessRights({\n        employeeData,\n    })\n\n    const companyProfileFilePickerRef = useRef()\n    const [hover, setHover] = useState(false)\n    const companySetting = useSelector(getCompanySettingSelector)\n    const employee_id = location?.state?.employee_id ?? location?.search.split('=')?.[1]\n\n    const onHover = () => {\n        setHover(true)\n    }\n\n    const onLeave = () => {\n        setHover(false)\n    }\n    const updateEmployeeProfilePhoto = useCallback(\n        (field, value) => {\n            setPageLoading(true)\n            const body = {\n                user_id: employee_id,\n                image: value,\n            }\n            updateUserImageService(body)\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    getProfile()\n                    setPageLoading(false)\n                    CustomToast.success('Profile updated successfully')\n                })\n        },\n        [employee_id, getProfile]\n    )\n\n    const updateStatus = (value, ableDisable) => {\n        const body = {\n            user_id: employee_id,\n            type: value,\n            value: ableDisable == 1 ? '0' : '1',\n        }\n        if (['stop_payroll', 'disable_login', 'dismiss'].includes(value)) {\n            CustomDialog.warn('Are you sure you want to do this action ?', () => {\n                setPageLoading(true)\n                updateStatusWithoutPrompt(ableDisable, value, body)\n            })\n        } else {\n            setPageLoading(true)\n            updateStatusWithoutPrompt(ableDisable, value, body)\n        }\n    }\n\n    const updateStatusWithoutPrompt = useCallback(\n        (ableDisable, value, body) => {\n            updateUserAccountStatusService(body).finally(() => {\n                getProfile().finally(() => {\n                    setPageLoading(false)\n                })\n                if (ableDisable == 1) {\n                    if (value == 'stop_payroll') CustomToast.success('Payroll started')\n                    else if (value == 'disable_login') CustomToast.success('User login enabled')\n                } else {\n                    if (value == 'stop_payroll') CustomToast.success('Payroll stopped')\n                    else if (value == 'disable_login') CustomToast.success('User login disabled')\n                }\n            })\n        },\n        [getProfile]\n    )\n    const resetPassword = () => {\n        CustomDialog.warn('Are you sure want to reset password ?', () => {\n            setPageLoading(true)\n            const body = {\n                email: employeeData?.email,\n            }\n            forgotPasswordService(body)\n                .then((res) => {\n                    CustomToast.success('Email sent successfully')\n                })\n                .finally(() => {\n                    setPageLoading(false)\n                })\n        })\n    }\n\n    const handleTransferClose = () => {\n        setTransferModalView(false)\n    }\n    const handleTransferModal = () => {\n        CustomDialog.warn(\n            `Are you sure want to transfer employee to another office ?\n            It will effect your office overrides if it is exist.`,\n            () => {\n                setTransferModalView(true)\n            }\n        )\n    }\n\n    const handlePayrollHistory = useCallback(() => {\n        navigate('/smReports/pay-stubs', {state: {userId: employee_id}})\n    }, [navigate, employee_id])\n\n    const handleChangePassword = () => {\n        CustomDialog.warn('Are you sure want to change password ?', () => {\n            setChangePasswordModal(true)\n        })\n    }\n\n    return (\n        <div\n            className='card mb-15  shadow-sm  bg-cmwhite'\n            style={{borderRadius: '12px', fontFamily: 'Manrope'}}\n        >\n            <CustomLoader full visible={loading} />\n            <CustomLoader full visible={pageLoading} />\n            <div className='card-body pt-9 pb-0'>\n                <div className='d-flex flex-wrap flex-sm-nowrap mb-3'>\n                    <div className='me-7 mb-4'>\n                        <div\n                            className='symbol symbol-100px ms-6 symbol-lg-160px symbol-fixed position-relative cursor-pointer'\n                            onMouseEnter={onHover}\n                            onMouseLeave={onLeave}\n                            style={{\n                                borderRadius: '100px',\n                                overflow: 'hidden',\n                            }}\n                        >\n                            <div style={{position: 'relative', width: '130px', height: '130px'}}>\n                                {hover && (\n                                    <div\n                                        onClick={() =>\n                                            companyProfileFilePickerRef?.current?.click()\n                                        }\n                                        style={{\n                                            position: 'absolute',\n                                            height: '100%',\n                                            borderRadius: '100px',\n                                            overflow: 'hidden',\n                                            justifyContent: 'center',\n                                            width: '100%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            backgroundColor: 'rgba(0,0,0,0.5)',\n                                        }}\n                                    >\n                                        <span className='bi bi-pencil-fill fs-15 py-1 px-2 text-white shadow-sm rounded cursor-pointer'></span>\n                                    </div>\n                                )}\n                                <CustomImage\n                                    style={{width: '130px', height: '130px'}}\n                                    src={employeeData?.image}\n                                />\n                            </div>\n                        </div>\n                        <input\n                            ref={companyProfileFilePickerRef}\n                            type='file'\n                            name='logo'\n                            accept='.png,.jpeg,.jpg,.heic'\n                            onChange={(e) => {\n                                updateEmployeeProfilePhoto(e?.target?.name, e?.target?.files?.[0])\n                            }}\n                            style={{display: 'none'}}\n                        />\n                    </div>\n                    <div className='flex-grow-1'>\n                        <div className='d-flex justify-content-between align-items-start flex-wrap'>\n                            <div className='d-flex flex-column'>\n                                <div className='d-flex align-items-center'>\n                                    <div\n                                        style={{\n                                            fontSize: '18px',\n                                            fontWeight: '600',\n                                        }}\n                                        className='me-1 text-gray-800'\n                                    >\n                                        {employeeData?.first_name} {employeeData?.last_name}\n                                    </div>\n                                    <div\n                                        className='ms-1 px-5 text-cmBlue-Crayola bg-cmBlue-Crayola bg-opacity-10'\n                                        style={{\n                                            height: '20px',\n                                            borderRadius: '12px',\n                                            fontFamily: 'Manrope',\n                                            display: 'flex',\n                                            fontWeight: '600',\n                                            justifyContent: 'center',\n                                            alignItems: 'center',\n                                            fontSize: '12px',\n                                        }}\n                                    >\n                                        {employeeData?.position}\n                                    </div>\n                                </div>\n\n                                <div\n                                    style={{fontFamily: 'Manrope', fontWeight: '500'}}\n                                    className='d-flex-col flex-wrap col fs-12 pe-2'\n                                >\n                                    <div\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '12px',\n                                            fontWeight: 500,\n                                        }}\n                                        className='d-flex align-items-center text-cmGrey600 me-5'\n                                    >\n                                        <span className=' text-cmGrey400' style={{fontWeight: 600}}>\n                                            #{employeeData?.employee_id}\n                                        </span>\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '12px',\n                                            fontWeight: 500,\n                                        }}\n                                        className='d-flex align-items-center text-cmGrey600 me-5 mb-2'\n                                    >\n                                        Office Location:{' '}\n                                        <span className=' text-cmGrey800' style={{fontWeight: 600}}>\n                                            {employeeData?.office?.office_name}\n                                            {employeeData?.office?.state?.name &&\n                                                `, ${employeeData?.office?.state?.name}`}\n                                        </span>\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '12px',\n                                            fontWeight: 500,\n                                        }}\n                                        className='d-flex align-items-center text-cmGrey600 me-5 mb-2'\n                                    >\n                                        Manager:\n                                        <span className='text-cmgrey800' style={{fontWeight: 600}}>\n                                            {employeeData?.manager_name}\n                                        </span>\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '12px',\n                                            color: '#757575                    ',\n                                        }}\n                                        className='d-flex align-items-center  text-hover-primary me-5 mb-2 '\n                                    >\n                                        <i\n                                            style={{\n                                                color: '#757575',\n                                                width: '12.52px',\n                                                // height: '12.54px'\n                                            }}\n                                            className='bi bi-telephone me-2 mt-0'\n                                        ></i>\n                                        {formattedPhoneNumber(employeeData.mobile_no)}\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '12px',\n                                            color: '#757575                    ',\n                                        }}\n                                        className='d-flex align-items-center text-hover-primary mb-2'\n                                    >\n                                        <i\n                                            style={{\n                                                color: '#757575',\n                                                width: '12.54px',\n                                                // height: '10.79px'\n                                            }}\n                                            className='bi bi-envelope me-3 mt-0'\n                                        ></i>\n                                        {employeeData?.email}\n                                    </div>\n                                </div>\n                            </div>\n                            <AccessRights\n                                forSuperAdmin={false}\n                                customCondition={employeeProfileAccess.showTransferButtonAccess}\n                            >\n                                <div className='d-flex gap-5  mt-sm-0 mt-5'>\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.primaryBorder}\n                                        buttonLabel='Transfer'\n                                        onClick={handleTransferModal}\n                                    />\n                                </div>\n                            </AccessRights>\n                        </div>\n\n                        <div className='d-flex flex-wrap gap-sm-10 gap-5 mt-5'>\n                            <AccessRights\n                                forSuperAdmin={false}\n                                customCondition={\n                                    employeeProfileAccess.showEnableDismissButtonAccess\n                                }\n                            >\n                                <CustomButton\n                                    buttonType={\n                                        employeeData?.dismiss == 1\n                                            ? BUTTON_TYPE.success\n                                            : BUTTON_TYPE.error\n                                    }\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonLabel={employeeData?.dismiss == 1 ? 'Enable' : 'Dismiss'}\n                                    onClick={() => updateStatus('dismiss', employeeData?.dismiss)}\n                                />\n                            </AccessRights>\n                            <AccessRights\n                                forSuperAdmin={false}\n                                customCondition={\n                                    employeeProfileAccess.showStartStopPayrollButtonAccess\n                                }\n                            >\n                                <CustomButton\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonType={\n                                        employeeData?.stop_payroll == 1\n                                            ? BUTTON_TYPE.success\n                                            : BUTTON_TYPE.error\n                                    }\n                                    buttonLabel={\n                                        employeeData?.stop_payroll == 1\n                                            ? 'Start Payroll'\n                                            : 'Stop Payroll'\n                                    }\n                                    onClick={() =>\n                                        updateStatus('stop_payroll', employeeData?.stop_payroll)\n                                    }\n                                />\n                            </AccessRights>\n                            <AccessRights\n                                forSuperAdmin={false}\n                                customCondition={\n                                    employeeProfileAccess.showStartStopLoginButtonAccess\n                                }\n                            >\n                                <CustomButton\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonType={\n                                        employeeData?.disable_login == 1\n                                            ? BUTTON_TYPE.success\n                                            : BUTTON_TYPE.error\n                                    }\n                                    buttonLabel={\n                                        employeeData?.disable_login == 1\n                                            ? 'Enable Login'\n                                            : 'Disable Login'\n                                    }\n                                    onClick={() =>\n                                        updateStatus('disable_login', employeeData?.disable_login)\n                                    }\n                                />\n                            </AccessRights>\n                            <AccessRights\n                                customCondition={\n                                    employeeProfileAccess.showResetPasswordButtonAccess\n                                }\n                            >\n                                <CustomButton\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonLabel='Reset Password'\n                                    icon='bi bi-wrench-adjustable-circle'\n                                    onClick={resetPassword}\n                                />\n                            </AccessRights>\n                            <AccessRights\n                                customCondition={employeeProfileAccess.showPayrollHistoryButton}\n                            >\n                                <CustomButton\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonLabel='Payroll History'\n                                    onClick={handlePayrollHistory}\n                                />\n                            </AccessRights>\n                            <AccessRights\n                                customCondition={employeeProfileAccess.showChangePasswordButton}\n                            >\n                                <CustomButton\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonLabel='Change Password'\n                                    onClick={handleChangePassword}\n                                />\n                            </AccessRights>\n                        </div>\n                    </div>\n                </div>\n                {/* <div className='modal-header'></div> */}\n                <hr className='text-cmGrey400 py-0 my-0' />\n                <div className=''>\n                    <ul\n                        style={{\n                            fontFamily: 'Manrope',\n                            fontSize: '16px',\n                            fontWeight: '800',\n                            overflowX: 'auto',\n                            overflowY: 'hidden',\n                        }}\n                        className='nav nav-stretch nav-line-tabs nav-line-tabs-8x border-transparent gap-7 flex-nowrap ms-5'\n                    >\n                        <AccessRights\n                            customCondition={employeeProfileAccess.viewPersonalInfoAccess}\n                        >\n                            <li className='nav-item'>\n                                <Link\n                                    className={`nav-link text-nowrap ${\n                                        location.pathname.includes('personal-info') && 'active'\n                                            ? 'text-cmBlue-Crayola '\n                                            : 'text-cmGrey500'\n                                    }`}\n                                    to={`personal-info?employeeId=${employee_id}`}\n                                    state={{employee_id: employee_id}}\n                                >\n                                    Personal Info\n                                </Link>\n                            </li>\n                        </AccessRights>\n                        <AccessRights\n                            customCondition={employeeProfileAccess.viewEmploymentPackageInfoAccess}\n                        >\n                            <li className='nav-item'>\n                                <Link\n                                    className={`nav-link text-nowrap  ${\n                                        location.pathname.includes('employment-package') && 'active'\n                                            ? 'text-cmBlue-Crayola'\n                                            : 'text-cmGrey500'\n                                    }`}\n                                    to={`employment-package?employeeId=${employee_id}`}\n                                    state={{employee_id: employee_id}}\n                                >\n                                    Employment Package\n                                </Link>\n                            </li>\n                        </AccessRights>\n                        <AccessRights customCondition={employeeProfileAccess.viewTaxInfoAccess}>\n                            <li className='nav-item'>\n                                <Link\n                                    className={`nav-link text-nowrap  ${\n                                        location.pathname.includes('tax-info') && 'active'\n                                            ? 'text-cmBlue-Crayola'\n                                            : 'text-cmGrey500'\n                                    }`}\n                                    to={`tax-info?employeeId=${employee_id}`}\n                                    state={{employee_id: employee_id}}\n                                >\n                                    Tax Info\n                                </Link>\n                            </li>\n                        </AccessRights>\n                        <AccessRights customCondition={employeeProfileAccess.viewBankingAccess}>\n                            <li className='nav-item'>\n                                <Link\n                                    className={`nav-link ${\n                                        location.pathname.includes('banking') && 'active'\n                                            ? 'text-cmBlue-Crayola'\n                                            : 'text-cmGrey500'\n                                    }`}\n                                    to={`banking?employeeId=${employee_id}`}\n                                    state={{employee_id: employee_id}}\n                                >\n                                    Banking\n                                </Link>\n                            </li>\n                        </AccessRights>\n                        <AccessRights customCondition={employeeProfileAccess.viewDocumentAccess}>\n                            <li className='nav-item'>\n                                <Link\n                                    className={`nav-link ${\n                                        location.pathname.includes('document') && 'active'\n                                            ? 'text-cmBlue-Crayola'\n                                            : 'text-cmGrey500'\n                                    }`}\n                                    to={`document?employeeId=${employee_id}`}\n                                    state={{employee_id: employee_id}}\n                                >\n                                    Document\n                                </Link>\n                            </li>\n                        </AccessRights>\n                        <AccessRights customCondition={employeeProfileAccess.viewPermissionAccess}>\n                            <li className='nav-item'>\n                                <Link\n                                    className={`nav-link ${\n                                        location.pathname.includes('permissions') && 'active'\n                                            ? 'text-cmBlue-Crayola'\n                                            : 'text-cmGrey500'\n                                    }`}\n                                    to={`permissions?employeeId=${employee_id}`}\n                                    state={{employee_id: employee_id}}\n                                >\n                                    Permissions\n                                </Link>\n                            </li>\n                        </AccessRights>\n                        {companySetting?.overrides ? (\n                            <AccessRights\n                                forSuperAdmin={false}\n                                customCondition={employeeProfileAccess.viewNetworkAccess}\n                            >\n                                <li className='nav-item'>\n                                    <Link\n                                        className={`nav-link ${\n                                            location.pathname.includes('Network') && 'active'\n                                                ? 'text-cmBlue-Crayola'\n                                                : 'text-cmGrey500'\n                                        }`}\n                                        to={`Network?employeeId=${employee_id}`}\n                                        state={{employee_id: employee_id}}\n                                    >\n                                        Network\n                                    </Link>\n                                </li>\n                            </AccessRights>\n                        ) : (\n                            <></>\n                        )}\n                    </ul>\n                </div>\n            </div>\n            {transferModalView && (\n                <TransferModal\n                    show={transferModalView}\n                    handleClose={handleTransferClose}\n                    userId={employee_id}\n                    getProfile={getProfile}\n                />\n            )}\n            {changePasswordModal ? (\n                <ChangePasswordModal\n                    show={changePasswordModal}\n                    handleClose={() => setChangePasswordModal(false)}\n                />\n            ) : null}\n        </div>\n    )\n}\n\nexport {ParticularEmployeHeader}\n","import React, {useEffect, useMemo, useState} from 'react'\nimport Edit from '../../../../admin/sequidocs/Icon/edit.png'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport useUserEmploymentPackage, {USER_TYPE} from '../../../../../../hooks/useUserEmploymentPackage'\n\nimport useCustomAccessRights from '../../../../../../accessRights/useCustomAccessRights'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomViewChnagesEmployementPackageModal, {\n    MODAL_NAME,\n} from './EmpolymentPackageViewChangesModals.js/CustomViewChnagesEmployementPackageModal'\nimport {getBooleanValue} from '../../../../../../helpers/CommonHelpers'\nimport CustomLink from '../../../../../../customComponents/customButtton/CustomLink'\n\nconst UserEmployementPackage = ({id = null, getTopCardUserProfile = () => {}}) => {\n    const [openViewChnagesOrganizationModal, setOpenViewChnagesOrganizationModal] = useState(false)\n    const [openViewChnagesOverridesModal, setOpenViewChnagesOverridesModal] = useState(false)\n\n    const {\n        loading,\n        organizationLoading,\n        redlineLoading,\n        overrideLoading,\n        agreementLoading,\n        deductionLoading,\n        saveEmploymentPackage,\n        getEmployeeData,\n        employeeData,\n\n        // Edit Section\n        EditOrganisationSection,\n        EditRedlineComissionUpfrontSection,\n        EditOverridesSection,\n        EditAgreementsSection,\n        EditDeductionsSection,\n\n        // View Section\n        ViewOrganisationSection,\n        ViewRedlineComissionUpfrontSection,\n        ViewOverridesSection,\n        ViewAgreementsSection,\n        ViewDeductionsSection,\n        bothPositionData,\n    } = useUserEmploymentPackage({\n        id,\n        userType: USER_TYPE.hiredEmployee,\n        getTopCardUserProfile: () => {\n            getTopCardUserProfile()\n            setEditState({\n                step1: false,\n                step2: false,\n                step3: false,\n                step4: false,\n                step5: false,\n                step6: false,\n            })\n        },\n    })\n\n    const {employeeProfileAccess} = useCustomAccessRights({employeeData})\n\n    const [editState, setEditState] = useState({\n        step1: false,\n        step2: false,\n        step3: false,\n        step4: false,\n        step5: false,\n        step6: false,\n    })\n\n    const onSaveOrganization = () => {\n        saveEmploymentPackage.organisationValidation().then(() => {\n            CustomToast.success('Employment Package Updated')\n            clickHandler('step2')\n            //   if (\n            //     [HIRING_PROCESS_STATUS.offerLetterSent, HIRING_PROCESS_STATUS.offerLetterResent].includes(\n            //       employeeData?.status_id\n            //     )\n            //   ) {\n            //     sendEmailbyIdService(employeeData?.id).then(() => {\n            //       CustomToast.success('Offer Letter Resent')\n            //     })\n            //   }\n        })\n    }\n\n    const onSaveRedlinePress = () => {\n        saveEmploymentPackage.commissionAndRedlineValidation().then(() => {\n            CustomToast.success('Employment Package Updated')\n            getEmployeeData()\n            clickHandler('step3')\n        })\n    }\n\n    const onSaveOverridesPress = () => {\n        saveEmploymentPackage.overrideValidation().then(() => {\n            CustomToast.success('Employment Package Updated')\n            clickHandler('step4')\n        })\n    }\n    const onSaveAggrementPress = () => {\n        saveEmploymentPackage.agreementValidation().then(() => {\n            CustomToast.success('Employment Package Updated')\n            clickHandler('step5')\n        })\n    }\n\n    const onSaveDeductionPress = () => {\n        saveEmploymentPackage.deductionsValidation().then(() => {\n            CustomToast.success('Employment Package Updated')\n            clickHandler('step6')\n        })\n    }\n\n    const showSaveButton = useMemo(() => {\n        return employeeProfileAccess.editEmploymentPackageAccess\n    }, [employeeProfileAccess.editEmploymentPackageAccess])\n\n    const clickHandler = (value) => {\n        const val = !editState[value]\n        if (!val) getEmployeeData()\n        const data = {\n            step1: false,\n            step2: false,\n            step3: false,\n            step4: false,\n            step5: false,\n            step6: false,\n        }\n        data[value] = val\n        setEditState(data)\n    }\n\n    // View changes modal\n    const handleViewChangeModal = (modalNanme) => {\n        if (modalNanme == MODAL_NAME.Organization)\n            setOpenViewChnagesOrganizationModal(!openViewChnagesOrganizationModal)\n        if (modalNanme == MODAL_NAME.Overrides)\n            setOpenViewChnagesOverridesModal(!openViewChnagesOverridesModal)\n    }\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} loaderPosition='top' />\n            <div className='d-xl-flex flex-wrap justify-content-evenly gap-5'>\n                <div\n                    className='col-sm bg-cmwhite shadow-sm mb-5'\n                    style={{borderRadius: '10px', position: 'relative'}}\n                >\n                    <CustomLoader full visible={organizationLoading} />\n                    <div className='row align-items-center col-sm py-4 pe-1 ps-4 mx-auto'>\n                        <div\n                            style={{fontWeight: '700', fontSize: '16px'}}\n                            className='col-sm text-cmGrey900 d-flex align-items-center text-nowrap gap-5'\n                        >\n                            <div>Organization</div>\n\n                            <CustomLink\n                                label={'View Changes'}\n                                onClick={() => handleViewChangeModal(MODAL_NAME.Organization)}\n                            />\n                        </div>\n\n                        {showSaveButton ? (\n                            <div className='col-sm '>\n                                {!editState?.step2 && (\n                                    <span className='d-flex flex-sm-end'>\n                                        <CustomEditIcon onClick={() => clickHandler('step2')} />\n                                    </span>\n                                )}\n                                {editState?.step2 && (\n                                    <div className='d-flex justify-content-end gap-2'>\n                                        <CustomButton\n                                            buttonLabel='Cancel'\n                                            buttonType={BUTTON_TYPE.greyText}\n                                            onClick={() => clickHandler('step2')}\n                                        />\n\n                                        <CustomButton\n                                            buttonLabel='Save'\n                                            padding={'px-10'}\n                                            buttonType={BUTTON_TYPE.primary}\n                                            onClick={onSaveOrganization}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n                    </div>\n\n                    <hr className='text-cmGrey500 m-0 p-0'></hr>\n                    <div>\n                        {!editState.step2 ? ViewOrganisationSection : EditOrganisationSection}\n                        {openViewChnagesOrganizationModal ? (\n                            <CustomViewChnagesEmployementPackageModal\n                                show={openViewChnagesOrganizationModal}\n                                modalName={MODAL_NAME.Organization}\n                                handleClose={() => handleViewChangeModal(MODAL_NAME.Organization)}\n                                title={`Organizational Changes- ${employeeData?.first_name} ${employeeData?.last_name}`}\n                                userId={id}\n                                PositionId={employeeData?.position_id}\n                            />\n                        ) : null}\n                    </div>\n                </div>\n                <div\n                    className='col-sm  bg-cmwhite shadow-sm mb-5'\n                    style={{borderRadius: '10px', position: 'relative'}}\n                >\n                    <CustomLoader full visible={redlineLoading} />\n                    <div className='row align-items-center col-sm py-4 pe-1 ps-4 mx-auto'>\n                        <div\n                            className='col text-cmGrey900 text-nowrap'\n                            style={{fontWeight: '700', fontSize: '16px'}}\n                        >\n                            <div>Redline / Commission / Upfront</div>\n                        </div>\n\n                        {showSaveButton ? (\n                            <div className='col'>\n                                {!editState?.step3 && (\n                                    <span className='d-flex flex-sm-end'>\n                                        <CustomEditIcon onClick={() => clickHandler('step3')} />\n                                    </span>\n                                )}\n                                {editState?.step3 && (\n                                    <div className='d-flex justify-content-end gap-2'>\n                                        <CustomButton\n                                            buttonLabel='Cancel'\n                                            buttonType={BUTTON_TYPE.greyText}\n                                            onClick={() => clickHandler('step3')}\n                                        />\n\n                                        <CustomButton\n                                            buttonLabel='Save'\n                                            padding={'px-10'}\n                                            buttonType={BUTTON_TYPE.primary}\n                                            onClick={onSaveRedlinePress}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n                    </div>\n\n                    <hr className='text-cmGrey500 m-0 p-0'></hr>\n                    <div>\n                        {!editState.step3\n                            ? ViewRedlineComissionUpfrontSection\n                            : EditRedlineComissionUpfrontSection}\n                    </div>\n                </div>\n            </div>\n            <div className='d-flex flex-wrap justify-content-evenly gap-5 mb-5'>\n                <div\n                    className='w-sm-50 w-100 col-sm bg-cmwhite shadow-sm '\n                    style={{borderRadius: '10px', position: 'relative'}}\n                >\n                    <CustomLoader full visible={overrideLoading} />\n                    <div className='row align-items-center col-sm py-4 pe-1 ps-4 mx-auto'>\n                        <div\n                            style={{fontWeight: '700', fontSize: '16px'}}\n                            className='col-sm text-cmGrey900 d-flex align-items-center text-nowrap gap-5'\n                        >\n                            <div>Overrides</div>\n\n                            <CustomLink\n                                label={'View Changes'}\n                                onClick={() => handleViewChangeModal(MODAL_NAME.Overrides)}\n                            />\n                        </div>\n                        {showSaveButton ? (\n                            <div className='col'>\n                                {!editState?.step4 && (\n                                    <span className='d-flex flex-end'>\n                                        <CustomEditIcon onClick={() => clickHandler('step4')} />\n                                    </span>\n                                )}\n                                {editState?.step4 && (\n                                    <div className='d-flex justify-content-end gap-2'>\n                                        <CustomButton\n                                            buttonLabel='Cancel'\n                                            buttonType={BUTTON_TYPE.greyText}\n                                            onClick={() => clickHandler('step4')}\n                                        />\n\n                                        <CustomButton\n                                            buttonLabel='Save'\n                                            padding={'px-10'}\n                                            buttonType={BUTTON_TYPE.primary}\n                                            onClick={onSaveOverridesPress}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n                    </div>\n\n                    <hr className='text-cmGrey500 m-0 p-0'></hr>\n                    <div className=''>\n                        {!editState.step4 ? ViewOverridesSection : EditOverridesSection}\n                    </div>\n                    {openViewChnagesOverridesModal ? (\n                        <CustomViewChnagesEmployementPackageModal\n                            show={openViewChnagesOverridesModal}\n                            modalName={MODAL_NAME.Overrides}\n                            handleClose={() => handleViewChangeModal(MODAL_NAME.Overrides)}\n                            title={`Override Changes - ${employeeData?.first_name} ${employeeData?.last_name}`}\n                            userId={id}\n                            positionData={bothPositionData?.firstPosition}\n                        />\n                    ) : null}\n                </div>\n\n                {/* Deductions */}\n                {getBooleanValue(bothPositionData?.firstPosition?.deduction_status) == 1 ? (\n                    <div\n                        className='w-sm-50 w-100 col-sm bg-cmwhite shadow-sm '\n                        style={{borderRadius: '10px', position: 'relative'}}\n                    >\n                        <CustomLoader full visible={deductionLoading} />\n                        <div className='d-flex align-items-center justify-content-between flex-wrap p-4'>\n                            <div\n                                style={{fontWeight: '700', fontSize: '16px'}}\n                                className='text-cmGrey900'\n                            >\n                                Deductions\n                            </div>\n                            {showSaveButton ? (\n                                <>\n                                    {!editState?.step6 && (\n                                        <CustomEditIcon onClick={() => clickHandler('step6')} />\n                                    )}\n                                    {editState?.step6 && (\n                                        <div className='d-flex gap-2'>\n                                            <CustomButton\n                                                buttonLabel='Cancel'\n                                                buttonType={BUTTON_TYPE.greyText}\n                                                onClick={() => clickHandler('step6')}\n                                            />\n\n                                            <CustomButton\n                                                buttonLabel='Save'\n                                                padding={'px-10'}\n                                                buttonType={BUTTON_TYPE.primary}\n                                                onClick={onSaveDeductionPress}\n                                            />\n                                        </div>\n                                    )}\n                                </>\n                            ) : null}\n                        </div>\n\n                        <hr className='text-cmGrey500 m-0 p-0'></hr>\n                        <div>\n                            {!editState.step6 ? ViewDeductionsSection : EditDeductionsSection}\n                        </div>\n                    </div>\n                ) : null}\n            </div>\n            <div className='d-flex flex-wrap justify-content-evenly gap-5'>\n                {/* Agreements */}\n                <div\n                    className='w-sm-50 w-100 col-sm bg-cmwhite shadow-sm '\n                    style={{borderRadius: '10px', position: 'relative'}}\n                >\n                    <CustomLoader full visible={agreementLoading} />\n                    <div className='d-flex align-items-center justify-content-between flex-wrap px-10 py-4'>\n                        <div\n                            style={{fontWeight: '700', fontSize: '16px'}}\n                            className='text-cmGrey900'\n                        >\n                            Agreement\n                        </div>\n                    </div>\n\n                    <hr className='text-cmGrey500 m-0 p-0'></hr>\n                    <div className=''>\n                        {!editState.step5 ? ViewAgreementsSection : EditAgreementsSection}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserEmployementPackage\n","import {useState, useEffect} from 'react'\nimport CustomLoader from '../../../../customComponents/customLoader/CustomLoader'\nimport _ from 'lodash'\nimport {updateEmployeeProfileService} from '../../../../services/Services'\nimport {BUSINESS_TYPE} from '../../../../constants/constants'\nimport AccessRights from '../../../../accessRights/AccessRights'\nimport useCustomAccessRights from '../../../../accessRights/useCustomAccessRights'\nimport {\n    getDataWithoutMask,\n    getErrorMessageFromResponse,\n    getMobileNumberWithoutMask,\n    getTextForSecurity,\n} from '../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../customComponents/customButtton/CustomButton'\nimport {getUserProfileAction} from '../../../../redux/actions/AuthActions'\nimport {useDispatch} from 'react-redux'\nimport CustomEditIcon from '../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst ProfilePersonalTax = ({getEmployeeProfile, employeeData}) => {\n    const [loading, setLoading] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [taxData, setTaxData] = useState(employeeData)\n    const dispatch = useDispatch()\n\n    const {employeeProfileAccess} = useCustomAccessRights({employeeData})\n\n    useEffect(() => {\n        setTaxData(employeeData)\n    }, [employeeData, edit])\n\n    const updateAdditionalTaxData = (e) => {\n        setTaxData((val) => ({\n            ...val,\n            [e?.target?.name]: e?.target?.value,\n        }))\n    }\n\n    const onSavePress = (e) => {\n        if (!taxData?.entity_type) return CustomToast.error('Select entity type')\n        if (taxData?.entity_type == 'individual') {\n            if (!taxData?.social_sequrity_no) return CustomToast.error('Enter SSN')\n        } else if (taxData?.entity_type == 'business') {\n            if (!taxData?.business_name) return CustomToast.error('Enter Business Name')\n            if (!taxData?.business_type) return CustomToast.error('Select Business Type')\n            if (!taxData?.business_ein) return CustomToast.error('Enter EIN')\n        }\n        let body = {\n            ...taxData,\n            user_id: taxData?.id ?? '',\n            entity_type: taxData?.entity_type ?? '',\n            social_sequrity_no:\n                taxData?.entity_type == 'individual'\n                    ? getDataWithoutMask(taxData?.social_sequrity_no)\n                    : '',\n            business_name: taxData?.entity_type == 'business' ? taxData?.business_name : '',\n            business_type: taxData?.entity_type == 'business' ? taxData?.business_type : '',\n            business_ein:\n                taxData?.entity_type == 'business' ? getDataWithoutMask(taxData?.business_ein) : '',\n        }\n        setLoading(true)\n        updateEmployeeProfileService(body)\n            .then(() => {\n                getEmployeeProfile()\n                dispatch(getUserProfileAction())\n                setEdit(false)\n                CustomToast.success('Tax info updated')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <>\n            <div className='card shadow h-auto' style={{fontFamily: 'Manrope', fontSize: '14px'}}>\n                <div className='card w-100'>\n                    <CustomLoader full visible={loading} />\n                    {/* <div className='ms-11 form-check ml-12px d-flex form-switch form-switch-sm form-check-custom form-check-solid my-3'></div> */}\n                    <div className='d-flex mx-10 py-4 px-5 align-items-center justify-content-between '>\n                        <div className='text-cmGrey900' style={{fontWeight: 700, fontSize: '16px'}}>\n                            Tax Info\n                        </div>\n                        <AccessRights customCondition={employeeProfileAccess.editTaxInfoAccess}>\n                            {!edit ? (\n                                <CustomEditIcon onClick={() => setEdit(true)} />\n                            ) : (\n                                <div className='d-flex gap-4'>\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.greyText}\n                                        buttonSize={BUTTON_SIZE.small}\n                                        buttonLabel='Cancel'\n                                        onClick={() => setEdit(false)}\n                                    />\n                                    <CustomButton\n                                        buttonSize={BUTTON_SIZE.small}\n                                        buttonLabel='Save'\n                                        onClick={onSavePress}\n                                    />\n                                </div>\n                            )}\n                        </AccessRights>\n                    </div>\n                    <div className='border-bottom border-cmGrey300 ' />\n                    <>\n                        <div className=''>\n                            {/* first line */}\n                            <div className='stripRow py-4 px-sm-20 px-10' style={{fontWeight: 600}}>\n                                <div className='row w-sm-100 '>\n                                    <div\n                                        className='col-xl-3 col-sm text-cmGrey600'\n                                        style={{alignSelf: 'center'}}\n                                    >\n                                        Entity Type:\n                                    </div>\n                                    <div className='col-sm text-cmGrey900'>\n                                        {edit ? (\n                                            <CustomDropdown\n                                                value={taxData?.entity_type}\n                                                onChange={updateAdditionalTaxData}\n                                                name={'entity_type'}\n                                                options={[\n                                                    {name: 'Individual', value: 'individual'},\n                                                    {name: 'Business', value: 'business'},\n                                                ]}\n                                            />\n                                        ) : (\n                                            _.upperFirst(employeeData?.entity_type) ?? '-'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* first line */}\n                            {(edit ? taxData?.entity_type : employeeData?.entity_type) ==\n                            'individual' ? (\n                                <div\n                                    className='stripRow  py-4 px-sm-20 px-10'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='row w-sm-100 '>\n                                        <div\n                                            className='col-xl-3 col-sm text-cmGrey600'\n                                            style={{alignSelf: 'center'}}\n                                        >\n                                            {' '}\n                                            Social Security Number:\n                                        </div>\n                                        <div className=' col-sm text-cmGrey900'>\n                                            {edit ? (\n                                                <CustomInput\n                                                    type={INPUT_TYPE.mobile}\n                                                    name={'social_sequrity_no'}\n                                                    value={taxData?.social_sequrity_no}\n                                                    onChange={updateAdditionalTaxData}\n                                                    placeholder='Enter Social Sequrity No'\n                                                    mask='999-99-9999'\n                                                />\n                                            ) : (\n                                                <>\n                                                    {employeeData?.social_sequrity_no ? (\n                                                        <>\n                                                            xxx-xx-\n                                                            {getTextForSecurity(\n                                                                employeeData?.social_sequrity_no\n                                                            )}\n                                                        </>\n                                                    ) : (\n                                                        '-'\n                                                    )}\n                                                </>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            ) : null}\n\n                            {/* Second line */}\n                            {(edit ? taxData?.entity_type : employeeData?.entity_type) ==\n                            'business' ? (\n                                <>\n                                    {/* Business Name */}\n                                    <div\n                                        className=' py-5 px-sm-20 px-10 stripRow'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        <div className='row w-sm-100 align-items-center '>\n                                            <div className='text-cmGrey600 col-xl-3 col-sm'>\n                                                {' '}\n                                                Business Name:\n                                            </div>{' '}\n                                            <div className='text-cmGrey900 col-sm'>\n                                                {edit ? (\n                                                    <CustomInput\n                                                        name={'business_name'}\n                                                        value={taxData?.business_name}\n                                                        onChange={updateAdditionalTaxData}\n                                                        placeholder='Enter Business Name'\n                                                    />\n                                                ) : (\n                                                    employeeData?.business_name ?? '-'\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* Business Type */}\n                                    <div\n                                        className='py-5 px-sm-20 px-10 stripRow'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        <div className='row align-items-center w-sm-100 '>\n                                            <div className='text-cmGrey600 col-xl-3 col-sm'>\n                                                {' '}\n                                                Business Type:\n                                            </div>{' '}\n                                            <div className='text-cmGrey900 col-sm'>\n                                                {edit ? (\n                                                    <CustomDropdown\n                                                        value={taxData?.business_type}\n                                                        onChange={updateAdditionalTaxData}\n                                                        name={'business_type'}\n                                                        options={BUSINESS_TYPE}\n                                                    />\n                                                ) : (\n                                                    employeeData?.business_type ?? '-'\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* Business EIN */}\n                                    <div\n                                        className='py-5 px-sm-20 px-10 stripRow'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        <div className='row align-items-center w-sm-100 '>\n                                            <div className='text-cmGrey600 col-xl-3 col-sm'>\n                                                EIN:\n                                            </div>\n                                            <div className='text-cmGrey900 col-sm'>\n                                                {edit ? (\n                                                    <CustomInput\n                                                        type={INPUT_TYPE.mobile}\n                                                        name={'business_ein'}\n                                                        value={taxData?.business_ein}\n                                                        onChange={updateAdditionalTaxData}\n                                                        placeholder='Enter EIN'\n                                                        mask='99-9999999'\n                                                    />\n                                                ) : (\n                                                    <>\n                                                        {employeeData?.business_ein ? (\n                                                            <>\n                                                                xx-xxx\n                                                                {getTextForSecurity(\n                                                                    employeeData?.business_ein\n                                                                )}\n                                                            </>\n                                                        ) : (\n                                                            '-'\n                                                        )}\n                                                    </>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : null}\n                            {/* Third line */}\n                        </div>\n                    </>\n                    {/* </div> */}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ProfilePersonalTax\n","import React, {useEffect, useState} from 'react'\nimport CustomLoader from '../../../../customComponents/customLoader/CustomLoader'\nimport Edit from '../../admin/sequidocs/Icon/edit.png'\nimport {\n    getEmployeeProfileService,\n    updateEmployeeProfileService,\n    updateOnBoardingEmployeeDetailService,\n} from '../../../../services/Services'\nimport {BANKING_TYPE_OF_ACCOUNT, getValidDate} from '../../../../constants/constants'\nimport AccessRights from '../../../../accessRights/AccessRights'\nimport useCustomAccessRights from '../../../../accessRights/useCustomAccessRights'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../customComponents/customInputs/customInput/CustomInput'\nimport {\n    convertToMaskedNumber,\n    getErrorMessageFromResponse,\n    getMobileNumberWithoutMask,\n    getTextForSecurity,\n} from '../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../customComponents/customToast/CustomToast'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../customComponents/customButtton/CustomButton'\nimport {getUserProfileAction} from '../../../../redux/actions/AuthActions'\nimport {useDispatch} from 'react-redux'\nimport CustomEditIcon from '../../../../customComponents/customIcons/CustomEditIcon'\nimport {HIRE_FIELD_KEYS} from '../../employee/components/EmployeePageBody'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst ProfilePersonalBanking = ({employeeData, getBankData}) => {\n    const dispatch = useDispatch()\n\n    const [loading, setLoading] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [bankingData, setBankingData] = useState(employeeData)\n\n    const {employeeProfileAccess} = useCustomAccessRights({employeeData})\n    useEffect(() => {\n        setBankingData(employeeData)\n    }, [employeeData, edit])\n\n    const updateAdditionalBankingData = (e) => {\n        setBankingData((val) => ({\n            ...val,\n            [e?.target?.name]: e?.target?.value,\n        }))\n    }\n\n    const onSavePress = (e) => {\n        if (!bankingData?.name_of_bank) return CustomToast.error('Enter bank name')\n        if (!bankingData?.routing_no) return CustomToast.error('Enter routing number')\n        if (!bankingData?.account_no) {\n            return CustomToast.error('Enter bank account number')\n        } else if (!bankingData?.confirm_account_no)\n            return CustomToast.error('Please confirm your account number')\n        else if (bankingData?.confirm_account_no != bankingData?.account_no) {\n            return CustomToast.error('Account number mismatched')\n        }\n        if (!bankingData?.account_name) return CustomToast.error('Enter account name')\n        if (!bankingData?.type_of_account) return CustomToast.error('Enter type of account')\n        const body = {\n            ...bankingData,\n            user_id: bankingData?.id ?? '',\n            name_of_bank: bankingData?.name_of_bank ?? '',\n            routing_no: bankingData?.routing_no ?? '',\n            account_no: bankingData?.account_no ?? '',\n            confirm_account_no: bankingData?.confirm_account_no ?? '',\n            account_name: bankingData?.account_name ?? '',\n            type_of_account: bankingData?.type_of_account ?? '',\n        }\n        setLoading(true)\n        updateEmployeeProfileService(body)\n            .then(() => {\n                getBankData()\n                dispatch(getUserProfileAction())\n                setEdit(false)\n                CustomToast.success('Bank info updated')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <>\n            <div className='card shadow h-auto' style={{fontFamily: 'Manrope', fontSize: '14px'}}>\n                <div className='py-5 card w-100'>\n                    <CustomLoader full visible={loading} />\n                    {/* <div className='ms-11 form-check ml-12px d-flex form-switch form-switch-sm form-check-custom form-check-solid my-3'></div> */}\n                    <div className='d-flex mx-10 align-items-center justify-content-between '>\n                        <div className='text-cmGrey900' style={{fontWeight: 700, fontSize: '16px'}}>\n                            Banking Info\n                        </div>\n                        <AccessRights customCondition={employeeProfileAccess.editBankingInfoAccess}>\n                            {!edit ? (\n                                <CustomEditIcon onClick={() => setEdit(true)} />\n                            ) : (\n                                <div className='d-flex gap-4'>\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.greyText}\n                                        buttonLabel='Cancel'\n                                        buttonSize={BUTTON_SIZE.small}\n                                        onClick={() => setEdit(false)}\n                                    />\n                                    <CustomButton\n                                        buttonLabel='Save'\n                                        buttonSize={BUTTON_SIZE.small}\n                                        onClick={onSavePress}\n                                    />\n                                </div>\n                            )}\n                        </AccessRights>\n                    </div>\n                    <div className='border-bottom border-cmGrey300 mt-5' />\n                    <>\n                        <div className=''>\n                            {/* first line */}\n                            <div\n                                className='justify-content-evenly py-4 px-sm-20 px-10 stripRow'\n                                style={{fontWeight: 600}}\n                            >\n                                <div className='row w-75 ms-sm-10 align-items-center'>\n                                    <div className='text-cmGrey600  col-xl-4 col-sm-6 '>\n                                        Name of Bank:\n                                    </div>\n                                    <div className='text-cmgrey900 col-sm'>\n                                        {edit ? (\n                                            <CustomInput\n                                                name={'name_of_bank'}\n                                                value={bankingData?.name_of_bank}\n                                                onChange={updateAdditionalBankingData}\n                                                placeholder='Enter Name of Bank'\n                                            />\n                                        ) : (\n                                            employeeData?.name_of_bank ?? '-'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Third line */}\n                            <div\n                                className='justify-content-evenly py-4 stripRow px-sm-20 px-10 stripRow '\n                                style={{fontWeight: 600}}\n                            >\n                                <div className='row w-75 ms-sm-10 align-items-center'>\n                                    <div className='text-cmGrey600 col-xl-4 col-sm-6'>\n                                        Account Number:\n                                    </div>\n                                    <div className='text-cmgrey900 col-sm'>\n                                        {edit ? (\n                                            <CustomInput\n                                                type={INPUT_TYPE.number}\n                                                name={'account_no'}\n                                                value={bankingData?.account_no}\n                                                onChange={updateAdditionalBankingData}\n                                                placeholder='Enter Account Number'\n                                            />\n                                        ) : (\n                                            <>\n                                                {employeeData?.account_no ? (\n                                                    <>{employeeData?.account_no}</>\n                                                ) : (\n                                                    '-'\n                                                )}\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* 4 line */}\n                            {edit ? (\n                                <div\n                                    className='justify-content-evenly py-4 stripRow px-sm-20 px-10 stripRow '\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='row w-75 ms-sm-10 align-items-center'>\n                                        <div className='text-cmGrey600 col-xl-4 col-sm-6'>\n                                            Confirm Account Number:\n                                        </div>\n                                        <div className='text-cmGrey900 col-sm'>\n                                            <CustomInput\n                                                type={INPUT_TYPE.number}\n                                                name={'confirm_account_no'}\n                                                value={bankingData?.confirm_account_no}\n                                                onChange={updateAdditionalBankingData}\n                                                placeholder='Enter Account Number'\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            ) : null}\n\n                            {/* 5 line */}\n                            {/* <div\n                                className='justify-content-evenly py-4 stripRow px-sm-20 px-10 stripRow '\n                                style={{fontWeight: 600}}\n                            >\n                                <div className='row w-75 ms-sm-10 align-items-center'>\n                                    <div className='text-cmGrey600 col-xl-4 col-sm-6'>\n                                      Confirm  Account Number:\n                                    </div>\n                                    <div className='text-cmgrey900 col-sm'>\n                                        {edit ? (\n                                            <CustomInput\n                                                type={INPUT_TYPE.number}\n                                                name={'account_no'}\n                                                value={bankingData?.account_no}\n                                                onChange={updateAdditionalBankingData}\n                                                placeholder='Enter Account Number'\n                                            />\n                                        ) : (\n                                            <>\n                                                {employeeData?.account_no ? (\n                                                    <>{employeeData?.account_no}</>\n                                                ) : (\n                                                    '-'\n                                                )}\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                            </div> */}\n\n                            {/* 6 line */}\n                            <div\n                                className='justify-content-evenly py-4 px-sm-20 px-10 stripRow'\n                                style={{fontWeight: 600}}\n                            >\n                                <div className='row w-75 ms-sm-10 align-items-center'>\n                                    <div className='text-cmGrey600 col-xl-4 col-sm-6'>\n                                        Routing Number:\n                                    </div>\n                                    <div className='text-cmgrey900 col-sm'>\n                                        {edit ? (\n                                            <CustomInput\n                                                name={'routing_no'}\n                                                value={bankingData?.routing_no}\n                                                onChange={updateAdditionalBankingData}\n                                                placeholder='Enter Routing Number'\n                                                type={INPUT_TYPE.mobile}\n                                                mask='999999999'\n                                            />\n                                        ) : (\n                                            <>\n                                                {employeeData?.routing_no ? (\n                                                    <>\n                                                        {convertToMaskedNumber(\n                                                            employeeData?.routing_no,\n                                                            9\n                                                        )}\n                                                        {/* xxxxxx\n                                                        {getTextForSecurity(\n                                                            employeeData?.routing_no\n                                                        )} */}\n                                                    </>\n                                                ) : (\n                                                    '-'\n                                                )}\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div\n                                className='justify-content-evenly py-4 stripRow px-sm-20 px-10 stripRow '\n                                style={{fontWeight: 600}}\n                            >\n                                <div className='row w-75 ms-sm-10 align-items-center'>\n                                    <div className='text-cmGrey600 col-xl-4 col-sm-6'>\n                                        Account Name:\n                                    </div>\n                                    <div className='text-cmgrey900 col-sm'>\n                                        {edit ? (\n                                            <CustomInput\n                                                name={'account_name'}\n                                                value={bankingData?.account_name}\n                                                onChange={updateAdditionalBankingData}\n                                                placeholder='Enter Account Name'\n                                            />\n                                        ) : (\n                                            <>\n                                                {employeeData?.account_name\n                                                    ? employeeData?.account_name\n                                                    : '-'}\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* 7 line */}\n                            <div\n                                className='justify-content-evenly py-4 px-sm-20 px-10 stripRow'\n                                style={{fontWeight: 600}}\n                            >\n                                <div className='row w-75 ms-sm-10 align-items-center'>\n                                    <div className='text-cmGrey600 col-xl-4 col-sm-6'>\n                                        Type of Account:\n                                    </div>\n                                    <div className='text-cmgrey900 col-sm'>\n                                        {edit ? (\n                                            <CustomDropdown\n                                                name={HIRE_FIELD_KEYS.type_of_account}\n                                                value={bankingData?.type_of_account}\n                                                onChange={updateAdditionalBankingData}\n                                                searching={false}\n                                                options={BANKING_TYPE_OF_ACCOUNT}\n                                            />\n                                        ) : (\n                                            employeeData?.type_of_account ?? '-'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    {/* </div> */}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ProfilePersonalBanking\n","import React, {useState, useEffect, useMemo} from 'react'\n\nimport Edit from '../../admin/sequidocs/Icon/edit.png'\nimport {\n    updateEmployeeProfileService,\n    updateOnBoardingEmployeeDetailService,\n} from '../../../../services/Services'\nimport CustomLoader from '../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../constants/constants'\nimport AccessRights from '../../../../accessRights/AccessRights'\nimport {useSelector} from 'react-redux'\nimport {\n    getUserDataSelector,\n    isUserSuperAdminSelector,\n} from '../../../../redux/selectors/AuthSelectors'\nimport CustomInput from '../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {BUTTON_TYPE} from '../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomEditIcon from '../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomNoData from '../../../../customComponents/customNoData/CustomNoData'\n\nconst ProfilePersonalAdditionalInfo = ({\n    employeeData,\n    updateEmployeeData,\n    onSavePress,\n    setPersonalLoading,\n    setGetStartedLoading,\n    personalLoading,\n    getStartedLoading,\n    getEmployeeProfile,\n}) => {\n    const [edit, setEdit] = useState(false)\n    const [getStartedEdit, setGetStartedEdit] = useState(false)\n    const userData = useSelector(getUserDataSelector)\n    // const [personalLoading, setPersonalLoading] = useState(false)\n    // const [getStartedLoading, setPersonalLoading] = useState(false)\n    const isOwnUser = useMemo(\n        () => userData?.id == employeeData?.id,\n        [employeeData?.id, userData?.id]\n    )\n\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n\n    const handleFieldsChange = (main_name, field_name, index, val) => {\n        const tempData = {...employeeData}\n        tempData[main_name][index]['value'] = val\n        updateEmployeeData(main_name, tempData[main_name])\n    }\n\n    const handleSave = (name) => {\n        if (name == 'personal') setPersonalLoading(true)\n        if (name == 'personal') setEdit(false)\n        if (name == 'getStarted') setGetStartedEdit(false)\n        if (name == 'getStarted') setGetStartedLoading(true)\n        onSavePress()\n    }\n\n    const ageGroupList = useMemo(() => {})\n\n    const handleCancelAdditionalInfoEdit = () => {\n        setPersonalLoading(true)\n        setEdit(false)\n        getEmployeeProfile()\n    }\n\n    const handleCancelGetStartedEdit = () => {\n        setGetStartedLoading(true)\n        setGetStartedEdit(false)\n        getEmployeeProfile()\n    }\n\n    return (\n        <div className='d-sm-flex gap-20 mt-20 '>\n            <div\n                className='card bg-smwhite shadow h-auto w-sm-50 mb-20 '\n                style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n            >\n                <CustomLoader full visible={personalLoading} />\n\n                <div className=''>\n                    <div className='w-100 mb-0'>\n                        <div className='d-flex mx-10 align-items-center justify-content-between align-items-center pt-5'>\n                            <div\n                                className='text-cmGrey900'\n                                style={{\n                                    fontWeight: 700,\n                                    fontSize: '16px',\n                                }}\n                            >\n                                Additional Information\n                            </div>\n                            <AccessRights customCondition={isOwnUser || isSuperAdmin}>\n                                {!edit && <CustomEditIcon onClick={() => setEdit(!edit)} />}\n                                {edit && (\n                                    <div className='d-flex gap-2'>\n                                        <CustomButton\n                                            buttonType={BUTTON_TYPE.error}\n                                            buttonLabel='Cancel'\n                                            onClick={() => handleCancelAdditionalInfoEdit()}\n                                        />\n                                        <CustomButton\n                                            buttonType={BUTTON_TYPE.secondary}\n                                            buttonLabel='Save'\n                                            onClick={() => handleSave('personal')}\n                                        />\n                                    </div>\n                                )}\n                            </AccessRights>\n                        </div>\n                        <div className='border-bottom border-cmGrey300 mt-5' />\n                        <>\n                            {employeeData?.employee_personal_detail instanceof Array ? (\n                                employeeData?.employee_personal_detail?.map((item, index) => (\n                                    <div className='' key={index}>\n                                        <div\n                                            className={`py-4 px-sm-20 px-10 bg-${\n                                                index % 2 === 0 ? 'cmGrey100' : ''\n                                            }`}\n                                            style={{fontWeight: 600}}\n                                        >\n                                            <div className='row w-sm-100 '>\n                                                <div className='col-sm text-cmGrey700'>\n                                                    {item?.field_name}:\n                                                </div>{' '}\n                                                {!edit ? (\n                                                    <div className='col-sm text-cmgrey900 text-nowrap'>\n                                                        {item?.field_type == 'date'\n                                                            ? getValidDate(\n                                                                  item?.value,\n                                                                  'MM/DD/YYYY'\n                                                              ) ?? '-'\n                                                            : item?.value ?? '-'}\n                                                    </div>\n                                                ) : (\n                                                    <>\n                                                        {item?.field_type == 'dropdown' ? (\n                                                            <div className='col-sm'>\n                                                                <CustomDropdown\n                                                                    name={item?.field_name}\n                                                                    searching={false}\n                                                                    value={item?.value ?? ''}\n                                                                    onChange={(e) =>\n                                                                        handleFieldsChange(\n                                                                            'employee_personal_detail',\n                                                                            e.target.name,\n                                                                            index,\n                                                                            e.target.value\n                                                                        )\n                                                                    }\n                                                                    options={item?.attribute_option?.map(\n                                                                        (item) => {\n                                                                            return {value: item}\n                                                                        }\n                                                                    )}\n                                                                    displayKey={'value'}\n                                                                />\n                                                            </div>\n                                                        ) : (\n                                                            <div className='col-sm'>\n                                                                <CustomInput\n                                                                    type={item?.field_type}\n                                                                    placeholder='Enter Value'\n                                                                    value={item?.value}\n                                                                    name={item?.field_name}\n                                                                    onChange={(e) =>\n                                                                        handleFieldsChange(\n                                                                            'employee_personal_detail',\n                                                                            e.target.name,\n                                                                            index,\n                                                                            e.target.value\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </div>\n                                                        )}\n                                                    </>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            ) : (\n                                <CustomNoData\n                                    label={'No additional information'}\n                                    className={'py-5'}\n                                />\n                            )}\n                        </>\n\n                        {/* </div> */}\n                    </div>\n                </div>\n            </div>\n            <div\n                className='card bg-smwhite mb-20 shadow h-auto w-sm-50'\n                style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n            >\n                <CustomLoader full visible={getStartedLoading} />\n\n                <div className='w-100 mb-0'>\n                    <div className='d-flex mx-10 align-items-center justify-content-between align-items-center pt-5'>\n                        <div\n                            className='text-cmGrey900'\n                            style={{\n                                fontWeight: 700,\n                                fontSize: '16px',\n                            }}\n                        >\n                            Get Started\n                        </div>\n                        <AccessRights customCondition={isOwnUser || isSuperAdmin}>\n                            {!getStartedEdit && (\n                                <CustomEditIcon onClick={() => setGetStartedEdit(true)} />\n                            )}\n                            {getStartedEdit && (\n                                <div className='d-flex gap-2'>\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.error}\n                                        buttonLabel='Cancel'\n                                        onClick={() => handleCancelGetStartedEdit()}\n                                    />\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.secondary}\n                                        buttonLabel='Save'\n                                        onClick={() => handleSave('getStarted')}\n                                    />\n                                </div>\n                            )}\n                        </AccessRights>\n                    </div>\n                    <div className='border-bottom border-cmGrey300 mt-5' />\n\n                    <>\n                        {employeeData?.additional_info_for_employee_to_get_started instanceof\n                        Array ? (\n                            employeeData?.additional_info_for_employee_to_get_started?.map(\n                                (item, index) => (\n                                    <div className='' key={index}>\n                                        <div\n                                            className={`py-4 px-sm-20 px-10 bg-${\n                                                index % 2 === 0 ? 'cmGrey100' : ''\n                                            }`}\n                                            style={{fontWeight: 600}}\n                                        >\n                                            <div className='row align-items-center  '>\n                                                <div className='text-cmGrey700 text-nowrap col-sm-4'>\n                                                    {' '}\n                                                    {item?.field_name}:\n                                                </div>{' '}\n                                                {!getStartedEdit ? (\n                                                    <div className='text-cmgrey900 col-sm'>\n                                                        {item?.field_type == 'date'\n                                                            ? getValidDate(\n                                                                  item?.value,\n                                                                  'MM/DD/YYYY'\n                                                              ) ?? '-'\n                                                            : item?.value ?? '-'}\n                                                    </div>\n                                                ) : (\n                                                    <>\n                                                        {item?.field_type == 'dropdown' ? (\n                                                            <div className='col-sm'>\n                                                                <CustomDropdown\n                                                                    name={item?.field_name}\n                                                                    searching={false}\n                                                                    value={item?.value ?? ''}\n                                                                    onChange={(e) =>\n                                                                        handleFieldsChange(\n                                                                            'additional_info_for_employee_to_get_started',\n                                                                            e.target.name,\n                                                                            index,\n                                                                            e.target.value\n                                                                        )\n                                                                    }\n                                                                    options={item?.attribute_option?.map(\n                                                                        (item) => {\n                                                                            return {value: item}\n                                                                        }\n                                                                    )}\n                                                                    displayKey={'value'}\n                                                                />\n                                                            </div>\n                                                        ) : (\n                                                            <div className='col-sm'>\n                                                                <CustomInput\n                                                                    type={item?.field_type}\n                                                                    placeholder='Enter Value'\n                                                                    name={item.field_name}\n                                                                    value={item?.value}\n                                                                    onChange={(e) =>\n                                                                        handleFieldsChange(\n                                                                            'additional_info_for_employee_to_get_started',\n                                                                            e.target.name,\n                                                                            index,\n                                                                            e.target.value\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </div>\n                                                        )}\n                                                    </>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            )\n                        ) : (\n                            <CustomNoData label={'No info to get started'} className={'py-5'} />\n                        )}\n                    </>\n\n                    {/* </div> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfilePersonalAdditionalInfo\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {useSelector} from 'react-redux'\nimport {useLocation} from 'react-router-dom'\nimport {GENDER_DATA, getValidDate} from '../../../../constants/constants'\nimport {getUserProfileAction} from '../../../../redux/actions/AuthActions'\nimport {getAllStatesAndCitiesSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport {\n    addUpdateUserAdditionalEmailService,\n    deleteUserAdditionalEmailService,\n    getEmployeeProfileService,\n    getOnBoardingConfigurationService,\n    getUserAdditionalEmailsService,\n    updateEmployeeProfileService,\n} from '../../../../services/Services'\nimport _ from 'lodash'\nimport CustomDatePicker from '../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomLoader from '../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../customComponents/customToast/CustomToast'\nimport {\n    formattedPhoneNumber,\n    getErrorMessageFromResponse,\n    getMobileNumberWithoutMask,\n} from '../../../../helpers/CommonHelpers'\nimport ProfilePersonalAdditionalInfo from './ProfilePersonalAdditionalInfo'\nimport AccessRights from '../../../../accessRights/AccessRights'\nimport useCustomAccessRights from '../../../../accessRights/useCustomAccessRights'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {BUTTON_TYPE} from '../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomEditIcon from '../../../../customComponents/customIcons/CustomEditIcon'\nimport {\n    EMAIL_VALIDATION,\n    updateUserPersonalInfoValidation,\n} from '../../../../validations/validations'\nimport CustomAddressInput2 from '../../../../customComponents/customInputs/customAddressInput/CustomAddressInput2'\nimport {INITIAL_ADDRESS_FIELD} from '../../../../customComponents/customInputs/customAddressInput/CustomAddressInput2'\nimport useValidation from '../../../../hooks/useValidation'\nimport CustomDelete from '../../../../customComponents/customIcons/CustomDelete'\nimport {isUserSuperAdminSelector} from '../../../../redux/selectors/AuthSelectors'\n\nconst ProfilePersonalInfoPage = ({getProfile = null, AdditionalData, getAdditionalData}) => {\n    const location = useLocation()\n    const [showList, setShowList] = useState(true)\n    const [employeeData, setEmployeeData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [personalLoading, setPersonalLoading] = useState(false)\n    const [getStartedLoading, setGetStartedLoading] = useState(false)\n    const dispatch = useDispatch()\n    const employee_id = location?.state?.employee_id ?? location?.search.split('=')?.[1]\n    const {employeeProfileAccess} = useCustomAccessRights({employeeData})\n    const [validatePersonalInfo, personalInfoErrorMessage] = useValidation()\n    const [addAnotherEmail, setAddAnotherEmail] = useState(false)\n    const [workEmails, setWorkEmails] = useState([])\n    const [workEmailText, setWorkEmailText] = useState('')\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n\n    useEffect(() => {\n        if (personalInfoErrorMessage.beginValidating) {\n            validatePersonalInfo(updateUserPersonalInfoValidation(employeeData))\n        }\n    }, [employeeData])\n\n    useEffect(() => {\n        if (employeeData?.id) {\n            getWorkEmailList()\n        }\n    }, [employeeData?.id])\n\n    const addAdditionalEmail = useCallback(() => {\n        workEmails.push({value: '', edit: true})\n    }, [workEmails])\n\n    const saveAdditionalEmail = useCallback(() => {\n        workEmails.push(null)\n    }, [workEmails])\n\n    const deleteAdditionalEmail = useCallback((index) => {}, [])\n\n    // useEffect(() => {\n    //     if (showList) {\n    //         getEmployeeProfile()\n    //     }\n    // }, [showList])\n\n    const getEmployeeProfile = useCallback(() => {\n        setLoading(true)\n        getEmployeeProfileService(employee_id)\n            .then((res) => {\n                getProfile()\n                let newData = {...res?.data}\n                newData.mobile_no = getMobileNumberWithoutMask(newData.mobile_no)\n                newData.emergency_phone = getMobileNumberWithoutMask(newData.emergency_phone)\n                setEmployeeData(newData)\n                additionalInfo(newData)\n            })\n            .finally(() => {\n                setLoading(false)\n                setPersonalLoading(false)\n                setGetStartedLoading(false)\n            })\n    }, [getProfile, employee_id])\n\n    const additionalInfo = (empData) => {\n        const body = {\n            id: '1',\n        }\n        getOnBoardingConfigurationService(body)\n            .then((res) => {\n                let data = {...res.data[0]}\n\n                data['employee_personal_detail'] = data?.employee_personal_detail?.map((res) => ({\n                    ...res,\n                    value: null,\n                    attribute_option: JSON.parse(res?.attribute_option ?? '[]'),\n                }))\n\n                data['additional_info_for_employee_to_get_started'] =\n                    data?.additional_info_for_employee_to_get_started?.map((res) => ({\n                        ...res,\n                        value: null,\n                        attribute_option: JSON.parse(res?.attribute_option ?? '[]'),\n                    }))\n\n                const mergedEmployeeAdditionalData = data?.employee_personal_detail?.map((x) => {\n                    const y =\n                        empData?.employee_personal_detail &&\n                        JSON.parse(empData?.employee_personal_detail)?.find(\n                            (item) => x.field_name === item.field_name\n                        )\n                    if (y) {\n                        return Object.assign({}, x, y)\n                    } else return x\n                })\n                const mergedEmployeeGetStartedData =\n                    data?.additional_info_for_employee_to_get_started?.map((x) => {\n                        const y =\n                            empData?.additional_info_for_employee_to_get_started &&\n                            JSON.parse(empData?.additional_info_for_employee_to_get_started)?.find(\n                                (item) => x.field_name === item.field_name\n                            )\n                        if (y) {\n                            return Object.assign({}, x, y)\n                        } else return x\n                    })\n\n                setEmployeeData({\n                    ...empData,\n                    employee_personal_detail: mergedEmployeeAdditionalData,\n                    additional_info_for_employee_to_get_started: mergedEmployeeGetStartedData,\n                })\n            })\n            .finally(() => setLoading(false))\n    }\n    useEffect(() => {\n        getEmployeeProfile()\n    }, [employee_id])\n\n    const updateEmployeeData = (field, value) => {\n        setEmployeeData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }\n\n    const onChangeInputData = (e) => {\n        updateEmployeeData(e?.target?.name, e?.target?.value)\n    }\n\n    const onCancel = () => {\n        setLoading(true)\n        getEmployeeProfile()\n        setShowList(!showList)\n    }\n\n    const onSavePress = useCallback(\n        (type) => {\n            const body = {\n                ...employeeData,\n                user_id: employee_id ?? '',\n                first_name: employeeData?.first_name ?? '',\n                middle_name: employeeData?.middle_name ?? '',\n                last_name: employeeData?.last_name ?? '',\n                sex: employeeData?.sex ?? '',\n                dob: getValidDate(employeeData?.dob, 'YYYY-MM-DD') ?? '',\n                zip_code: employeeData?.zip_code ?? '',\n                email: employeeData?.email ?? '',\n                mobile_no: getMobileNumberWithoutMask(employeeData?.mobile_no) ?? '',\n                city_id: employeeData?.city_id ?? '',\n                state_id: employeeData?.state_id ?? employeeData?.state?.id ?? '',\n                additional_info_for_employee_to_get_started:\n                    JSON.stringify(employeeData?.additional_info_for_employee_to_get_started) ?? '',\n                employee_personal_detail:\n                    JSON.stringify(employeeData?.employee_personal_detail) ?? '',\n                home_address: employeeData?.home_address ?? '',\n                home_address_line_1: employeeData?.home_address_line_1 ?? '',\n                home_address_line_2: employeeData?.home_address_line_2 ?? '',\n                home_address_city: employeeData?.home_address_city ?? '',\n                home_address_state: employeeData?.home_address_state ?? '',\n                home_address_zip: employeeData?.home_address_zip ?? '',\n                home_address_lat: employeeData?.home_address_lat ?? '',\n                home_address_long: employeeData?.home_address_long ?? '',\n                home_address_timezone: employeeData?.home_address_timezone ?? '',\n                emergency_contact_name: employeeData?.emergency_contact_name ?? '',\n                emergency_phone: getMobileNumberWithoutMask(employeeData?.emergency_phone) ?? '',\n                emergency_contact_relationship: employeeData?.emergency_contact_relationship ?? '',\n                emergrncy_contact_address: employeeData?.emergrncy_contact_address ?? '',\n                emergency_address_line_1: employeeData?.emergency_address_line_1 ?? '',\n                emergency_address_line_2: employeeData?.emergency_address_line_2 ?? '',\n                emergrncy_contact_city: employeeData?.emergrncy_contact_city ?? '',\n                emergrncy_contact_state: employeeData?.emergrncy_contact_state ?? '',\n                emergrncy_contact_zip_code: employeeData?.emergrncy_contact_zip_code ?? '',\n                emergency_address_lat: employeeData?.emergency_address_lat ?? '',\n                emergency_address_long: employeeData?.emergency_address_long ?? '',\n                emergency_address_timezone: employeeData?.emergency_address_timezone ?? '',\n            }\n\n            if (type == 'personal') {\n                validatePersonalInfo(updateUserPersonalInfoValidation(employeeData)).then((res) => {\n                    if (res.isValidate) {\n                        setLoading(true)\n                        updateEmployeeProfileService(body)\n                            .then((res) => {\n                                getEmployeeProfile()\n                                dispatch(getUserProfileAction())\n                                setShowList(true)\n                                CustomToast.success('Personal info updated')\n                            })\n                            .catch((e) => {\n                                CustomToast.error(getErrorMessageFromResponse(e))\n                            })\n                            .finally(() => {\n                                setLoading(false)\n                                setPersonalLoading(false)\n                                setGetStartedLoading(false)\n                            })\n                    }\n                })\n            } else {\n                updateEmployeeProfileService(body)\n                    .then((res) => {\n                        getEmployeeProfile()\n                        dispatch(getUserProfileAction())\n                        setShowList(true)\n                        CustomToast.success('Personal info updated')\n                    })\n                    .catch((e) => {\n                        CustomToast.error(getErrorMessageFromResponse(e))\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                        setPersonalLoading(false)\n                        setGetStartedLoading(false)\n                    })\n            }\n        },\n        [employeeData, employee_id, validatePersonalInfo, getEmployeeProfile, dispatch]\n    )\n\n    const EMPLOYEE_KEYS = {\n        first_name: 'first_name',\n        middle_name: 'middle_name',\n        last_name: 'last_name',\n        sex: 'sex',\n        dob: 'dob',\n        mobile_no: 'mobile_no',\n        email: 'email',\n        work_email: 'work_email',\n        city: 'city',\n        city_id: 'city_id',\n        state: 'state',\n        state_id: 'state_id',\n        zip_code: 'zip_code',\n\n        // Home Address\n        home_address: 'home_address',\n        home_address_line_1: 'home_address_line_1',\n        home_address_line_2: 'home_address_line_2',\n        home_address_city: 'home_address_city',\n        home_address_state: 'home_address_state',\n        home_address_zip: 'home_address_zip',\n        home_address_lat: 'home_address_lat',\n        home_address_long: 'home_address_long',\n        home_address_timezone: 'home_address_timezone',\n\n        // Emergency Contact\n        emergency_contact_name: 'emergency_contact_name',\n        emergency_phone: 'emergency_phone',\n        emergency_contact_relationship: 'emergency_contact_relationship',\n        emergrncy_contact_address: 'emergrncy_contact_address',\n        emergency_address_line_1: 'emergency_address_line_1',\n        emergency_address_line_2: 'emergency_address_line_2',\n        emergrncy_contact_city: 'emergrncy_contact_city',\n        emergrncy_contact_state: 'emergrncy_contact_state',\n        emergrncy_contact_zip_code: 'emergrncy_contact_zip_code',\n        emergency_address_lat: 'emergency_address_lat',\n        emergency_address_long: 'emergency_address_long',\n        emergency_address_timezone: 'emergency_address_timezone',\n    }\n\n    const getWorkEmailList = useCallback(\n        () =>\n            new Promise((resolve) => {\n                getUserAdditionalEmailsService(employeeData?.id)\n                    .then((res) => {\n                        setWorkEmails(res?.data)\n                    })\n                    .finally(resolve)\n            }),\n        [employeeData?.id]\n    )\n\n    return (\n        <>\n            <div className='w-100 card shadow'>\n                <CustomLoader full visible={loading} />\n                <div className='py-5' style={{fontFamily: 'Manrope', fontSize: '14px'}}>\n                    {/* Top Heading with edit icon starts */}\n                    <div className='d-flex flex-wrap mx-sm-10 mx-5 gap-5 align-items-center justify-content-between'>\n                        <div className='text-cmGrey900' style={{fontWeight: 700, fontSize: '16px'}}>\n                            Personal Info\n                        </div>\n                        <AccessRights customCondition={employeeProfileAccess.editPersonalInfo}>\n                            <>\n                                {showList && (\n                                    <CustomEditIcon onClick={() => setShowList(!showList)} />\n                                )}\n                                {!showList && (\n                                    <div className='d-flex gap-4'>\n                                        <CustomButton\n                                            buttonType={BUTTON_TYPE.error}\n                                            buttonLabel='Cancel'\n                                            onClick={onCancel}\n                                        />\n                                        <CustomButton\n                                            buttonType={BUTTON_TYPE.secondary}\n                                            buttonLabel='Save'\n                                            onClick={() => onSavePress('personal')}\n                                        />\n                                    </div>\n                                )}\n                            </>\n                        </AccessRights>\n                    </div>\n                    {/* Top Heading with edit icon ends */}\n                    <div className='border-bottom border-cmGrey300 mt-5' />\n\n                    {/* List Starts */}\n                    {showList && (\n                        <div className=''>\n                            {/* first line */}\n                            <div className='row gap-5 py-4 px-sm-20 px-10 stripRow w-100 mx-auto'>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'>First Name:</div>\n                                    <div className='text-cmgrey900 col'>\n                                        {employeeData?.first_name}\n                                    </div>\n                                </div>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'>Middle Name:</div>\n                                    <div className='text-cmgrey900 col'>\n                                        {employeeData?.middle_name}\n                                    </div>\n                                </div>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'>Last Name:</div>\n                                    <div className='text-cmgrey900 col'>\n                                        {employeeData?.last_name}\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Second line */}\n                            <div className='row py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'> Sex:</div>\n                                    <div className='text-cmgrey900 col'>{employeeData?.sex}</div>\n                                </div>\n                                <div className='col-sm'></div>\n                                <div className='col-sm'></div>\n                            </div>\n                            {/* Third line */}\n                            <div className='row py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'> Date of Birth:</div>\n                                    <div className='text-cmgrey900 col'>\n                                        {getValidDate(employeeData?.dob) ?? '-'}\n                                    </div>\n                                </div>\n                                <div className='col-sm'></div>\n                                <div className='col-sm'></div>\n                            </div>\n                            {/* Fourth line */}\n                            <div className='row py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'>Phone:</div>\n                                    <div className='text-cmgrey900 text-nowrap col'>\n                                        {formattedPhoneNumber(employeeData?.mobile_no)}\n                                    </div>\n                                </div>\n                                <div className='col-sm'></div>\n                                <div className='col-sm'></div>\n                            </div>\n                            {/* Fith line */}\n                            <div className='row py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col-lg-2 col-sm-3'>\n                                        Personal Email:\n                                    </div>\n                                    <div className='text-cmgrey900 col'>{employeeData?.email}</div>\n                                </div>\n                            </div>\n                            {/* 6 line */}\n                            <div className='row py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div className='col-sm row align-items-center' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col col-lg-2 col-sm-3'>\n                                        Work Emails:\n                                    </div>\n                                    <div className='text-cmgrey900 col'>\n                                        {workEmails?.length > 0\n                                            ? workEmails?.map((item) => item?.email)?.join(', ')\n                                            : 'No work email found'}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* 7 line */}\n                            <div className='row py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div className='col-sm row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col col-lg-2 col-sm-3'>\n                                        Home Address:\n                                    </div>\n                                    <div className='text-cmgrey900 col'>\n                                        {employeeData?.home_address}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* 7 line */}\n                            {/* 8 line */}\n                            <div className='row gap-5 py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div className='col-xl row' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'>Emergency Contact:</div>\n                                    <div className='text-cmgrey900 col '>\n                                        {employeeData?.emergency_contact_name}\n                                    </div>\n                                </div>\n                                <div className='row col-xl' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'>Phone:</div>\n                                    <div className='text-cmgrey900 col'>\n                                        {formattedPhoneNumber(employeeData?.emergency_phone)}\n                                    </div>\n                                </div>\n                                <div className='row col-xl' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col'>Relationship:</div>\n                                    <div className='text-cmgrey900 col'>\n                                        {employeeData?.emergency_contact_relationship}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className='row gap-5 py-4 stripRow px-sm-20 px-10 w-100 mx-auto'>\n                                <div\n                                    className='row col-sm align-items-start'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-2 col'>\n                                        Emergency Address:\n                                    </div>\n                                    <div className='text-cmgrey900 col-xl-10 col text-start'>\n                                        {employeeData?.emergrncy_contact_address}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                    {/* List Ends */}\n                    {/* Edit section */}\n                    {!showList && (\n                        <div className=''>\n                            {/* first line */}\n                            <div\n                                className='row gap-xxl-0 gap-5 align-items-center py-5 px-sm-20 px-10 w-100'\n                                style={{fontWeight: 600}}\n                            >\n                                <div className='col-xxl row align-items-center mb-lg-0 mb-5 '>\n                                    <div className='text-cmGrey600  col-xl-4 text-nowrap'>\n                                        {' '}\n                                        First Name: <span className='required' />\n                                    </div>\n                                    <div className='col-xl'>\n                                        <CustomInput\n                                            errorMessage={personalInfoErrorMessage?.first_name}\n                                            name={EMPLOYEE_KEYS.first_name}\n                                            value={employeeData?.first_name}\n                                            onChange={onChangeInputData}\n                                            placeholder='Enter first name'\n                                            rejex={/^[\\w\\-\\s]+$/}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div\n                                    className='col-xxl row align-items-center mb-lg-0 mb-5 '\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-4 text-nowrap '>\n                                        Middle Name:\n                                    </div>\n                                    <div className='col-xl'>\n                                        <CustomInput\n                                            name={EMPLOYEE_KEYS.middle_name}\n                                            value={employeeData?.middle_name}\n                                            onChange={onChangeInputData}\n                                            placeholder='Enter middle name'\n                                            rejex={/^[\\w\\-\\s]+$/}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div\n                                    className='col-xxl row align-items-center mb-lg-0 mb-5 '\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-4 text-nowrap '>\n                                        Last Name: <span className='required' />\n                                    </div>\n                                    <div className='col-xl '>\n                                        <CustomInput\n                                            errorMessage={personalInfoErrorMessage?.last_name}\n                                            name={EMPLOYEE_KEYS.last_name}\n                                            value={employeeData?.last_name}\n                                            onChange={onChangeInputData}\n                                            placeholder='Enter last name'\n                                            rejex={/^[\\w\\-\\s]+$/}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            {/* Second line */}\n                            <div className='row gap-xxl-0  bg-cmGrey100 w-100 mx-auto py-5 px-sm-20 px-10'>\n                                <div\n                                    className='row col-xxl align-items-center '\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-4 text-nowrap mb-1'>\n                                        {' '}\n                                        Sex:\n                                    </div>\n                                    <div className='text-cmgrey900 col-xl '>\n                                        <CustomDropdown\n                                            name={EMPLOYEE_KEYS.sex}\n                                            value={employeeData?.sex ?? ''}\n                                            onChange={onChangeInputData}\n                                            placeholder='Select Gender'\n                                            options={GENDER_DATA}\n                                            displayKey='value'\n                                            searching={false}\n                                            showClear={false}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='col-xxl'></div>\n                                <div className='col-xxl'></div>\n                            </div>\n                            {/* Third line */}\n                            <div className='row gap-xxl-0 align-items-center py-5 px-sm-20 px-10 w-100 mx-auto'>\n                                <div\n                                    className='col-xxl  row  align-items-center'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 mb-3 col-xl-4 '>\n                                        Date of Birth:\n                                    </div>\n                                    <div className=' col-xl'>\n                                        <CustomDatePicker\n                                            maxDate={new Date()}\n                                            name={EMPLOYEE_KEYS?.dob}\n                                            value={\n                                                employeeData?.dob\n                                                    ? new Date(employeeData?.dob)\n                                                    : null\n                                            }\n                                            onChange={onChangeInputData}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='col-xxl'></div>\n                                <div className='col-xxl'></div>\n                            </div>\n                            {/* Fourth line */}\n                            <div className='row align-items-center py-5 px-sm-20 px-10 w-100 mx-auto bg-cmGrey100'>\n                                <div\n                                    className='col-xxl row align-items-center'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-4 text-nowrap '>\n                                        Phone: <span className='required' />\n                                    </div>\n                                    <div className='col-xl'>\n                                        <CustomInput\n                                            type={INPUT_TYPE.mobile}\n                                            errorMessage={personalInfoErrorMessage?.mobile_no}\n                                            value={employeeData?.mobile_no}\n                                            onChange={onChangeInputData}\n                                            name={EMPLOYEE_KEYS.mobile_no}\n                                            placeholder='Enter Ph. no'\n                                        />\n                                    </div>\n                                </div>\n                                <div className='col'></div>\n                                <div className='col'></div>\n                            </div>\n                            {/* Fith line */}\n                            <div className='row w-100 mx-auto py-5 px-sm-20 px-10'>\n                                <div\n                                    className='col-xxl row align-items-center'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-4  '>\n                                        Personal Email: <span className='required' />\n                                    </div>\n                                    <div className='col-xl'>\n                                        <CustomInput\n                                            type={INPUT_TYPE.email}\n                                            name={EMPLOYEE_KEYS.email}\n                                            errorMessage={personalInfoErrorMessage?.email}\n                                            value={employeeData?.email}\n                                            onChange={onChangeInputData}\n                                            placeholder='abc@gmail.com'\n                                        />\n                                        <div className='text-cmGrey600'>\n                                            This email will be use for login\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='col'></div>\n                                <div className='col'></div>\n                            </div>\n\n                            {/* 6 line */}\n                            <div className='w-100 row mx-auto py-5 px-sm-20 px-10 bg-cmGrey100'>\n                                <div className='row align-items-start ' style={{fontWeight: 600}}>\n                                    <div className='text-cmGrey600 col text-nowrap'>\n                                        Work Emails:\n                                    </div>\n                                    <div className='col-xl-10'>\n                                        {isSuperAdmin ? (\n                                            <WorkEmailItem\n                                                workEmails={workEmails}\n                                                employeeData={employeeData}\n                                                getWorkEmailList={getWorkEmailList}\n                                            />\n                                        ) : (\n                                            <>\n                                                {workEmails?.length > 0\n                                                    ? workEmails\n                                                          ?.map((item) => item?.email)\n                                                          ?.join(', ')\n                                                    : 'No work email found'}\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* 7 line */}\n                            <div className='w-100 row mx-auto py-5 px-sm-20 px-10'>\n                                <div\n                                    className='col-xxl row align-items-center'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-4 '>Home Address:</div>\n                                    <div className='col-xl'>\n                                        <CustomAddressInput2\n                                            errorMessage={personalInfoErrorMessage?.home_address}\n                                            modalTitle={'Set home address'}\n                                            data={{\n                                                ...INITIAL_ADDRESS_FIELD,\n                                                full_address: employeeData?.home_address,\n                                                address_line1: employeeData?.home_address_line_1,\n                                                address_line2: employeeData?.home_address_line_2,\n                                                city: employeeData?.home_address_city,\n                                                state: employeeData?.home_address_state,\n                                                zip: employeeData?.home_address_zip,\n                                                lat: employeeData?.home_address_lat,\n                                                long: employeeData?.home_address_long,\n                                                time_zone: employeeData?.home_address_timezone,\n                                            }}\n                                            needLatLong\n                                            needTimeZone\n                                            setData={(data) => {\n                                                setEmployeeData((val) => ({\n                                                    ...val,\n                                                    home_address: data?.full_address,\n                                                    home_address_line_1: data?.address_line1,\n                                                    home_address_line_2: data?.address_line2,\n                                                    home_address_city: data?.city,\n                                                    home_address_state: data?.state,\n                                                    home_address_zip: data?.zip,\n                                                    home_address_lat: data?.lat,\n                                                    home_address_long: data?.long,\n                                                    home_address_timezone: data?.time_zone,\n                                                }))\n                                            }}\n                                            placeholder='Enter home address'\n                                        />\n                                    </div>\n                                </div>\n                                <div className='col'></div>\n                                <div className='col'></div>\n                            </div>\n\n                            {/* 8 line */}\n                            <div className='w-100 gap-xxl-0 gap-5 mx-auto row py-5 px-sm-20 px-10 '>\n                                <div\n                                    className='col-xxl row align-items-center mb-lg-0 mb-5'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 text col-xl-4'>\n                                        Emergency <span>Contact:</span>\n                                    </div>\n                                    <div className='col-xl '>\n                                        <CustomInput\n                                            style={{fontWeight: 600}}\n                                            value={employeeData?.emergency_contact_name}\n                                            onChange={onChangeInputData}\n                                            name={EMPLOYEE_KEYS.emergency_contact_name}\n                                            placeholder='Enter Person Name'\n                                        />\n                                    </div>\n                                </div>\n                                <div\n                                    className='col-xxl row align-items-center mb-lg-0 mb-5'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 text-nowrap col-xl-4'>\n                                        Phone:\n                                    </div>\n                                    <div className='col-xl'>\n                                        <CustomInput\n                                            type={INPUT_TYPE.mobile}\n                                            value={employeeData?.emergency_phone}\n                                            onChange={onChangeInputData}\n                                            name={EMPLOYEE_KEYS.emergency_phone}\n                                            placeholder='Emg. phone no.'\n                                        />\n                                    </div>\n                                </div>\n                                <div\n                                    className='col-xxl row align-items-center mb-lg-0 mb-5'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 text-nowrap col-xl-4'>\n                                        Relationship:\n                                    </div>\n                                    <div className='col-xl'>\n                                        <CustomInput\n                                            value={employeeData?.emergency_contact_relationship}\n                                            onChange={onChangeInputData}\n                                            name={EMPLOYEE_KEYS.emergency_contact_relationship}\n                                            placeholder='Your relationship with them'\n                                            rejex={/^[\\w\\-\\s]+$/}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            {/* 9 line */}\n                            <div className='w-100 gap-xxl-0 gap-5 mx-auto row py-5 px-sm-20 px-10 bg-strip'>\n                                <div className='col'></div>\n                                <div\n                                    className='col-xxl row align-items-center'\n                                    style={{fontWeight: 600}}\n                                >\n                                    <div className='text-cmGrey600 col-xl-4 text-nowrap '>\n                                        Address:\n                                    </div>\n                                    <div className='col-xl'>\n                                        <CustomAddressInput2\n                                            modalTitle={'Set emergency address'}\n                                            errorMessage={\n                                                personalInfoErrorMessage?.emergrncy_contact_address\n                                            }\n                                            data={{\n                                                ...INITIAL_ADDRESS_FIELD,\n                                                full_address:\n                                                    employeeData?.emergrncy_contact_address,\n                                                address_line1:\n                                                    employeeData?.emergency_address_line_1,\n                                                address_line2:\n                                                    employeeData?.emergency_address_line_2,\n                                                city: employeeData?.emergrncy_contact_city,\n                                                state: employeeData?.emergrncy_contact_state,\n                                                zip: employeeData?.emergency_address_zip,\n                                                lat: employeeData?.emergency_address_lat,\n                                                long: employeeData?.emergency_address_long,\n                                                time_zone: employeeData?.emergency_address_timezone,\n                                            }}\n                                            needLatLong\n                                            needTimeZone\n                                            setData={(data) => {\n                                                setEmployeeData((val) => ({\n                                                    ...val,\n                                                    emergrncy_contact_address: data?.full_address,\n                                                    emergency_address_line_1: data?.address_line1,\n                                                    emergency_address_line_2: data?.address_line2,\n                                                    emergrncy_contact_city: data?.city,\n                                                    emergrncy_contact_state: data?.state,\n                                                    emergrncy_contact_zip_code: data?.zip,\n                                                    emergency_address_lat: data?.lat,\n                                                    emergency_address_long: data?.long,\n                                                    emergency_address_timezone: data?.time_zone,\n                                                }))\n                                            }}\n                                            placeholder='Enter emergency address'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className='d-sm-flex gap-20 '>\n                <div className='w-sm-100'>\n                    <ProfilePersonalAdditionalInfo\n                        getEmployeeProfile={getEmployeeProfile}\n                        employeeData={employeeData}\n                        AdditionalData={AdditionalData}\n                        updateEmployeeData={updateEmployeeData}\n                        onSavePress={() => onSavePress('additional')}\n                        setPersonalLoading={setPersonalLoading}\n                        setGetStartedLoading={setGetStartedLoading}\n                        personalLoading={personalLoading}\n                        getStartedLoading={getStartedLoading}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ProfilePersonalInfoPage\n\nconst WorkEmailItem = ({employeeData, workEmails, getWorkEmailList}) => {\n    const [emailList, setEmailList] = useState([])\n    const [showLoader, setShowLoader] = useState()\n\n    useEffect(() => {\n        loadEmails()\n    }, [workEmails])\n\n    const loadEmails = useCallback(() => {\n        const data = workEmails?.map((item) => ({...item, edit: false}))\n        setEmailList(data)\n    }, [workEmails])\n\n    const onChangeEmail = (value, index) => {\n        const data = _.cloneDeep(emailList)\n        data[index].email = value\n        setEmailList(data)\n    }\n\n    const toggleEditAdditionalEmailPress = useCallback(\n        (additionalEmailIndex, value) => {\n            let data = _.cloneDeep(workEmails)\n            const emailData = data.map((item) => ({...item, edit: false}))\n            emailData[additionalEmailIndex].edit = !value\n            setEmailList(emailData)\n        },\n        [workEmails]\n    )\n\n    const onAddAnotherEmail = useCallback(() => {\n        let data = _.cloneDeep(emailList)\n        data.push({email: '', edit: true})\n        setEmailList(data)\n    }, [emailList])\n\n    const canShowAddEditDeleteAnother = useMemo(() => {\n        return emailList?.every((item) => !item?.edit)\n    }, [emailList])\n\n    const onSavePress = useCallback(\n        (item, index) => {\n            if (!item?.email) return CustomToast.error('Enter work email')\n            if (!EMAIL_VALIDATION(item?.email)) return CustomToast.error('Enter valid work email')\n            setShowLoader({type: 'save', index})\n            const emailData = emailList?.map((item) => item?.email)\n            addUpdateUserAdditionalEmailService(employeeData?.id, emailData)\n                .then(() => {\n                    getWorkEmailList().then(() => {\n                        setShowLoader(null)\n                    })\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                    setShowLoader(null)\n                })\n        },\n        [emailList, employeeData?.id, getWorkEmailList]\n    )\n\n    const onDeletePress = useCallback(\n        (item, index) => {\n            setShowLoader({type: 'delete', index})\n\n            deleteUserAdditionalEmailService(item?.id)\n                .then(() => {\n                    getWorkEmailList().then(() => {\n                        setShowLoader(null)\n                    })\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                    setShowLoader('')\n                })\n        },\n        [getWorkEmailList]\n    )\n\n    const onCancelPress = useCallback(\n        (index) => {\n            loadEmails()\n        },\n        [loadEmails]\n    )\n\n    return (\n        <>\n            {emailList?.length > 0 &&\n                emailList?.map((additionalEmailItem, additionalEmailIndex) => (\n                    <>\n                        {additionalEmailItem?.edit ? (\n                            <div className='d-flex'>\n                                <CustomInput\n                                    value={additionalEmailItem?.email}\n                                    onChange={(e) =>\n                                        onChangeEmail(e?.target?.value, additionalEmailIndex)\n                                    }\n                                    placeholder='abc.sequifi@gmail.com'\n                                    className='me-5'\n                                />\n                                {showLoader?.type == 'save' &&\n                                showLoader?.index == additionalEmailIndex ? (\n                                    <div className='my-auto'>\n                                        <i\n                                            class='fa-solid fa-circle-notch fa-spin text-cmBlue-Crayola'\n                                            style={{fontSize: '20px'}}\n                                        ></i>\n                                    </div>\n                                ) : (\n                                    <>\n                                        {canShowAddEditDeleteAnother || additionalEmailItem.edit ? (\n                                            <i\n                                                class='fa-solid fa-square-check text-cmBlue-Crayola cursor-pointer'\n                                                style={{fontSize: '35px'}}\n                                                onClick={() =>\n                                                    onSavePress(\n                                                        additionalEmailItem,\n                                                        additionalEmailIndex\n                                                    )\n                                                }\n                                            ></i>\n                                        ) : null}\n                                    </>\n                                )}\n\n                                {canShowAddEditDeleteAnother || additionalEmailItem.edit ? (\n                                    <i\n                                        class='fa-solid fa-square-xmark text-cmGrey400 cursor-pointer ms-5'\n                                        style={{fontSize: '35px'}}\n                                        onClick={onCancelPress}\n                                    ></i>\n                                ) : null}\n                            </div>\n                        ) : (\n                            <div className='row gap-5 align-items-center'>\n                                <div className='col-sm-8 col-7 col-xxl-3'>\n                                    {additionalEmailItem?.email}\n                                </div>\n\n                                <div className='d-flex align-items-center gap-5 col'>\n                                    <div className=''>\n                                        {canShowAddEditDeleteAnother ? (\n                                            <CustomEditIcon\n                                                onClick={() =>\n                                                    toggleEditAdditionalEmailPress(\n                                                        additionalEmailIndex,\n                                                        additionalEmailItem?.edit\n                                                    )\n                                                }\n                                            />\n                                        ) : null}\n                                    </div>\n                                    <div className=''>\n                                        {showLoader?.type == 'delete' &&\n                                        showLoader?.index == additionalEmailIndex ? (\n                                            <div className='my-auto'>\n                                                <i\n                                                    class='fa-solid fa-circle-notch fa-spin text-cmError'\n                                                    style={{fontSize: '20px'}}\n                                                ></i>\n                                            </div>\n                                        ) : (\n                                            <div>\n                                                {canShowAddEditDeleteAnother ? (\n                                                    <CustomDelete\n                                                        onClick={() =>\n                                                            onDeletePress(\n                                                                additionalEmailItem,\n                                                                additionalEmailIndex\n                                                            )\n                                                        }\n                                                    />\n                                                ) : null}\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                        <hr />\n                    </>\n                ))}\n\n            {canShowAddEditDeleteAnother ? (\n                <div className='d-flex align-items-center text-cmBlue-Crayola gap-1'>\n                    <span className='cursor-pointer' onClick={onAddAnotherEmail}>\n                        <span className='bi bi-plus-square fs-4 '></span>{' '}\n                        <span className='fw-bold text-decoration-underline'>Add Work Email</span>\n                    </span>\n                </div>\n            ) : null}\n        </>\n    )\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Navigate, Routes, Route, Outlet, useLocation} from 'react-router-dom'\nimport {\n    getEmployeeProfileService,\n    getOnBoardingConfigurationService,\n    getOnBoardingEmployeeDetailService,\n} from '../../../../../services/Services'\nimport {PageTitle} from '../../../../../_metronic/layout/core'\nimport DocumentsPage from './compoents/documents/DocumentsPage'\nimport NetorkPage from './compoents/network/NetorkPage'\nimport PermissionsPage from './compoents/permissions/PermissionsPage'\nimport {ParticularEmployeHeader} from './ParticularEmployeHeader'\nimport UserEmployementPackage from './compoents/UserEmployementPackage'\nimport ProfilePersonalTax from '../../../common/components/ProfilePersonalTax'\nimport ProfilePersonalBanking from '../../../common/components/ProfilePersonalBanking'\nimport ProfilePersonalInfoPage from '../../../common/components/ProfilePersonalInfoPage'\nimport useCustomAccessRights from '../../../../../accessRights/useCustomAccessRights'\nimport AccessRights from '../../../../../accessRights/AccessRights'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport useQueryString from '../../../../../hooks/useQueryString'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard/',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst ParticularEmployePage = () => {\n    const [employeeData, setEmployeeData] = useState('')\n    const [searchParams] = useQueryString()\n    const [loading, setLoading] = useState(true)\n    const employee_id = useMemo(\n        () => searchParams?.employeeId ?? employeeData?.id,\n        [employeeData?.id, searchParams?.employeeId]\n    )\n\n    const {employeeProfileAccess} = useCustomAccessRights({employeeData})\n\n    useEffect(() => {\n        getEmployeeProfile(true)\n    }, [employee_id])\n\n    const getEmployeeProfile = useCallback(\n        (firstTime = false) =>\n            new Promise((resolve, reject) => {\n                if (employee_id) {\n                    if (firstTime) setLoading(true)\n                    getEmployeeProfileService(employee_id)\n                        .then((res) => {\n                            setEmployeeData(res.data)\n                        })\n                        .finally(() => {\n                            setLoading(false)\n                            resolve(true)\n                        })\n                }\n            }),\n        [employee_id]\n    )\n\n    return (\n        <div className='px-sm-10' style={{marginTop: -20}}>\n            <CustomLoader visible={loading} />\n            {!loading ? (\n                <Routes>\n                    <Route\n                        element={\n                            <AccessRights\n                                title={''}\n                                customCondition={employeeProfileAccess.viewPersonalInfoAccess}\n                                showPlaceHolder\n                            >\n                                <ParticularEmployeHeader\n                                    employeeData={employeeData}\n                                    loading={loading}\n                                    getProfile={getEmployeeProfile}\n                                />\n                                <Outlet />\n                            </AccessRights>\n                        }\n                    >\n                        <Route\n                            path='personal-info'\n                            element={\n                                <AccessRights\n                                    showPlaceHolder\n                                    customCondition={employeeProfileAccess.viewPersonalInfoAccess}\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                        Personal Info\n                                    </PageTitle>\n                                    <ProfilePersonalInfoPage getProfile={getEmployeeProfile} />\n                                </AccessRights>\n                            }\n                        />\n                        <Route\n                            path='employment-package'\n                            element={\n                                <AccessRights\n                                    showPlaceHolder\n                                    customCondition={\n                                        employeeProfileAccess.viewEmploymentPackageInfoAccess\n                                    }\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                        Employment Package\n                                    </PageTitle>\n                                    <UserEmployementPackage\n                                        id={employee_id}\n                                        getTopCardUserProfile={getEmployeeProfile}\n                                    />\n                                </AccessRights>\n                            }\n                        />\n                        <Route\n                            path='document'\n                            element={\n                                <AccessRights\n                                    showPlaceHolder\n                                    customCondition={employeeProfileAccess.viewDocumentAccess}\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                        Documents{' '}\n                                    </PageTitle>\n                                    <DocumentsPage employeeData={employeeData} />\n                                </AccessRights>\n                            }\n                        />\n                        {/* s */}\n                        <Route\n                            path='network'\n                            element={\n                                <AccessRights\n                                    showPlaceHolder\n                                    customCondition={employeeProfileAccess.viewNetworkAccess}\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>Network</PageTitle>\n                                    <NetorkPage employeeData={employeeData} />\n                                </AccessRights>\n                            }\n                        />\n                        <Route\n                            path='permissions'\n                            element={\n                                <AccessRights\n                                    showPlaceHolder\n                                    customCondition={employeeProfileAccess.viewPermissionAccess}\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                        Permissions\n                                    </PageTitle>\n                                    <PermissionsPage\n                                        employeeData={employeeData}\n                                        getEmployeeProfile={getEmployeeProfile}\n                                    />\n                                </AccessRights>\n                            }\n                        />\n                        <Route\n                            path='tax-info'\n                            element={\n                                <AccessRights\n                                    showPlaceHolder\n                                    customCondition={employeeProfileAccess.viewNetworkAccess}\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>Tax Info</PageTitle>\n                                    <ProfilePersonalTax\n                                        employeeData={employeeData}\n                                        getEmployeeProfile={getEmployeeProfile}\n                                    />\n                                </AccessRights>\n                            }\n                        />\n                        <Route\n                            path='banking'\n                            element={\n                                <AccessRights\n                                    showPlaceHolder\n                                    customCondition={employeeProfileAccess.viewBankingAccess}\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>Banking</PageTitle>\n                                    <ProfilePersonalBanking\n                                        employeeData={employeeData}\n                                        getBankData={getEmployeeProfile}\n                                    />\n                                </AccessRights>\n                            }\n                        />\n                        <Route index element={<Navigate to='/dashboard' />} />\n                    </Route>\n                </Routes>\n            ) : null}\n        </div>\n    )\n}\n\nexport default ParticularEmployePage\n","import {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isUserManagerSelector, isUserSuperAdminSelector} from '../../redux/selectors/AuthSelectors'\n\nconst RedirectToEmployeeProfile = ({\n    employeeId = null,\n    children,\n    underline = true,\n    className = null,\n    style = null,\n    target = '_self',\n}) => {\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const isManager = useSelector(isUserManagerSelector)\n\n    const hasAccess = employeeId && (isSuperAdmin || isManager)\n    return (\n        <Link\n            to={hasAccess ? `/user/personal-info?employeeId=${employeeId}` : ''}\n            target={''}\n            state={{\n                employee_id: employeeId,\n            }}\n            style={{\n                pointerEvents: hasAccess ? 'auto' : 'none',\n            }}\n        >\n            <span\n                className={`${hasAccess ? 'cursor-pointer' : ''} text-cmGrey800 d-flex align-items-center ${className}`}\n                style={{\n                    fontWeight: 700,\n                    ...(hasAccess && underline ? {textDecoration: 'underline'} : null),\n                    ...style, \n                }}\n            >\n                {children}\n            </span>\n        </Link>\n    )\n}\n\nexport default RedirectToEmployeeProfile\n"],"names":["_ref","_chartData$childs","_chartData$childs2","chartData","UserNode","_ref2","item","isYou","_jsxs","className","style","fontFamily","children","_jsx","CustomImage","src","image","width","height","fontWeight","first_name","last_name","fontSize","ChildeNode","_ref3","_item$childs","_item$childs2","_Fragment","childs","length","TreeNode","label","map","item1","borderRadius","Tree","lineWidth","lineColor","lineHeight","document","getElementById","body","AddNewOverrideOnEmployePop","show","handleClose","employeeData","manualOverrideData","selectedEmployee","setSelectedEmployee","useState","overrideAmount","setOverrideAmount","overrideType","setOverrideType","loading","setLoading","teamMember","setTeamMember","search","setSearch","effectiveDate","setEffectiveDate","selectedEmployees","setSelectedEmployees","tableLoder","setTableLoader","manualOverrideUsers","useCallback","searchText","Promise","resolve","getRecuiterFilterService","then","res","_res$data","data","name","concat","catch","useMemo","id","onSeachRecruiter","_res$data2","filteredData","filter","includes","onOptionPress","val","addOverride","e","preventDefault","userIds","CustomToast","manual_user_id","user_id","effective_date","getValidDate","overrides_amount","overrides_type","addManualOverrideService","getErrorMessageFromResponse","finally","delaySearch","debounce","value","onRemovePress","updateTeam","CustomModal","onHide","maxWidth","title","onSubmit","position","CustomLoader","full","visible","CustomDatePicker","required","onChange","_e$target2","target","placeholder","CustomInput","prefixText","type","INPUT_TYPE","percentageLimitCheck","CustomDropdown","options","OVERRIDE_TYPE","searching","color","marginTop","index","onClick","cursor","marginBottom","zIndex","left","alt","background","autoComplete","_e$target","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","overflowY","_item$position_detail","isThereInTeamList","some","tItem","position_detail","position_name","arr084","AddNewOverrideOfEmployePop","searchVal","setSearchVal","validateOverrideData","OverrideErrorData","useValidation","addError","setAddError","ADD_MANUAL_OVERRIDE","validationErrors","AddNewOverrideOfEmploye","isEmptyObjectValue","validate","addManualOverrideFromService","fontsFamily","_item$subposition_det","subposition_detail","_e$target3","errorMessage","_searchParam$networkT","_overrideData$direct2","_overrideData$indirec2","_overrideData$manual2","_overrideData$office2","_overrideData$direct4","_overrideData$indirec4","_overrideData$manual4","_overrideData$office4","_overrideData$first_n","_overrideData$first_n2","_overrideData$direct5","_overrideData$indirec5","_overrideData$manual5","_overrideData$office5","_overrideData$direct6","_overrideData$indirec6","_overrideData$office6","_overrideData$manual6","searchParam","useQueryString","showChart","setShowChart","overrideOnOff","setOverrideOnOff","open","setOpen","newOverrideOfEmploye","setNewOverrideOfEmploye","setChartData","overrideData","setOverrideData","overrideCategory","setOverrideCategory","networkType","positionSetting","setPositionSettig","isSuperAdmin","useSelector","isUserSuperAdminSelector","companyOverrideSetting","getCompanyOverrideSettingSelector","employeeProfileAccess","useCustomAccessRights","useEffect","getPositionSettingService","sub_position_id","getEmployeeChartService","getOverrideOnUser","getUserOverride","getUserOverideService","getOverrideOnUserService","overrideDropDownList","showOverrides","_overrideData$direct","_overrideData$indirec","_overrideData$office","_overrideData$manual","direct","direct_overrides_status","indirect","indirect_overrides_status","office","office_overrides_status","manual","allow_manual_override_status","overrideCount","_overrideData$direct3","_overrideData$indirec3","_overrideData$office3","_overrideData$manual3","hideDisabledOverrideForNormalUser","status","AccessRights","customCondition","showOverridesOnButtonAccess","CustomButton","buttonType","BUTTON_TYPE","buttonLabel","forSuperAdmin","addManualOverrideAccess","showClear","NetworkCard","showEnableDisableButton","showEnableDisableOverrideButttonAccess","userId","Type","getData","NetworkOrg","newOverrideOfEmployeClose","getEmployeeProfile","editMode","setEditMode","policyList","setPolicyList","dropDownList","setDropDownList","groupid","setGroupId","group_id","getPolicyList","getPermissionGroupListService","getPermissionService","_","finalData","_dataItem$groupPolicy","dataItem","is_open","groupPolicy","subItem","group_name","chnageID","valueKey","displayKey","editPermissionsAccess","CustomEditIcon","buttonSize","BUTTON_SIZE","updateGroup","updateEmployeeGroupService","policyListItem","policyListIndex","allPolicyList","_policyListItem$group","_policyListItem$group2","_policyListItem$group3","CustomArrow","handleMainView","arrowDirection","ARROW_DIRECTION","guard_name","policies","join","heading","policyIndex","_heading$policyTab","handleView","_data$policyListIndex","_data$policyListIndex2","_data$policyListIndex3","policyTab","tab","policyTabIndex","_tab$submodule","tabs","submodule","permission","permissionIndex","textAlign","marginLeft","paddingTop","paddingBottom","_allStatesWithOffices","_allStatesWithOffices2","_employeeData$sub_pos","getProfile","navigate","useNavigate","dispatch","useDispatch","managerList","setManagerList","setEmployeeData","oldOfficeManagerList","setOldOfficeManagerList","transferEmployeeData","setsetTransferEmployeeData","state_id","office_id","manager_id","team_id","redline_amount_type","redline","redline_type","self_gen_redline_amount_type","self_gen_redline","self_gen_redline_type","existing_employee_new_manager_id","allStatesWithOffices","geyAllStatesWithOfficesSelector","departmentWithPositionList","getDepartmentWithPositionSelector","teamList","setTeamList","validateTransferedData","transferedErrorData","getDepartmentWithPositionAction","getTeamListService","getUserEmploymentPackageDetailService","_employeeCompensation","_employeeCompensation2","_employeeCompensation3","_employeeCompensation4","_employeeCompensation5","_employeeCompensation6","employeeCompensation","employee_compensation","beginValidating","transferValidation","getAllManagerListService","positionList","_departmentWithPositi","find","department_id","onTransfer","isValidate","transferEmployeeService","onChangeInputData","managerNames","oldOfficeManagerNames","Dialog","tabIndex","header","footer","disabled","icons","backdrop","CustomCheckbox","disable","checked","is_manager","self_gen_accounts","SHOW_BASED_ON_HOST","position_id","MAIN_POSITTIONS_ID","hideLabel","UNIT_TYPE2","validatePasswordData","changePasswordErrorData","loader","setLoader","passwordData","setPasswordData","oldPassword","newPassword","confirmPassword","changePasswordValidation","test","padding","onChangePassword","old_password","new_password","changePasswordService","ParticularEmployeHeader","_location$state$emplo","_location$state","_location$search$spli","_employeeData$office","_employeeData$office2","_employeeData$office3","_employeeData$office4","_employeeData$office5","pageLoading","setPageLoading","transferModalView","setTransferModalView","changePasswordModal","setChangePasswordModal","location","useLocation","companyProfileFilePickerRef","useRef","hover","setHover","companySetting","getCompanySettingSelector","employee_id","state","split","updateEmployeeProfilePhoto","field","updateUserImageService","updateStatus","ableDisable","CustomDialog","updateStatusWithoutPrompt","updateUserAccountStatusService","handlePayrollHistory","onMouseEnter","onHover","onMouseLeave","onLeave","overflow","_companyProfileFilePi","current","click","justifyContent","display","alignItems","ref","accept","_e$target2$files","files","office_name","manager_name","formattedPhoneNumber","mobile_no","email","showTransferButtonAccess","handleTransferModal","showEnableDismissButtonAccess","dismiss","showStartStopPayrollButtonAccess","stop_payroll","showStartStopLoginButtonAccess","disable_login","showResetPasswordButtonAccess","icon","resetPassword","forgotPasswordService","showPayrollHistoryButton","showChangePasswordButton","handleChangePassword","overflowX","viewPersonalInfoAccess","Link","pathname","to","viewEmploymentPackageInfoAccess","viewTaxInfoAccess","viewBankingAccess","viewDocumentAccess","viewPermissionAccess","overrides","viewNetworkAccess","TransferModal","handleTransferClose","ChangePasswordModal","_bothPositionData$fir","getTopCardUserProfile","openViewChnagesOrganizationModal","setOpenViewChnagesOrganizationModal","openViewChnagesOverridesModal","setOpenViewChnagesOverridesModal","organizationLoading","redlineLoading","overrideLoading","agreementLoading","deductionLoading","saveEmploymentPackage","getEmployeeData","EditOrganisationSection","EditRedlineComissionUpfrontSection","EditOverridesSection","EditAgreementsSection","EditDeductionsSection","ViewOrganisationSection","ViewRedlineComissionUpfrontSection","ViewOverridesSection","ViewAgreementsSection","ViewDeductionsSection","bothPositionData","useUserEmploymentPackage","userType","USER_TYPE","setEditState","step1","step2","step3","step4","step5","step6","editState","showSaveButton","editEmploymentPackageAccess","clickHandler","handleViewChangeModal","modalNanme","MODAL_NAME","loaderPosition","CustomLink","onSaveOrganization","organisationValidation","CustomViewChnagesEmployementPackageModal","modalName","PositionId","onSaveRedlinePress","commissionAndRedlineValidation","onSaveOverridesPress","overrideValidation","positionData","firstPosition","getBooleanValue","deduction_status","onSaveDeductionPress","deductionsValidation","_$upperFirst","_employeeData$busines","_employeeData$busines2","edit","setEdit","taxData","setTaxData","updateAdditionalTaxData","editTaxInfoAccess","_taxData$id","_taxData$entity_type","entity_type","social_sequrity_no","business_name","business_type","business_ein","getDataWithoutMask","updateEmployeeProfileService","getUserProfileAction","alignSelf","mask","getTextForSecurity","BUSINESS_TYPE","_employeeData$name_of","_employeeData$type_of","getBankData","bankingData","setBankingData","updateAdditionalBankingData","editBankingInfoAccess","_bankingData$id","_bankingData$name_of_","_bankingData$routing_","_bankingData$account_","_bankingData$confirm_","_bankingData$account_2","_bankingData$type_of_","name_of_bank","routing_no","account_no","confirm_account_no","account_name","type_of_account","convertToMaskedNumber","HIRE_FIELD_KEYS","BANKING_TYPE_OF_ACCOUNT","_employeeData$employe","_employeeData$additio","updateEmployeeData","onSavePress","setPersonalLoading","setGetStartedLoading","personalLoading","getStartedLoading","getStartedEdit","setGetStartedEdit","userData","getUserDataSelector","isOwnUser","handleFieldsChange","main_name","field_name","tempData","handleSave","employee_personal_detail","Array","_getValidDate","_item$value","_item$value2","_item$attribute_optio","field_type","attribute_option","CustomNoData","additional_info_for_employee_to_get_started","_getValidDate2","_item$value3","_item$value4","_item$attribute_optio2","_workEmails$map","_employeeData$sex2","_workEmails$map2","AdditionalData","getAdditionalData","showList","setShowList","validatePersonalInfo","personalInfoErrorMessage","addAnotherEmail","setAddAnotherEmail","workEmails","setWorkEmails","workEmailText","setWorkEmailText","updateUserPersonalInfoValidation","getWorkEmailList","push","getEmployeeProfileService","newData","getMobileNumberWithoutMask","emergency_phone","additionalInfo","empData","getOnBoardingConfigurationService","_data$employee_person","_data$additional_info","_data$employee_person2","_data$additional_info2","_res$attribute_option","JSON","parse","_res$attribute_option2","mergedEmployeeAdditionalData","x","_JSON$parse","y","Object","assign","mergedEmployeeGetStartedData","_JSON$parse2","_employeeData$first_n","_employeeData$middle_","_employeeData$last_na","_employeeData$sex","_employeeData$zip_cod","_employeeData$email","_getMobileNumberWitho","_employeeData$city_id","_employeeData$state_i","_employeeData$state","_JSON$stringify","_JSON$stringify2","_employeeData$home_ad","_employeeData$home_ad2","_employeeData$home_ad3","_employeeData$home_ad4","_employeeData$home_ad5","_employeeData$home_ad6","_employeeData$home_ad7","_employeeData$home_ad8","_employeeData$home_ad9","_employeeData$emergen","_getMobileNumberWitho2","_employeeData$emergen2","_employeeData$emergrn","_employeeData$emergen3","_employeeData$emergen4","_employeeData$emergrn2","_employeeData$emergrn3","_employeeData$emergrn4","_employeeData$emergen5","_employeeData$emergen6","_employeeData$emergen7","middle_name","sex","dob","zip_code","city_id","stringify","home_address","home_address_line_1","home_address_line_2","home_address_city","home_address_state","home_address_zip","home_address_lat","home_address_long","home_address_timezone","emergency_contact_name","emergency_contact_relationship","emergrncy_contact_address","emergency_address_line_1","emergency_address_line_2","emergrncy_contact_city","emergrncy_contact_state","emergrncy_contact_zip_code","emergency_address_lat","emergency_address_long","emergency_address_timezone","EMPLOYEE_KEYS","work_email","city","getUserAdditionalEmailsService","editPersonalInfo","onCancel","rejex","GENDER_DATA","maxDate","Date","WorkEmailItem","CustomAddressInput2","modalTitle","INITIAL_ADDRESS_FIELD","full_address","address_line1","address_line2","zip","lat","long","time_zone","needLatLong","needTimeZone","setData","emergency_address_zip","ProfilePersonalAdditionalInfo","emailList","setEmailList","showLoader","setShowLoader","loadEmails","toggleEditAdditionalEmailPress","additionalEmailIndex","emailData","onAddAnotherEmail","canShowAddEditDeleteAnother","every","EMAIL_VALIDATION","addUpdateUserAdditionalEmailService","onDeletePress","deleteUserAdditionalEmailService","onCancelPress","additionalEmailItem","onChangeEmail","class","CustomDelete","profileBreadCrumbs","path","isSeparator","isActive","ParticularEmployePage","searchParams","_searchParams$employe","employeeId","firstTime","arguments","undefined","reject","Routes","Route","element","showPlaceHolder","Outlet","PageTitle","breadcrumbs","ProfilePersonalInfoPage","UserEmployementPackage","DocumentsPage","NetorkPage","PermissionsPage","ProfilePersonalTax","ProfilePersonalBanking","Navigate","underline","isManager","isUserManagerSelector","hasAccess","pointerEvents","textDecoration"],"sourceRoot":""}