{"version":3,"file":"static/js/8805.8a62d506.chunk.js","mappings":"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","sources":["app/modules/admin/payroll/component/reconciliation/ReconAdjustmentTable.js","app/modules/admin/payroll/component/reconciliation/ReconClawbackTable.js","app/modules/admin/payroll/component/reconciliation/ReconCommissionTable .js","app/modules/admin/payroll/component/reconciliation/ReconOverridesTable.js","app/modules/admin/payroll/component/runpayroll/commanDeductionRow.js","app/modules/admin/payroll/component/runpayroll/PayRollDeductionTable.js","app/modules/admin/payroll/component/runpayroll/PayRollReimbursTable.js","app/modules/admin/payroll/component/runpayroll/PayrollAdjustments.js","app/modules/admin/payroll/component/runpayroll/RunPayrollComment.js","app/modules/admin/payroll/component/runpayroll/ViewSummary.js","app/modules/admin/payroll/component/runpayroll/commisonTable/CommanCommisionRow.js","app/modules/admin/payroll/component/runpayroll/commisonTable/PayRollCommissionsTable.js","app/modules/admin/payroll/component/runpayroll/overrideTable/CommanOverrideRow.js","app/modules/admin/payroll/component/runpayroll/overrideTable/PayRollOverridesTable.js","customComponents/customTooltip/CustomTooltip.js","hooks/useFilterButton.js","hooks/usePayFrequency.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useEffect, useRef} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport {\n    payrollReconClawbackPopUpService,\n    payrollReconCommissionPopUpService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst ReconAdjustmentTable = ({show, handleClose, userData}) => {\n    const [loading, setLoading] = useState(false)\n    const [clawbackData, setClawbackData] = useState(null)\n    const [editMode, setEditMode] = useState(false)\n\n    useEffect(() => {\n        if (show) {\n            setLoading(true)\n            payrollReconClawbackPopUpService(userData?.user_id)\n                .then((res) => setClawbackData(res?.data))\n                .finally(() => setLoading(false))\n        }\n    }, [userData])\n\n    const removeAdjustment = (item) => {\n        const body = {\n            user_id: item?.id,\n        }\n        CustomDialog.warn('Are you sure you want to remove this adjustment ?', () => {\n            setLoading(true)\n            // deleteAdjustmentDetailsService(body).then(() => {\n            //     getAdjustmentDetails()\n            // })\n        })\n    }\n\n    return createPortal(\n        <Modal\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            dialogClassName='modal-dialog modal-dialog-centered mw-sm-1000px w-100 p-2 mx-auto'\n            show={show}\n            onHide={handleClose}\n            backdrop={true}\n        >\n            <div className='d-flex justify-content-between align-items-center me-sm-5 my-3'>\n                <div></div>\n                <div className='text-cmBlack' style={{fontWeight: '600', fontSize: '16px'}}>\n                    Adjustment | {userData?.emp_name}\n                </div>\n                <div\n                    className='btn btn-sm me-4 btn-icon btn-active-color-primary'\n                    onClick={handleClose}\n                >\n                    <i className='bi bi-x-circle' style={{fontSize: '22px', color: '#616161'}}></i>\n                </div>\n            </div>\n            <div className='' style={{borderBottom: '1px solid #EFF2F5'}}></div>\n\n            <div style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n                <div className='py-lg-7 px-lg-10 px-3 py-3'>\n                    <div className='table-responsive overflow-auto rounded w-100 shadow-sm'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>Approved By</th>\n                                    <th className='text-nowrap p-5 text-nowrap '>Date</th>\n                                    <th className=' p-5 text-nowrap'>Type</th>\n                                    <th className=' p-5 text-nowrap'> Amount</th>\n                                    <th className='text-nowrap p-5'>Description</th>\n                                    <th className=' p-6 '></th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {clawbackData?.length > 0 ? (\n                                    <>\n                                        {clawbackData?.map((item, i) => (\n                                            <tr\n                                                className=' text-cmGrey700'\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 500,\n                                                }}\n                                            >\n                                                <td className='p-5 fw-bold  text-cmGrey800'>\n                                                    {item?.first_name}{' '}\n                                                    {item?.last_name}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap'\n                                                    style={{\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    {getValidDate(item?.date)}\n                                                </td>\n                                                <td className='p-5  text-cmGrey800'>\n                                                    {item?.type ?? '-'}\n                                                </td>\n                                                <td className='p-5  text-cmGrey800'>\n                                                    {formattedNumberFields(item?.amount, '$')}\n                                                </td>\n                                                <td className='p-5'>{item?.description ?? '-'}</td>\n                                                <td\n                                                    className='p-5 text-nowrap cursor-pointer'\n                                                    onClick={() => removeAdjustment(item)}\n                                                >\n                                                    <i className='bi bi-x-circle fs-3 text-cmError'></i>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={9}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    {/* <div className='d-flex align-items-center justify-content-between mx-10 mt-5'>\n                        <div></div>\n                        <div style={{fontSize: '15px'}}>\n                            <span\n                                className='text-cmGrey600 me-5 p-1 '\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                Sub-Total\n                            </span>\n                            <span\n                                className='text-cmGrey900'\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                {formattedNumberFields(clawbackData?.subtotal, '$')}\n                            </span>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            {/* buttons */}\n        </Modal>,\n        modalsRoot\n    )\n}\n\nexport {ReconAdjustmentTable}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useEffect, useRef} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport {\n    payrollReconClawbackPopUpService,\n    payrollReconCommissionPopUpService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst ReconClawbackTable = ({show, handleClose, userData}) => {\n    const [loading, setLoading] = useState(false)\n    const [clawbackData, setClawbackData] = useState(null)\n    const [editMode, setEditMode] = useState(false)\n\n    useEffect(() => {\n        if (show) {\n            setLoading(true)\n            payrollReconClawbackPopUpService(userData?.user_id)\n                .then((res) => setClawbackData(res?.data))\n                .finally(() => setLoading(false))\n        }\n    }, [userData])\n\n    return createPortal(\n        <Modal\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            dialogClassName='modal-dialog modal-dialog-centered mw-sm-1000px w-100 p-2 mx-auto'\n            show={show}\n            onHide={handleClose}\n            backdrop={true}\n        >\n            <div className='d-flex justify-content-between align-items-center me-sm-5 my-3'>\n                <div></div>\n                <div className='text-cmBlack' style={{fontWeight: '600', fontSize: '16px'}}>\n                    Clawback | {userData?.emp_name}\n                </div>\n                <div\n                    className='btn btn-sm me-4 btn-icon btn-active-color-primary'\n                    onClick={handleClose}\n                >\n                    <i className='bi bi-x-circle' style={{fontSize: '22px', color: '#616161'}}></i>\n                </div>\n            </div>\n            <div className='' style={{borderBottom: '1px solid #EFF2F5'}}></div>\n\n            <div style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n                <div className='py-lg-7 px-lg-10 px-3 py-3'>\n                    {/* table */}\n                    {/* {!editMode ? (\n          <div\n            className='float-end btn bg-cmBlue-Crayola py-2 mb-5 text-cmwhite '\n            onClick={handleEdit}\n          >\n            Edit\n          </div>\n        ) : (\n          <div className='float-end d-flex align-items-center mb-5 '>\n            <div className='btn py-2  text-cmGrey600' onClick={handleEdit}>\n              Cancel\n            </div>\n            <div className='btn bg-cmBlue-Crayola py-2 text-cmwhite' onClick={handleEdit}>\n              Save\n            </div>\n          </div>\n        )} */}\n                    <div className='table-responsive overflow-auto rounded w-100 shadow-sm'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>PID</th>\n                                    <th className='text-nowrap p-5 text-nowrap '>Customer</th>\n                                    <th className=' p-5 text-nowrap'>State</th>\n                                    <th className=' p-5 text-nowrap'>Rep Redline</th>\n                                    <th className='text-nowrap p-5'>KW</th>\n                                    <th className=' p-5 text-nowrap'>Net EPC</th>\n                                    <th className=' p-5 text-nowrap'>Adders</th>\n                                    <th className=' p-5 text-nowrap'>Amount</th>\n                                    <th className='p-5 text-nowrap'>Type</th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {clawbackData?.length > 0 ? (\n                                    <>\n                                        {clawbackData?.map((item, i) => (\n                                            <tr\n                                                className=' text-cmGrey700'\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 500,\n                                                }}\n                                            >\n                                                <td className='p-5 fw-bold text-decoration-underline text-cmGrey800'>\n                                                    {item?.pid}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap'\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    {item?.first_name ?? ''} {item?.last_name ?? ''}\n                                                </td>\n                                                <td className='p-5 text-center '>\n                                                    {item?.state ?? '-'}\n                                                </td>\n                                                <td className='p-5 text-center '>\n                                                    {item?.rep_redline ?? '-'}\n                                                </td>\n                                                <td className='p-5'>{item?.kw ?? '-'}</td>\n                                                <td className='p- 5 text-center '>\n                                                    {item?.net_epc ?? '-'}\n                                                </td>\n                                                <td className='p-5'>\n                                                    {formattedNumberFields(item?.adders, '$')}\n                                                </td>\n                                                <td className='p-5 d-flex text-cmGrey900 text-nowrap '>\n                                                    {!editMode ? (\n                                                        <div\n                                                            style={{fontWeight: 600}}\n                                                            className='me-5'\n                                                        >\n                                                            {formattedNumberFields(\n                                                                item?.amount,\n                                                                '$'\n                                                            )}\n                                                        </div>\n                                                    ) : (\n                                                        <div className=''>\n                                                            <input\n                                                                type='text'\n                                                                className='w-75 form-control py-1'\n                                                            />\n                                                        </div>\n                                                    )}\n                                                    <div className=''>\n                                                        {getValidDate(item?.date)}\n                                                    </div>\n                                                </td>\n                                                <td className='p-5 text-center '>\n                                                    {item?.type?.toUpperCase()}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={9}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    {/* <div className='d-flex align-items-center justify-content-between mx-10 mt-5'>\n                        <div></div>\n                        <div style={{fontSize: '15px'}}>\n                            <span\n                                className='text-cmGrey600 me-5 p-1 '\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                Sub-Total\n                            </span>\n                            <span\n                                className='text-cmGrey900'\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                {formattedNumberFields(clawbackData?.subtotal, '$')}\n                            </span>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            {/* buttons */}\n        </Modal>,\n        modalsRoot\n    )\n}\n\nexport {ReconClawbackTable}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useEffect, useRef} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport {\n    payrollReconClawbackPopUpService,\n    payrollReconCommissionPopUpService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst ReconCommissionTable = ({show, handleClose, userData}) => {\n    const [loading, setLoading] = useState(false)\n    const [commissionData, setCommissionData] = useState(null)\n    const [editMode, setEditMode] = useState(false)\n\n    useEffect(() => {\n        if (show) {\n            setLoading(true)\n            payrollReconCommissionPopUpService(userData?.user_id)\n                .then((res) => setCommissionData(res?.data))\n                .finally(() => setLoading(false))\n        }\n    }, [userData])\n\n    return createPortal(\n        <Modal\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            dialogClassName='modal-dialog modal-dialog-centered mw-sm-1000px w-100 p-2 mx-auto'\n            show={show}\n            onHide={handleClose}\n            backdrop={true}\n        >\n            <div className='d-flex justify-content-between align-items-center me-sm-5 my-3'>\n                <div></div>\n                <div className='text-cmBlack' style={{fontWeight: '600', fontSize: '16px'}}>\n                    Commissions | {userData?.emp_name}\n                </div>\n                <div\n                    className='btn btn-sm me-4 btn-icon btn-active-color-primary'\n                    onClick={handleClose}\n                >\n                    <i className='bi bi-x-circle' style={{fontSize: '22px', color: '#616161'}}></i>\n                </div>\n            </div>\n            <div className='' style={{borderBottom: '1px solid #EFF2F5'}}></div>\n\n            <div style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n                <div className='py-lg-7 px-lg-10 px-3 py-3'>\n                    {/* table */}\n                    {/* {!editMode ? (\n          <div\n            className='float-end btn bg-cmBlue-Crayola py-2 mb-5 text-cmwhite '\n            onClick={handleEdit}\n          >\n            Edit\n          </div>\n        ) : (\n          <div className='float-end d-flex align-items-center mb-5 '>\n            <div className='btn py-2  text-cmGrey600' onClick={handleEdit}>\n              Cancel\n            </div>\n            <div className='btn bg-cmBlue-Crayola py-2 text-cmwhite' onClick={handleEdit}>\n              Save\n            </div>\n          </div>\n        )} */}\n                    <div className='table-responsive overflow-auto rounded w-100 shadow-sm'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>PID</th>\n                                    <th className='text-nowrap p-5 text-nowrap '>Customer</th>\n                                    <th className=' p-5 text-nowrap'>State</th>\n                                    <th className=' p-5 text-nowrap'>Rep Redline</th>\n                                    <th className='text-nowrap p-5'>KW</th>\n                                    <th className=' p-5 text-nowrap'>Net EPC</th>\n                                    <th className=' p-5 text-nowrap'>Adders</th>\n                                    <th className=' p-5 text-nowrap'>Amount</th>\n                                    <th className='p-5 text-nowrap'>Type</th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {commissionData?.length > 0 ? (\n                                    <>\n                                        {commissionData?.map((item, i) => (\n                                            <tr\n                                                className=' text-cmGrey700'\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 500,\n                                                }}\n                                            >\n                                                <td className='p-5 fw-bold text-decoration-underline text-cmGrey800'>\n                                                    {item?.pid}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap'\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    {item?.customer_name}\n                                                </td>\n                                                <td className='p-5 '>\n                                                    {item?.customer_state ?? '-'}\n                                                </td>\n                                                <td className='p-5  '>\n                                                    {item?.rep_redline ?? '-'}\n                                                </td>\n                                                <td className='p-5'>{item?.kw ?? '-'}</td>\n                                                <td className='p- 5  '>\n                                                    {item?.net_epc ?? '-'}\n                                                </td>\n                                                <td className='p-5'>\n                                                    {formattedNumberFields(item?.adders, '$')}\n                                                </td>\n                                                <td className='p-5 d-flex text-cmGrey900 text-nowrap '>\n                                                    {!editMode ? (\n                                                        <div\n                                                            style={{fontWeight: 600}}\n                                                            className='me-5'\n                                                        >\n                                                            {formattedNumberFields(\n                                                                item?.amount,\n                                                                '$'\n                                                            )}\n                                                        </div>\n                                                    ) : (\n                                                        <div className=''>\n                                                            <input\n                                                                type='text'\n                                                                className='w-75 form-control py-1'\n                                                            />\n                                                        </div>\n                                                    )}\n                                                    <div className=''>\n                                                        {getValidDate(item?.date)}\n                                                    </div>\n                                                </td>\n                                                <td className='p-5  '>{item?.type}</td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={9}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    {/* <div className='d-flex align-items-center justify-content-between mx-10 mt-5'>\n                        <div></div>\n                        <div style={{fontSize: '15px'}}>\n                            <span\n                                className='text-cmGrey600 me-5 p-1 '\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                Sub-Total\n                            </span>\n                            <span\n                                className='text-cmGrey900'\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                {formattedNumberFields(commissionData?.subtotal, '$')}\n                            </span>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            {/* buttons */}\n        </Modal>,\n        modalsRoot\n    )\n}\n\nexport {ReconCommissionTable}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useEffect, useRef} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport {KTSVG, toAbsoluteUrl} from '../../../../../../_metronic/helpers'\nimport {\n    getOverrideDetailsService,\n    payrollReconOverridePopUpService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport CustomNoData from '../../../../../../customComponents/customNoData/CustomNoData'\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst ReconOverridesTable = ({show, handleClose, userData}) => {\n    const [loading, setLoading] = useState(false)\n    const [overrideData, setOverrideData] = useState(null)\n\n    useEffect(() => {\n        if (show) {\n            setLoading(true)\n            payrollReconOverridePopUpService(userData?.user_id)\n                .then((res) => setOverrideData(res?.data))\n                .finally(() => setLoading(false))\n        }\n    }, [userData])\n\n    return createPortal(\n        <Modal\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            dialogClassName='modal-dialog modal-dialog-centered mw-sm-1000px w-100 p-2 mx-auto'\n            show={show}\n            onHide={handleClose}\n            backdrop={true}\n        >\n            <div className='d-flex justify-content-between align-items-center me-sm-5 my-3'>\n                <div></div>\n                <div className='text-cmBlack' style={{fontWeight: '600', fontSize: '16px'}}>\n                    Overrides | {userData?.emp_name}\n                </div>\n                <div\n                    className='btn btn-sm me-4 btn-icon btn-active-color-primary'\n                    onClick={handleClose}\n                >\n                    <i className='bi bi-x-circle' style={{fontSize: '22px', color: '#616161'}}></i>\n                </div>\n            </div>\n            <div className='' style={{borderBottom: '1px solid #EFF2F5'}}></div>\n\n            <div className='' tyle={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n\n                <div className='modal-body  py-lg-7 px-lg-10' s>\n                    {/* table */}\n                    <div className='my-sm-10 table-responsive overflow-auto rounded w-100'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900 '\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    {/* <th st></th> */}\n                                    <th className='text-nowrap p-5'>PID</th>\n                                    <th className='text-nowrap p-5 '>Customer Name</th>\n                                    <th className='text-nowrap p-5 '>Override Over</th>\n                                    <th className='text-nowrap p-5 '>Type</th>\n                                    <th className='text-nowrap p-5 '>KW installed</th>\n                                    <th className='text-nowrap p-5 '>Override</th>\n                                    <th className='text-nowrap p-5 '>Total Amount</th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {overrideData?.length > 0 ? (\n                                    <>\n                                        {overrideData?.map((item, i) => (\n                                            <tr\n                                                className=' text-cmGrey800'\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 700,\n                                                }}\n                                            >\n                                                <td\n                                                    className='p-5 text-nowrap '\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    {item?.pid}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-nowrap '\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    {item?.customer_name}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-nowrap '\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    <CustomImage\n                                                        src={item?.override_over_image}\n                                                        className='avatar me-3'\n                                                    />{' '}\n                                                    {item?.override_over_first_name}{' '}\n                                                    {item?.override_over_last_name}\n                                                </td>\n                                                <td className='p-5 text-nowrap '>{item?.type}</td>\n\n                                                <td className='p-5 text-nowrap text-decoration-underline cursor-pointer'>\n                                                    {item?.kw}\n                                                </td>\n                                                <td className='p-5 text-nowrap text-cmGrey800'>\n                                                    {formattedNumberFields(\n                                                        item?.overrides_amount,\n                                                        '$'\n                                                    )}\n                                                    /{item?.overrides_type}\n                                                </td>\n                                                <td className='p-5'>\n                                                    {formattedNumberFields(item?.amount, '$')}\n                                                </td>\n                                                {/* <td className='p-5'>\n                       {' '}\n                       <form\n                         className='position-relative bg-cmGrey100'\n                         style={{borderRadius: '90px'}}\n                         autoComplete='off'\n                       >\n                         <div className='bi bi-search position-absolute top-50 ms-3 translate-middle-y my-auto fs-4' />\n   \n                         <input\n                           style={{borderRadius: '10px', fontWeight: 800}}\n                           type='text'\n                           className='form-control ps-10 bg-cmwhite text-cmGrey900 py-2'\n                           name='search'\n                           placeholder='Search'\n                         />\n                       </form>\n                     </td> */}\n                                                {/* <td className='p-5'>\n                       <div className='btn bg-cmBlue-Crayola text-cmwhite py-2 fw-bold'>Apply</div>\n                     </td> */}\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td colSpan={7}>\n                                            <CustomNoData label={'No data found'} />\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                        {/* <div className='d-flex align-items-center mt-5'>\n                            <div></div>\n                            <div className='text-nowrap p-2 ' style={{fontSize: '15px'}}>\n                                <span\n                                    className='text-cmGrey600 me-5'\n                                    style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                                >\n                                    Sub-Total\n                                </span>\n                                <span\n                                    className='text-cmGrey900'\n                                    style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                                >\n                                    {formattedNumberFields(overrideData?.sub_total)}\n                                </span>\n                            </div>\n                        </div> */}\n                    </div>\n                </div>\n            </div>\n            {/* buttons */}\n        </Modal>,\n        modalsRoot\n    )\n}\n\nexport {ReconOverridesTable}\n","import React, {useState} from 'react'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {editCommissionDetailsService} from '../../../../../../services/Services'\nimport RunPayrollComment from './RunPayrollComment'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\n\nconst CommanDeductionRow = ({item, i, getDeductionDetails, payrollData, finalize_status}) => {\n    const [editMode, setEditMode] = useState(false)\n\n    const [comment, setComment] = useState(null)\n    const [openCommentBox, setOpenCommentBox] = useState(false)\n    const [amount, setAmount] = useState(0)\n    const [commentError, setCommentError] = useState(null)\n\n    const closeCommentBox = () => {\n        setOpenCommentBox(false)\n        setEditMode(false)\n    }\n    const handleCommentSubmit = (e) => {\n        e.preventDefault()\n        if (!comment) return setCommentError('Enter comment')\n        closeCommentBox()\n        const body = {\n            payroll_id: payrollData?.payroll_id,\n            user_id: payrollData?.userId,\n            // pid: item?.pid,\n            // type: item?.amount_type,\n            cost_center_id: item?.cost_center_id,\n            amount: amount,\n            // comment: comment,\n        }\n        editCommissionDetailsService(body)\n            .then(() => {\n                getDeductionDetails()\n                CustomToast.success('Deduction updated successfully')\n            })\n            .finally(() => {})\n    }\n\n    return (\n        <>\n            <tr\n                key={i}\n                className=' text-cmGrey700'\n                style={{\n                    height: '40px',\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    fontWeight: 500,\n                }}\n            >\n                <td className='p-5 fw-bold text-decoration-underline text-cmGrey800'>\n                    {item?.Type ?? '-'}\n                </td>\n\n                <td className='p-5 text-cmGrey800 text-nowrap'>\n                    <div\n                        style={{\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                            fontSize: '14px',\n                        }}\n                    >\n                        {formattedNumberFields(item?.Amount, '$')}\n                    </div>\n                </td>\n\n                <td className='p-5  '>\n                    {formattedNumberFields(item?.Limit, '%') ?? '-'}\n                </td>\n\n                <td className='p-5  '>\n                    <div>{formattedNumberFields(item?.Total, '$')}</div>\n                </td>\n                <td className='p-5  '>\n                    <div>{item?.Outstanding ? formattedNumberFields(item?.Outstanding) : '-'}</div>\n                </td>\n                <td className='p-5  '>\n                    {editMode ? (\n                        <div className='w-100px'>\n                            <CustomInput\n                                type={INPUT_TYPE.number}\n                                value={amount}\n                                onChange={(e) => setAmount(e.target.value)}\n                            />\n                        </div>\n                    ) : (\n                        <div\n                            style={{\n                                fontFamily: 'Manrope',\n                                fontWeight: '700',\n                                fontSize: '14px',\n                            }}\n                        >\n                            {formattedNumberFields(amount, '$')}\n                        </div>\n                    )}{' '}\n                </td>\n                {!finalize_status ? (\n                    <td className='p-5 '>\n                        {!editMode ? (\n                            <CustomEditIcon onClick={() => setEditMode(true)} />\n                        ) : (\n                            <div\n                                className='btn bg-cmBlue-Crayola text-cmwhite fw-bold px-5 py-2'\n                                onClick={() => setOpenCommentBox(true)}\n                            >\n                                Save\n                            </div>\n                        )}\n                    </td>\n                ) : null}\n            </tr>\n            {openCommentBox ? (\n                <RunPayrollComment\n                    comment={comment}\n                    setComment={setComment}\n                    show={openCommentBox}\n                    onHide={closeCommentBox}\n                    handleSubmit={handleCommentSubmit}\n                    commentError={commentError}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default CommanDeductionRow\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport {useEffect, useState} from 'react'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport {getPayrollDeductionDetailService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CommanCommisionRow from './commisonTable/CommanCommisionRow'\nimport CommanDeductionRow from './commanDeductionRow'\n\nconst PayRollDeductionTable = ({show, handleClose, payrollMetaData, finalize_status = 1}) => {\n    const [deductionData, setDeductionData] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        getDeductionDetails()\n    }, [payrollMetaData])\n\n    const getDeductionDetails = () => {\n        setLoading(true)\n        const body = {\n            payroll_id: payrollMetaData?.payroll_id,\n            user_id: payrollMetaData?.user_id,\n            pay_period_from: payrollMetaData?.pay_period_from,\n            pay_period_to: payrollMetaData?.pay_period_to,\n        }\n        getPayrollDeductionDetailService(body)\n            .then((res) => {\n                setDeductionData(res.data)\n            })\n            .finally(() => setLoading(false))\n    }\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='1300'\n            title={`Deductions | ${payrollMetaData?.name}`}\n        >\n            <CustomLoader full visible={loading} />\n            <div className=''>\n                <div className='modal-body px-lg-10'>\n                    {/* table */}\n                    <div className='my-sm-10 table-responsive overflow-auto rounded'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>Type</th>\n                                    <th className='text-nowrap p-5 text-nowrap '>Amount</th>\n                                    <th className=' p-5 text-nowrap'>Limit</th>\n                                    <th className=' p-5 text-nowrap'>Total</th>\n                                    <th className='text-nowrap p-5'>Outstanding</th>\n                                    <th className='text-nowrap p-5'>Adjustment</th>\n                                    <th className='p-5 text-nowrap'></th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {deductionData?.list?.length > 0 ? (\n                                    <>\n                                        {deductionData?.list?.map((item, i) => (\n                                            <CommanDeductionRow\n                                                item={item}\n                                                i={i}\n                                                payrollData={payrollMetaData}\n                                                getDeductionDetails={getDeductionDetails}\n                                                finalize_status={finalize_status}\n                                            />\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={9}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                        <div className='d-flex align-items-center mt-5 justify-content-between'>\n                            <div></div>\n                            <div className='text-nowrap p-2 ' style={{fontSize: '15px'}}>\n                                <span\n                                    className='text-cmGrey600 me-5'\n                                    style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                                >\n                                    Sub-Total\n                                </span>\n                                <span\n                                    className='text-cmGrey900'\n                                    style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                                >\n                                    {formattedNumberFields(deductionData?.subtotal)}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {PayRollDeductionTable}\n","import {useState, useEffect, useMemo} from 'react'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    getReimbursementDetailsService,\n    getReportReimbursementDetailsService,\n} from '../../../../../../services/Services'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\n\nconst PayRollReimbursTable = ({show, handleClose, payrollMetaData, report}) => {\n    const [loading, setLoading] = useState(false)\n    const [reimbursData, setReimburseData] = useState(null)\n\n    const commonDataShouldBePassAsBodyInApi = useMemo(\n        () => ({\n            id: payrollMetaData?.payroll_id,\n            user_id: payrollMetaData?.user_id,\n            pay_period_from: payrollMetaData?.pay_period_from,\n            pay_period_to: payrollMetaData?.pay_period_to,\n        }),\n        [\n            payrollMetaData?.pay_period_from,\n            payrollMetaData?.pay_period_to,\n            payrollMetaData?.payroll_id,\n            payrollMetaData?.user_id,\n        ]\n    )\n\n    useEffect(() => {\n        if (show) {\n            setLoading(true)\n            if (report) {\n                getReportReimbursementDetailsService(commonDataShouldBePassAsBodyInApi)\n                    .then((res) => setReimburseData(res?.data))\n                    .finally(() => setLoading(false))\n            } else\n                getReimbursementDetailsService(commonDataShouldBePassAsBodyInApi)\n                    .then((res) => setReimburseData(res?.data))\n                    .finally(() => setLoading(false))\n        }\n    }, [payrollMetaData])\n\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='1300'\n            title={` Reimbursements | ${payrollMetaData?.name}`}\n        >\n            <div className='' style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n\n                <div className='modal-body px-lg-10'>\n                    {/* table */}\n                    <div className='my-sm-10 table-responsive overflow-auto rounded'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    {/* <th st></th> */}\n                                    <th className='p-5 text-nowrap '>Approved By</th>\n                                    <th className=' p-5 '>Date</th>\n                                    <th className=' p-5'>Amount</th>\n                                    <th className=' p-5 '>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {reimbursData?.length > 0 ? (\n                                    <>\n                                        {reimbursData?.map((item, i) => (\n                                            <tr\n                                                key={i}\n                                                className=' text-cmGrey700'\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 500,\n                                                }}\n                                            >\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap '\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    <CustomImage\n                                                        src={item?.image}\n                                                        className='avatar me-3'\n                                                    />{' '}\n                                                    {item?.first_name} {item?.last_name ?? '-'}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap '\n                                                    style={{fontWeight: '700'}}\n                                                >\n                                                    {getValidDate(item?.date)}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap '\n                                                    style={{fontWeight: '700'}}\n                                                >\n                                                    {formattedNumberFields(item?.amount, '$')}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey800 text-nowrap '\n                                                    style={{fontWeight: '600'}}\n                                                >\n                                                    {item?.description ?? '-'}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={12}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {PayRollReimbursTable}\n","import {useState, useEffect, useMemo} from 'react'\nimport {\n    deleteAdjustmentDetailsService,\n    getAdjustmentDetailsService,\n    getReportAdjustmentDetailsService,\n} from '../../../../../../services/Services'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\n\nconst PayrollAdjustments = ({show, handleClose, payrollMetaData, report}) => {\n    const [loading, setLoading] = useState(false)\n    const [adjustmentData, setAdjustmentData] = useState(null)\n\n    useEffect(() => {\n        if (show) {\n            setLoading(true)\n            getAdjustmentDetails()\n        }\n    }, [payrollMetaData])\n\n    const commonDataShouldBePassAsBodyInApi = useMemo(\n        () => ({\n            id: payrollMetaData?.payroll_id,\n            user_id: payrollMetaData?.user_id,\n            pay_period_from: payrollMetaData?.pay_period_from,\n            pay_period_to: payrollMetaData?.pay_period_to,\n        }),\n        [\n            payrollMetaData?.pay_period_from,\n            payrollMetaData?.pay_period_to,\n            payrollMetaData?.payroll_id,\n            payrollMetaData?.user_id,\n        ]\n    )\n\n    const getAdjustmentDetails = () => {\n        if (report) {\n            getReportAdjustmentDetailsService(commonDataShouldBePassAsBodyInApi)\n                .then((res) => setAdjustmentData(res))\n                .finally(() => setLoading(false))\n        } else\n            getAdjustmentDetailsService(commonDataShouldBePassAsBodyInApi)\n                .then((res) => setAdjustmentData(res))\n                .finally(() => setLoading(false))\n    }\n\n    const removeAdjustment = (item) => {\n        const body = {\n            payroll_id: payrollMetaData?.payroll_id,\n            user_id: item?.id,\n        }\n        CustomDialog.warn('Are you sure you want to remove this adjustment ?', () => {\n            setLoading(true)\n            deleteAdjustmentDetailsService(body).then(() => {\n                getAdjustmentDetails()\n            })\n        })\n    }\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='1300'\n            title={`Adjustments | ${payrollMetaData?.name}`}\n        >\n            <div className='' style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n\n                <div className='px-lg-10'>\n                    {/* table */}\n                    <div className='table-responsive rounded'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    {/* <th st></th> */}\n                                    <th className=' p-5 text-nowrap'>Approved By</th>\n                                    <th className=' p-5 '>Date</th>\n                                    <th className=' p-5 '>Type</th>\n                                    <th className=' p-5'>Amount</th>\n                                    <th className=' p-5 '>Description</th>\n                                    {adjustmentData?.payroll_status != 3 ? (\n                                        <th className=' p-5 '></th>\n                                    ) : null}\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {adjustmentData?.data?.length > 0 ? (\n                                    <>\n                                        {adjustmentData?.data?.map((item, i) => (\n                                            <tr\n                                                key={i}\n                                                className=' text-cmGrey800'\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 500,\n                                                }}\n                                            >\n                                                <td\n                                                    className='p-5 text-nowrap '\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    <CustomImage\n                                                        src={item?.image}\n                                                        className='avatar me-3'\n                                                    />{' '}\n                                                    {item?.first_name} {item?.last_name ?? '-'}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-nowrap '\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    {getValidDate(item?.date)}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-nowrap '\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    {item?.type ?? '-'}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-nowrap '\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    {formattedNumberFields(item?.amount, '$')}\n                                                </td>\n                                                <td className='p-5 ' style={{fontWeight: 600}}>\n                                                    {item?.description ?? '-'}\n                                                </td>\n                                                {adjustmentData?.payroll_status != 3 ? (\n                                                    <td\n                                                        className='p-5 text-nowrap cursor-pointer'\n                                                        onClick={() => removeAdjustment(item)}\n                                                    >\n                                                        <i class='bi bi-x-circle fs-3 text-cmError'></i>\n                                                    </td>\n                                                ) : null}\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={5}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {PayrollAdjustments}\n","import React from 'react'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\n\nconst RunPayrollComment = ({show, onHide, handleSubmit, comment, setComment, commentError}) => {\n    return (\n        <CustomModal\n            show={show}\n            onHide={onHide}\n            maxWidth='500'\n            title={'To save your changes you need to add comment'}\n        >\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <div className='d-flex gap-5 align-items-center mb-5'>\n                        <CustomImage className='w-30px h-30px' />\n\n                        <CustomInput\n                            label={'Comment'}\n                            required\n                            type={INPUT_TYPE.textarea}\n                            value={comment}\n                            onChange={(e) => setComment(e.target.value)}\n                            errorMessage={commentError}\n                        />\n                    </div>\n                    <div className='float-end'>\n                        <CustomButton type={BUTTON_TYPE.primary} buttonLabel='Post'></CustomButton>\n                    </div>\n                </form>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default RunPayrollComment\n","import React, {useEffect, useMemo, useState} from 'react'\nimport Select from '../../Icon/select.png'\n\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport {Sidebar} from 'primereact/sidebar'\nimport {\n    getPayrollHistoryService,\n    getReportPayrollHistoryService,\n} from '../../../../../../services/Services'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    formattedNumberFields,\n    formattedNumberFieldsWithoutDecimal,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nexport default function ViewSummary({\n    open,\n    close,\n    periodList,\n    selectedWeekData,\n    currentPayPeriod,\n    isReport,\n}) {\n    const [edit, setEdit] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [selectedPeriod, setSelectedPeriod] = useState(currentPayPeriod)\n\n    const [summaryData, setSummaryData] = useState(null)\n    useEffect(() => {\n        setLoading(true)\n        if ((selectedPeriod, selectedWeekData)) {\n            const body = {\n                start_date: selectedPeriod?.pay_period_from,\n                end_date: selectedPeriod?.pay_period_to,\n                frequency_type_id: selectedWeekData?.frequency_type_id,\n            }\n\n            let apiUrl = isReport\n                ? getReportPayrollHistoryService(body)\n                : getPayrollHistoryService(body)\n            apiUrl\n                .then((res) => {\n                    setSummaryData(res.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [selectedPeriod])\n\n    const onChangePeriod = (e) => {\n        let data =\n            periodList?.length > 0 ? periodList?.find((item) => item?.id == e.target.value) : null\n        setSelectedPeriod(data)\n    }\n\n    const periodDropdownList = useMemo(() => {\n        return periodList?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.pay_period_from)} to ${getValidDate(\n                item?.pay_period_to\n            )}`,\n        }))\n    })\n\n    return (\n        <>\n            <Sidebar\n                visible={open}\n                position='right'\n                onHide={close}\n                showCloseIcon={false}\n                className={'w-lg-25 w-sm-50 w-100'}\n                icons={() => (\n                    <div className='d-flex align-items-center my-2 justify-content-between  w-100 '>\n                        <div\n                            style={{\n                                fontSize: '16px',\n                                color: '#0D1821',\n                                fontFamily: 'Manrope',\n                                fontWeight: '700',\n                            }}\n                        >\n                            Summary\n                        </div>\n                        <button\n                            onClick={close}\n                            style={{border: '1px solid #6078EC', marginTop: '-3px'}}\n                            className=' btn btn-flex h-35px bg-body  shadow-sm fs-7 px-3 '\n                        >\n                            <span style={{color: '#6078EC'}}>Close Summary</span>\n                        </button>\n                    </div>\n                )}\n            >\n                <CustomLoader full visible={loading} />\n\n                <div className=''>\n                    <div style={{borderBottom: '1px solid #EEEEEE'}}></div>\n                    <div>\n                        <div className='d-flex justify-content-center mt-5'>\n                            <div className='shadow w-md-250px mb-5 bg-white rounded'>\n                                <div className='container' style={{fontSize: '14px'}}>\n                                    <div className='row g-2  p-2'>\n                                        <div\n                                            className='col-6 mt-4'\n                                            style={{color: '#212121', fontFamily: 'Manrope'}}\n                                        >\n                                            Payroll Period\n                                        </div>\n                                        {/* <div\n                                            className='col-6 mt-4 text-nowrap'\n                                            style={{\n                                                color: '#004CE8',\n                                                textDecoration: 'underline',\n                                                fontSize: '12px',\n                                                fontFamily: 'Manrope',\n                                                marginLeft: '-5px',\n                                            }}\n                                        >\n                                            View past reports\n                                        </div> */}\n                                    </div>\n                                </div>\n\n                                <div className='container' style={{fontSize: '14px'}}>\n                                    <div\n                                        className='mt-1  mb-1 text-black fw-bold d-flex flex-row'\n                                        style={{\n                                            width: '100%',\n\n                                            borderRadius: '6px',\n                                            height: '43px',\n                                            fontSize: '14px',\n                                        }}\n                                    >\n                                        <CustomDropdown\n                                            options={periodDropdownList}\n                                            onChange={onChangePeriod}\n                                            valueKey='id'\n                                            displayKey='period'\n                                            value={selectedPeriod?.id}\n                                            showClear={false}\n                                            // value= {`${} to ${}`}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='container' style={{fontSize: '14px'}}>\n                                    <div className='row g-2 p-2'>\n                                        <div\n                                            className='col-7 mt-4'\n                                            style={{color: '#212121', fontFamily: 'Manrope'}}\n                                        >\n                                            Payroll Summary\n                                        </div>\n                                        <div\n                                            className={`col-5 mt-4 ${\n                                                summaryData?.payroll?.total_payroll_percentage > 0\n                                                    ? 'text-cmSuccess'\n                                                    : summaryData?.payroll\n                                                          ?.total_payroll_percentage < 0\n                                                    ? 'text-cmError'\n                                                    : 'text-cmOrange'\n                                            }`}\n\n                                            // style={{\n                                            //     color: '#00C247',\n                                            //     marginLeft: '-5px',\n                                            // }}\n                                        >\n                                            <i\n                                                // style={{color: '#00C247'}}\n                                                className={\n                                                    summaryData?.payroll?.total_payroll_percentage >\n                                                    0\n                                                        ? 'bi bi-arrow-up text-cmSuccess'\n                                                        : summaryData?.payroll\n                                                              ?.total_payroll_percentage < 0\n                                                        ? 'bi bi-arrow-down text-cmError'\n                                                        : 'bi bi-dash text-cmOrange'\n                                                }\n                                            ></i>\n                                            {formattedNumberFieldsWithoutDecimal(\n                                                summaryData?.payroll?.total_payroll_percentage,\n                                                '%'\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='container ms-1'\n                                    style={{\n                                        fontSize: '14px',\n                                        color: '#757575',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <div className='row g-2 p-2 me-2'>\n                                        <div className='col-6 mt-2'>Total (M1)</div>\n                                        <div className='col-6 mt-2 text-end'>\n                                            {formattedNumberFields(summaryData?.payroll?.m1, '$')}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='container ms-1'\n                                    style={{\n                                        fontSize: '14px',\n                                        color: '#757575',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <div className='row g-2 p-2 me-2'>\n                                        <div className='col-6 mt-2'>Total (M2)</div>\n                                        <div className='col-6 mt-2 text-end'>\n                                            {formattedNumberFields(summaryData?.payroll?.m2, '$')}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='container ms-1'\n                                    style={{\n                                        fontSize: '14px',\n                                        color: '#757575',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <div className='row g-2 p-2 me-2'>\n                                        <div className='col-6 mt-2'>Total Overrides</div>\n                                        <div className='col-6 mt-2 text-end'>\n                                            {formattedNumberFields(\n                                                summaryData?.payroll?.override,\n                                                '$'\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='container ms-1'\n                                    style={{\n                                        fontSize: '14px',\n                                        color: '#757575',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <div className='row g-2 p-2 me-2'>\n                                        <div className='col-8 mt-2'>Total Adjustments</div>\n                                        <div className='col-4 mt-2 text-end'>\n                                            {formattedNumberFields(\n                                                summaryData?.payroll?.adjustment,\n                                                '$'\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div\n                                    className='container ms-1'\n                                    style={{\n                                        fontSize: '14px',\n                                        color: '#757575',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <div className='row g-2 p-2 me-2'>\n                                        <div className='col-9 mt-3'>Total Reimbursements</div>\n                                        <div className='col-3 mt-3 text-end'>\n                                            {formattedNumberFields(\n                                                summaryData?.payroll?.reimbursement,\n                                                '$'\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    className='container ms-1'\n                                    style={{\n                                        fontSize: '14px',\n                                        color: '#757575',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <div className='row g-2 p-2 me-2'>\n                                        <div className='col-7 mt-3'>Total Deduction</div>\n                                        <div className='col-5 mt-3 text-end'>\n                                            {formattedNumberFields(\n                                                summaryData?.payroll?.deduction,\n                                                '$'\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div\n                                    className='container'\n                                    style={{fontSize: '14px', marginLeft: '1px'}}\n                                >\n                                    <div className='row g-2 p-2 ms-0'>\n                                        <div\n                                            className='col-6 mt-4'\n                                            style={{\n                                                color: '#212121',\n                                                fontWeight: 'bold',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            Total Payroll\n                                        </div>\n                                        <div\n                                            className='col-6 mt-4 text-end me-0'\n                                            style={{\n                                                color: '#212121',\n                                                fontWeight: 'bold',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            {formattedNumberFields(\n                                                summaryData?.payroll?.total_payroll,\n                                                '$'\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='d-flex justify-content-center'>\n                            <div className='shadow mt-3 w-md-250px d-flex justify-content-center h-auto mb-5 bg-white rounded pb-5'>\n                                <div className='container' style={{fontSize: '14px'}}>\n                                    <div className='row g-2 p-2 mt-0'>\n                                        <div\n                                            className='mt-4'\n                                            style={{\n                                                color: '#212121',\n                                                fontWeight: 'bold',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            Earnings Summary\n                                            <label\n                                                className={\n                                                    summaryData?.earning_summary_total_payroll_percentage >\n                                                    0\n                                                        ? 'text-cmSuccess'\n                                                        : summaryData?.earning_summary_total_payroll_percentage <\n                                                          0\n                                                        ? 'text-cmError'\n                                                        : 'text-cmOrange'\n                                                }\n                                                // style={{\n                                                //     color: '#FF3333',\n                                                //     marginLeft: '5px',\n                                                // }}\n                                            >\n                                                <i\n                                                    // style={{color: '#FF3333'}}\n                                                    className={\n                                                        summaryData?.earning_summary_total_payroll_percentage >\n                                                        0\n                                                            ? 'bi bi-arrow-up text-cmSuccess'\n                                                            : summaryData?.earning_summary_total_payroll_percentage <\n                                                              0\n                                                            ? 'bi bi-arrow-down text-cmError'\n                                                            : 'bi bi-dash text-cmOrange'\n                                                    }\n                                                ></i>\n                                                {formattedNumberFieldsWithoutDecimal(\n                                                    summaryData?.earning_summary_total_payroll_percentage,\n                                                    '%'\n                                                )}\n                                            </label>\n                                        </div>\n                                    </div>\n                                    {summaryData?.earning_summary?.map((item) => (\n                                        <div\n                                            key={item?.id}\n                                            className='container mt-1'\n                                            style={{\n                                                fontSize: '14px',\n                                                marginLeft: '-3px',\n                                                color: '#757575',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            <div className='row g-2'>\n                                                <div className='col-8 mt-3'>\n                                                    {item?.company_name}\n                                                </div>\n                                                <div className='col-4 mt-3 text-end'>\n                                                    {formattedNumberFields(item?.total, '$')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n\n                                    <div className='container mt-2' style={{fontSize: '14px,'}}>\n                                        <div className='row g-2 '>\n                                            <div\n                                                className='col-6 mt-4 text-nowrap'\n                                                style={{\n                                                    color: '#212121',\n                                                    fontWeight: 'bold',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                Total Earnings\n                                            </div>\n                                            <div\n                                                className='col-6 mt-4 text-end me-0'\n                                                style={{\n                                                    color: '#212121',\n                                                    fontWeight: 'bold',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                {formattedNumberFields(\n                                                    summaryData?.earning_summary_total_payroll,\n                                                    '$'\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* <Payrollby location */}\n                        <div className='d-flex justify-content-center'>\n                            <div className='shadow mt-3 w-md-250px d-flex justify-content-center h-auto bg-white rounded pb-5'>\n                                <div className='container' style={{fontSize: '14px'}}>\n                                    <div className='row g-2 p-2 mt-0'>\n                                        <div\n                                            className='mt-4'\n                                            style={{\n                                                color: '#212121',\n                                                fontWeight: 'bold',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            Payroll by Location\n                                            <label\n                                                className={\n                                                    summaryData?.payroll_by_location_total_percentage >\n                                                    0\n                                                        ? 'text-cmSuccess'\n                                                        : summaryData?.payroll_by_location_total_percentage <\n                                                          0\n                                                        ? 'text-cmError'\n                                                        : 'text-cmOrange'\n                                                }\n                                            >\n                                                <i\n                                                    className={\n                                                        summaryData?.payroll_by_location_total_percentage >\n                                                        0\n                                                            ? 'bi bi-arrow-up text-cmSuccess'\n                                                            : summaryData?.payroll_by_location_total_percentage <\n                                                              0\n                                                            ? 'bi bi-arrow-down text-cmError'\n                                                            : 'bi bi-dash text-cmOrange'\n                                                    }\n                                                ></i>\n                                                {formattedNumberFieldsWithoutDecimal(\n                                                    summaryData?.payroll_by_location_total_percentage,\n                                                    '%'\n                                                )}\n                                            </label>\n                                        </div>\n                                    </div>\n                                    {summaryData?.payroll_by_location?.map((item) => (\n                                        <div\n                                            key={item?.id}\n                                            className='container mt-1'\n                                            style={{\n                                                fontSize: '14px',\n                                                marginLeft: '-3px',\n                                                color: '#757575',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            <div className='row g-2'>\n                                                <div className='col-8 mt-3'>{item?.state}</div>\n                                                <div className='col-4 mt-3 text-end'>\n                                                    {formattedNumberFields(item?.total, '$')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n\n                                    <div className='container mt-2' style={{fontSize: '14px,'}}>\n                                        <div className='row g-2 '>\n                                            <div\n                                                className='col-6 mt-4 text-nowrap'\n                                                style={{\n                                                    color: '#212121',\n                                                    fontWeight: 'bold',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                Total Payroll\n                                            </div>\n                                            <div\n                                                className='col-6 mt-4 text-end me-0'\n                                                style={{\n                                                    color: '#212121',\n                                                    fontWeight: 'bold',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                {formattedNumberFields(\n                                                    summaryData?.payroll_by_location_total,\n                                                    '$'\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* <Payrollby Position */}\n                        <div className='d-flex justify-content-center'>\n                            <div className='shadow mt-3 w-md-250px d-flex justify-content-center h-auto bg-white rounded pb-5'>\n                                <div className='container' style={{fontSize: '14px'}}>\n                                    <div className='row g-2 p-2 mt-0'>\n                                        <div\n                                            className='mt-4'\n                                            style={{\n                                                color: '#212121',\n                                                fontWeight: 'bold',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            Payroll by Position\n                                            <label\n                                                className={\n                                                    summaryData?.total_payroll_by_position_percentage >\n                                                    0\n                                                        ? 'text-cmSuccess'\n                                                        : summaryData?.total_payroll_by_position_percentage <\n                                                          0\n                                                        ? 'text-cmError'\n                                                        : 'text-cmOrange'\n                                                }\n                                            >\n                                                <i\n                                                    className={\n                                                        summaryData?.total_payroll_by_position_percentage >\n                                                        0\n                                                            ? 'bi bi-arrow-up text-cmSuccess'\n                                                            : summaryData?.total_payroll_by_position_percentage <\n                                                              0\n                                                            ? 'bi bi-arrow-down text-cmError'\n                                                            : 'bi bi-dash text-cmOrange'\n                                                    }\n                                                ></i>\n                                                {formattedNumberFieldsWithoutDecimal(\n                                                    summaryData?.total_payroll_by_position_percentage,\n                                                    '%'\n                                                )}\n                                            </label>\n                                        </div>\n                                    </div>\n                                    {summaryData?.payroll_by_position?.map((item) => (\n                                        <div\n                                            key={item?.id}\n                                            className='container mt-1'\n                                            style={{\n                                                fontSize: '14px',\n                                                marginLeft: '-3px',\n                                                color: '#757575',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            <div className='row g-2'>\n                                                <div className='col-8 mt-3'>\n                                                    {item?.position_name}\n                                                </div>\n                                                <div className='col-4 mt-3 text-end'>\n                                                    {formattedNumberFields(item?.total, '$')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n\n                                    <div className='container mt-2' style={{fontSize: '14px,'}}>\n                                        <div className='row g-2 '>\n                                            <div\n                                                className='col-6 mt-4 text-nowrap'\n                                                style={{\n                                                    color: '#212121',\n                                                    fontWeight: 'bold',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                Total Payroll\n                                            </div>\n                                            <div\n                                                className='col-6 mt-4 text-end me-0'\n                                                style={{\n                                                    color: '#212121',\n                                                    fontWeight: 'bold',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                {formattedNumberFields(\n                                                    summaryData?.total_payroll_by_position,\n                                                    '$'\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-2 text-white'></div>\n                    </div>\n                </div>\n            </Sidebar>\n        </>\n    )\n}\n","import {useState} from 'react'\nimport RunPayrollComment from '../RunPayrollComment'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\nimport {MAIN_POSITTIONS_ID, getValidDate} from '../../../../../../../constants/constants'\nimport {editCommissionDetailsService} from '../../../../../../../services/Services'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\n\nconst CommanCommisionRow = ({\n    item,\n    i,\n    getCommissionDetails,\n    payrollData,\n    finalize_status,\n    paidStatus,\n}) => {\n    const [editMode, setEditMode] = useState(false)\n\n    const [comment, setComment] = useState(null)\n    const [openCommentBox, setOpenCommentBox] = useState(false)\n    const [adjustAmount, setAdjustAmount] = useState(item?.commission_adjustment)\n\n    const [commentError, setCommentError] = useState(null)\n\n    const closeCommentBox = () => {\n        setOpenCommentBox(false)\n        setEditMode(false)\n    }\n    const handleCommentSubmit = (e) => {\n        e.preventDefault()\n        if (!comment) return setCommentError('Enter comment')\n        closeCommentBox()\n        const body = {\n            payroll_id: payrollData?.payroll_id,\n            user_id: item?.id,\n            pid: item?.pid,\n            type: item?.amount_type,\n            amount: adjustAmount,\n            comment: comment,\n        }\n        editCommissionDetailsService(body)\n            .then(() => {\n                getCommissionDetails()\n                CustomToast.success('Commission updated successfully')\n            })\n            .finally(() => {})\n    }\n\n    return (\n        <>\n            <tr\n                key={i}\n                className=' text-cmGrey700'\n                style={{\n                    height: '40px',\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    fontWeight: 500,\n                }}\n            >\n                <td className='p-5 fw-bold text-decoration-underline text-cmGrey800'>\n                    {item?.pid}\n                </td>\n                <td\n                    className='p-5 text-cmGrey800 text-nowrap'\n                    style={{\n                        textDecoration: 'underline',\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '14px',\n                    }}\n                >\n                    {item?.customer_name}\n                </td>\n                <td className='p-5 text-center '>\n                    {MAIN_POSITTIONS_ID.closer == item?.position_id ? 'Closer' : 'Setter' ?? '-'}\n                </td>\n\n                <td className='p-5 text-center '>{item?.customer_state ?? '-'}</td>\n                <td className='p-5 text-center '>\n                    <div>{item?.rep_redline ?? '-'}</div>\n                </td>\n                <td className='p-5'>{item?.kw ?? '-'}</td>\n                <td className='p-5 text-center '>{item?.net_epc ?? '-'}</td>\n                <td className='p-5'>{formattedNumberFields(item?.adders, '$')}</td>\n                <td className='p-5  text-nowrap '>\n                    <div className='d-flex align-items-center gap-2 text-cmGrey900'>\n                        <div style={{fontWeight: 600}} className=''>\n                            {formattedNumberFields(item?.amount, '$')}\n                        </div>\n\n                        <div className=''>{getValidDate(item?.date)}</div>\n                    </div>\n                </td>\n                <td className='p-5  text-nowrap '>\n                    <div className='d-flex align-items-center gap-2 text-cmGrey900'>\n                        {!editMode ? (\n                            <div style={{fontWeight: 600}} className=''>\n                                {formattedNumberFields(adjustAmount, '$')}\n                            </div>\n                        ) : (\n                            <div className='w-75px'>\n                                <CustomInput\n                                    // className=''\n                                    type={INPUT_TYPE.currency}\n                                    value={adjustAmount}\n                                    onChange={(e) => setAdjustAmount(e.target.value)}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </td>\n                <td className='p-5 text-center '>{item?.amount_type?.toUpperCase()}</td>\n                {!finalize_status && paidStatus ? (\n                    <td className='p-5 text-center'>\n                        {!editMode ? (\n                            <CustomEditIcon onClick={() => setEditMode(true)} />\n                        ) : (\n                            <div\n                                className='btn bg-cmBlue-Crayola text-cmwhite fw-bold px-5 py-2'\n                                onClick={() => setOpenCommentBox(true)}\n                            >\n                                Save\n                            </div>\n                        )}\n                    </td>\n                ) : null}\n            </tr>\n            {openCommentBox ? (\n                <RunPayrollComment\n                    comment={comment}\n                    setComment={setComment}\n                    show={openCommentBox}\n                    onHide={closeCommentBox}\n                    handleSubmit={handleCommentSubmit}\n                    commentError={commentError}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default CommanCommisionRow\n","import {useState, useEffect, useMemo} from 'react'\nimport {\n    getCommissionDetailsService,\n    getReportCommissionDetailsService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport CommanCommisionRow from './CommanCommisionRow'\n\nconst PayRollCommissionsTable = ({\n    show,\n    handleClose,\n    payrollMetaData,\n    finalize_status = 1,\n    report,\n}) => {\n    const [loading, setLoading] = useState(false)\n    const [commissionData, setCommissionData] = useState(null)\n\n    useEffect(() => {\n        if (show) {\n            getCommissionDetails()\n        }\n    }, [payrollMetaData])\n\n    const commonDataShouldBePassAsBodyInApi = useMemo(\n        () => ({\n            id: payrollMetaData?.payroll_id,\n            user_id: payrollMetaData?.user_id,\n            pay_period_from: payrollMetaData?.pay_period_from,\n            pay_period_to: payrollMetaData?.pay_period_to,\n        }),\n        [\n            payrollMetaData?.pay_period_from,\n            payrollMetaData?.pay_period_to,\n            payrollMetaData?.payroll_id,\n            payrollMetaData?.user_id,\n        ]\n    )\n\n    const getCommissionDetails = () => {\n        setLoading(true)\n        if (report) {\n            getReportCommissionDetailsService(commonDataShouldBePassAsBodyInApi)\n                .then((res) => setCommissionData(res))\n                .finally(() => setLoading(false))\n        } else {\n            getCommissionDetailsService(commonDataShouldBePassAsBodyInApi)\n                .then((res) => setCommissionData(res))\n                .finally(() => setLoading(false))\n        }\n    }\n\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='1300'\n            title={`Commissions | ${payrollMetaData?.name}`}\n        >\n            <div style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n                <div className=''>\n                    <div className='table-responsive overflow-auto rounded w-100 shadow-sm'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>PID</th>\n                                    <th className='text-nowrap p-5 text-nowrap '>Customer</th>\n                                    <th className='text-nowrap p-5 text-nowrap '>Position</th>\n                                    <th className=' p-5 text-nowrap'>State</th>\n                                    <th className=' p-5 text-nowrap'>Rep Redline</th>\n                                    <th className='text-nowrap p-5'>KW</th>\n                                    <th className=' p-5 text-nowrap'>Net EPC</th>\n                                    <th className=' p-5 text-nowrap'>Adders</th>\n                                    <th className=' p-5 text-nowrap'>Amount</th>\n                                    <th className=' p-5 text-nowrap'>Adjustment</th>\n                                    <th className='p-5 text-nowrap'>Type</th>\n                                    {!finalize_status && commissionData?.payroll_status != 3 ? (\n                                        <th className='p-5 text-nowrap'></th>\n                                    ) : null}\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {commissionData?.data?.data?.length > 0 ? (\n                                    <>\n                                        {commissionData?.data?.data.map((item, i) => (\n                                            <CommanCommisionRow\n                                                item={item}\n                                                i={i}\n                                                getCommissionDetails={getCommissionDetails}\n                                                payrollData={payrollMetaData}\n                                                finalize_status={finalize_status}\n                                                paidStatus={commissionData?.payroll_status != 3}\n                                            />\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={11}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className='d-flex align-items-center justify-content-between mx-10 mt-5'>\n                        <div></div>\n                        <div style={{fontSize: '15px'}}>\n                            <span\n                                className='text-cmGrey600 me-5 p-1 '\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                Sub-Total\n                            </span>\n                            <span\n                                className='text-cmGrey900'\n                                style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                            >\n                                {formattedNumberFields(commissionData?.data?.subtotal, '$')}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* buttons */}\n        </CustomModal>\n    )\n}\n\nexport {PayRollCommissionsTable}\n","import React, {useState} from 'react'\nimport CustomImage from '../../../../../../../customComponents/customImage/CustomImage'\nimport {formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {editOverrideDetailsService} from '../../../../../../../services/Services'\nimport RunPayrollComment from '../RunPayrollComment'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\n\nconst CommanOverrideRow = ({\n    item,\n    i,\n    payrollData,\n    getOverrideDetails,\n    finalize_status,\n    paidStatus,\n}) => {\n    const [editMode, setEditMode] = useState(false)\n    const [amount, setAmount] = useState(item?.override_adjustment)\n\n    const [comment, setComment] = useState(null)\n    const [openCommentBox, setOpenCommentBox] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    const closeCommentBox = () => {\n        setOpenCommentBox(false)\n        setEditMode(false)\n    }\n    const handleCommentSubmit = (e) => {\n        e.preventDefault()\n        closeCommentBox()\n        const body = {\n            payroll_id: payrollData?.payroll_id,\n            user_id: item?.id,\n            pid: item?.pid,\n            type: item?.type,\n            amount: amount,\n            comment: comment,\n        }\n        editOverrideDetailsService(body)\n            .then(() => {\n                getOverrideDetails()\n                CustomToast.success('Override updated successfully')\n            })\n            .finally(() => {})\n    }\n    return (\n        <>\n            <tr\n                key={i}\n                className=' text-cmGrey800'\n                style={{\n                    height: '40px',\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    fontWeight: 700,\n                    position: 'relative',\n                }}\n            >\n                <td\n                    className='p-5 text-nowrap '\n                    style={{\n                        textDecoration: 'underline',\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '14px',\n                    }}\n                >\n                    {item?.pid}\n                </td>\n                <td\n                    className='p-5 text-nowrap '\n                    style={{\n                        textDecoration: 'underline',\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '14px',\n                    }}\n                >\n                    {item?.customer_name}\n                </td>\n                <td\n                    className='p-5 text-nowrap '\n                    style={{\n                        textDecoration: 'underline',\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        fontSize: '14px',\n                    }}\n                >\n                    <CustomImage src={item?.image} className='avatar me-3' /> {item?.first_name}{' '}\n                    {item?.last_name}\n                </td>\n                <td className='p-5 text-nowrap '>{item?.type}</td>\n                {/* <td className='p-5 text-nowrap '>{item?.accounts}</td> */}\n                <td className='p-5 text-nowrap text-decoration-underline cursor-pointer'>\n                    {item?.kw_installed}\n                </td>\n                <td className='p-5 text-nowrap text-cmGrey800'>\n                    {item?.type == 'Stack'\n                        ? `${formattedNumberFields(item?.calculated_redline, '$', false)} per watt`\n                        : `${formattedNumberFields(\n                              item?.override_amount,\n                              item?.override_type == 'percent' ? '' : '$',\n                              false\n                          )} ${item?.override_type == 'percent' ? '%' : item?.override_type}`}\n                </td>\n\n                <td className='p-5'>\n                    <div>{formattedNumberFields(item?.total_amount, '$')}</div>\n                </td>\n                <td className='p-5'>\n                    {' '}\n                    {!editMode ? (\n                        <div>{formattedNumberFields(amount, '$')}</div>\n                    ) : (\n                        <div className='w-75px'>\n                            <CustomInput\n                                type={INPUT_TYPE.currency}\n                                value={amount}\n                                onChange={(e) => setAmount(e.target.value)}\n                            />\n                        </div>\n                    )}\n                </td>\n\n                {!finalize_status && paidStatus ? (\n                    <td className='p-5 text-center'>\n                        {!editMode ? (\n                            <CustomEditIcon onClick={() => setEditMode(true)} />\n                        ) : (\n                            <div\n                                className='btn bg-cmBlue-Crayola text-cmwhite fw-bold px-5 py-2'\n                                onClick={() => setOpenCommentBox(true)}\n                            >\n                                Save\n                            </div>\n                        )}\n                    </td>\n                ) : null}\n            </tr>\n            {openCommentBox ? (\n                <RunPayrollComment\n                    comment={comment}\n                    setComment={setComment}\n                    show={openCommentBox}\n                    onHide={closeCommentBox}\n                    handleSubmit={handleCommentSubmit}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default CommanOverrideRow\n","import {useState, useEffect, useMemo} from 'react'\nimport {\n    getOverrideDetailsService,\n    getReportOverrideDetailsService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport RunPayrollComment from '../RunPayrollComment'\nimport CommanOverrideRow from './CommanOverrideRow'\n\nconst PayRollOverridesTable = ({\n    show,\n    handleClose,\n    payrollMetaData,\n    finalize_status = 1,\n    report,\n}) => {\n    const [loading, setLoading] = useState(false)\n    const [overrideData, setOverrideData] = useState(null)\n    const [comment, setComment] = useState(null)\n    const [openCommentBox, setOpenCommentBox] = useState(false)\n\n    useEffect(() => {\n        if (show) {\n            getOverrideDetails()\n        }\n    }, [payrollMetaData])\n\n    const commonDataShouldBePassAsBodyInApi = useMemo(\n        () => ({\n            id: payrollMetaData?.payroll_id,\n            user_id: payrollMetaData?.user_id,\n            pay_period_from: payrollMetaData?.pay_period_from,\n            pay_period_to: payrollMetaData?.pay_period_to,\n        }),\n        [\n            payrollMetaData?.payroll_id,\n            payrollMetaData?.pay_period_from,\n            payrollMetaData?.pay_period_to,\n            payrollMetaData?.user_id,\n        ]\n    )\n\n    const getOverrideDetails = () => {\n        setLoading(true)\n        if (report) {\n            getReportOverrideDetailsService(commonDataShouldBePassAsBodyInApi)\n                .then((res) => setOverrideData(res))\n                .finally(() => setLoading(false))\n        } else\n            getOverrideDetailsService(commonDataShouldBePassAsBodyInApi)\n                .then((res) => setOverrideData(res))\n                .finally(() => setLoading(false))\n    }\n\n    const closeCommentBox = () => {\n        setOpenCommentBox(false)\n    }\n    const handleCommentSubmit = (e) => {\n        e.preventDefault()\n        closeCommentBox()\n    }\n\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            title={`Overrides | ${payrollMetaData?.name}`}\n            maxWidth='1300'\n        >\n            <div className='' tyle={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n\n                <div className=''>\n                    {/* table */}\n                    <div className='table-responsive overflow-auto rounded w-100'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey900 '\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    {/* <th st></th> */}\n                                    <th className='text-nowrap p-5 '>PID</th>\n                                    <th className='text-nowrap p-5 '>Customer Name</th>\n                                    <th className='text-nowrap p-5 '>Override Over</th>\n                                    <th className='text-nowrap p-5 '>Type</th>\n                                    <th className='text-nowrap p-5 '>KW installed</th>\n                                    <th className='text-nowrap p-5 '>Override</th>\n                                    <th className='text-nowrap p-5 '>Total Amount</th>\n                                    <th className='text-nowrap p-5 '>Adjustment</th>\n                                    {overrideData?.payroll_status != 3 ? (\n                                        <th className='text-nowrap p-5 '></th>\n                                    ) : null}\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {overrideData?.data?.data?.length > 0 ? (\n                                    <>\n                                        {overrideData?.data?.data?.map((item, i) => (\n                                            <CommanOverrideRow\n                                                item={item}\n                                                i={i}\n                                                payrollData={payrollMetaData}\n                                                getOverrideDetails={getOverrideDetails}\n                                                finalize_status={finalize_status}\n                                                paidStatus={overrideData?.payroll_status != 3}\n                                            />\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={8}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                        <div className='d-flex align-items-center mt-5 justify-content-end'>\n                            <div></div>\n                            <div className='text-nowrap p-2 ' style={{fontSize: '15px'}}>\n                                <span\n                                    className='text-cmGrey600 me-5'\n                                    style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                                >\n                                    Sub-Total\n                                </span>\n                                <span\n                                    className='text-cmGrey900'\n                                    style={{fontWeight: '700', fontFamily: 'Manrope'}}\n                                >\n                                    {formattedNumberFields(overrideData?.data?.sub_total)}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {openCommentBox ? (\n                    <RunPayrollComment\n                        comment={comment}\n                        setComment={setComment}\n                        show={openCommentBox}\n                        onHide={closeCommentBox}\n                        handleSubmit={handleCommentSubmit}\n                    />\n                ) : null}\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {PayRollOverridesTable}\n","import {Tooltip} from '@mui/material'\n\nconst CustomTooltip = ({title = '', style, children, className}) => {\n    return children ? (\n        <Tooltip\n            arrow\n            title={\n                <span className={className} style={{fontSize: 14, ...style}}>\n                    {title}\n                </span>\n            }\n            style={{fontSize: 40}}\n        >\n            {children}\n        </Tooltip>\n    ) : null\n}\n\nexport default CustomTooltip\n","import {useCallback, useMemo, useState} from 'react'\n\nconst useFilterButton = (initialFilter, onApplyFilter, onResetFilter) => {\n    const [storedFilteredData, setStoredFilteredData] = useState(initialFilter)\n    const [filterData, setFilterData] = useState(initialFilter)\n\n    const onApplyClick = useCallback(() => {\n        onApplyFilter(filterData)\n        setStoredFilteredData(filterData)\n    }, [filterData, onApplyFilter])\n\n    const onResetClick = useCallback(() => {\n        onResetFilter()\n        setFilterData(initialFilter)\n        onApplyFilter(initialFilter)\n        setStoredFilteredData(storedFilteredData)\n    }, [initialFilter, onApplyFilter, onResetFilter, storedFilteredData])\n\n    const onCancelClick = useCallback(() => {\n        setFilterData(storedFilteredData)\n    }, [storedFilteredData])\n\n    const filterProps = useMemo(\n        () => ({\n            onApplyClick,\n            onResetClick,\n            onCancelClick,\n        }),\n        [onApplyClick, onCancelClick, onResetClick]\n    )\n\n    return [filterProps, filterData, setFilterData]\n}\n\nexport default useFilterButton\n","import {useEffect, useMemo, useState} from 'react'\nimport {useSelector} from 'react-redux'\n\nimport {\n    getMonthlyPayPeriodSelector,\n    getPayFrequencySettingSelector,\n    getWeeklyPayPeriodSelector,\n} from '../redux/selectors/SettingsSelectors'\nimport {getValidDate} from '../constants/constants'\nimport {getMonthlyPayPeriodAction, getWeeklyPayPeriodAction} from '../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {\n    getAllMonthlyPayPeriodService,\n    getAllWeeklyPayPeriodService,\n    getMonthlyExecutedPayPeriodService,\n    getWeeklyExecutedPayPeriodService,\n} from '../services/Services'\n\nconst usePayFrequency = () => {\n    const [selectedWeekData, setSelectedWeekData] = useState(null)\n    const getPayFrequencyData = useSelector(getPayFrequencySettingSelector)\n    const weeklyPayPeriod = useSelector(getWeeklyPayPeriodSelector)\n    const monthlyPayPeriodList = useSelector(getMonthlyPayPeriodSelector)\n    const [payPeriodList, setPagePayPeriodList] = useState([])\n    const [executedPayPeriodList, setExecutedPayPeriodList] = useState([])\n    const [allPayPeriodList, setAllPayPeriodList] = useState([])\n\n    const [selectedPayPeriod, setSelectedPayPeriod] = useState(null)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getWeeklyPayPeriodAction())\n        dispatch(getMonthlyPayPeriodAction())\n    }, [])\n\n    // Set Present Pay Period\n    useEffect(() => {\n        if (payPeriodList?.length > 0) {\n            let presentPeriod = payPeriodList?.find(\n                (item) =>\n                    getValidDate(item?.pay_period_from, 'YYYY-MM-DD 00:00', true) <=\n                        getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) &&\n                    getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) <=\n                        getValidDate(item?.pay_period_to, 'YYYY-MM-DD 00:00', true)\n            )\n            if (presentPeriod) {\n                setSelectedPayPeriod(presentPeriod?.id)\n            } else setSelectedPayPeriod(payPeriodList?.[0]?.id)\n        }\n    }, [payPeriodList])\n\n    //Return the list of current payPeriod\n    const currentPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            payPeriodList?.length > 0\n                ? payPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [selectedPayPeriod, payPeriodList])\n\n    const currentPayPeriodFromAllPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            allPayPeriodList?.length > 0\n                ? allPayPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [allPayPeriodList, selectedPayPeriod])\n\n    const executedCurrentPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            executedPayPeriodList?.length > 0\n                ? executedPayPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [selectedPayPeriod, executedPayPeriodList])\n\n    //Return the list of next payPeriod\n    const nextPayPeriod = useMemo(() => {\n        const currPayPeriodIndex =\n            payPeriodList?.length > 0\n                ? payPeriodList?.findIndex((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriodIndex > -1 ? payPeriodList?.[currPayPeriodIndex + 1] : null\n    }, [selectedPayPeriod, payPeriodList])\n\n    //Return the list of executed pay period\n    const pastPayPeriodList = useMemo(() => {\n        return payPeriodList?.filter((item) => item?.execute)\n    }, [payPeriodList])\n\n    useEffect(() => {\n        if (selectedWeekData == 'Weekly') {\n            getWeeklyExecutedPayPeriodService().then((res) => {\n                setExecutedPayPeriodList(res.data)\n            })\n            getAllWeeklyPayPeriodService().then((res) => {\n                setAllPayPeriodList(res.data)\n            })\n        } else if (selectedWeekData == 'Monthly') {\n            getMonthlyExecutedPayPeriodService().then((res) => {\n                setExecutedPayPeriodList(res.data)\n            })\n            getAllMonthlyPayPeriodService().then((res) => {\n                setAllPayPeriodList(res.data)\n            })\n        }\n    }, [selectedWeekData])\n\n    //Handle Frequency type change\n    const handleSelectedWeekData = (weekType) => {\n        let data = getPayFrequencyData?.filter((item) => item?.frequency_type_name == weekType)\n        setSelectedWeekData(data[0]?.frequency_type_name)\n    }\n\n    //Create dropdown list of payFrequency type that is enabled\n    const weekDropdownList = useMemo(() => {\n        let weekName = []\n        getPayFrequencyData?.map((item, index) => {\n            // if (item.status && index != 0) {\n            if (item.status) {\n                weekName.push({...item, name: item?.frequency_type_name})\n            }\n        })\n        return weekName\n    }, [getPayFrequencyData])\n\n    //Changes pay period list according to the selected pay frequency type\n    useEffect(() => {\n        if (selectedWeekData == 'Weekly') {\n            setPagePayPeriodList(weeklyPayPeriod)\n        } else if (selectedWeekData == 'Monthly') {\n            setPagePayPeriodList(monthlyPayPeriodList)\n        } else {\n            setPagePayPeriodList([])\n        }\n    }, [selectedWeekData, weeklyPayPeriod, monthlyPayPeriodList])\n\n    useEffect(() => {\n        if (weekDropdownList?.length > 0) {\n            setSelectedWeekData(weekDropdownList?.[0]?.frequency_type_name)\n        }\n    }, [weekDropdownList])\n\n    return {\n        weekDropdownList,\n        payPeriodList,\n        allPayPeriodList,\n        handleSelectedWeekData,\n        selectedPayPeriod,\n        currentPayPeriod,\n        currentPayPeriodFromAllPayPeriod,\n        nextPayPeriod,\n        setSelectedPayPeriod,\n        selectedWeekData,\n        monthlyPayPeriodList,\n        setSelectedWeekData,\n        pastPayPeriodList,\n        executedPayPeriodList,\n        executedCurrentPayPeriod,\n        weeklyPayPeriod,\n    }\n}\n\nexport default usePayFrequency\n"],"names":["modalsRoot","document","getElementById","body","ReconAdjustmentTable","_ref","show","handleClose","userData","loading","setLoading","useState","clawbackData","setClawbackData","editMode","setEditMode","useEffect","payrollReconClawbackPopUpService","user_id","then","res","data","finally","createPortal","_jsxs","Modal","id","tabIndex","dialogClassName","onHide","backdrop","children","className","_jsx","style","fontWeight","fontSize","emp_name","onClick","color","borderBottom","position","CustomLoader","full","visible","TABLE_BORDER","fontFamily","length","_Fragment","map","item","i","_item$type","_item$description","height","first_name","last_name","getValidDate","date","type","formattedNumberFields","amount","description","CustomDialog","removeAdjustment","colSpan","textAlign","paddingTop","paddingBottom","ReconClawbackTable","_item$first_name","_item$last_name","_item$state","_item$rep_redline","_item$kw","_item$net_epc","pid","textDecoration","state","rep_redline","kw","net_epc","adders","toUpperCase","ReconCommissionTable","commissionData","setCommissionData","payrollReconCommissionPopUpService","_item$customer_state","customer_name","customer_state","ReconOverridesTable","overrideData","setOverrideData","payrollReconOverridePopUpService","tyle","s","CustomImage","src","override_over_image","override_over_first_name","override_over_last_name","overrides_amount","overrides_type","CustomNoData","label","_item$Type","_formattedNumberField","getDeductionDetails","payrollData","finalize_status","comment","setComment","openCommentBox","setOpenCommentBox","setAmount","commentError","setCommentError","closeCommentBox","Type","Amount","Limit","Total","Outstanding","CustomInput","INPUT_TYPE","value","onChange","e","target","CustomEditIcon","RunPayrollComment","handleSubmit","preventDefault","payroll_id","userId","cost_center_id","editCommissionDetailsService","CustomToast","PayRollDeductionTable","_deductionData$list","_deductionData$list2","payrollMetaData","deductionData","setDeductionData","pay_period_from","pay_period_to","getPayrollDeductionDetailService","CustomModal","maxWidth","title","concat","name","list","CommanDeductionRow","subtotal","PayRollReimbursTable","report","reimbursData","setReimburseData","commonDataShouldBePassAsBodyInApi","useMemo","getReportReimbursementDetailsService","getReimbursementDetailsService","image","PayrollAdjustments","_adjustmentData$data","_adjustmentData$data2","adjustmentData","setAdjustmentData","getAdjustmentDetails","getReportAdjustmentDetailsService","getAdjustmentDetailsService","payroll_status","deleteAdjustmentDetailsService","class","onSubmit","required","errorMessage","CustomButton","BUTTON_TYPE","buttonLabel","ViewSummary","_summaryData$payroll","_summaryData$payroll2","_summaryData$payroll3","_summaryData$payroll4","_summaryData$payroll5","_summaryData$payroll6","_summaryData$payroll7","_summaryData$payroll8","_summaryData$payroll9","_summaryData$payroll10","_summaryData$payroll11","_summaryData$payroll12","_summaryData$earning_","_summaryData$payroll_","_summaryData$payroll_2","open","close","periodList","selectedWeekData","currentPayPeriod","isReport","edit","setEdit","selectedPeriod","setSelectedPeriod","summaryData","setSummaryData","start_date","end_date","frequency_type_id","getReportPayrollHistoryService","getPayrollHistoryService","periodDropdownList","period","Sidebar","showCloseIcon","icons","border","marginTop","width","borderRadius","CustomDropdown","options","find","valueKey","displayKey","showClear","payroll","total_payroll_percentage","formattedNumberFieldsWithoutDecimal","m1","m2","override","adjustment","reimbursement","deduction","marginLeft","total_payroll","earning_summary_total_payroll_percentage","earning_summary","company_name","total","earning_summary_total_payroll","payroll_by_location_total_percentage","payroll_by_location","payroll_by_location_total","total_payroll_by_position_percentage","payroll_by_position","position_name","total_payroll_by_position","_Setter","_item$amount_type","getCommissionDetails","paidStatus","adjustAmount","setAdjustAmount","commission_adjustment","MAIN_POSITTIONS_ID","position_id","amount_type","PayRollCommissionsTable","_commissionData$data","_commissionData$data$","_commissionData$data2","_commissionData$data3","getReportCommissionDetailsService","getCommissionDetailsService","CommanCommisionRow","getOverrideDetails","override_adjustment","kw_installed","calculated_redline","override_amount","override_type","total_amount","editOverrideDetailsService","PayRollOverridesTable","_overrideData$data","_overrideData$data$da","_overrideData$data2","_overrideData$data2$d","_overrideData$data3","getReportOverrideDetailsService","getOverrideDetailsService","CommanOverrideRow","sub_total","Tooltip","arrow","useFilterButton","initialFilter","onApplyFilter","onResetFilter","storedFilteredData","setStoredFilteredData","filterData","setFilterData","onApplyClick","useCallback","onResetClick","onCancelClick","usePayFrequency","setSelectedWeekData","getPayFrequencyData","useSelector","getPayFrequencySettingSelector","weeklyPayPeriod","getWeeklyPayPeriodSelector","monthlyPayPeriodList","getMonthlyPayPeriodSelector","payPeriodList","setPagePayPeriodList","executedPayPeriodList","setExecutedPayPeriodList","allPayPeriodList","setAllPayPeriodList","selectedPayPeriod","setSelectedPayPeriod","dispatch","useDispatch","getWeeklyPayPeriodAction","getMonthlyPayPeriodAction","_payPeriodList$","presentPeriod","Date","currentPayPeriodFromAllPayPeriod","executedCurrentPayPeriod","nextPayPeriod","currPayPeriodIndex","findIndex","pastPayPeriodList","filter","execute","getWeeklyExecutedPayPeriodService","getAllWeeklyPayPeriodService","getMonthlyExecutedPayPeriodService","getAllMonthlyPayPeriodService","weekDropdownList","weekName","index","status","push","frequency_type_name","_weekDropdownList$","handleSelectedWeekData","weekType","_data$"],"sourceRoot":""}