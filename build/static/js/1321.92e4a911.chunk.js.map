{"version":3,"file":"static/js/1321.92e4a911.chunk.js","mappings":"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","sources":["app/modules/admin/auth/components/login/Login.js"],"sourcesContent":["import clsx from 'clsx'\nimport React, {useState} from 'react'\nimport {forgotPasswordService} from '../../../../../../services/Services'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport oneSignal from '../../../../../../onesignal/oneSignal'\nimport {useDispatch} from 'react-redux'\nimport {loginAction} from '../../../../../../redux/actions/AuthActions'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_SIZE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\n\nconst Login = () => {\n    const [loginForgot, setLoginForgot] = useState('Signin')\n    const [email, setEmail] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n    const [password, setPassword] = useState('')\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n\n    const forgotPassword = () => {\n        setEmailError('')\n        setEmail('')\n        setPassword('')\n        setLoginForgot('ForgotPassword')\n    }\n\n    const isValidEmail = (email) => {\n        return /\\S+@\\S+\\.\\S+/.test(email)\n    }\n\n    const changePassword = (event) => {\n        event.preventDefault()\n\n        if (email == '') return setEmailError('Username is required')\n        if (isValidEmail(email)) {\n            setLoading(true)\n            const body = {\n                email: email,\n            }\n            forgotPasswordService(body)\n                .then((res) => {\n                    if (res?.status == false) return CustomToast.error(res?.message)\n                    CustomToast.success('Email sent successfully')\n                    setLoginForgot('Signin')\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        } else {\n            setEmailError('Wrong email format')\n        }\n    }\n\n    const handleLoginSubmit = (e) => {\n        e.preventDefault()\n        if (email == '' || password == '') {\n            if (email == '') setEmailError('Enter Username')\n            if (password == '') setPasswordError('Enter Password')\n            return\n        } else if (isValidEmail(email)) {\n            setLoading(true)\n            let body = {\n                email,\n                password,\n                device_token: null,\n            }\n            dispatch(loginAction(body)).catch(() => {\n                setLoading(false)\n            })\n        } else {\n            setEmailError('Enter valid email address')\n        }\n    }\n\n    return loginForgot == 'Signin' ? (\n        <form\n            className='w-100'\n            onSubmit={handleLoginSubmit}\n            noValidate\n            style={{fontFamily: 'Manrope'}}\n        >\n            {/* begin::Heading */}\n            <div className='text-center mb-5'>\n                <div\n                    className='text-cmGrey800'\n                    style={{fontSize: '30px', lineHeight: '42px', fontWeight: '500px'}}\n                >\n                    User Sign in\n                </div>\n            </div>\n\n            {/* form card */}\n\n            <div className=' p-sm-10 p-5 card shadow-sm' style={{borderRadius: '20px'}}>\n                <div className='my-auto '>\n                    {/* begin::Form group */}\n                    <div className='mb-5'>\n                        <CustomInput\n                            label={'Username'}\n                            placeholder='Enter Username'\n                            onChange={(e) => {\n                                setEmail(e.target.value)\n                                setEmailError('')\n                            }}\n                            errorMessage={emailError}\n                            type={INPUT_TYPE.email}\n                            value={email}\n                        />\n                    </div>\n                    <div className=''>\n                        <CustomInput\n                            label={'Password'}\n                            placeholder='Enter Password'\n                            feedback={false}\n                            type={INPUT_TYPE.password}\n                            value={password}\n                            onChange={(e) => {\n                                setPassword(e.target.value)\n                                setPasswordError('')\n                            }}\n                            // style={{width: '50%'}}\n                            errorMessage={passwordError}\n                        />\n                    </div>\n                    <div\n                        style={{fontWeight: '600', cursor: 'pointer'}}\n                        className='text-hover-dark text-cmGrey600 mb-10 d-flex flex-end'\n                    >\n                        <div onClick={() => forgotPassword()}>Forgot password?</div>\n                    </div>\n\n                    {/* begin::Action */}\n                    <div className='text-center '>\n                        <CustomButton\n                            onClick={handleLoginSubmit}\n                            loading={loading}\n                            buttonLabel={`${loading ? 'Please wait...' : 'Sign in'} `}\n                            buttonSize={BUTTON_SIZE.small}\n                        />\n                    </div>\n\n                    {/* end::Action */}\n                </div>\n            </div>\n        </form>\n    ) : (\n        <form\n            className='form w-100'\n            onSubmit={changePassword}\n            noValidate\n            id='kt_forgot_password_form'\n            style={{fontFamily: 'Manrope'}}\n        >\n            <div></div>\n            {/* begin::Heading */}\n            <div className='text-center mb-5 mt-0'>\n                <div className='' style={{color: '#424242', fontSize: '30px'}}>\n                    Forgot Password{''}\n                </div>\n            </div>\n\n            {/* form card */}\n\n            <div className='card p-10 shadow' style={{borderRadius: '20px'}}>\n                <div className='my-auto'>\n                    {/* begin::Form group */}\n                    <div className='fv-row mb-10 w-sm-350px  mx-auto'>\n                        <div className='mb-2'>\n                            <CustomInput\n                                label={'Email'}\n                                placeholder='Email'\n                                onChange={(e) => {\n                                    setEmail(e.target.value)\n                                    setEmailError('')\n                                }}\n                                errorMessage={emailError}\n                                type={INPUT_TYPE.email}\n                                value={email}\n                            />\n                        </div>\n                        <div\n                            style={{\n                                color: '#757575',\n                                fontWeight: '500',\n                                cursor: 'pointer',\n                            }}\n                            className='text-end'\n                            onClick={() => {\n                                setEmailError('')\n                                setEmail('')\n                                setLoginForgot('Signin')\n                            }}\n                        >\n                            Sign In?\n                        </div>\n                    </div>\n\n                    <div className=''>\n                        <CustomButton\n                            onClick={changePassword}\n                            loading={loading}\n                            buttonLabel={`${loading ? 'Please wait...' : 'Submit'} `}\n                            buttonSize={BUTTON_SIZE.small}\n                        />\n                    </div>\n\n                    {/* end::Action */}\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Login\n"],"names":["Login","loginForgot","setLoginForgot","useState","email","setEmail","emailError","setEmailError","passwordError","setPasswordError","password","setPassword","dispatch","useDispatch","loading","setLoading","isValidEmail","test","changePassword","event","preventDefault","body","forgotPasswordService","then","res","status","CustomToast","message","finally","handleLoginSubmit","e","device_token","loginAction","catch","_jsxs","className","onSubmit","noValidate","style","fontFamily","children","_jsx","fontSize","lineHeight","fontWeight","borderRadius","CustomInput","label","placeholder","onChange","target","value","errorMessage","type","INPUT_TYPE","feedback","cursor","onClick","CustomButton","buttonLabel","concat","buttonSize","BUTTON_SIZE","id","color"],"sourceRoot":""}