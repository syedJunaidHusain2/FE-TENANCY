{"version":3,"file":"static/js/8516.cea42f97.chunk.js","mappings":"8MAOA,MAAMA,EAAgB,CAClBC,MAAO,kBAGLC,EAAuBC,EAAAA,KAAaC,MAAM,CAC5CH,MAAOE,EAAAA,KACFF,MAAM,sBACNI,IAAI,EAAG,qBACPC,IAAI,GAAI,sBACRC,SAAS,uBAyHlB,EAtHuBC,KACnB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,eAA8BG,GAC1DC,GAASC,EAAAA,EAAAA,IAAU,CACrBhB,gBACAiB,iBAAkBf,EAClBgB,SAAUA,CAACC,EAAMC,KAAkC,IAAhC,UAACC,EAAS,cAAEC,GAAcF,EACzCV,GAAW,GACXG,OAAaC,GACbS,YAAW,MACPC,EAAAA,EAAAA,IAAgBL,EAAOlB,OAClBwB,MAAKC,IAAuB,IAArBC,MAAM,OAACC,IAAQF,EACnBb,GAAa,EAAM,IAEtBgB,OAAM,KACHhB,GAAa,GACbS,GAAc,GACdD,EAAU,gCAAgC,IAE7CS,SAAQ,KACLpB,GAAW,EAAM,GACnB,GACP,IAAK,IAIhB,OACIqB,EAAAA,EAAAA,MAAA,QACIC,UAAU,wDACVC,YAAU,EACVC,GAAG,+BACHhB,SAAUH,EAAOoB,aAAaC,SAAA,EAE9BL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBI,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,2BAA0BI,SAAC,uBAIzCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iCAAgCI,SAAC,iDAOrC,IAAdxB,IACGyB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA6BI,UACxCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA6BI,SAAC,2EAMtC,IAAdxB,IACGyB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kCAAiCI,UAC5CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,YAAWI,SAAC,oDAMnCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,0CAAyCI,SAAC,WAC3DC,EAAAA,EAAAA,KAAA,SACIC,KAAK,QACLC,YAAY,GACZC,aAAa,SACTzB,EAAO0B,cAAc,SACzBT,WAAWU,EAAAA,EAAAA,GACP,8BACA,CAAC,aAAc3B,EAAO4B,QAAQ1C,OAASc,EAAO6B,OAAO3C,OACrD,CACI,WAAYc,EAAO4B,QAAQ1C,QAAUc,EAAO6B,OAAO3C,UAI9Dc,EAAO4B,QAAQ1C,OAASc,EAAO6B,OAAO3C,QACnCoC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+BAA8BI,UACzCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC1BC,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,QAAOT,SAAErB,EAAO6B,OAAO3C,gBAQlD8B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiDI,SAAA,EAC5DL,EAAAA,EAAAA,MAAA,UACIO,KAAK,SACLJ,GAAG,2BACHF,UAAU,uBAAsBI,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,QAAML,UAAU,kBAAiBI,SAAC,WACjC3B,IACGsB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,qBAAoBI,SAAA,CAAC,kBAEjCC,EAAAA,EAAAA,KAAA,QAAML,UAAU,kDAI5BK,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAG,cAAaX,UAClBC,EAAAA,EAAAA,KAAA,UACIC,KAAK,SACLJ,GAAG,6CACHF,UAAU,gBACVgB,SAAUjC,EAAOkC,eAAiBlC,EAAOmC,QAAQd,SACpD,aAGG,SAGT,C","sources":["app/modules/admin/auth/components/ForgotPassword.tsx"],"sourcesContent":["import {useState} from 'react'\nimport * as Yup from 'yup'\nimport clsx from 'clsx'\nimport {Link} from 'react-router-dom'\nimport {useFormik} from 'formik'\nimport {requestPassword} from '../core/_requests'\n\nconst initialValues = {\n    email: 'admin@demo.com',\n}\n\nconst forgotPasswordSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Wrong email format')\n        .min(3, 'Minimum 3 symbols')\n        .max(50, 'Maximum 50 symbols')\n        .required('Email is required'),\n})\n\nconst ForgotPassword = () => {\n    const [loading, setLoading] = useState(false)\n    const [hasErrors, setHasErrors] = useState<boolean | undefined>(undefined)\n    const formik = useFormik({\n        initialValues,\n        validationSchema: forgotPasswordSchema,\n        onSubmit: (values, {setStatus, setSubmitting}) => {\n            setLoading(true)\n            setHasErrors(undefined)\n            setTimeout(() => {\n                requestPassword(values.email)\n                    .then(({data: {result}}) => {\n                        setHasErrors(false)\n                    })\n                    .catch(() => {\n                        setHasErrors(true)\n                        setSubmitting(false)\n                        setStatus('The login detail is incorrect')\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            }, 1000)\n        },\n    })\n\n    return (\n        <form\n            className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\n            noValidate\n            id='kt_login_password_reset_form'\n            onSubmit={formik.handleSubmit}\n        >\n            <div className='text-center mb-10'>\n                {/* begin::Title */}\n                <h1 className='text-dark fw-bolder mb-3'>Forgot Password ?</h1>\n                {/* end::Title */}\n\n                {/* begin::Link */}\n                <div className='text-gray-500 fw-semibold fs-6'>\n                    Enter your email to reset your password.\n                </div>\n                {/* end::Link */}\n            </div>\n\n            {/* begin::Title */}\n            {hasErrors === true && (\n                <div className='mb-lg-15 alert alert-danger'>\n                    <div className='alert-text font-weight-bold'>\n                        Sorry, looks like there are some errors detected, please try again.\n                    </div>\n                </div>\n            )}\n\n            {hasErrors === false && (\n                <div className='mb-10 bg-light-info p-8 rounded'>\n                    <div className='text-info'>Sent password reset. Please check your email</div>\n                </div>\n            )}\n            {/* end::Title */}\n\n            {/* begin::Form group */}\n            <div className='fv-row mb-8'>\n                <label className='form-label fw-bolder text-gray-900 fs-6'>Email</label>\n                <input\n                    type='email'\n                    placeholder=''\n                    autoComplete='off'\n                    {...formik.getFieldProps('email')}\n                    className={clsx(\n                        'form-control bg-transparent',\n                        {'is-invalid': formik.touched.email && formik.errors.email},\n                        {\n                            'is-valid': formik.touched.email && !formik.errors.email,\n                        }\n                    )}\n                />\n                {formik.touched.email && formik.errors.email && (\n                    <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                            <span role='alert'>{formik.errors.email}</span>\n                        </div>\n                    </div>\n                )}\n            </div>\n            {/* end::Form group */}\n\n            {/* begin::Form group */}\n            <div className='d-flex flex-wrap justify-content-center pb-lg-0'>\n                <button\n                    type='submit'\n                    id='kt_password_reset_submit'\n                    className='btn btn-primary me-4'\n                >\n                    <span className='indicator-label'>Submit</span>\n                    {loading && (\n                        <span className='indicator-progress'>\n                            Please wait...\n                            <span className='spinner-border spinner-border-sm  ms-2'></span>\n                        </span>\n                    )}\n                </button>\n                <Link to='/auth/login'>\n                    <button\n                        type='button'\n                        id='kt_login_password_reset_form_cancel_button'\n                        className='btn btn-light'\n                        disabled={formik.isSubmitting || !formik.isValid}\n                    >\n                        Cancel\n                    </button>\n                </Link>{' '}\n            </div>\n            {/* end::Form group */}\n        </form>\n    )\n}\n\nexport default ForgotPassword\n"],"names":["initialValues","email","forgotPasswordSchema","Yup","shape","min","max","required","ForgotPassword","loading","setLoading","useState","hasErrors","setHasErrors","undefined","formik","useFormik","validationSchema","onSubmit","values","_ref","setStatus","setSubmitting","setTimeout","requestPassword","then","_ref2","data","result","catch","finally","_jsxs","className","noValidate","id","handleSubmit","children","_jsx","type","placeholder","autoComplete","getFieldProps","clsx","touched","errors","role","Link","to","disabled","isSubmitting","isValid"],"sourceRoot":""}