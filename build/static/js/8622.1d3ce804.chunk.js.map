{"version":3,"file":"static/js/8622.1d3ce804.chunk.js","mappings":"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","sources":["redux/actions/IntegrationActions.js","app/modules/standard_manager/integration/components/useIntegrationSetting.js","app/modules/standard_manager/integration/components/IntregationSetting.js","app/modules/standard_manager/integration/components/IntregationCards.js","redux/selectors/IntegrationSelectors.js","app/modules/standard_manager/integration/useIntegration.js","app/modules/standard_manager/integration/IntregationPage.js","customComponents/customTooltip/CustomTooltip.js"],"sourcesContent":["import {sendDataToReducer} from '../../helpers/CommonHelpers'\nimport {getIntegrationListService} from '../../services/Services'\nimport {SET_INTEGRATION_LIST} from '../reducers/IntegrationReducer'\n\n// Change Flag\nexport const getIntegratioListnAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        getIntegrationListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_INTEGRATION_LIST, res?.data)\n                resolve(res?.data)\n            })\n            .catch((e) => {\n                reject(e)\n            })\n    })\n","import {useCallback, useEffect, useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {\n    connectDisconnectIntegtationSettingService,\n    getIntegrationByIdService,\n    updateIntegratioSettingnService,\n} from '../../../../../services/Services'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport {getIntegratioListnAction} from '../../../../../redux/actions/IntegrationActions'\nimport {INTEGRATIONS_ID} from '../../../../../constants/constants'\n\nconst useIntegrationSetting = ({show, data, handleClose}) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const [integrationData, setIntegrationData] = useState({\n        userName: null,\n        password: null,\n        data_fetch_frequency: null,\n        day: null,\n        time: null,\n        timezone: null,\n        last_import: null,\n    })\n\n    useEffect(() => {\n        if (show) {\n            setLoading(true)\n            getIntegrationByIdService(data?.id)\n                .then((res) => {\n                    setIntegrationData(res?.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [show])\n\n    const updateIntegrationData = (field, value) => {\n        setIntegrationData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }\n\n    const onChangeInputData = (e) => {\n        updateIntegrationData(e?.target?.name, e?.target?.value)\n    }\n\n    const onSavePress = useCallback(() => {\n        if (data?.id == INTEGRATIONS_ID.lgcy) {\n            // LGCY\n            if (!integrationData?.userName) return CustomToast.error('Enter username')\n            if (!integrationData?.password) return CustomToast.error('Enter password')\n        } else if (data?.id == INTEGRATIONS_ID.hubspot) {\n            // HUBSPOT\n            if (!integrationData?.api_key) return CustomToast.error('Enter API Key')\n        } else if (data?.id == INTEGRATIONS_ID.everee) {\n            // EVEREE\n        } else if (data?.id == INTEGRATIONS_ID.jobNimbuss) {\n            // JOB NIMBUSS\n            if (!integrationData?.api_key) return CustomToast.error('Enter API Key')\n        }\n\n        if (!integrationData?.data_fetch_frequency)\n            return CustomToast.error('Select data fetch frequency')\n        if (!integrationData?.day) return CustomToast.error('Select timezone')\n        if (!integrationData?.time) return CustomToast.error('Select time')\n        if (!integrationData?.timezone) return CustomToast.error('Select timezone')\n\n        setLoading(true)\n        const body = {\n            crm_id: data?.id,\n            username: integrationData?.userName,\n            password: integrationData?.password,\n            api_key: integrationData?.api_key,\n            company_id: data?.id,\n            data_fetch_frequency: integrationData?.data_fetch_frequency,\n            time: integrationData?.time,\n            timezone: integrationData?.timezone,\n            day: integrationData?.day,\n        }\n        updateIntegratioSettingnService(body)\n            .then((res) => {\n                if (!data?.status) {\n                    connectDisconnectIntegtationSettingService(data?.id)\n                        .then((res) => {\n                            dispatch(getIntegratioListnAction())\n                            handleClose()\n                            CustomToast.success('Integration setting updated')\n                            setLoading(false)\n                        })\n                        .catch((error) => {\n                            CustomToast.error(error?.data?.message)\n                            setLoading(false)\n                        })\n                } else {\n                    dispatch(getIntegratioListnAction())\n                    handleClose()\n                    CustomToast.success('Integration setting updated')\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n                setLoading(false)\n                CustomToast.error(error?.data?.message)\n            })\n    }, [\n        data?.id,\n        data?.status,\n        dispatch,\n        handleClose,\n        integrationData?.api_key,\n        integrationData?.data_fetch_frequency,\n        integrationData?.day,\n        integrationData?.password,\n        integrationData?.time,\n        integrationData?.timezone,\n        integrationData?.userName,\n    ])\n\n    const onDisconnectPress = useCallback(() => {\n        setLoading(true)\n        connectDisconnectIntegtationSettingService(data?.id)\n            .then(() => {\n                dispatch(getIntegratioListnAction())\n                handleClose()\n                CustomToast.success('Integration setting disconnected')\n            })\n            .catch((error) => {\n                CustomToast.error(error?.data?.message)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [data?.id, dispatch, handleClose])\n    return {\n        integrationData,\n        onDisconnectPress,\n        onChangeInputData,\n        onSavePress,\n        loading,\n    }\n}\n\nexport default useIntegrationSetting\n","import timeZones from '../../../../../constants/timezones.json'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {INTEGRATIONS_ID, getDaysArray, getValidDate} from '../../../../../constants/constants'\nimport TickCircle from '../assests/TickCircle.png'\nimport CustomImage from '../../../../../customComponents/customImage/CustomImage'\nimport {IMAGE_TYPE, getServerImage} from '../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../customComponents/customModal/CustomModal'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport useIntegrationSetting from './useIntegrationSetting'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\n\nconst IntregationSetting = ({data, show, handleClose}) => {\n    const {loading, onChangeInputData, onDisconnectPress, onSavePress, integrationData} =\n        useIntegrationSetting({\n            show,\n            data,\n            handleClose,\n        })\n\n    return (\n        <CustomModal show={show} onHide={handleClose} maxWidth='950' title={'Integration Settings'}>\n            <>\n                {/* <div className='modal-header '></div> */}\n                <div className=''>\n                    <div className=' px-lg-10'>\n                        <div className=' d-flex justify-content-center'>\n                            <div className='row w-sm-500px w-100'>\n                                {/* Top Header */}\n                                <div className='d-flex flex-wrap justify-content-between align-items-center mb-5'>\n                                    <div className='d-flex gap-sm-10 gap-5'>\n                                        <div>\n                                            <CustomImage\n                                                type={IMAGE_TYPE.companyLogo}\n                                                customSrc={getServerImage(\n                                                    data?.logo,\n                                                    IMAGE_TYPE.companyLogo\n                                                )}\n                                                alt=''\n                                                style={{width: '46px', height: '46px'}}\n                                            />\n                                        </div>\n                                        <div>\n                                            <div style={{fontSize: '20px', fontWeight: '700'}}>\n                                                {data?.name}\n                                            </div>\n                                            <div\n                                                style={{\n                                                    color: '#BDBDBD',\n                                                    fontSize: '16px',\n                                                    fontWeight: '600',\n                                                }}\n                                            >\n                                                {'CRM'}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* For Active Status */}\n                                    {data?.status == 1 && (\n                                        <div\n                                            className='d-flex align-items-center justify-content-center px-3 py-1'\n                                            style={{\n                                                background: 'rgba(0, 194, 71, 0.1)',\n                                                color: '#00C247',\n                                                fontWeight: '700',\n                                                fontSize: '12px',\n                                                borderRadius: '6px',\n                                            }}\n                                        >\n                                            Active\n                                        </div>\n                                    )}\n                                    {/* For Inactive Status */}\n                                    {data?.status == 0 && (\n                                        <div\n                                            className='d-flex align-items-center justify-content-center px-3 py-1'\n                                            style={{\n                                                background: 'rgba(255, 51, 51, 0.1)',\n                                                color: '#FF3333',\n                                                fontWeight: '700',\n                                                fontSize: '12px',\n                                                borderRadius: '6px',\n                                            }}\n                                        >\n                                            Inactive\n                                        </div>\n                                    )}\n                                    {/* For Progress Status */}\n                                    {data?.status == 2 && (\n                                        <div\n                                            className='d-flex align-items-center justify-content-center px-3 py-1'\n                                            style={{\n                                                background: 'rgba(0, 76, 232, 0.1)',\n                                                color: '#004CE8',\n                                                fontWeight: '700',\n                                                fontSize: '12px',\n                                                borderRadius: '6px',\n                                            }}\n                                        >\n                                            In Progress\n                                        </div>\n                                    )}\n                                </div>\n                                <hr\n                                    style={{borderTop: '1px solid rgba(239, 242, 245, 1)'}}\n                                    className=''\n                                />\n\n                                {/* LGCY */}\n                                {data?.id == INTEGRATIONS_ID.lgcy ? (\n                                    <>\n                                        {/* UserName */}\n                                        <div className='mb-5'>\n                                            <CustomInput\n                                                label={'Username'}\n                                                placeholder='Enter Username'\n                                                name='userName'\n                                                value={integrationData?.userName ?? ''}\n                                                onChange={onChangeInputData}\n                                            />\n                                        </div>\n\n                                        {/* Password */}\n                                        <div className='mb-5'>\n                                            <div className='card flex justify-content-center'>\n                                                <CustomInput\n                                                    label={'Password'}\n                                                    type={INPUT_TYPE.password}\n                                                    feedback={false}\n                                                    placeholder='Enter Key'\n                                                    name='password'\n                                                    value={integrationData?.password ?? ''}\n                                                    onChange={onChangeInputData}\n                                                    style={{width: '100%'}}\n                                                />\n                                            </div>\n                                        </div>\n                                    </>\n                                ) : null}\n\n                                {/* HUBSPOT + JOB NIMBUSS*/}\n                                {[INTEGRATIONS_ID.hubspot, INTEGRATIONS_ID.jobNimbuss].includes(\n                                    data?.id\n                                ) ? (\n                                    <div className='mb-5'>\n                                        <CustomInput\n                                            label={'Enter API'}\n                                            placeholder='Enter API'\n                                            feedback={false}\n                                            type={INPUT_TYPE.password}\n                                            name={'api_key'}\n                                            value={integrationData?.api_key ?? ''}\n                                            onChange={onChangeInputData}\n                                        />\n                                    </div>\n                                ) : null}\n\n                                <div>\n                                    {/* First row starts */}\n                                    <div className='row justify-content-between mb-5'>\n                                        {/* Data Fetch Frequency */}\n                                        <div className=' col-sm-6 mb-sm-0 mb-5'>\n                                            <CustomDropdown\n                                                searching={false}\n                                                label={'Data Fetch Frequency'}\n                                                options={[\n                                                    {name: 'Daily', value: 'daily'},\n                                                    {name: 'Weekly', value: 'weekly'},\n                                                    {name: 'Monthly', value: 'monthly'},\n                                                ]}\n                                                name={'data_fetch_frequency'}\n                                                value={integrationData?.data_fetch_frequency ?? ''}\n                                                onChange={onChangeInputData}\n                                            />\n                                        </div>\n\n                                        {/* Day*/}\n                                        {integrationData?.data_fetch_frequency == 'monthly' ? (\n                                            <div className='col-sm-6'>\n                                                <CustomDropdown\n                                                    searching={false}\n                                                    label={'Date'}\n                                                    placeholder='Select Day'\n                                                    options={getDaysArray()}\n                                                    name={'day'}\n                                                    displayKey='name'\n                                                    valueKey='value'\n                                                    value={integrationData?.day ?? ''}\n                                                    onChange={onChangeInputData}\n                                                />\n                                            </div>\n                                        ) : null}\n\n                                        {integrationData?.data_fetch_frequency == 'weekly' ? (\n                                            <div className='col-sm-6'>\n                                                <CustomDropdown\n                                                    searching={false}\n                                                    label={'Day'}\n                                                    placeholder='Select Day'\n                                                    options={[\n                                                        {name: 'Monday', value: 'monday'},\n                                                        {name: 'Tuesday', value: 'tuesday'},\n                                                        {name: 'Wednesday', value: 'wednesday'},\n                                                        {name: 'Thursday', value: 'thursday'},\n                                                        {name: 'Friday', value: 'friday'},\n                                                        {name: 'Saturday', value: 'saturday'},\n                                                    ]}\n                                                    name={'day'}\n                                                    value={integrationData?.day ?? ''}\n                                                    onChange={onChangeInputData}\n                                                />\n                                            </div>\n                                        ) : null}\n                                    </div>\n                                    {/* First row ends */}\n\n                                    {/* Second row starts */}\n                                    <div className='row justify-content-between mb-5'>\n                                        {/* Time */}\n\n                                        <div className=' col-sm-6 mb-sm-0 mb-5'>\n                                            <CustomDropdown\n                                                label={'Time'}\n                                                searching={false}\n                                                name='time'\n                                                placeholder='Select Time'\n                                                options={new Array(24)\n                                                    .fill('')\n                                                    .map((item, index) => {\n                                                        let text = '00'\n                                                        if (index <= 9) text = `0${index}:00`\n                                                        else text = `${index}:00`\n                                                        return {text}\n                                                    })}\n                                                valueKey={'text'}\n                                                onChange={onChangeInputData}\n                                                displayKey='text'\n                                                value={integrationData.time}\n                                            />\n                                        </div>\n                                        {/* Time Zone*/}\n                                        <div className='col-sm-6'>\n                                            <CustomDropdown\n                                                label={'Time Zone'}\n                                                name='timezone'\n                                                options={timeZones}\n                                                value={integrationData?.timezone ?? ''}\n                                                placeholder='Select Timezone'\n                                                valueKey={'text'}\n                                                displayKey={'text'}\n                                                onChange={onChangeInputData}\n                                            />\n                                        </div>\n                                    </div>\n                                    {/* Second row ends */}\n\n                                    {/* Third row starts */}\n                                    <div\n                                        className='d-flex align-items-center mb-15'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        {/* Bottom Icon */}\n                                        <div className='me-2'>\n                                            <img src={TickCircle} alt='' width={12.5} />\n                                        </div>\n                                        {/* Bottom Text */}\n                                        <div className='me-10'>\n                                            {data?.status == 1 && data?.last_import\n                                                ? 'Last Successful Import'\n                                                : null}\n                                        </div>\n                                        {/* Bottom text */}\n                                        <div>{getValidDate(data?.last_import, 'MM/DD/YY')}</div>\n                                    </div>\n                                    {/* Third row Ends */}\n                                </div>\n\n                                <div className='d-flex align-items-center justify-content-center gap-10 mb-20'>\n                                    <CustomButton\n                                        buttonLabel='Save'\n                                        onClick={onSavePress}\n                                        buttonSize={BUTTON_SIZE.normal}\n                                    />\n\n                                    {data?.status ? (\n                                        <CustomButton\n                                            buttonLabel='Disconnect'\n                                            onClick={onDisconnectPress}\n                                            buttonSize={BUTTON_SIZE.normal}\n                                            buttonType={BUTTON_TYPE.error}\n                                        />\n                                    ) : null}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <CustomLoader visible={loading} full />\n                {/* buttons */}\n            </>\n        </CustomModal>\n    )\n}\n\nexport {IntregationSetting}\n","import {useCallback, useMemo, useState} from 'react'\nimport {getValidDate} from '../../../../../constants/constants'\nimport settingIcon from '../assests/settingIcon.png'\nimport {IntregationSetting} from './IntregationSetting'\nimport TickCircle from '../assests/TickCircle.png'\nimport {\n    connectDisconnectIntegtationSettingService,\n    syncHubSpotDataService,\n} from '../../../../../services/Services'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport AccessRights from '../../../../../accessRights/AccessRights'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport CustomImage from '../../../../../customComponents/customImage/CustomImage'\nimport {IMAGE_TYPE, getServerImage} from '../../../../../helpers/CommonHelpers'\nimport {allPermissionsAccess} from '../../../../../accessRights/useCustomAccessRights'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {useNavigate} from 'react-router-dom'\nimport {Badge} from '@mui/material'\nimport CustomButton, {BUTTON_SIZE} from '../../../../../customComponents/customButtton/CustomButton'\nimport CustomTooltip from '../../../../../customComponents/customTooltip/CustomTooltip'\n\nconst IntregationCards = ({data, onModalClose = () => {}}) => {\n    const naviagte = useNavigate()\n    const [showSettingModal, setShowSettingModal] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [syncLoading, setSyncLoading] = useState(false)\n\n    const handleSettingModal = useCallback(() => {\n        setShowSettingModal(true)\n    }, [])\n\n    const onConnectPress = useCallback(() => {\n        if (!data?.status) {\n            handleSettingModal()\n        } else {\n            setLoading(true)\n            connectDisconnectIntegtationSettingService(data?.id)\n                .then((res) => {\n                    CustomToast.success(res?.message)\n                    onModalClose()\n                })\n                .catch((error) => {\n                    CustomToast.error(error?.data?.message)\n                })\n                .finally(() => {\n                    setTimeout(() => setLoading(false), 2000)\n                })\n        }\n    }, [data?.id, data?.status, handleSettingModal, onModalClose])\n\n    const syncCRMData = useCallback((crmId) => {\n        if (data?.id == 2) {\n            setSyncLoading(true)\n            syncHubSpotDataService()\n                .then((res) => {\n                    CustomToast.success('Synced Successfully')\n                    onModalClose()\n                })\n                .catch((err) => CustomToast.error('Sync failed'))\n                .finally(() => {\n                    setSyncLoading(false)\n                })\n        }\n    }, [])\n\n    const syncDataCount = useMemo(() => {\n        if (data?.id == 1) return 0\n        if (data?.id == 2) return data?.hubspot_pending\n    }, [data?.hubspot_pending, data?.id])\n\n    return (\n        <div\n            className={`card w-sm-350px h-275px shadow`}\n            style={{fontFamily: 'Manrope', borderRadius: '12px'}}\n        >\n            <CustomLoader visible={loading} full />\n            <div className='card-body py-10'>\n                <div className='px-10'>\n                    <div className='d-flex justify-content-between align-items-center mb-10'>\n                        <div\n                            className='d-flex align-items-center justify-content-center'\n                            style={{background: '#F5F5F5', borderRadius: '6px'}}\n                        >\n                            <CustomImage\n                                type={IMAGE_TYPE.noImage}\n                                customSrc={getServerImage(data?.logo)}\n                                style={{width: 46, borderRadius: '22%'}}\n                            />\n                        </div>\n                        {data?.status == 1 && (\n                            <div\n                                className='d-flex align-items-center justify-content-center px-3 py-1'\n                                style={{\n                                    background: 'rgba(0, 194, 71, 0.1)',\n                                    color: '#00C247',\n                                    fontWeight: '700',\n                                    fontSize: '12px',\n                                    borderRadius: '6px',\n                                }}\n                            >\n                                {'Active'}\n                            </div>\n                        )}\n                        {data?.status == 0 && (\n                            <div\n                                className='d-flex align-items-center justify-content-center px-3 py-1'\n                                style={{\n                                    background: 'rgba(255, 51, 51, 0.1)',\n                                    color: '#FF3333',\n                                    fontWeight: '700',\n                                    fontSize: '12px',\n                                    borderRadius: '6px',\n                                }}\n                            >\n                                {'Inactive'}\n                            </div>\n                        )}\n                        {data?.status == 2 && (\n                            <div\n                                className='d-flex align-items-center justify-content-center px-3 py-1'\n                                style={{\n                                    background: 'rgba(0, 76, 232, 0.1)',\n                                    color: '#004CE8',\n                                    fontWeight: '700',\n                                    fontSize: '12px',\n                                    borderRadius: '6px',\n                                }}\n                            >\n                                {'In Progress'}\n                            </div>\n                        )}\n                    </div>\n                    <div className='d-flex justify-content-between align-items-center mb-10'>\n                        <div>\n                            <div className='mb-3' style={{fontSize: '20px', fontWeight: '600'}}>\n                                {data?.name}\n                            </div>\n                            <div className='text-cmGrey400' style={{fontWeight: 600}}>\n                                {'CRM'}\n                            </div>\n                        </div>\n                        <AccessRights\n                            customCondition={\n                                allPermissionsAccess.administrator.integrations.integrations.edit\n                            }\n                        >\n                            <div className='d-flex align-items-center gap-7'>\n                                {data?.status == 1 && (\n                                    <>\n                                        <CustomTooltip title='View log'>\n                                            <span>\n                                                <KTSVG\n                                                    svgStyle={{width: '24px', height: '24px'}}\n                                                    path='/media/icons/duotune/art/Document-IconBlack.svg'\n                                                    className='cursor-pointer'\n                                                    onClick={() =>\n                                                        naviagte('view-log', {\n                                                            state: {id: data?.id, name: data?.name},\n                                                        })\n                                                    }\n                                                />\n                                            </span>\n                                        </CustomTooltip>\n                                        <CustomTooltip title='Settings'>\n                                            <img\n                                                src={settingIcon}\n                                                alt=''\n                                                width={21.52}\n                                                className='cursor-pointer'\n                                                onClick={handleSettingModal}\n                                            />\n                                        </CustomTooltip>\n                                        {/* {syncDataCount > 0 ? ( */}\n                                        {data?.id == 2 ? (\n                                            <>\n                                                <CustomTooltip title='Sync'>\n                                                    <Badge\n                                                        color='primary'\n                                                        badgeContent={syncDataCount}\n                                                        max={500}\n                                                        style={{paddingTop: '3px'}}\n                                                    >\n                                                        <i\n                                                            className={`pi ${\n                                                                syncLoading ? 'pi-spin' : null\n                                                            } pi-sync cursor-pointer p-overlay-badge`}\n                                                            style={{fontSize: '1.4rem'}}\n                                                            onClick={\n                                                                !syncLoading\n                                                                    ? () => syncCRMData()\n                                                                    : null\n                                                            }\n                                                        />\n                                                    </Badge>\n                                                </CustomTooltip>\n                                            </>\n                                        ) : null}\n                                        {/* ) : null} */}\n                                    </>\n                                )}\n                            </div>\n                        </AccessRights>\n                    </div>\n                </div>\n                {syncLoading ? (\n                    <div className='text-center text-cmGrey400'>Syncing..</div>\n                ) : (\n                    <div></div>\n                )}\n                <AccessRights\n                    customCondition={\n                        allPermissionsAccess.administrator.integrations.integrations.edit\n                    }\n                >\n                    <div className=''>\n                        {data?.status == 0 && (\n                            <div className='text-center'>\n                                <CustomButton\n                                    buttonLabel='Connect'\n                                    buttonSize={BUTTON_SIZE.large}\n                                    onClick={onConnectPress}\n                                />\n                            </div>\n                        )}\n\n                        {data?.last_import && data?.status == 1 && (\n                            <div\n                                className='text-center'\n                                style={{color: '#424242', fontSize: '14px', fontWeight: '600'}}\n                            >\n                                <div className='d-flex justify-content-center align-items-center gap-2'>\n                                    <img src={TickCircle} alt='' width={12.5} />\n                                    <div>{'Last Successful Import'}</div>\n                                </div>\n                                <div>{getValidDate(data?.last_import, 'YYYY/MM/DD,hh:mm')}</div>\n                            </div>\n                        )}\n                    </div>\n                </AccessRights>\n            </div>\n            {showSettingModal ? (\n                <IntregationSetting\n                    data={data}\n                    show={showSettingModal}\n                    handleClose={() => setShowSettingModal(false)}\n                />\n            ) : null}\n        </div>\n    )\n}\n\nexport {IntregationCards}\n","export const getIntegrationListSelector = (state) => state?.integration?.integrationList\n","import {useCallback, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getIntegratioListnAction} from '../../../../redux/actions/IntegrationActions'\nimport {getIntegrationListSelector} from '../../../../redux/selectors/IntegrationSelectors'\n\nconst useIntegration = () => {\n    const dispatch = useDispatch()\n    const integrationList = useSelector(getIntegrationListSelector)\n\n    useEffect(() => {\n        dispatch(getIntegratioListnAction())\n    }, [])\n\n    const onModalClose = useCallback(() => {\n        dispatch(getIntegratioListnAction())\n    }, [dispatch])\n\n    return {\n        integrationList,\n        onModalClose,\n    }\n}\n\nexport default useIntegration\n","import React from 'react'\nimport {PageTitle} from '../../../../_metronic/layout/core'\nimport {IntregationCards} from './components/IntregationCards'\nimport useIntegration from './useIntegration'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard /',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst IntregationPage = () => {\n    const {integrationList, onModalClose} = useIntegration()\n\n    return (\n        <AccessRights\n            customCondition={allPermissionsAccess.administrator.integrations.integrations.view}\n            showPlaceHolder\n        >\n            <div className='px-sm-10'>\n                <PageTitle breadcrumbs={profileBreadCrumbs}>Intregation</PageTitle>\n                <div style={{marginTop: '-20px'}}>\n                    {/* Cards begin */}\n                    <div className='row mx-auto gap-10'>\n                        {integrationList?.length > 0 &&\n                            integrationList?.map((item) => (\n                                <IntregationCards\n                                    key={item?.id}\n                                    data={item}\n                                    onModalClose={onModalClose}\n                                />\n                            ))}\n                    </div>\n                </div>\n            </div>\n        </AccessRights>\n    )\n}\n\nexport default IntregationPage\n","import {Tooltip} from '@mui/material'\n\nconst CustomTooltip = ({title = '', style, children, className}) => {\n    return children ? (\n        <Tooltip\n            arrow\n            title={\n                <span className={className} style={{fontSize: 14, ...style}}>\n                    {title}\n                </span>\n            }\n            style={{fontSize: 40}}\n        >\n            {children}\n        </Tooltip>\n    ) : null\n}\n\nexport default CustomTooltip\n"],"names":["getIntegratioListnAction","dispatch","Promise","resolve","reject","getIntegrationListService","then","res","sendDataToReducer","SET_INTEGRATION_LIST","data","catch","e","_ref","show","handleClose","useDispatch","loading","setLoading","useState","integrationData","setIntegrationData","userName","password","data_fetch_frequency","day","time","timezone","last_import","useEffect","getIntegrationByIdService","id","finally","onSavePress","useCallback","INTEGRATIONS_ID","CustomToast","api_key","body","crm_id","username","company_id","updateIntegratioSettingnService","status","connectDisconnectIntegtationSettingService","error","_error$data","message","_error$data2","onDisconnectPress","_error$data3","onChangeInputData","_e$target","_e$target2","field","value","target","name","val","IntregationSetting","_integrationData$user","_integrationData$pass","_integrationData$api_","_integrationData$data","_integrationData$day","_integrationData$day2","_integrationData$time","useIntegrationSetting","_jsx","CustomModal","onHide","maxWidth","title","children","_jsxs","_Fragment","className","CustomImage","type","IMAGE_TYPE","customSrc","getServerImage","logo","alt","style","width","height","fontSize","fontWeight","color","background","borderRadius","borderTop","CustomInput","label","placeholder","onChange","INPUT_TYPE","feedback","includes","CustomDropdown","searching","options","getDaysArray","displayKey","valueKey","Array","fill","map","item","index","text","concat","timeZones","src","TickCircle","getValidDate","CustomButton","buttonLabel","onClick","buttonSize","BUTTON_SIZE","buttonType","BUTTON_TYPE","CustomLoader","visible","full","IntregationCards","onModalClose","naviagte","useNavigate","showSettingModal","setShowSettingModal","syncLoading","setSyncLoading","handleSettingModal","onConnectPress","setTimeout","syncCRMData","crmId","syncHubSpotDataService","err","syncDataCount","useMemo","hubspot_pending","fontFamily","AccessRights","customCondition","allPermissionsAccess","CustomTooltip","KTSVG","svgStyle","path","state","Badge","badgeContent","max","paddingTop","getIntegrationListSelector","_state$integration","integration","integrationList","useIntegration","useSelector","profileBreadCrumbs","isSeparator","isActive","IntregationPage","showPlaceHolder","PageTitle","breadcrumbs","marginTop","length","Tooltip","arrow"],"sourceRoot":""}