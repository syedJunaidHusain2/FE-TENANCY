{"version":3,"file":"static/js/5979.3382c1ca.chunk.js","mappings":"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","sources":["app/modules/admin/permissions/PermissionsHeader.js","app/modules/admin/permissions/tabs/permissionsGroup/UsersOfGroup.js","app/modules/admin/permissions/PermissionsTab.js","customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect} from 'react'\nimport {Link, useLocation, useNavigate} from 'react-router-dom'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\nimport { fontsFamily } from '../../../../assets/fonts/fonts'\n\nconst PermissionsHeader = () => {\n    const location = useLocation()\n    var navigate = useNavigate()\n\n    return (\n        <div\n            style={{fontSize: '16px', fontWeight: '800', fontFamily: fontsFamily.manrope}}\n            className='d-flex flex-nowrap gap-7 text-cmGrey500'\n        >\n            <AccessRights\n                customCondition={allPermissionsAccess.administrator.permissions.group.view}\n            >\n                <Link\n                    className={`${\n                        location.pathname === '/permissions/groups' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/permissions/groups'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Groups\n                </Link>\n            </AccessRights>\n\n            <AccessRights\n                customCondition={allPermissionsAccess.administrator.permissions.policies.view}\n                showPlaceHolder\n            >\n                <Link\n                    className={`${\n                        location.pathname === '/permissions/policies' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/permissions/policies'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Policies\n                </Link>\n            </AccessRights>\n        </div>\n    )\n}\n\nexport {PermissionsHeader}\n","import React, {useCallback, useEffect, useState} from 'react'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport {getListofGroupService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport Pagination from '../../../sequidocs/component/Pagination'\n\nconst UsersOfGroup = () => {\n    const navigate = useNavigate()\n    const Location = useLocation()\n    const [tableData, settableData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [page, setPage] = useState(1)\n\n    useEffect(() => {\n        setLoading(true)\n        const body = {id: Location?.state?.id, page: page}\n        getListofGroupService(body)\n            .then((res) => {\n                settableData(res?.data)\n            })\n            .finally(() => setLoading(false))\n    }, [page])\n\n    const getSerialNumberByPagination = useCallback(\n        (index) => {\n            return page * 10 - 10 + index + 1\n        },\n        [page]\n    )\n\n    return (\n        <div\n            className='bg-cmwhite shadow-sm'\n            style={{\n                fontFamily: 'Manrope',\n                fontSize: '14px',\n                borderRadius: '12px',\n                position: 'relative',\n            }}\n        >\n            <CustomLoader visible={loading} full />\n\n            <div className='d-flex justify-content-between align-items-center p-5'>\n                <div\n                    className='bi bi-box-arrow-left fs-1 text-cmGrey600 text-hover-dark cursor-pointer'\n                    onClick={() => navigate(-1)}\n                ></div>\n                <div style={{fontSize: '16px', fontWeight: '600', fontFamily: 'Manrope'}}>\n                    List Of Group: {Location?.state?.name}\n                </div>\n                <div></div>\n            </div>\n            <div className='table-responsive overflow-auto'>\n                <table className='table'>\n                    <thead>\n                        <tr\n                            className=' bg-cmGrey300 text-cmGrey800 '\n                            style={{\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            <th className='w-200px p-5'>S. no</th>\n                            <th className='w-auto p-5 '>Users</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tableData?.data?.length > 0 ? (\n                            tableData?.data?.map((i, index) => {\n                                return (\n                                    <tr\n                                        key={index}\n                                        className={`stripRow `}\n                                        style={{\n                                            fontSize: '14px',\n                                            fontFamily: 'Manrope',\n                                            fontWeight: '600',\n                                        }}\n                                    >\n                                        <td className='p-5'>\n                                            {getSerialNumberByPagination(index)}\n                                        </td>\n                                        <td className='text-decoration-underline text-hover-primary cursor-pointer p-5'>\n                                            <RedirectToEmployeeProfile employeeId={i?.id}>\n                                                <CustomImage\n                                                    src={i?.image}\n                                                    className='avatar me-3'\n                                                />\n                                                {i?.first_name} {i?.last_name}{' '}\n                                            </RedirectToEmployeeProfile>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        ) : (\n                            <tr>\n                                <td\n                                    colSpan={2}\n                                    style={{\n                                        textAlign: 'center',\n                                        fontFamily: 'Manrope',\n                                        fontWeight: '500',\n                                        fontSize: 14,\n                                        paddingTop: 20,\n                                        paddingBottom: 20,\n                                    }}\n                                >\n                                    No data found\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n            <Pagination\n                page={page}\n                setPage={(changedPage) => setPage(changedPage)}\n                totalPages={tableData?.last_page}\n            />\n        </div>\n    )\n}\n\nexport default UsersOfGroup\n","import {Navigate, Routes, Route, Outlet} from 'react-router-dom'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {PageTitle} from '../../../../_metronic/layout/core'\nimport {PermissionsHeader} from './PermissionsHeader'\nimport {lazy} from 'react'\nimport {SuspensedView} from '../../../../routing/PrivateRoutes'\nimport UsersOfGroup from './tabs/permissionsGroup/UsersOfGroup'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard/',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n    {\n        title: 'Permissions/',\n        path: 'permissions/groups',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst PermissionsTab = () => {\n    const PermissionsGroupPage = lazy(() => import('./tabs/permissionsGroup/PermissionsGroupPage'))\n    const PermissionsPoliciesPage = lazy(() =>\n        import('./tabs/permissionsPolicies/PermissionsPoliciesPage')\n    )\n\n    return (\n        <div style={{marginTop: -20}} className='px-sm-10'>\n            <Routes>\n                <Route\n                    element={\n                        <>\n                            <PermissionsHeader />\n                            <Outlet />\n                        </>\n                    }\n                >\n                    <Route\n                        path='groups'\n                        element={\n                            <SuspensedView>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Groups</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.permissions.group.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <PermissionsGroupPage />\n                                </AccessRights>\n                            </SuspensedView>\n                        }\n                    />\n                    <Route\n                        path='usersOfGroup'\n                        element={\n                            <SuspensedView>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Users</PageTitle>\n                                {/* <AccessRights\n                  permission={PERMISSIONS_GROUP.administrator.permissions.group}\n                  type={PERMISSION_TYPE.view}\n                  showPlaceHolder\n                > */}\n                                <UsersOfGroup />\n                                {/* </AccessRights> */}\n                            </SuspensedView>\n                        }\n                    />\n                    <Route\n                        path='policies'\n                        element={\n                            <SuspensedView>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Policies</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.permissions.policies.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <PermissionsPoliciesPage />\n                                </AccessRights>\n                            </SuspensedView>\n                        }\n                    />\n\n                    <Route index element={<Navigate to='/dashboard' />} />\n                </Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default PermissionsTab\n","import {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isUserManagerSelector, isUserSuperAdminSelector} from '../../redux/selectors/AuthSelectors'\n\nconst RedirectToEmployeeProfile = ({\n    employeeId = null,\n    children,\n    underline = true,\n    className = null,\n    style = null,\n    target = '_self',\n}) => {\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const isManager = useSelector(isUserManagerSelector)\n\n    const hasAccess = employeeId && (isSuperAdmin || isManager)\n    return (\n        <Link\n            to={hasAccess ? `/user/personal-info?employeeId=${employeeId}` : ''}\n            target={''}\n            state={{\n                employee_id: employeeId,\n            }}\n            style={{\n                pointerEvents: hasAccess ? 'auto' : 'none',\n            }}\n        >\n            <span\n                className={`${hasAccess ? 'cursor-pointer' : ''} text-cmGrey800 d-flex align-items-center ${className}`}\n                style={{\n                    fontWeight: 700,\n                    ...(hasAccess && underline ? {textDecoration: 'underline'} : null),\n                    ...style, \n                }}\n            >\n                {children}\n            </span>\n        </Link>\n    )\n}\n\nexport default RedirectToEmployeeProfile\n"],"names":["PermissionsHeader","location","useLocation","useNavigate","_jsxs","style","fontSize","fontWeight","fontFamily","fontsFamily","className","children","_jsx","AccessRights","customCondition","allPermissionsAccess","Link","concat","pathname","to","borderRadius","showPlaceHolder","UsersOfGroup","_Location$state2","_tableData$data","_tableData$data2","navigate","Location","tableData","settableData","useState","loading","setLoading","page","setPage","useEffect","_Location$state","body","id","state","getListofGroupService","then","res","data","finally","getSerialNumberByPagination","useCallback","index","position","CustomLoader","visible","full","onClick","name","length","map","i","RedirectToEmployeeProfile","employeeId","CustomImage","src","image","first_name","last_name","colSpan","textAlign","paddingTop","paddingBottom","Pagination","changedPage","totalPages","last_page","profileBreadCrumbs","title","path","isSeparator","isActive","PermissionsTab","PermissionsGroupPage","lazy","PermissionsPoliciesPage","marginTop","Routes","Route","element","_Fragment","Outlet","SuspensedView","PageTitle","breadcrumbs","Navigate","_ref","underline","target","isSuperAdmin","useSelector","isUserSuperAdminSelector","isManager","isUserManagerSelector","hasAccess","employee_id","pointerEvents","textDecoration"],"sourceRoot":""}