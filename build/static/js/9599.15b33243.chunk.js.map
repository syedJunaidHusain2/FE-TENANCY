{"version":3,"file":"static/js/9599.15b33243.chunk.js","mappings":"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","sources":["_metronic/helpers/components/CustomSortSVG.js","app/modules/common/quill/QuillToolbar.js","app/modules/common/quill/QuillEditor.js","redux/selectors/RequestApprovalSelectors.js","redux/actions/RequestApprovalActions.js","app/modules/standard_manager/smRequests/components/RequestsPop.js","app/modules/standard_manager/smRequests/components/RequestsTable.js","app/modules/admin/filters/RequestAndApprovalFilter.js","app/modules/standard_manager/smRequests/components/ApprovalsTable.js","app/modules/standard_manager/smRequests/components/IncentivesTable.js","app/modules/standard_manager/smRequests/components/RequestsHeader.js","app/modules/standard_manager/smRequests/components/particularRequest/ParticularRequest.js","app/modules/standard_manager/smRequests/components/particularRequest/ParticularApprovalHistory.js","app/modules/standard_manager/smRequests/RequestsPage.js","customComponents/customInputs/customSearchInput/CustomSearchInput.js","customComponents/customOverlayPanel/CustomOverlayPanel.js","customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile.js","hooks/useFilterButton.js","hooks/usePayFrequency.js"],"sourcesContent":["const CustomSortSvg = ({className = '', onClick = () => {}, sortingOrder = null}) => {\n    return (\n        <span\n            className={'cursor-pointer d-flex flex-column ms-2 mb-0' || className}\n            onClick={onClick}\n        >\n            {sortingOrder !== 'asc' ? (\n                <i class='bi bi-caret-up-fill text-cmGrey600'></i>\n            ) : (\n                <i class='bi bi-caret-up-fill text-cmGrey900'></i>\n            )}\n            {sortingOrder !== 'desc' ? (\n                <i class='bi bi-caret-down-fill text-cmGrey600'></i>\n            ) : (\n                <i class='bi bi-caret-down-fill text-cmGrey900'></i>\n            )}\n        </span>\n    )\n}\n\nexport {CustomSortSvg}\n","import {Quill} from 'react-quill'\nimport htmlEditButton from 'quill-html-edit-button'\nimport './styles.css'\n\nimport BlotFormatter, {\n    AlignAction,\n    DeleteAction,\n    ImageSpec,\n    ResizeAction,\n} from 'quill-blot-formatter'\n\nQuill.register('modules/htmlEditButton', htmlEditButton)\nQuill.register('modules/blotFormatter', BlotFormatter)\nclass CustomImageSpec extends ImageSpec {\n    getActions() {\n        return [AlignAction, DeleteAction, ResizeAction]\n    }\n}\n\n// For Toolbar\nconst alignClass = Quill.import('attributors/style/align')\nconst backgroundClass = Quill.import('attributors/style/background')\nconst colorClass = Quill.import('attributors/style/color')\nconst directionClass = Quill.import('attributors/style/direction')\nconst fontClass = Quill.import('attributors/style/font')\nconst sizeClass = Quill.import('attributors/style/size')\n\nQuill.register(alignClass, true)\nQuill.register(backgroundClass, true)\nQuill.register(colorClass, true)\nQuill.register(directionClass, true)\nQuill.register(fontClass, true)\nQuill.register(sizeClass, true)\n\n// Add fonts to whitelist\nlet Font = Quill.import('formats/font')\n// We do not add Aref Ruqaa since it is the default\nFont.whitelist = [\n    'Aref Ruqaa',\n    'Times New Romance',\n    'Calibri Light',\n    'Helvetica Infanity',\n    'Raleway',\n    'Macondo',\n    'Roboto',\n]\nQuill.register(Font, true)\n\n// Add sizes to whitelist and register them\n// 'impact', 'courier', 'comic'\nconst Size = Quill.import('formats/size')\nSize.whitelist = [\n    '8px',\n    '10px',\n    '12px',\n    '13px',\n    '14px',\n    '15px',\n    '16px',\n    '17px',\n    '18px',\n    '19px',\n    '20px',\n    '21px',\n    '22px',\n    '23px',\n    '24px',\n]\nQuill.register(Size, true)\n//  Quill modules to attach to editor\n//       See https://quilljs.com/docs/modules/ for complete options\n\nexport const modules = {\n    toolbar: {\n        container: '#toolbar',\n        handlers: {},\n    },\n\n    blotFormatter: {\n        specs: [CustomImageSpec],\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true,\n    },\n    htmlEditButton: {\n        debug: true,\n        syntax: false,\n    },\n}\n\n// Formats objects for setting up the Quill editor\nexport const formats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'alt',\n    'width',\n    'height',\n    'style',\n    'imagewithstyle',\n    'italic',\n    'underline',\n    'align',\n    'strike',\n    'script',\n    'blockquote',\n    'background',\n    'list',\n    'bullet',\n    'indent',\n    'image',\n    'color',\n    'code-block',\n]\n\n// Quill Toolbar component\nexport const QuillToolbar = () => (\n    <div id='toolbar'>\n        <span className='ql-formats'>\n            <select className='ql-size w-50px' defaultValue='14px'>\n                <option value='8px'>8</option>\n                <option value='9px'>9</option>\n                <option value='10px'>10</option>\n                <option value='11px'>11</option>\n                <option value='12px'>12</option>\n                <option value='13px'>13</option>\n                <option value='14px'>14</option>\n                <option value='15px'>15</option>\n                <option value='16px'>16</option>\n                <option value='17px'>17</option>\n                <option value='18px'>18</option>\n                <option value='19px'>19</option>\n                <option value='20px'>20</option>\n                <option value='21px'>21</option>\n                <option value='22px'>22</option>\n                <option value='23px'>23</option>\n                <option value='24px'>24</option>\n            </select>\n            <select className='ql-font w-150px'>\n                <option selected value={'Aref Ruqaa'}>\n                    Aref Ruqaa\n                </option>\n                <option value='Times New Romance'>Times New Romance</option>\n                <option value='Calibri Light'>Calibri Light</option>\n                <option value='Helvetica Infanity'>Helvetica Infanity</option>\n                <option value='Raleway'>Raleway</option>\n                <option value='Macondo'>Macondo</option>\n                <option value='Roboto'>Roboto</option>\n            </select>\n            <select className='ql-header' defaultValue='3'>\n                <option value='1'>Heading</option>\n                <option value='2'>Subheading</option>\n                <option value='3'>Normal</option>\n            </select>\n        </span>\n        <span className='ql-formats'>\n            <button className='ql-bold' />\n            <button className='ql-italic' />\n            <button className='ql-underline' />\n            <button className='ql-strike' />\n        </span>\n        <span className='ql-formats'>\n            <button className='ql-list' value='ordered' />\n            <button className='ql-list' value='bullet' />\n        </span>\n\n        <span className='ql-formats'>\n            <select className='ql-align' />\n            <select className='ql-color' />\n            <select className='ql-background' />\n        </span>\n        <span className='ql-formats'>\n            {/* <button className='ql-link' /> */}\n            <button className='ql-image' />\n        </span>\n        {/* <span className='ql-formats'>\n            <button className='ql-code-block' />\n        </span> */}\n    </div>\n)\n\nexport default QuillToolbar\n","import ReactQuill from 'react-quill'\nimport QuillToolbar, {modules, formats} from './QuillToolbar'\nimport './styles.css'\nimport 'react-quill/dist/quill.snow.css'\n\nconst QuillEditor = ({value, setValue, placeholder, style, quillRef = null}) => {\n    // let myRef = useRef(quillRef)\n\n    return (\n        <>\n            <div className='text-editor'>\n                <QuillToolbar />\n                <ReactQuill\n                    className=''\n                    ref={quillRef}\n                    theme={'snow'}\n                    style={style}\n                    onChange={setValue}\n                    value={value}\n                    modules={modules}\n                    formats={formats}\n                    bounds={'.editor-container'}\n                    placeholder={placeholder}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default QuillEditor\n","import {isUserManagerSelector, isUserSuperAdminSelector} from './AuthSelectors'\n\nexport const getAdjustmentTypeSelector = (state) => {\n    const isManager = isUserManagerSelector(state)\n    const isAdmin = isUserSuperAdminSelector(state)\n    if (isManager || isAdmin) return state?.requestApproval?.adjustmentType ?? []\n    else return state?.requestApproval?.adjustmentType?.filter((item) => item?.id != 5)\n}\nexport const getApprovalListSelector = (state) => state?.requestApproval?.approvalList ?? []\nexport const getRequestListSelector = (state) => state?.requestApproval?.requestList ?? []\n","import {sendDataToReducer} from '../../helpers/CommonHelpers'\nimport {\n    getAdjustmentTypeListService,\n    getAllApprovalListService,\n    getAlLRequestsListService,\n} from '../../services/Services'\nimport {\n    SET_ADJUSTMENT_TYPE,\n    SET_APPROVAL_LIST,\n    SET_REQUEST_LIST,\n} from '../reducers/RequestApprovalReducer'\n\n// Get Adjustment Type\nexport const getAdjustmentTypeAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        getAdjustmentTypeListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_ADJUSTMENT_TYPE, res?.data)\n                resolve(res?.data)\n            })\n            .catch((error) => {\n                reject(error)\n            })\n    })\n\n// Get Request List\nexport const getRequestListAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        getAlLRequestsListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_REQUEST_LIST, res?.data)\n                resolve(res?.data)\n            })\n            .catch((error) => {\n                reject(error)\n            })\n    })\n\n// Get Approval List\nexport const getApprovalListAction =\n    (page = 1, type, filter) =>\n    (dispatch) =>\n        new Promise((resolve, reject) => {\n            getAllApprovalListService(page, type, filter)\n                .then((res) => {\n                    sendDataToReducer(dispatch, SET_APPROVAL_LIST, res?.data)\n                    resolve(res?.data)\n                })\n                .catch((error) => {\n                    reject(error)\n                })\n        })\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getAdjustmentTypeSelector} from '../../../../../redux/selectors/RequestApprovalSelectors'\nimport {\n    addRequestService,\n    getPidByUserService,\n    getPositionByIdService,\n    getRecuiterFilterService,\n} from '../../../../../services/Services'\nimport {\n    getUserDataSelector,\n    isUserManagerSelector,\n    isUserSuperAdminSelector,\n} from '../../../../../redux/selectors/AuthSelectors'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {PAYROLL_DISPUTE_LIST, getValidDate} from '../../../../../constants/constants'\nimport {jsonToFormData} from '../../../../../helpers/CommonHelpers'\nimport {Dialog} from 'primereact/dialog'\nimport {getParentChildCostCenterAction} from '../../../../../redux/actions/SettingActions'\nimport {getParentChildCostCenterSelector} from '../../../../../redux/selectors/SettingsSelectors'\nimport CustomSearchInput from '../../../../../customComponents/customInputs/customSearchInput/CustomSearchInput'\nimport CustomDatePicker from '../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport usePayFrequency from '../../../../../hooks/usePayFrequency'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomAutoCompleteDropdown from '../../../../../customComponents/customInputs/customAutoCompleteDropdown/CustomAutoCompleteDropdown'\nimport CustomModal from '../../../../../customComponents/customModal/CustomModal'\n\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst FIELD_KEYS = {\n    adjustment_type_id: 'adjustment_type_id',\n    pay_period: 'pay_period',\n    dispute_type: 'dispute_type',\n    customer_pid: 'customer_pid',\n    description: 'description',\n    cost_tracking_id: 'cost_tracking_id',\n    emi: 'emi',\n    cost_date: 'cost_date',\n    amount: 'amount',\n    user_id: 'user_id',\n    request_date: 'request_date',\n    image: 'image',\n}\n\nconst RequestsPop = ({show, handleClose}) => {\n    const dispatch = useDispatch()\n    const adjustmentTypeList = useSelector(getAdjustmentTypeSelector)\n    const userData = useSelector(getUserDataSelector)\n    const isManager = useSelector(isUserManagerSelector)\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const [pidList, setPidList] = useState([])\n    const costCenterList = useSelector(getParentChildCostCenterSelector)\n    const [loading, setLoading] = useState(false)\n    const [positionId, setPositionId] = useState(userData?.sub_position_id)\n    const [requestData, setRequestData] = useState({\n        adjustment_type_id: 1,\n        pay_period: null,\n        dispute_type: null,\n        customer_pid: null,\n        description: null,\n        cost_tracking_id: null,\n        emi: null,\n        cost_date: null,\n        amount: null,\n        user_id: userData,\n        request_date: null,\n        image: null,\n    })\n    const [selectedPids, setSelectedPids] = useState([])\n    const {handleSelectedWeekData, executedPayPeriodList} = usePayFrequency()\n\n    useEffect(() => {\n        dispatch(getParentChildCostCenterAction())\n    }, [])\n\n    useEffect(() => {\n        setRequestData({\n            ...requestData,\n            pay_period: null,\n            dispute_type: null,\n            customer_pid: null,\n            description: null,\n            cost_tracking_id: null,\n            emi: null,\n            cost_date: null,\n            amount: null,\n            user_id: userData,\n            request_date: null,\n            image: null,\n        })\n    }, [requestData?.adjustment_type_id])\n\n    useEffect(() => {\n        getPidByUserService(requestData?.user_id?.id)\n            .then((res) => {\n                const pidListobject = res?.data.map((i) => {\n                    return {name: i}\n                })\n                setPidList(pidListobject)\n            })\n            .finally(() => {})\n    }, [requestData?.user_id?.id])\n\n    useEffect(() => {\n        getPositionByIdService(requestData?.user_id?.sub_position_id)\n            .then((res) => {\n                handleSelectedWeekData(res?.data[0]?.frequency_type_name)\n            })\n            .finally(() => {})\n    }, [positionId, requestData?.user_id])\n\n    const onSubmitPress = useCallback(() => {\n        const passPid = selectedPids.map((i) => i.name)\n        const passPindintoString = passPid.join(',')\n\n        let body = {\n            adjustment_type_id: requestData?.adjustment_type_id,\n            user_id: requestData?.user_id?.id,\n        }\n\n        if (!body?.adjustment_type_id) return CustomToast.error('Select type of request')\n        if (requestData?.adjustment_type_id == 1) {\n            body = {\n                ...body,\n                amount: requestData?.amount,\n                pay_period: requestData?.pay_period,\n                dispute_type: requestData?.dispute_type,\n                customer_pid: passPindintoString,\n                description: requestData?.description,\n            }\n            if (!body?.amount) return CustomToast.error('Enter amount')\n            if (!body?.pay_period) return CustomToast.error('Select pay period')\n            if (!body?.dispute_type) return CustomToast.error('Select dispute type')\n        } else if (requestData?.adjustment_type_id == 2) {\n            body = {\n                ...body,\n                amount: requestData?.amount,\n                cost_date: getValidDate(requestData?.cost_date, 'YYYY-MM-DD'),\n                cost_tracking_id: requestData?.cost_tracking_id,\n                description: requestData?.description,\n            }\n            if (!body?.amount) return CustomToast.error('Enter amount')\n            if (!body?.cost_date) return CustomToast.error('Select cost date')\n            if (!body?.cost_tracking_id) return CustomToast.error('Select cost head')\n        } else if (requestData?.adjustment_type_id == 3) {\n            body = {\n                ...body,\n                customer_pid: passPindintoString,\n                amount: requestData?.amount,\n                description: requestData?.description,\n                request_date: getValidDate(requestData?.request_date, 'YYYY-MM-DD'),\n            }\n            if (!body?.user_id) return CustomToast.error('Select employee')\n            if (!body?.amount) return CustomToast.error('Enter amount')\n            // if (!body?.customer_pid) return CustomToast.error('Enter PID')\n            if (!body?.request_date) return CustomToast.error('Select date of bonus')\n        } else if (requestData?.adjustment_type_id == 4) {\n            body = {\n                ...body,\n                amount: requestData?.amount,\n                description: requestData?.description,\n            }\n            if (!body?.amount) return CustomToast.error('Enter amount')\n        } else if ([5, 6].includes(Number(requestData?.adjustment_type_id))) {\n            body = {\n                ...body,\n                customer_pid: passPindintoString,\n                amount: requestData?.amount,\n                request_date: getValidDate(requestData?.request_date, 'YYYY-MM-DD'),\n                description: requestData?.description,\n            }\n            if (!body?.user_id) return CustomToast.error('Select employee')\n            if (!body?.amount) return CustomToast.error('Enter amount')\n            // if (!body?.customer_pid) return CustomToast.error('Enter PID')\n\n            if (!body?.request_date) return CustomToast.error('Select date of bonus')\n        }\n\n        if (requestData?.image) body.image = requestData?.image\n        const formData = jsonToFormData(body)\n\n        setLoading(true)\n        addRequestService(formData)\n            .then((res) => {\n                CustomToast.success('Request added')\n                handleClose()\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [\n        handleClose,\n        requestData?.adjustment_type_id,\n        requestData?.amount,\n        requestData?.cost_date,\n        requestData?.cost_tracking_id,\n        requestData?.description,\n        requestData?.dispute_type,\n        requestData?.image,\n        requestData?.pay_period,\n        requestData?.request_date,\n        requestData?.user_id?.id,\n        selectedPids,\n    ])\n\n    const updateRequestData = useCallback((field, value) => {\n        setRequestData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }, [])\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            updateRequestData(e?.target?.name, e?.target?.value)\n        },\n        [updateRequestData]\n    )\n\n    const onChangeFileData = (e) => {\n        updateRequestData(e?.target?.name, e?.target?.files?.[0])\n    }\n\n    const onSeachRecruiter = useCallback(\n        (searchText) =>\n            new Promise((resolve) => {\n                getRecuiterFilterService(searchText)\n                    .then((res) => {\n                        const data = res?.data?.map((item) => ({\n                            ...item,\n                            name: `${item?.first_name} ${item?.last_name}`,\n                        }))\n                        resolve(data)\n                    })\n                    .catch(() => {\n                        resolve([])\n                    })\n            }),\n        []\n    )\n\n    const onSelectEmployee = useCallback(\n        (value) => {\n            setPositionId(value?.position_detail?.id)\n            onChangeInputData({\n                target: {\n                    name: FIELD_KEYS.user_id,\n                    value: value,\n                },\n            })\n        },\n        [onChangeInputData]\n    )\n\n    const onSelectPids = (e) => {\n        setSelectedPids(e.value)\n    }\n\n    const periodList = useMemo(() => {\n        return executedPayPeriodList?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.pay_period_from)} to ${getValidDate(\n                item?.pay_period_to\n            )}`,\n            value: `${getValidDate(item?.pay_period_from)} to ${getValidDate(item?.pay_period_to)}`,\n        }))\n    }, [executedPayPeriodList])\n\n    const costCenterListWithChilds = useMemo(() => {\n        const data = []\n        costCenterList.map((item) => {\n            data.push({\n                name: item?.name,\n                value: item?.id,\n                disabled: item?.chields?.length > 0,\n            })\n            if (item?.chields?.length > 0) {\n                item?.chields.map((subItem) => {\n                    data.push({\n                        name: `- ${subItem?.name}`,\n                        value: subItem?.id,\n                        disabled: false,\n                    })\n                })\n            }\n        })\n        return data\n    }, [costCenterList])\n\n    return createPortal(\n        <CustomModal show={show} title='Add Request' onHide={handleClose}>\n            <div style={{position: 'relative'}}>\n                <CustomLoader visible={loading} loaderPosition='top' full size={100} />\n                <div className=''>\n                    <div className='modal-body  py-lg-7 px-lg-10'>\n                        <div className='container d-flex justify-content-center'>\n                            <div className='row w-sm-450px'>\n                                <form action='' style={{fontFamily: 'Manrope'}}>\n                                    {/* Slector starts */}\n                                    <div className='mb-10'>\n                                        <CustomDropdown\n                                            label={'Type of Request'}\n                                            name={FIELD_KEYS.adjustment_type_id}\n                                            onChange={onChangeInputData}\n                                            value={requestData?.adjustment_type_id}\n                                            required\n                                            options={adjustmentTypeList}\n                                            valueKey='id'\n                                            searching={false}\n                                            showClear={false}\n                                        />\n                                    </div>\n                                    {isManager || isSuperAdmin ? (\n                                        <div className='mb-10'>\n                                            <label\n                                                className='form-label text-cmGrey700'\n                                                style={{fontSize: '14px', fontWeight: '600'}}\n                                            >\n                                                <span>Employee Name</span>\n                                                <span className='text-cmError'>*</span>\n                                            </label>\n\n                                            <CustomSearchInput\n                                                placeholder='Search Employee'\n                                                onSearch={onSeachRecruiter}\n                                                onSelectValue={onSelectEmployee}\n                                                selectedValue={requestData?.user_id?.name}\n                                            />\n                                        </div>\n                                    ) : null}\n\n                                    {/* Payroll Dispute Starts */}\n                                    {requestData?.adjustment_type_id == 1 && (\n                                        <div>\n                                            <div className='mb-10 w-100'>\n                                                <CustomAutoCompleteDropdown\n                                                    label={'PID'}\n                                                    options={pidList}\n                                                    value={selectedPids}\n                                                    onChange={onSelectPids}\n                                                    className=''\n                                                    selectedOptions={selectedPids}\n                                                />\n                                            </div>\n\n                                            <div className='mb-10'>\n                                                <div className='w-sm-auto w-100'>\n                                                    <CustomDropdown\n                                                        label={'Pay Period'}\n                                                        required\n                                                        name={FIELD_KEYS.pay_period}\n                                                        value={requestData?.pay_period}\n                                                        onChange={onChangeInputData}\n                                                        placeholder={\n                                                            executedPayPeriodList?.length > 0\n                                                                ? 'Select Pay Period'\n                                                                : 'No Pay Period Available'\n                                                        }\n                                                        options={periodList}\n                                                        valueKey='value'\n                                                        displayKey='period'\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className='mb-10'>\n                                                <div>\n                                                    <CustomInput\n                                                        label={'Amount'}\n                                                        required\n                                                        type={INPUT_TYPE.number}\n                                                        placeholder='Eg: -$300 or $300'\n                                                        name={FIELD_KEYS.amount}\n                                                        value={requestData?.amount}\n                                                        onChange={onChangeInputData}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className='mb-10'>\n                                                <CustomDropdown\n                                                    label='Dispute Type'\n                                                    options={PAYROLL_DISPUTE_LIST}\n                                                    required\n                                                    name={FIELD_KEYS.dispute_type}\n                                                    value={requestData?.dispute_type}\n                                                    onChange={onChangeInputData}\n                                                    displayKey='value'\n                                                    searching={false}\n                                                />\n                                            </div>\n\n                                            <div className='mb-10'>\n                                                <CustomInput\n                                                    label={'Description'}\n                                                    type={INPUT_TYPE.textarea}\n                                                    placeholder='Enter description'\n                                                    name={FIELD_KEYS.description}\n                                                    value={requestData?.description}\n                                                    onChange={onChangeInputData}\n                                                />\n                                            </div>\n\n                                            {/* label 5 */}\n                                            <div className='mb-10'>\n                                                <label\n                                                    className='form-label text-cmGrey700'\n                                                    style={{fontWeight: 600, fontSize: '14px'}}\n                                                >\n                                                    Supporting images or documents (max. 50mb each)\n                                                </label>\n                                                <input\n                                                    type='file'\n                                                    className='form-control bg-cmbg'\n                                                    placeholder='Select file'\n                                                    name={FIELD_KEYS.image}\n                                                    onChange={onChangeFileData}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n\n                                    {requestData?.adjustment_type_id == 2 && (\n                                        <div>\n                                            {/* Field 1 */}\n                                            <div className='d-sm-flex justify-content-between gap-10 mb-10'>\n                                                <div className='w-sm-100 mb-sm-0 mb-10'>\n                                                    <CustomInput\n                                                        label={'Amount'}\n                                                        type={INPUT_TYPE.number}\n                                                        placeholder='Enter Amount'\n                                                        name={FIELD_KEYS.amount}\n                                                        value={requestData?.amount}\n                                                        onChange={onChangeInputData}\n                                                        required\n                                                    />\n                                                </div>\n\n                                                <div className='w-sm-100'>\n                                                    <CustomDatePicker\n                                                        required\n                                                        label={'Cost Date'}\n                                                        name={FIELD_KEYS.cost_date}\n                                                        inputClassName='py-1'\n                                                        value={requestData?.cost_date}\n                                                        onChange={onChangeInputData}\n                                                        className='bg-cmbg'\n                                                        mode='single'\n                                                        placeholder='Select cost date'\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className='mb-10'>\n                                                <CustomDropdown\n                                                    required\n                                                    label={'Cost Head'}\n                                                    name={FIELD_KEYS.cost_tracking_id}\n                                                    options={costCenterListWithChilds}\n                                                    onChange={onChangeInputData}\n                                                    value={requestData?.cost_tracking_id}\n                                                />\n                                            </div>\n                                            {/* Field 3 */}\n                                            <div className='mb-10'>\n                                                <CustomInput\n                                                    label={'Description'}\n                                                    type={INPUT_TYPE.textarea}\n                                                    placeholder='Add Description'\n                                                    name={FIELD_KEYS.description}\n                                                    value={requestData?.description}\n                                                    onChange={onChangeInputData}\n                                                />\n                                            </div>\n                                            {/* Field 4 */}\n                                            <div className='mb-10'>\n                                                <label\n                                                    for='formFileMultiple'\n                                                    className='form-label text-cmGrey700'\n                                                    style={{fontWeight: 600}}\n                                                >\n                                                    Supporting images or documents (maximum 50MB\n                                                    each)\n                                                </label>\n                                                <input\n                                                    type='file'\n                                                    className='form-control'\n                                                    placeholder='Select file'\n                                                    name={FIELD_KEYS.image}\n                                                    onChange={onChangeFileData}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n\n                                    {/* Advance */}\n                                    {requestData?.adjustment_type_id == 4 && (\n                                        <div>\n                                            <div className='mb-10'>\n                                                <CustomInput\n                                                    label={'Amount'}\n                                                    type={INPUT_TYPE.number}\n                                                    placeholder='Enter Amount'\n                                                    name={FIELD_KEYS.amount}\n                                                    value={requestData?.amount}\n                                                    onChange={onChangeInputData}\n                                                    required\n                                                />\n                                            </div>\n                                            {/* feild 2 */}\n                                            <div className='mb-10'>\n                                                <CustomInput\n                                                    label={'Description'}\n                                                    type={INPUT_TYPE.textarea}\n                                                    placeholder='Enter Reason'\n                                                    name={FIELD_KEYS.description}\n                                                    value={requestData?.description}\n                                                    onChange={onChangeInputData}\n                                                    required\n                                                />\n                                            </div>\n                                            {/* feild 3 */}\n                                            <div className='mb-10'>\n                                                <label\n                                                    className='form-label text-cmGrey700'\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    Supporting images or documents (maximum 50MB\n                                                    each)\n                                                </label>\n                                                <input\n                                                    type='file'\n                                                    className='form-control'\n                                                    placeholder='Select file'\n                                                    name={FIELD_KEYS.image}\n                                                    onChange={onChangeFileData}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                    {/* Fine/Fee*/}\n                                    {requestData?.adjustment_type_id == 5 && (\n                                        <div className=' mx-auto mt-10 mb-10'>\n                                            <div className='mb-10'>\n                                                <CustomAutoCompleteDropdown\n                                                    label={'PID'}\n                                                    options={pidList}\n                                                    value={selectedPids}\n                                                    onChange={onSelectPids}\n                                                    className=''\n                                                    selectedOptions={selectedPids}\n                                                />\n                                            </div>\n                                            <div className='row align-items-end mb-10 '>\n                                                <div className='col-sm'>\n                                                    <CustomInput\n                                                        label={'Amount'}\n                                                        required\n                                                        type={INPUT_TYPE.number}\n                                                        placeholder='Enter Amount'\n                                                        name={FIELD_KEYS.amount}\n                                                        value={requestData?.amount}\n                                                        onChange={onChangeInputData}\n                                                    />\n                                                </div>\n\n                                                <div className='col-sm'>\n                                                    <CustomDatePicker\n                                                        label={'Date'}\n                                                        required\n                                                        name={FIELD_KEYS.request_date}\n                                                        inputClassName='py-1'\n                                                        value={requestData?.request_date}\n                                                        onChange={onChangeInputData}\n                                                        className=''\n                                                        mode='single'\n                                                        placeholder='Select Date'\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className='mb-10'>\n                                                <CustomInput\n                                                    label={'Description'}\n                                                    type={INPUT_TYPE.textarea}\n                                                    id='DescriptionBox'\n                                                    name={FIELD_KEYS.description}\n                                                    value={requestData?.description}\n                                                    onChange={onChangeInputData}\n                                                    placeholder='Enter Description'\n                                                />\n                                            </div>\n                                            <div className=''>\n                                                <label\n                                                    className='form-label'\n                                                    style={{fontSize: '14px', fontWeight: '600'}}\n                                                >\n                                                    <span>\n                                                        Supporting images or documents (maximum 50MB\n                                                        each)\n                                                    </span>\n                                                </label>\n                                                <input\n                                                    type='file'\n                                                    className='form-control'\n                                                    placeholder='Select file'\n                                                    name={FIELD_KEYS.image}\n                                                    onChange={onChangeFileData}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n\n                                    {/* Bonuses */}\n                                    {requestData?.adjustment_type_id == 3 && (\n                                        <div className='mx-auto mt-10 mb-10'>\n                                            <div className='mb-10'>\n                                                <CustomAutoCompleteDropdown\n                                                    label={'PID'}\n                                                    options={pidList}\n                                                    value={selectedPids}\n                                                    onChange={onSelectPids}\n                                                    className=''\n                                                    selectedOptions={selectedPids}\n                                                />\n                                            </div>\n                                            <div className='row align-items-end mb-10'>\n                                                <div className='col-sm'>\n                                                    <CustomInput\n                                                        label={'Amount'}\n                                                        type={INPUT_TYPE.number}\n                                                        placeholder='Enter Amount'\n                                                        name={FIELD_KEYS.amount}\n                                                        value={requestData?.amount}\n                                                        onChange={onChangeInputData}\n                                                    />\n                                                </div>\n\n                                                <div className='col-sm' style={{fontSize: '14px'}}>\n                                                    <CustomDatePicker\n                                                        label={'Date of Bonus'}\n                                                        required\n                                                        name={FIELD_KEYS.request_date}\n                                                        value={requestData?.request_date}\n                                                        onChange={onChangeInputData}\n                                                        className=''\n                                                        mode='single'\n                                                        placeholder='Select Date'\n                                                        inputClassName='py-1'\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className='mb-10'>\n                                                <CustomInput\n                                                    label={'Description'}\n                                                    id='DescriptionBox'\n                                                    placeholder='Enter Description'\n                                                    name={FIELD_KEYS.description}\n                                                    value={requestData?.description}\n                                                    onChange={onChangeInputData}\n                                                    type={INPUT_TYPE.textarea}\n                                                />\n                                            </div>\n                                            {/* Field 4 */}\n                                            <div className='mb-10'>\n                                                <label\n                                                    for='formFileMultiple'\n                                                    className='form-label text-cmGrey700'\n                                                    style={{fontWeight: 600}}\n                                                >\n                                                    Supporting images or documents (maximum 50MB\n                                                    each)\n                                                </label>\n                                                <input\n                                                    type='file'\n                                                    className='form-control'\n                                                    placeholder='Select file'\n                                                    name={FIELD_KEYS.image}\n                                                    onChange={onChangeFileData}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n\n                                    {/* Incentives */}\n                                    {requestData?.adjustment_type_id == 6 && (\n                                        <div className='mx-auto mt-10 mb-10'>\n                                            <div className='mb-10'>\n                                                <CustomAutoCompleteDropdown\n                                                    label={'PID'}\n                                                    value={selectedPids}\n                                                    options={pidList}\n                                                    onChange={onSelectPids}\n                                                    className=''\n                                                    selectedOptions={selectedPids}\n                                                />\n                                            </div>\n\n                                            <div className='row align-items-end mb-10'>\n                                                <div className='col-sm'>\n                                                    <CustomInput\n                                                        label={'Amount'}\n                                                        type={INPUT_TYPE?.number}\n                                                        placeholder='Enter Amount'\n                                                        name={FIELD_KEYS.amount}\n                                                        value={requestData?.amount}\n                                                        onChange={onChangeInputData}\n                                                    />\n                                                </div>\n\n                                                <div className='col-sm' style={{fontSize: '14px'}}>\n                                                    <CustomDatePicker\n                                                        label={'Date'}\n                                                        required\n                                                        name={FIELD_KEYS.request_date}\n                                                        value={\n                                                            requestData?.request_date\n                                                                ? new Date(\n                                                                      requestData?.request_date\n                                                                  )\n                                                                : null\n                                                        }\n                                                        onChange={onChangeInputData}\n                                                        className=''\n                                                        mode='single'\n                                                        placeholder='Select Date'\n                                                        inputClassName='py-1'\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className='mb-10'>\n                                                <CustomInput\n                                                    label={'Description'}\n                                                    type={INPUT_TYPE.textarea}\n                                                    id='DescriptionBox'\n                                                    placeholder='Enter Description'\n                                                    name={FIELD_KEYS.description}\n                                                    value={requestData?.description}\n                                                    onChange={onChangeInputData}\n                                                />\n                                            </div>\n                                            {/* Field 4 */}\n                                            <div className='mb-10'>\n                                                <label\n                                                    for='formFileMultiple'\n                                                    className='form-label text-cmGrey700'\n                                                    style={{fontWeight: 600}}\n                                                >\n                                                    Supporting images or documents (maximum 5MB\n                                                    each)\n                                                </label>\n                                                <input\n                                                    type='file'\n                                                    className='form-control'\n                                                    placeholder='Select file'\n                                                    name={FIELD_KEYS.image}\n                                                    onChange={onChangeFileData}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                </form>\n                                {/* Payroll Dispute ends */}\n                                {/* button starts*/}\n                                <div className='text-center mb-sm-10 mb-5'>\n                                    <CustomButton\n                                        type='submit'\n                                        buttonType={BUTTON_TYPE.primary}\n                                        buttonLabel='Submit'\n                                        onClick={onSubmitPress}\n                                    />\n                                </div>\n                                {/* button ends*/}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </CustomModal>,\n        modalsRoot\n    )\n}\n\nexport {RequestsPop}\n","import {useCallback, useEffect, useRef, useState} from 'react'\nimport {RequestsPop} from './RequestsPop'\nimport Pagination from '../../../admin/sequidocs/component/Pagination'\nimport {Link} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\nimport {getAdjustmentTypeAction} from '../../../../../redux/actions/RequestApprovalActions'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport {getAlLRequestsListService} from '../../../../../services/Services'\nimport AccessRights from '../../../../../accessRights/AccessRights'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {allPermissionsAccess} from '../../../../../accessRights/useCustomAccessRights'\nimport {REQUEST_STATUS_INFO} from '../../../../../constants/constants'\nimport CustomOverlayPanel from '../../../../../customComponents/customOverlayPanel/CustomOverlayPanel'\nimport {fontsFamily} from '../../../../../assets/fonts/fonts'\nimport RequestAndApprovalFilter from '../../../admin/filters/RequestAndApprovalFilter'\nimport debounce from 'lodash.debounce'\n\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../helpers/CommonHelpers'\nimport {CustomSortSvg} from '../../../../../_metronic/helpers/components/CustomSortSVG'\nconst initialFilter = {\n    status: '',\n    type: '',\n}\n\nexport const STATUS_DROPDOWN_VALUES = [\n    {name: 'Scheduled', value: 'Accept'},\n    {name: 'Paid', value: 'Paid'},\n    {name: 'Pending', value: 'Pending'},\n    {name: 'In Progress', value: 'Approved'},\n\n    {name: 'Declined', value: 'Declined'},\n]\n\nconst RequestsTable = ({setRequestFilters, requestFilters}) => {\n    const dispatch = useDispatch()\n    const overLayRef = useRef(null)\n    const [showCreateRequestModal, setShowCreateRequestModa] = useState(false)\n    const [searchText, setSearchText] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [fullLoading, setFullLoading] = useState(true)\n    const [tableLoading, setTableLoading] = useState(false)\n    const [displayData, setDisplayData] = useState(null)\n    const [page, setPage] = useState(1)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        dispatch(getAdjustmentTypeAction())\n    }, [])\n\n\n    useEffect(() => {\n        setPage(1)\n    }, [searchVal])\n\n    const getRequestList = useCallback(() => {\n        setFullLoading(true)\n        setTableLoading(true)\n        getAlLRequestsListService({\n            page,\n            filter: searchVal,\n            status: requestFilters?.status,\n            type: requestFilters?.type,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        })\n            .then((res) => {\n                setDisplayData(res?.data)\n            })\n            .finally(() => {\n                setTableLoading(false)\n                setFullLoading(false)\n            })\n    }, [page, requestFilters?.status, requestFilters?.type, searchVal, sortValue, sortingOrder])\n\n    useEffect(() => {\n        getRequestList()\n    }, [searchVal, page, sortValue, sortingOrder, requestFilters])\n\n    const handleClose = () => {\n        setShowCreateRequestModa(false)\n        getRequestList()\n    }\n    const handleSearchChange = (e) => {\n        setSearchText(e?.target?.value)\n\n        delaySave(e?.target?.value)\n    }\n    const delaySave = useCallback(\n        debounce((val) => {\n            setSearchVal(val)\n            // setLoading(true)\n        }, 500),\n        []\n    )\n\n    const onPageChange = (val) => {\n        setTableLoading(true)\n        setPage(val)\n    }\n\n    const statusOverleyTemplate = (\n        <div className='p-2 bg-cmInfo text-dark'>\n            {REQUEST_STATUS_INFO.map((item) => (\n                <>\n                    <div\n                        className={item?.headClass}\n                        style={{\n                            fontFamily: fontsFamily.manrope,\n                            fontSize: '14px',\n                            fontWeight: '700',\n                        }}\n                    >\n                        {item?.name}\n                    </div>\n                    <ul>\n                        <li\n                            className='text-cmGrey700'\n                            style={{\n                                fontFamily: fontsFamily.manrope,\n                                fontSize: '12px',\n                                fontWeight: '700',\n                            }}\n                        >\n                            {item?.value}\n                        </li>\n                    </ul>\n                </>\n            ))}\n        </div>\n    )\n\n    const onApplyFilter = (filters) => {\n        setPage(1)\n        setSearchText('')\n        setSearchVal('')\n        setRequestFilters(filters)\n    }\n    const onResetFilter = (filters) => {\n        setPage(1)\n        setSearchText('')\n        setSearchVal('')\n        setRequestFilters(filters)\n    }\n    return (\n        <>\n            <div\n                className={`card`}\n                style={{\n                    fontFamily: 'Manrope',\n                    position: 'relative',\n                    borderRadius: '0 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div className='card-body py-0 px-0 mx-0'>\n                    <div\n                        className='shadow-none bg-cmwhite h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='w-sm-100 mt-4 mb-3'>\n                            {/* fILTER */}\n                            <div className='d-sm-flex align-items-center justify-content-between ms-sm-10 me-sm-10'>\n                                <div className='mx-sm-0 mx-auto w-sm-auto '>\n                                    {/* <form\n                                        className='position-relative'\n                                        style={{borderRadius: '90px'}}\n                                        autoComplete='off'\n                                    > */}\n                                    <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={handleSearchChange}\n                                        value={searchText}\n                                    />\n                                    {/* </form> */}\n                                </div>\n\n                                <div className='d-flex flex-wrap  gap-5 mt-sm-0 mt-5   '>\n                                    <div style={{height: '43px', overflow: 'hidden'}}>\n                                        <CustomLoader\n                                            size={50}\n                                            visible={displayData?.length > 0 && fullLoading}\n                                        />\n                                    </div>\n                                    <div>\n                                        <RequestAndApprovalFilter\n                                            initialFilter={initialFilter}\n                                            onApplyFilter={(updatedFilter) =>\n                                                onApplyFilter(updatedFilter)\n                                            }\n                                            resetFilter={onResetFilter}\n                                        />\n                                    </div>\n\n                                    <AccessRights\n                                        customCondition={\n                                            allPermissionsAccess.standard.requestAndApprovels\n                                                .myRequests.edit\n                                        }\n                                    >\n                                        <CustomButton\n                                            buttonType={BUTTON_TYPE.primary}\n                                            buttonLabel='Request'\n                                            buttonSize={BUTTON_SIZE.small}\n                                            onClick={() => setShowCreateRequestModa(true)}\n                                        />\n                                    </AccessRights>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive  overflow-auto' style={{position: 'relative'}}>\n                        <CustomLoader full visible={tableLoading} />\n\n                        <table className='table' style={{tableLayout: 'fixed', width: '100%'}}>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='text-cmGrey900 bg-cmGrey300'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th\n                                        className='p-5 w-xxl-150px w-100px'\n                                        // style={{maxWidth: '150px', width: '150px'}}\n                                    >\n                                        ID\n                                    </th>\n                                    <th\n                                        className='p-5 w-xxl-150px w-100px'\n                                        // style={{maxWidth: '150px', width: '150px'}}\n                                    >\n                                        Type\n                                    </th>\n                                    <th\n                                        className='p-5 w-xxl-200px w-150px p-5 '\n                                        // style={{maxWidth: '200px', width: '200px'}}\n                                    >\n                                        <div className='d-flex'>\n                                            Disputed Period\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'disputed' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('disputed')\n                                                    setSortingOrder(\n                                                        sortValue !== 'disputed' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                    setPage(1)\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th\n                                        className='p-5 p-5 w-xxl-200px w-150px'\n                                        // style={{maxWidth: '200px', width: '200px'}}\n                                    >\n                                        <div className='d-flex'>\n                                            Amount\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'amount' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('amount')\n                                                    setSortingOrder(\n                                                        sortValue !== 'amount' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                    setPage(1)\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th\n                                        className='p-5 p-5 w-xxl-275px w-200px'\n                                        // style={{maxWidth: '275px', width: '275px'}}\n                                    >\n                                        Reason\n                                    </th>\n                                    <th className='p-5 w-xxl-150px w-100px'>\n                                        <div className='d-flex gap-2'>\n                                            <span>Status</span>\n                                            <span>\n                                                <CustomOverlayPanel\n                                                    templateData={statusOverleyTemplate}\n                                                />\n                                            </span>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER} style={{fontWeight: 600}}>\n                                <tr>\n                                    <td colSpan='6' className='m-0 p-0'>\n                                        <CustomLoader\n                                            full={true}\n                                            visible={displayData?.length <= 0 && fullLoading}\n                                        />\n                                    </td>\n                                </tr>\n                                {displayData?.data?.length > 0 ? (\n                                    <>\n                                        {displayData?.data?.map((item) => (\n                                            <tr\n                                                key={item?.id}\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                                className={`stripRow`}\n                                            >\n                                                <td className='p-5 '>\n                                                    <Link\n                                                        to={'particular-request'}\n                                                        state={{requestData: item}}\n                                                        className='text-cmGrey800 text-decoration-underline cursor-pointer'\n                                                        style={{fontWeight: '600'}}\n                                                    >\n                                                        {item?.req_no}\n                                                    </Link>\n                                                </td>\n                                                <td\n                                                    className='text-cmGrey800 p-5'\n                                                    style={{fontWeight: '600'}}\n                                                >\n                                                    {item?.type}\n                                                </td>\n\n                                                <td\n                                                    className='text-cmGrey600 p-5'\n                                                    style={{fontWeight: '500'}}\n                                                >\n                                                    {item?.request_on}\n                                                </td>\n                                                <td\n                                                    className='text-cmGrey900 p-5'\n                                                    style={{fontWeight: '600'}}\n                                                >\n                                                    {formattedNumberFields(item?.amount, '$')}\n                                                </td>\n                                                <td\n                                                    className='text-cmGrey600 p-5'\n                                                    style={{fontWeight: '500'}}\n                                                >\n                                                    {item?.description}\n                                                </td>\n\n                                                <td\n                                                    className={`p-5 ${\n                                                        item?.status === 'Approved'\n                                                            ? 'text-cmOrange'\n                                                            : item?.status === 'Pending'\n                                                            ? 'text-cmOrange'\n                                                            : item?.status === 'Declined'\n                                                            ? 'text-cmError'\n                                                            : item?.status === 'Accept'\n                                                            ? 'text-cminfo'\n                                                            : item?.status === 'Paid'\n                                                            ? 'text-cmSuccess'\n                                                            : ''\n                                                    }`}\n                                                    style={{fontWeight: '600'}}\n                                                >\n                                                    {item?.status === 'Approved'\n                                                        ? 'In progress'\n                                                        : item?.status === 'Pending'\n                                                        ? 'Pending'\n                                                        : item?.status === 'Declined'\n                                                        ? 'Declined'\n                                                        : item?.status === 'Accept'\n                                                        ? 'Scheduled'\n                                                        : item?.status}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={6}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            {displayData?.data?.length > 0 ? (\n                <Pagination\n                    page={page}\n                    setPage={(changedPage) => onPageChange(changedPage)}\n                    totalPages={displayData?.last_page}\n                />\n            ) : null}\n\n            {showCreateRequestModal && (\n                <RequestsPop\n                    show={showCreateRequestModal}\n                    handleClose={() => {\n                        handleClose()\n                    }}\n                />\n            )}\n        </>\n    )\n}\n\nexport default RequestsTable\n","import React, {useCallback, useMemo} from 'react'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {STATUS_DROPDOWN_VALUES} from '../../standard_manager/smRequests/components/RequestsTable'\nimport {REQUEST_APPROVAL_TYPE_DROPDOWN_VALUES} from '../../../../constants/constants'\n\nconst FILTER_KEYS = {\n    status: 'status',\n    type: 'type',\n}\n\nconst RequestAndApprovalFilter = ({\n    initialFilter = null,\n    onApplyFilter = null,\n    resetFilter = null,\n    showStatusFilter = true,\n    filterRef = null,\n}) => {\n    const [filterProps, filterData, setFilterData] = useFilterButton(initialFilter, onApplyFilter)\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n\n    const resetFilterData = useCallback(() => {\n        setFilterData(initialFilter)\n        resetFilter()\n    }, [initialFilter, resetFilter, setFilterData])\n\n    const typeFilterOptionsModifications = useMemo(() => {\n        const typeArr = [...REQUEST_APPROVAL_TYPE_DROPDOWN_VALUES]\n        let addOnObj = {name: 'Advance', value: 'Advance'}\n        typeArr.push(addOnObj)\n        return typeArr\n    }, [])\n\n    return (\n        <CustomFilterButton\n            {...filterProps}\n            onResetClick={resetFilterData}\n            filterData={filterData}\n            ref={filterRef}\n        >\n            {showStatusFilter ? (\n                <div className='mb-10'>\n                    <CustomDropdown\n                        placeholder='Select Status'\n                        value={filterData?.[FILTER_KEYS.status]}\n                        onChange={onChangeInputData}\n                        options={STATUS_DROPDOWN_VALUES}\n                        name={FILTER_KEYS.status}\n                        // showClear={false}\n                        searching={false}\n                    />\n                </div>\n            ) : null}\n            <div className='mb-10'>\n                <CustomDropdown\n                    placeholder='Select Type'\n                    value={filterData?.[FILTER_KEYS.type]}\n                    onChange={onChangeInputData}\n                    options={typeFilterOptionsModifications}\n                    searching={false}\n                    name={FILTER_KEYS.type}\n                />\n            </div>\n        </CustomFilterButton>\n    )\n}\n\nexport default RequestAndApprovalFilter\n","import {useCallback, useEffect, useRef, useState} from 'react'\n\nimport Pagination from '../../../admin/sequidocs/component/Pagination'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getApprovalListSelector} from '../../../../../redux/selectors/RequestApprovalSelectors'\nimport {\n    exportApprovalHistoryService,\n    getAllApprovalListService,\n} from '../../../../../services/Services'\nimport {getApprovalListAction} from '../../../../../redux/actions/RequestApprovalActions'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport RedirectToEmployeeProfile from '../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport CustomImage from '../../../../../customComponents/customImage/CustomImage'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport debounce from 'lodash.debounce'\nimport moment from 'moment'\nimport {\n    TABLE_BORDER,\n    downloadAnyFileHelper,\n    formattedNumberFields,\n    getErrorMessageFromResponse,\n} from '../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport RequestAndApprovalFilter from '../../../admin/filters/RequestAndApprovalFilter'\nimport {CustomSortSvg} from '../../../../../_metronic/helpers/components/CustomSortSVG'\nimport CustomEllipsis from '../../../../../customComponents/customEllipsis/CustomEllipsis'\nimport {fontsFamily} from '../../../../../assets/fonts/fonts'\n\nconst initialFilter = {\n    status: '',\n    type: '',\n}\n\nconst ApprovalsTable = ({setApprovalFilters, approvalFilters}) => {\n    const dispatch = useDispatch()\n    const [searchText, setSearchText] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [fullLoading, setFullLoading] = useState(true)\n    const [approvalOrHistoryData, setApprovalOrHistoryData] = useState([])\n    const [apiType, setApiType] = useState('approval')\n    const [page, setPage] = useState(1)\n    const filterRef = useRef()\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        // getApprovalList()\n        getApprovalOrHistoryData()\n    }, [page, searchVal, approvalFilters, sortValue, sortingOrder, apiType])\n\n    const getApprovalOrHistoryData = useCallback(() => {\n        setFullLoading(true)\n        const params = {\n            page: page,\n            filter: searchVal,\n            status: approvalFilters?.status,\n            type: approvalFilters?.type,\n            api_type: apiType,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        }\n\n        getAllApprovalListService(params)\n            .then((res) => {\n                setApprovalOrHistoryData(res?.data)\n            })\n            .finally(() => setFullLoading(false))\n    }, [\n        apiType,\n        approvalFilters?.status,\n        approvalFilters?.type,\n        page,\n        searchVal,\n        sortValue,\n        sortingOrder,\n    ])\n\n    // useEffect(() => {\n    //     const dataWithPendingStatus = approvalList?.data?.filter(\n    //         (item) => item?.status == 'Pending'\n    //     )\n\n    //     setDisplayData(dataWithPendingStatus)\n    // }, [approvalList])\n\n    // useEffect(() => {\n    //     if (showAppprovals) {\n    //         setFullLoading(true)\n    //         getApprovalHistoryService({status: approvalFilters?.status})\n    //             .then((res) => {\n    //                 setDisplayData(res?.data?.data)\n    //             })\n    //             .finally(() => setFullLoading(false))\n    //         //     const dataWithStatus = approvalList?.data?.filter(\n    //         //         (item) => item?.status != 'Pending'\n    //         //     )\n    //     } else {\n    //         const dataWithPendingStatus = approvalList?.data?.filter(\n    //             (item) => item?.status == 'Pending'\n    //         )\n    //         setDisplayData(dataWithPendingStatus)\n    //     }\n    // }, [showAppprovals, approvalFilters])\n    const handleSearchChange = (e) => {\n        setPage(1)\n        searchApproval(e.target.value)\n        setSearchText(e.target.value)\n    }\n    const searchApproval = useCallback(\n        debounce((val) => {\n            // setLoading(true)\n            setSearchVal(val)\n        }, 500),\n        []\n    )\n\n    const getApprovalList = useCallback(() => {\n        setFullLoading(true)\n\n        dispatch(\n            getApprovalListAction({page, type: approvalFilters?.type, filter: searchVal})\n        ).finally(() => {\n            setFullLoading(false)\n        })\n    }, [approvalFilters?.type, dispatch, page, searchVal])\n\n    const onExportHistoryData = useCallback(() => {\n        setFullLoading(true)\n        const body = {\n            type: approvalFilters?.type,\n            filter: searchVal,\n        }\n        exportApprovalHistoryService(body)\n            .then((res) => {\n                const fileName = `ApprovalHistory List - ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((err) => {\n                CustomToast.success(getErrorMessageFromResponse(err))\n            })\n            .finally(() => {\n                setFullLoading(false)\n            })\n    }, [approvalFilters?.type, searchVal])\n\n    const resetStates = () => {\n        setPage(1)\n        setSearchText('')\n        setSearchVal('')\n    }\n\n    const onApplyFilter = (filters) => {\n        resetStates()\n        setApprovalFilters(filters)\n    }\n    const onResetFilter = (filters) => {\n        resetStates()\n        setApprovalFilters(filters)\n    }\n    const handleApiType = (apiType) => {\n        filterRef?.current?.resetFilter()\n        onResetFilter(null)\n        setApiType(apiType)\n    }\n    return (\n        <>\n            <div\n                className={``}\n                style={{\n                    fontFamily: 'Manrope',\n\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div className='card-body py-0 px-0 mx-0' style={{position: 'relative'}}>\n                    <CustomLoader\n                        full={true}\n                        // visible={displayData?.length <= 0 && fullLoading}\n                        visible={fullLoading}\n                    />\n                    <div\n                        className='card bg-cmwhite h-auto'\n                        style={{\n                            fontSize: '14px',\n                            fontFamily: 'Manrope',\n                            borderRadius: '0 10px 10px 0',\n                        }}\n                    >\n                        <div className='w-sm-100 mt-4 mb-3'>\n                            {/* fILTER */}\n                            <div className='d-sm-flex align-items-center justify-content-between ms-sm-10 me-sm-10'>\n                                <div className='w-sm-325px w-75 mx-sm-0 mx-auto me-sm-12 py-sm-0 '>\n                                    {/* Approval Table Search Input */}\n                                    <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={handleSearchChange}\n                                        value={searchText}\n                                    />\n                                </div>\n\n                                <div className='d-flex gap-5 flex-center flex-wrap mt-sm-0 mt-5   '>\n                                    <div style={{height: '43px', overflow: 'hidden'}}>\n                                        {/* <CustomLoader\n                                            size={50}\n                                            visible={\n                                                true\n                                                // (displayData?.length > 0 && fullLoading) || loading\n                                            }\n                                        /> */}\n                                    </div>\n\n                                    <div>\n                                        {\n                                            <RequestAndApprovalFilter\n                                                initialFilter={initialFilter}\n                                                onApplyFilter={(updatedFilter) =>\n                                                    onApplyFilter(updatedFilter)\n                                                }\n                                                resetFilter={onResetFilter}\n                                                showStatusFilter={apiType == 'history'}\n                                                filterRef={filterRef}\n                                            />\n                                        }\n                                    </div>\n                                    {apiType == 'approval' ? (\n                                        <CustomButton\n                                            type='submit'\n                                            buttonType={BUTTON_TYPE.secondary}\n                                            buttonLabel={'History'}\n                                            onClick={() => handleApiType('history')}\n                                            icon='bi bi-clock-history'\n                                        />\n                                    ) : (\n                                        <CustomButton\n                                            type='submit'\n                                            buttonType={BUTTON_TYPE.secondary}\n                                            buttonLabel={'Pending Approvals'}\n                                            onClick={() => handleApiType('approval')}\n                                            icon='bi bi-clock-history'\n                                        />\n                                    )}\n\n                                    {apiType == 'history' ? (\n                                        <CustomButton\n                                            buttonType={BUTTON_TYPE.disabled}\n                                            buttonLabel='Export'\n                                            buttonSize={BUTTON_SIZE.small}\n                                            onClick={onExportHistoryData}\n                                            // padding={'py-3'}\n                                            icon={'pi pi-file-export'}\n                                        />\n                                    ) : null}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive  '>\n                        <table className='table' style={{tableLayout: 'fixed', width: '100%'}}>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300  text-cmGrey800'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '800',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='p-5' style={{width: '100px'}}>\n                                        ID\n                                    </th>\n                                    <th className=' p-5' style={{width: '200px'}}>\n                                        Employee\n                                    </th>\n                                    <th className=' p-5' style={{width: '125px'}}>\n                                        Type\n                                    </th>\n                                    <th className=' p-5' style={{width: '150px'}}>\n                                        Disputed Period\n                                    </th>\n                                    <th className=' p-5' style={{width: '200px'}}>\n                                        <div className='d-flex'>\n                                            Amount\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'amount' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('amount')\n                                                    setSortingOrder(\n                                                        sortValue !== 'amount' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                    setPage(1)\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='p-5 ' style={{width: '200px'}}>\n                                        Reason\n                                    </th>\n                                    {apiType == 'history' && (\n                                        <th className='p-5 ' style={{width: '150px'}}>\n                                            Status\n                                        </th>\n                                    )}\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {/* {fullLoading ? (\n                                    <tr>\n                                        <td colSpan='6'>\n                                            <CustomLoader\n                                                full={true}\n                                                // visible={displayData?.length <= 0 && fullLoading}\n                                                visible={fullLoading}\n                                            />\n                                        </td>\n                                    </tr>\n                                ) : null} */}\n                                {approvalOrHistoryData?.data?.length > 0 ? (\n                                    <>\n                                        {approvalOrHistoryData?.data?.map((item, i) => {\n                                            const tooltipAmount = formattedNumberFields(\n                                                item?.amount\n                                            )?.props?.children\n\n                                            return (\n                                                <tr\n                                                    key={i}\n                                                    className={`stripRow `}\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        fontFamily: 'Manrope',\n                                                    }}\n                                                >\n                                                    <td className='p-5 '>\n                                                        <Link\n                                                            to={'particular-request'}\n                                                            state={{requestData: item}}\n                                                            className='text-cmGrey800 text-decoration-underline'\n                                                            style={{fontWeight: '600'}}\n                                                        >\n                                                            {item?.req_no}\n                                                        </Link>\n                                                    </td>\n                                                    <td\n                                                        className='d-flex align-items-center text-decoration-underline gap-2  p-5 text-cmGrey800'\n                                                        style={{fontWeight: '600'}}\n                                                    >\n                                                        <RedirectToEmployeeProfile\n                                                            employeeId={item?.employee_id}\n                                                        >\n                                                            <CustomImage\n                                                                src={item?.employee_image}\n                                                                className='avatar me-3'\n                                                                style={{\n                                                                    width: '30px',\n                                                                    height: '30px',\n                                                                }}\n                                                                alt='img'\n                                                            />\n                                                            {item?.employee_name}\n                                                        </RedirectToEmployeeProfile>\n                                                    </td>\n                                                    <td\n                                                        className='p-5  text-cmGrey800'\n                                                        style={{fontWeight: '600'}}\n                                                    >\n                                                        {item?.type}\n                                                    </td>\n\n                                                    <td\n                                                        className='p-5 text-cmGrey600'\n                                                        style={{fontWeight: '500'}}\n                                                    >\n                                                        {item?.request_on}\n                                                    </td>\n\n                                                    <td\n                                                        className='p-5 text-cmGrey900'\n                                                        style={{fontWeight: '600'}}\n                                                    >\n                                                        <CustomEllipsis\n                                                            style={{\n                                                                fontFamily: fontsFamily.manrope,\n                                                                whiteSpace: 'nowrap',\n                                                                fontSize: '14px',\n                                                                width: '100px',\n                                                                fontWeight: '600',\n                                                            }}\n                                                            text={tooltipAmount}\n                                                        >\n                                                            {formattedNumberFields(\n                                                                item?.amount,\n                                                                '$'\n                                                            )}\n                                                        </CustomEllipsis>\n                                                    </td>\n                                                    <td\n                                                        className='p-5 text-cmGrey500'\n                                                        style={{fontWeight: '500'}}\n                                                    >\n                                                        {item?.description ?? '-'}\n                                                    </td>\n                                                    {apiType == 'history' && (\n                                                        <>\n                                                            <td\n                                                                className={`p-5 ${\n                                                                    item?.status === 'Approved'\n                                                                        ? 'text-cmOrange'\n                                                                        : item?.status === 'Pending'\n                                                                        ? 'text-cmOrange'\n                                                                        : item?.status ===\n                                                                          'Declined'\n                                                                        ? 'text-cmError'\n                                                                        : item?.status === 'Accept'\n                                                                        ? 'text-cminfo'\n                                                                        : item?.status === 'Paid'\n                                                                        ? 'text-cmSuccess'\n                                                                        : ''\n                                                                }`}\n                                                                style={{fontWeight: '600'}}\n                                                            >\n                                                                {item?.status === 'Approved'\n                                                                    ? 'In progress'\n                                                                    : item?.status === 'Pending'\n                                                                    ? 'Pending'\n                                                                    : item?.status === 'Declined'\n                                                                    ? 'Declined'\n                                                                    : item?.status === 'Accept'\n                                                                    ? 'Scheduled'\n                                                                    : item?.status}\n                                                            </td>\n                                                        </>\n                                                    )}\n                                                </tr>\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={apiType == 'history' ? 7 : 6}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination\n                        page={page}\n                        setPage={(changedPage) => setPage(changedPage)}\n                        totalPages={approvalOrHistoryData?.last_page}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ApprovalsTable\n","import React from 'react'\n\nconst IncentivesTable = () => {\n    return (\n        <div\n            className='mt-20 text-center text-cmGrey500'\n            style={{fontWeight: '800', fontSize: '24px'}}\n        >\n            Coming Soon...\n        </div>\n    )\n}\n\nexport default IncentivesTable\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\nimport AccessRights from '../../../../../accessRights/AccessRights'\nimport {allPermissionsAccess} from '../../../../../accessRights/useCustomAccessRights'\nimport {Badge} from '@mui/material'\nimport {useSelector} from 'react-redux'\nimport {getApprovalListSelector} from '../../../../../redux/selectors/RequestApprovalSelectors'\nimport {fontsFamily} from '../../../../../assets/fonts/fonts'\n\nconst RequestsHeader = ({showIncentive, setShowIncentive}) => {\n    const approvalList = useSelector(getApprovalListSelector)\n    const location = useLocation()\n\n    return (\n        <div\n            style={{\n                fontSize: '16px',\n                fontWeight: '800',\n                fontFamily: fontsFamily.manrope,\n                marginTop: '-20px',\n            }}\n            className='d-flex flex-nowrap gap-7 text-cmGrey500'\n        >\n            <AccessRights\n                customCondition={allPermissionsAccess.standard.requestAndApprovels.myRequests.view}\n            >\n                <Link\n                    className={`py-2 px-3 bg-cmwhite shadow\n                        ${\n                            location.pathname === '/requests/request' && 'active'\n                                ? 'text-cmBlue-Crayola '\n                                : ' text-cmGrey500'\n                        }`}\n                    to='/requests/request'\n                    style={{borderRadius: '10px 10px 0 0'}}\n                >\n                    {' '}\n                    My Requests\n                </Link>\n            </AccessRights>\n\n            <AccessRights\n                customCondition={allPermissionsAccess.standard.requestAndApprovels.approvals.view}\n            >\n                <Badge badgeContent={approvalList?.total} color='primary'>\n                    <Link\n                        className={`py-2 px-3 bg-cmwhite shadow  ${\n                            location.pathname === '/requests/approvals' && 'active'\n                                ? 'text-cmBlue-Crayola'\n                                : 'text-cmGrey500'\n                        }`}\n                        to='/requests/approvals'\n                        style={{borderRadius: '10px 10px 0 0'}}\n                    >\n                        Approvals\n                    </Link>\n                </Badge>\n            </AccessRights>\n        </div>\n    )\n}\n\nexport {RequestsHeader}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport {\n    addRequestApprovalCommentService,\n    getRequestDetailsByRequestNumberService,\n    updateStatusOfRequestService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {saveAs} from 'file-saver'\nimport {\n    getUserDataSelector,\n    isUserManagerSelector,\n    isUserSuperAdminSelector,\n} from '../../../../../../redux/selectors/AuthSelectors'\nimport {useSelector} from 'react-redux'\nimport AccessRights from '../../../../../../accessRights/AccessRights'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {getErrorMessageFromResponse, getServerImage} from '../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport QuillEditor from '../../../../common/quill/QuillEditor'\nimport CustomButton, { BUTTON_SIZE, BUTTON_TYPE } from '../../../../../../customComponents/customButtton/CustomButton'\n\nconst ParticularRequest = () => {\n    const naviagte = useNavigate()\n    const location = useLocation()\n    const userData = useSelector(getUserDataSelector)\n    const [requestData, setRequestData] = useState(location?.state?.requestData)\n    const [showEditor, setShowEditor] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [comment, setComment] = useState(null)\n    const [selectedCommentAttachment, setSelectedCommentAttachment] = useState(null)\n    const isManager = useSelector(isUserManagerSelector)\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n\n    useEffect(() => {\n        getSingleRequestData()\n    }, [])\n\n    const canApproveOrDeclineAccess = useMemo(() => {\n        return userData?.id == requestData?.manager_id || isSuperAdmin\n    }, [isSuperAdmin, requestData?.manager_id, userData?.id])\n\n    const getSingleRequestData = useCallback(() => {\n        setLoading(true)\n        getRequestDetailsByRequestNumberService(requestData?.req_no)\n            .then((res) => {\n                setRequestData({\n                    ...requestData,\n                    ...res?.data?.[0],\n                })\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [requestData])\n\n    const onUpdateStatusPress = useCallback(\n        (type) => {\n            setLoading(true)\n            updateStatusOfRequestService(requestData?.id, type)\n                .then(() => {\n                    if (type == 'Approved') CustomToast.success('Approved')\n                    else {\n                        CustomToast.success('Declined')\n                    }\n                    getSingleRequestData()\n                })\n                .catch((err) => {\n                    CustomToast.error(getErrorMessageFromResponse(err))\n                })\n                .finally(() => setLoading(false))\n        },\n        [getSingleRequestData, requestData?.id]\n    )\n\n    const handleDisputedPeriodDate = (data) => {\n        const date = data.split('to')\n        const formattedDate = `${getValidDate(date[0], 'MM/DD/YYYY')} to ${getValidDate(date[1], 'MM/DD/YYYY')}`\n        return formattedDate\n    }\n\n    const onPostComment = useCallback(() => {\n        if (comment?.length > 0) {\n            let body = {\n                request_id: requestData?.id,\n                comment,\n            }\n            if (selectedCommentAttachment) body.image = selectedCommentAttachment\n            setLoading(true)\n            addRequestApprovalCommentService(body)\n                .then(() => {\n                    setShowEditor(!showEditor)\n                    setSelectedCommentAttachment(null)\n                    setComment(null)\n                    getSingleRequestData()\n                    CustomToast.success('Reply posted')\n                })\n                .catch(() => {})\n                .finally(() => setLoading(false))\n        } else {\n            CustomToast.error('Enter comment')\n        }\n    }, [comment, getSingleRequestData, requestData?.id, selectedCommentAttachment, showEditor])\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div\n                className='bg-cmwhite shadow-sm pb-20'\n                style={{\n                    zIndex: 1,\n                    marginTop: '-15px',\n                    borderRadius: '10px',\n                    fontFamily: 'Manrope',\n                    fontSize: '14px',\n                }}\n            >\n                <div className='d-flex justify-content-between align-items-center px-sm-10 px-2 py-5'>\n                    <div className=' cursor-pointer ' onClick={() => naviagte(-1)}>\n                        <i className='bi bi-box-arrow-left fs-1 text-cmGrey600 text-hover-dark cursor-pointer'></i>\n                    </div>\n                    {requestData?.status == 'Pending' &&\n                    (isSuperAdmin || canApproveOrDeclineAccess) ? (\n                        <AccessRights customCondition={canApproveOrDeclineAccess}>\n                            <div className='d-flex flex-wrap gap-3'>\n                                <div\n                                    className='btn text-cmwhite bg-cmBlue-Crayola px-7 py-2'\n                                    style={{fontWeight: '600'}}\n                                    onClick={() => onUpdateStatusPress('Approved')}\n                                >\n                                    Approve\n                                </div>\n                                <div\n                                    className='btn text-cmError px-7 py-2'\n                                    style={{fontWeight: '600'}}\n                                    onClick={() => onUpdateStatusPress('Declined')}\n                                >\n                                    DECLINE\n                                </div>\n                            </div>\n                        </AccessRights>\n                    ) : (\n                        <div>\n                            {requestData?.status == 'Approved' ? (\n                                <span className='p-5 text-cmOrange' style={{fontWeight: '600'}}>\n                                    In Progress\n                                </span>\n                            ) : requestData?.status == 'Paid With Payroll' ? (\n                                <span className='p-5 text-cminfo' style={{fontWeight: '600'}}>\n                                    Scheduled\n                                </span>\n                            ) : requestData?.status == 'Declined' ? (\n                                <span className='p-5 text-cmError' style={{fontWeight: '600'}}>\n                                    Declined\n                                </span>\n                            ) : requestData?.status == 'Paid' ? (\n                                <span className='p-5 text-cmSuccess' style={{fontWeight: '600'}}>\n                                    Paid\n                                </span>\n                            ) : (\n                                <span className='p-5' style={{fontWeight: '600'}}>\n                                    {requestData?.status}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n                {/* Tab starts */}\n                <div style={{fontSize: '14px', fontFamily: 'Manrope'}}>\n                    <div\n                        className='bg-cmGrey300 py-5 text-cmGrey900 ps-10'\n                        style={{fontFamily: 'Manrope', fontSize: '16px', fontWeight: '600'}}\n                    >\n                        {requestData?.req_no} - {requestData?.type}\n                    </div>\n\n                    <div style={{position: 'relative'}}>\n                        <div className=''>\n                            {/* Line 1 */}\n                            <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                <div className='d-flex flex-wrap align-items-center gap-5 w-sm-50 '>\n                                    <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                        Employee Name:\n                                    </div>\n                                    <div>\n                                        <CustomImage\n                                            src={requestData?.employee_image}\n                                            className='avatar'\n                                            style={{width: '30px', height: '30px'}}\n                                            alt='img'\n                                        />\n                                    </div>\n                                    <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                        {requestData?.employee_name ?? '-'}\n                                    </div>\n                                </div>\n                                <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                                    <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                        Request ID:\n                                    </div>\n                                    <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                        {requestData?.req_no}{' '}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* Line 2 */}\n                            <div className='stripRow py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                                    <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                        Office Location:\n                                    </div>\n                                    <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                        {requestData?.office_name ?? '-'}\n                                    </div>\n                                </div>\n                                <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                                    <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                        Request Date:\n                                    </div>\n                                    <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                        {requestData?.request_on ?? '-'}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* Payroll Dispute */}\n                            {requestData?.type_id == 1 && (\n                                <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Disputed Amount:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                            $ {requestData?.amount ?? 0}\n                                        </div>\n                                    </div>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                                        <div\n                                            className='text-cmGrey800 text-nowrap'\n                                            style={{fontWeight: '700'}}\n                                        >\n                                            Disputed Period:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                            {handleDisputedPeriodDate(requestData?.pay_period)}\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                            <div className='stripRow py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                {requestData?.type_id == 1 && (\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Dispute Type:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                            {requestData?.dispute_type}\n                                        </div>\n                                    </div>\n                                )}\n                                {requestData?.getPid?.length > 0 ? (\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Customer PID:\n                                        </div>\n                                        <div\n                                            className='text-cmGrey900 text-decoration-underline'\n                                            style={{fontWeight: '600'}}\n                                        >\n                                            {requestData?.getPid?.map((item) => (\n                                                <ul style={{listStyleType: 'none'}}>\n                                                    <li>\n                                                        <span className='me-2 '>\n                                                            {item?.pid ?? '-'}\n                                                        </span>{' '}\n                                                        <span>{item?.customer_name ?? '-'}</span>\n                                                    </li>\n                                                </ul>\n                                            ))}\n                                        </div>\n                                    </div>\n                                ) : null}\n                            </div>\n\n                            {/* Reimbursement */}\n                            {requestData?.type_id == 2 && (\n                                <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Amount:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                            $ {requestData?.amount ?? 0}\n                                        </div>\n                                    </div>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Cost Date:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                            {getValidDate(requestData?.cost_date) ?? '-'}\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                            {requestData?.type_id == 2 && (\n                                <div className='stripRow py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Cost Head:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                            {requestData?.cost_head ?? '-'}\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* Advance */}\n                            {requestData?.type_id == 4 && (\n                                <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Amount:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                            $ {requestData?.amount ?? 0}\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                            {/* Line 4 */}\n                            {/* Fine / Fee */}\n                            {[3, 5, 6]?.includes(requestData?.type_id) && (\n                                <div className='bg-cmWhite py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Amount:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                            $ {requestData?.amount ?? 0}\n                                        </div>\n                                    </div>\n                                    <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Date:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                            {getValidDate(requestData?.request_date) ?? '-'}\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* Line 5 */}\n                            {requestData?.pay_period_from && requestData?.pay_period_to ? (\n                                <div\n                                    className={`py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5 ${\n                                        [3, 4, 5, 6].includes(requestData?.type_id)\n                                            ? 'bg-strip'\n                                            : 'bg-white'\n                                    }`}\n                                >\n                                    <div className='d-flex flex-wrap gap-5 '>\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Pay Period:\n                                        </div>\n                                        <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                            {requestData?.pay_period_from\n                                                ? getValidDate(requestData?.pay_period_from)\n                                                : '-'}{' '}\n                                            -\n                                            {requestData?.pay_period_to\n                                                ? getValidDate(requestData?.pay_period_to)\n                                                : '-'}\n                                        </div>\n                                    </div>\n                                </div>\n                            ) : null}\n\n                            {/* Line 5 */}\n                            <div\n                                className={`py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5 ${\n                                    [3, 4, 5, 6].includes(requestData?.type_id)\n                                        ? 'bg-strip'\n                                        : 'bg-white'\n                                }`}\n                            >\n                                <div className='d-flex flex-wrap gap-5 '>\n                                    <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                        Description:\n                                    </div>\n                                    <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                        {requestData?.description}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div\n                                className={`py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5 ${\n                                    ![3, 4, 5, 6].includes(requestData?.type_id)\n                                        ? 'bg-strip'\n                                        : 'bg-white'\n                                }`}\n                            >\n                                <div className='d-flex flex-wrap gap-5 '>\n                                    <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                        Attachments:\n                                    </div>\n                                    <div\n                                        className='text-cmGrey900'\n                                        style={{fontWeight: '700', cursor: 'pointer'}}\n                                        onClick={() => {\n                                            const fileName = requestData?.image?.split('/')?.[1]\n                                            saveAs(getServerImage(requestData?.image), fileName)\n                                        }}\n                                    >\n                                        {requestData?.image ?? '-'}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* Line 6 */}\n                            {/* <div className='bg-strip py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5'>\n                    <table className='table table-borderless  w-sm-25' style={{fontSize: '14px'}}>\n                    <tr className=''>\n                        <td className='text-cmGrey800 py-1' style={{fontWeight: 700}}>\n                        Attachments:\n                        </td>\n                        <td\n                        className='text-cmGrey900 text-decoration-underline py-1'\n                        style={{fontWeight: 700}}\n                        >\n                        Screenshot.jpg\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td\n                        className='text-cmGrey900 text-decoration-underline py-1'\n                        style={{fontWeight: 700}}\n                        >\n                        Bills.jpg\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td\n                        className='text-cmGrey900 text-decoration-underline py-1'\n                        style={{fontWeight: 700}}\n                        >\n                        M1missing.jpg\n                        </td>\n                    </tr>\n                    </table>\n                </div> */}\n\n                            {/* Line 8 */}\n                            <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5'>\n                                <div className='d-flex flex-wrap gap-5 '>\n                                    <div\n                                        className='text-cmGrey500'\n                                        style={{fontWeight: 'bolder', fontSize: 16}}\n                                    >\n                                        Comments\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{width: '100%'}}>\n                                {requestData?.comments?.length > 0 ? (\n                                    <>\n                                        {requestData?.comments?.map((item) => (\n                                            <div\n                                                className='bg-cmwhite py-1 text-cmGrey900 px-sm-20 px-sm-0 px-5 mb-5'\n                                                key={item?.id}\n                                            >\n                                                <div className='d-flex flex-wrap gap-5 align-items-center '>\n                                                    <div className='d-flex flex-wrap gap-3'>\n                                                        <div>\n                                                            <CustomImage\n                                                                src={item?.user_image}\n                                                                className='avatar'\n                                                                style={{\n                                                                    width: '30px',\n                                                                    height: '30px',\n                                                                }}\n                                                            />\n                                                        </div>\n\n                                                        <div\n                                                            className='text-cmGrey800'\n                                                            style={{\n                                                                fontWeight: '700',\n                                                                fontSize: 16,\n                                                            }}\n                                                        >\n                                                            {item?.user_name}:\n                                                        </div>\n\n                                                        <div>\n                                                            <div\n                                                                style={{\n                                                                    display: 'flex',\n                                                                    alignSelf: 'center',\n                                                                }}\n                                                                dangerouslySetInnerHTML={{\n                                                                    __html: item?.comment,\n                                                                }}\n                                                            />\n\n                                                            <div\n                                                                className='text-cmGrey900 text-hover-primary  text-decoration-underline'\n                                                                style={{\n                                                                    cursor: 'pointer',\n                                                                    fontWeight: '700',\n                                                                }}\n                                                                onClick={() => {\n                                                                    const fileName =\n                                                                        item?.image?.split('/')?.[1]\n                                                                    saveAs(\n                                                                        getServerImage(item?.image),\n                                                                        fileName\n                                                                    )\n                                                                }}\n                                                            >\n                                                                {item?.image && (\n                                                                    <span className='bi bi-paperclip fs-4 text-cmBlue-Crayola' />\n                                                                )}\n                                                                {item?.image ?? '-'}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <p\n                                        className='text-cmGrey500'\n                                        style={{\n                                            width: '100%',\n                                            marginLeft: '10%',\n                                            fontFamily: 'Manrope',\n                                            fontWeight: '500',\n                                            fontSize: 14,\n                                            padding: 10,\n                                        }}\n                                    >\n                                        No comments found\n                                    </p>\n                                )}\n                            </div>\n                            {/* line 9 */}\n                            {showEditor && (\n                                <div>\n                                    <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5 mb-5'>\n                                        <div className='d-flex flex-wrap gap-5 '>\n                                            <div\n                                                className='text-cmGrey500'\n                                                style={{fontWeight: 'bolder', fontSize: 16}}\n                                            >\n                                                Add Reply\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=' px-sm-20 px-5  d-sm-flex' style={{zIndex: 0}}>\n                                        <div className='d-flex  mb-sm-0 mb-2 gap-3'>\n                                            <div>\n                                                <CustomImage\n                                                    src={userData?.image}\n                                                    className='avatar'\n                                                    style={{width: '30px', height: '30px'}}\n                                                />\n                                            </div>\n                                            <div\n                                                className='text-cmGrey800'\n                                                style={{fontWeight: '700', fontSize: 16}}\n                                            >\n                                                {userData?.first_name ?? ''}:&nbsp;&nbsp;\n                                            </div>\n                                        </div>\n\n                                        <div className='w-sm-75 w-100'>\n                                            <QuillEditor\n                                                value={comment}\n                                                setValue={(val) => {\n                                                    setComment(val)\n                                                }}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div\n                                        style={{\n                                            width: '50%',\n                                            marginLeft: '17%',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                        }} className='mt-5'\n                                    >\n                                        <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                            Attachment:&nbsp;&nbsp;\n                                        </div>\n                                        <input\n                                            type='file'\n                                            className='form-control'\n                                            placeholder='Select file'\n                                            onChange={(e) => {\n                                                setSelectedCommentAttachment(e?.target?.files?.[0])\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* Line 10 */}\n                            {requestData?.status == 'Pending' ? (\n                                <div className='mt-5 text-center'>\n                                    {!showEditor && (\n                                        <div\n                                            className='btn text-cmwhite bg-cmBlue-Crayola px-10 py-2'\n                                            style={{fontWeight: '600'}}\n                                            onClick={() => setShowEditor(!showEditor)}\n                                        >\n                                            Add Reply\n                                        </div>\n                                    )}\n                                    {showEditor && (\n                                        <div className='d-flex justify-content-center flex-wrap gap-5'>\n                                            <CustomButton\n                                                type='submit'\n                                                buttonType={BUTTON_TYPE.error}\n                                                buttonSize={BUTTON_SIZE.small}\n                                                buttonLabel={'Cancel'}\n                                                onClick={() => setShowEditor(!showEditor)}\n                                            />\n                                            <div\n                                                className='btn text-cmwhite bg-cmBlue-Crayola px-10 py-2'\n                                                style={{fontWeight: '600'}}\n                                                onClick={onPostComment}\n                                            >\n                                                Post Reply\n                                            </div>\n                                            {/* <div\n                        className='btn text-cmGrey600 bg-cmGrey200 px-10 py-2'\n                        style={{fontWeight: '600'}}\n                        >\n                        <i className='bi bi-paperclip text-cmGrey600 '></i>\n                        Attach File\n                        </div> */}\n                                        </div>\n                                    )}\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                {/* Tab ends */}\n            </div>\n        </div>\n    )\n}\n\nexport default ParticularRequest\n","import React from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\n\nconst ParticularApprovalHistory = () => {\n    const naviagte = useNavigate()\n    return (\n        <div\n            className='bg-cmwhite pb-20'\n            style={{\n                marginTop: '-15px',\n                borderRadius: '0 10px 10px 10px',\n                fontFamily: 'Manrope',\n                fontSize: '14px',\n            }}\n        >\n            <div className='ps-10 py-5 cursor-pointer ' onClick={() => naviagte(-1)}>\n                <i className='bi bi-box-arrow-left fs-1 text-cmGrey600 text-hover-dark cursor-pointer'></i>\n            </div>\n            {/* Tab starts */}\n            <div style={{fontSize: '14px', fontFamily: 'Manrope'}}>\n                <div\n                    className='bg-cmGrey300 py-5 text-cmGrey900 ps-10'\n                    style={{fontFamily: 'Manrope', fontSize: '16px', fontWeight: '600'}}\n                >\n                    PD001 -Payroll Dispute\n                </div>\n\n                <div className=''>\n                    {/* Line 1 */}\n                    <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                        <div className='d-flex flex-wrap align-items-center gap-5 w-sm-50 '>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Employee Name:\n                            </div>\n                            <div>\n                                <img\n                                    src={toAbsoluteUrl('/media/avatars/300-1.jpg')}\n                                    className='avatar'\n                                    style={{width: '30px', height: '30px'}}\n                                    alt='img'\n                                />\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                Adan Lauzon\n                            </div>\n                        </div>\n                        <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Request ID:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                PD001{' '}\n                            </div>\n                        </div>\n                    </div>\n                    {/* Line 2 */}\n                    <div className='stripRow py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                        <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Office Location:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                Tennessee\n                            </div>\n                        </div>\n                        <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Request Date:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                08/10/2022\n                            </div>\n                        </div>\n                    </div>\n                    {/* Line 3 */}\n                    <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                        <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Disputed Amount:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                $ 1,840\n                            </div>\n                        </div>\n                        <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                            <div className='text-cmGrey800 text-nowrap' style={{fontWeight: '700'}}>\n                                Disputed Period:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                12/12/2022\n                            </div>\n                        </div>\n                    </div>\n                    {/* Line 4 */}\n                    <div className='stripRow py-5 text-cmGrey900 px-sm-20 d-flex flex-wrap px-sm-0 px-5'>\n                        <div className='d-flex flex-wrap gap-5 w-sm-50 '>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Dispute Over:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                M1 Payment\n                            </div>\n                        </div>\n                        <div className='d-flex flex-wrap gap-5 w-sm-50'>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Customer PID:\n                            </div>\n                            <div\n                                className='text-cmGrey900 text-decoration-underline'\n                                style={{fontWeight: '600'}}\n                            >\n                                <span className='me-2 '>T7290</span> <span>Jennifer Brown</span>\n                            </div>\n                        </div>\n                    </div>\n                    {/* Line 5 */}\n                    <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5'>\n                        <div className='d-flex flex-wrap gap-5 '>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Description:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                Jennifer Brown Missing M1 Payment. Please Check\n                            </div>\n                        </div>\n                    </div>\n                    {/* Line 6 */}\n                    <div className='stripRow py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5'>\n                        <table\n                            className='table table-borderless  w-sm-25'\n                            style={{fontSize: '14px'}}\n                        >\n                            <tr className=''>\n                                <td className='text-cmGrey800 py-1' style={{fontWeight: 700}}>\n                                    Attachments:\n                                </td>\n                                <td\n                                    className='text-cmGrey900 text-decoration-underline py-1'\n                                    style={{fontWeight: 700}}\n                                >\n                                    Screenshot.jpg\n                                </td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td\n                                    className='text-cmGrey900 text-decoration-underline py-1'\n                                    style={{fontWeight: 700}}\n                                >\n                                    Bills.jpg\n                                </td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td\n                                    className='text-cmGrey900 text-decoration-underline py-1'\n                                    style={{fontWeight: 700}}\n                                >\n                                    M1missing.jpg\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                    {/* Line 7 */}\n                    <div className='bg-cmwhite py-5 text-cmGrey900 px-sm-20 px-sm-0 px-5'>\n                        <div className='d-flex flex-wrap gap-5 '>\n                            <div className='text-cmGrey800' style={{fontWeight: '700'}}>\n                                Notes:\n                            </div>\n                            <div className='text-cmGrey900' style={{fontWeight: '700'}}>\n                                To come....\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* Tab ends */}\n        </div>\n    )\n}\n\nexport default ParticularApprovalHistory\n","import {useState, useEffect} from 'react'\nimport {Navigate, Routes, Route, Outlet} from 'react-router-dom'\nimport {PageTitle} from '../../../../_metronic/layout/core'\nimport ApprovalsTable from './components/ApprovalsTable'\nimport IncentivesTable from './components/IncentivesTable'\nimport {RequestsHeader} from './components/RequestsHeader'\nimport RequestsTable from './components/RequestsTable'\nimport {useLocation} from 'react-router-dom'\nimport ParticularRequest from './components/particularRequest/ParticularRequest'\nimport ParticularApprovalHistory from './components/particularRequest/ParticularApprovalHistory'\nimport AccessRights from '../../../../accessRights/AccessRights'\nimport {getPayFrequencySettingAction} from '../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\nimport {getApprovalListAction} from '../../../../redux/actions/RequestApprovalActions'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard /',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst RequestsPage = () => {\n    const location = useLocation()\n    const [showIncentive, setShowIncentive] = useState(false)\n\n    const [requestFilters, setRequestFilters] = useState(null)\n    const [approvalFilters, setApprovalFilters] = useState(null)\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getPayFrequencySettingAction())\n        dispatch(getApprovalListAction({page: 1, api_type: 'approval', filter: ''}))\n    }, [])\n\n    return (\n        <div className='px-sm-10'>\n            <Routes>\n                <Route\n                    element={\n                        <>\n                            {!location.pathname.includes('particular') && (\n                                <RequestsHeader\n                                    showIncentive={showIncentive}\n                                    setShowIncentive={setShowIncentive}\n                                />\n                            )}\n                            <Outlet />\n                        </>\n                    }\n                >\n                    <Route\n                        path='request'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Requests</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.requestAndApprovels.myRequests\n                                            .view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <RequestsTable\n                                        setRequestFilters={setRequestFilters}\n                                        requestFilters={requestFilters}\n                                    />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='approvals'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Approvals</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.standard.requestAndApprovels.approvals\n                                            .view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <ApprovalsTable\n                                        setApprovalFilters={setApprovalFilters}\n                                        approvalFilters={approvalFilters}\n                                    />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='Incentives'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Incentives</PageTitle>\n                                <IncentivesTable />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='approvals/particular-request'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Approvals</PageTitle>\n                                <ParticularRequest />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='request/particular-request'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Requests</PageTitle>\n                                <ParticularRequest />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='approvals/particular-request-history'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Approvals</PageTitle>\n                                <ParticularApprovalHistory />\n                            </>\n                        }\n                    />\n\n                    <Route index element={<Navigate to='/dashboard' />} />\n                </Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default RequestsPage\n","import {useCallback, useEffect, useRef, useState} from 'react'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport CustomLoader from '../../customLoader/CustomLoader'\nimport _ from 'lodash'\nimport CustomInput, {INPUT_TYPE} from '../customInput/CustomInput'\n\nconst CustomSearchInput = ({\n    zIndex = 10,\n    onSearch,\n    onSelectValue = () => {},\n    selectedValue = '',\n    display_field_name = 'name',\n    placeholder = 'Who hired this Person',\n    style,\n    errorMessage = '',\n    customEmptyMessage = 'No Data Found',\n}) => {\n    const searchTextInputRef = useRef(null)\n    const mainInputRef = useRef(null)\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [searchText, setSearchText] = useState('')\n    const [openSearchList, setOpenSearchList] = useState(false)\n\n    useEffect(() => {\n        if (!searchText) {\n            setData([])\n        }\n    }, [searchText])\n\n    const searchFunc = useCallback(\n        _.debounce((e) => {\n            setSearchText(e?.target?.value)\n            setLoading(true)\n            onSearch(e?.target?.value)\n                .then(setData)\n                .finally(() => setLoading(false))\n        }, 500),\n        []\n    )\n\n    useEffect(() => {\n        if (openSearchList) searchTextInputRef?.current?.focus()\n        else {\n            setSearchText('')\n            setData([])\n        }\n    }, [openSearchList])\n\n    const onOptionPress = useCallback(\n        (item) => {\n            onSelectValue(item)\n            setOpenSearchList(false)\n        },\n        [onSelectValue]\n    )\n\n    const onInputBlur = useCallback(() => {\n        setTimeout(() => {\n            setOpenSearchList(false)\n        }, 300)\n    }, [])\n\n    const onInputClick = useCallback(() => {\n        setOpenSearchList((val) => !val)\n    }, [])\n\n    return (\n        <div style={{width: '100%', zIndex}}>\n            <div style={{width: '100%'}}>\n                <input\n                    autoComplete='off'\n                    ref={mainInputRef}\n                    readOnly\n                    type='search'\n                    value={selectedValue ?? ''}\n                    onClick={onInputClick}\n                    style={{\n                        background: '#FAFAFA',\n                        fontWeight: 600,\n                        color: '#424242',\n                        fontSize: '14px',\n                        width: '100%',\n                        ...style,\n                    }}\n                    name='input'\n                    placeholder={placeholder}\n                    className={`form-select p-3 h-50px form-select-black form-select-sm ${\n                        errorMessage ? 'border-cmError' : ''\n                    }`}\n                />\n            </div>\n            <div\n                className='p-error ms-2 text-cmError'\n                style={{fontSize: '12px', fontWeight: 600, fontFamily: 'Manrope'}}\n            >\n                {errorMessage}\n            </div>\n            {openSearchList && (\n                <div\n                    className='d-flex justify-content-center'\n                    style={{width: '100%', position: 'relative'}}\n                >\n                    <div\n                        className='shadow bg-white'\n                        style={{\n                            position: 'absolute',\n                            width: '100%',\n                            zIndex,\n                            background: 'green',\n                            borderTopLeftRadius: 0,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 10,\n                            borderBottomLeftRadius: 10,\n                            fontWeight: 600,\n                        }}\n                    >\n                        <div>\n                            <div className='' style={{width: '100%'}}>\n                                <div className='mb-1 mx-auto py-3'>\n                                    {/* <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={searchFunc}\n                                        ref={searchTextInputRef}\n                                        onBlur={onInputBlur}\n                                        value={searchText}\n                                    /> */}\n                                    <KTSVG\n                                        path='/media/icons/duotune/general/gen021.svg'\n                                        className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute mt-6 ms-3 translate-middle-y'\n                                    />\n\n                                    <input\n                                        autoComplete='off'\n                                        ref={searchTextInputRef}\n                                        onBlur={onInputBlur}\n                                        type='search'\n                                        style={{\n                                            background: 'white',\n                                            border: 'none',\n                                            width: '100%',\n                                        }}\n                                        onChange={searchFunc}\n                                        className='form-control form-control-solid px-12 '\n                                        name='search'\n                                        placeholder='Search...'\n                                    />\n                                </div>\n                                <div\n                                    style={{\n                                        border: '0.5px solid #E0E0E0',\n                                        width: '100%',\n                                        marginTop: '-5px',\n                                    }}\n                                ></div>\n                            </div>\n                            <div\n                                className='my-4 '\n                                style={{\n                                    width: '100%',\n                                    overflowY: 'scroll',\n                                }}\n                            >\n                                <CustomLoader visible={loading} opacity={0} />\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    {!loading && searchText && data?.length <= 0 && (\n                                        <span\n                                            className='text-cmGrey300'\n                                            style={{\n                                                fontSize: 14,\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            {customEmptyMessage}\n                                        </span>\n                                    )}\n                                    {!loading && !searchText && (\n                                        <span className='text-cmGrey500'>Please search</span>\n                                    )}\n                                </div>\n                                <div\n                                    style={{\n                                        maxHeight: 200,\n                                    }}\n                                >\n                                    {!loading &&\n                                        searchText &&\n                                        data.map((item, index) => {\n                                            return (\n                                                <div\n                                                    key={index}\n                                                    className='d-flex flex-row'\n                                                    style={{\n                                                        paddingLeft: 15,\n                                                        paddingRight: 15,\n                                                        border: '2px solid lightgrey',\n                                                        borderTopWidth: 0,\n                                                        borderBottomWidth:\n                                                            data?.length - 1 == index ? 0 : 2,\n                                                        borderLeftWidth: 0,\n                                                        borderRightWidth: 0,\n                                                        width: '100%',\n                                                        height: '100%',\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={() => {\n                                                        onOptionPress(item)\n                                                    }}\n                                                >\n                                                    <div\n                                                        style={{\n                                                            fontFmaily: 'Manrope ms-10 mt-5',\n                                                            fontWeight: '600',\n                                                            fontSize: '14px',\n                                                            width: '100%',\n                                                            height: '100%',\n                                                        }}\n                                                    >\n                                                        <p className='mt-2'>\n                                                            {item?.[display_field_name]}\n                                                        </p>\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default CustomSearchInput\n","import React, {useCallback, useRef} from 'react'\nimport {OverlayPanel} from 'primereact/overlaypanel'\n\nconst CustomOverlayPanel = ({templateData = null, showIcon = true, hovertemplate = null}) => {\n    const overlayPanelRef = useRef(null)\n\n    const onEnterButtonPress = useCallback((e) => {\n        overlayPanelRef.current.toggle(e)\n    }, [])\n\n    const onLeaveButton = useCallback((e) => {\n        overlayPanelRef?.current?.hide()\n    }, [])\n\n    return (\n        <div className=''>\n            <span\n                className={`${showIcon ? 'bi bi-info-circle' : null} cursor-pointer`}\n                // onClick={onEnterButtonPress}\n                onMouseOver={onEnterButtonPress}\n                onMouseLeave={onLeaveButton}\n            >\n                {hovertemplate}\n            </span>\n\n            <OverlayPanel ref={overlayPanelRef} style={{width: '360px'}} dismissable>\n                {templateData}\n            </OverlayPanel>\n        </div>\n    )\n}\n\nexport default CustomOverlayPanel\n","import {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isUserManagerSelector, isUserSuperAdminSelector} from '../../redux/selectors/AuthSelectors'\n\nconst RedirectToEmployeeProfile = ({\n    employeeId = null,\n    children,\n    underline = true,\n    className = null,\n    style = null,\n    target = '_self',\n}) => {\n    const isSuperAdmin = useSelector(isUserSuperAdminSelector)\n    const isManager = useSelector(isUserManagerSelector)\n\n    const hasAccess = employeeId && (isSuperAdmin || isManager)\n    return (\n        <Link\n            to={hasAccess ? `/user/personal-info?employeeId=${employeeId}` : ''}\n            target={''}\n            state={{\n                employee_id: employeeId,\n            }}\n            style={{\n                pointerEvents: hasAccess ? 'auto' : 'none',\n            }}\n        >\n            <span\n                className={`${hasAccess ? 'cursor-pointer' : ''} text-cmGrey800 d-flex align-items-center ${className}`}\n                style={{\n                    fontWeight: 700,\n                    ...(hasAccess && underline ? {textDecoration: 'underline'} : null),\n                    ...style, \n                }}\n            >\n                {children}\n            </span>\n        </Link>\n    )\n}\n\nexport default RedirectToEmployeeProfile\n","import {useCallback, useMemo, useState} from 'react'\n\nconst useFilterButton = (initialFilter, onApplyFilter, onResetFilter) => {\n    const [storedFilteredData, setStoredFilteredData] = useState(initialFilter)\n    const [filterData, setFilterData] = useState(initialFilter)\n\n    const onApplyClick = useCallback(() => {\n        onApplyFilter(filterData)\n        setStoredFilteredData(filterData)\n    }, [filterData, onApplyFilter])\n\n    const onResetClick = useCallback(() => {\n        onResetFilter()\n        setFilterData(initialFilter)\n        onApplyFilter(initialFilter)\n        setStoredFilteredData(storedFilteredData)\n    }, [initialFilter, onApplyFilter, onResetFilter, storedFilteredData])\n\n    const onCancelClick = useCallback(() => {\n        setFilterData(storedFilteredData)\n    }, [storedFilteredData])\n\n    const filterProps = useMemo(\n        () => ({\n            onApplyClick,\n            onResetClick,\n            onCancelClick,\n        }),\n        [onApplyClick, onCancelClick, onResetClick]\n    )\n\n    return [filterProps, filterData, setFilterData]\n}\n\nexport default useFilterButton\n","import {useEffect, useMemo, useState} from 'react'\nimport {useSelector} from 'react-redux'\n\nimport {\n    getMonthlyPayPeriodSelector,\n    getPayFrequencySettingSelector,\n    getWeeklyPayPeriodSelector,\n} from '../redux/selectors/SettingsSelectors'\nimport {getValidDate} from '../constants/constants'\nimport {getMonthlyPayPeriodAction, getWeeklyPayPeriodAction} from '../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {\n    getAllMonthlyPayPeriodService,\n    getAllWeeklyPayPeriodService,\n    getMonthlyExecutedPayPeriodService,\n    getWeeklyExecutedPayPeriodService,\n} from '../services/Services'\n\nconst usePayFrequency = () => {\n    const [selectedWeekData, setSelectedWeekData] = useState(null)\n    const getPayFrequencyData = useSelector(getPayFrequencySettingSelector)\n    const weeklyPayPeriod = useSelector(getWeeklyPayPeriodSelector)\n    const monthlyPayPeriodList = useSelector(getMonthlyPayPeriodSelector)\n    const [payPeriodList, setPagePayPeriodList] = useState([])\n    const [executedPayPeriodList, setExecutedPayPeriodList] = useState([])\n    const [allPayPeriodList, setAllPayPeriodList] = useState([])\n\n    const [selectedPayPeriod, setSelectedPayPeriod] = useState(null)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getWeeklyPayPeriodAction())\n        dispatch(getMonthlyPayPeriodAction())\n    }, [])\n\n    // Set Present Pay Period\n    useEffect(() => {\n        if (payPeriodList?.length > 0) {\n            let presentPeriod = payPeriodList?.find(\n                (item) =>\n                    getValidDate(item?.pay_period_from, 'YYYY-MM-DD 00:00', true) <=\n                        getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) &&\n                    getValidDate(new Date(), 'YYYY-MM-DD 00:00', true) <=\n                        getValidDate(item?.pay_period_to, 'YYYY-MM-DD 00:00', true)\n            )\n            if (presentPeriod) {\n                setSelectedPayPeriod(presentPeriod?.id)\n            } else setSelectedPayPeriod(payPeriodList?.[0]?.id)\n        }\n    }, [payPeriodList])\n\n    //Return the list of current payPeriod\n    const currentPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            payPeriodList?.length > 0\n                ? payPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [selectedPayPeriod, payPeriodList])\n\n    const currentPayPeriodFromAllPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            allPayPeriodList?.length > 0\n                ? allPayPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [allPayPeriodList, selectedPayPeriod])\n\n    const executedCurrentPayPeriod = useMemo(() => {\n        const currPayPeriod =\n            executedPayPeriodList?.length > 0\n                ? executedPayPeriodList?.find((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriod\n    }, [selectedPayPeriod, executedPayPeriodList])\n\n    //Return the list of next payPeriod\n    const nextPayPeriod = useMemo(() => {\n        const currPayPeriodIndex =\n            payPeriodList?.length > 0\n                ? payPeriodList?.findIndex((item) => item?.id == selectedPayPeriod)\n                : null\n        return currPayPeriodIndex > -1 ? payPeriodList?.[currPayPeriodIndex + 1] : null\n    }, [selectedPayPeriod, payPeriodList])\n\n    //Return the list of executed pay period\n    const pastPayPeriodList = useMemo(() => {\n        return payPeriodList?.filter((item) => item?.execute)\n    }, [payPeriodList])\n\n    useEffect(() => {\n        if (selectedWeekData == 'Weekly') {\n            getWeeklyExecutedPayPeriodService().then((res) => {\n                setExecutedPayPeriodList(res.data)\n            })\n            getAllWeeklyPayPeriodService().then((res) => {\n                setAllPayPeriodList(res.data)\n            })\n        } else if (selectedWeekData == 'Monthly') {\n            getMonthlyExecutedPayPeriodService().then((res) => {\n                setExecutedPayPeriodList(res.data)\n            })\n            getAllMonthlyPayPeriodService().then((res) => {\n                setAllPayPeriodList(res.data)\n            })\n        }\n    }, [selectedWeekData])\n\n    //Handle Frequency type change\n    const handleSelectedWeekData = (weekType) => {\n        let data = getPayFrequencyData?.filter((item) => item?.frequency_type_name == weekType)\n        setSelectedWeekData(data[0]?.frequency_type_name)\n    }\n\n    //Create dropdown list of payFrequency type that is enabled\n    const weekDropdownList = useMemo(() => {\n        let weekName = []\n        getPayFrequencyData?.map((item, index) => {\n            // if (item.status && index != 0) {\n            if (item.status) {\n                weekName.push({...item, name: item?.frequency_type_name})\n            }\n        })\n        return weekName\n    }, [getPayFrequencyData])\n\n    //Changes pay period list according to the selected pay frequency type\n    useEffect(() => {\n        if (selectedWeekData == 'Weekly') {\n            setPagePayPeriodList(weeklyPayPeriod)\n        } else if (selectedWeekData == 'Monthly') {\n            setPagePayPeriodList(monthlyPayPeriodList)\n        } else {\n            setPagePayPeriodList([])\n        }\n    }, [selectedWeekData, weeklyPayPeriod, monthlyPayPeriodList])\n\n    useEffect(() => {\n        if (weekDropdownList?.length > 0) {\n            setSelectedWeekData(weekDropdownList?.[0]?.frequency_type_name)\n        }\n    }, [weekDropdownList])\n\n    return {\n        weekDropdownList,\n        payPeriodList,\n        allPayPeriodList,\n        handleSelectedWeekData,\n        selectedPayPeriod,\n        currentPayPeriod,\n        currentPayPeriodFromAllPayPeriod,\n        nextPayPeriod,\n        setSelectedPayPeriod,\n        selectedWeekData,\n        monthlyPayPeriodList,\n        setSelectedWeekData,\n        pastPayPeriodList,\n        executedPayPeriodList,\n        executedCurrentPayPeriod,\n        weeklyPayPeriod,\n    }\n}\n\nexport default usePayFrequency\n"],"names":["CustomSortSvg","_ref","className","onClick","sortingOrder","_jsxs","children","_jsx","class","Quill","htmlEditButton","BlotFormatter","CustomImageSpec","ImageSpec","getActions","AlignAction","DeleteAction","ResizeAction","alignClass","backgroundClass","colorClass","directionClass","fontClass","sizeClass","Font","whitelist","Size","modules","toolbar","container","handlers","blotFormatter","specs","history","delay","maxStack","userOnly","debug","syntax","formats","QuillToolbar","id","defaultValue","value","selected","setValue","placeholder","style","quillRef","_Fragment","ReactQuill","ref","theme","onChange","bounds","getAdjustmentTypeSelector","state","_state$requestApprova","_state$requestApprova2","_state$requestApprova3","_state$requestApprova4","isManager","isUserManagerSelector","isAdmin","isUserSuperAdminSelector","requestApproval","adjustmentType","filter","item","getApprovalListSelector","_state$requestApprova5","_state$requestApprova6","approvalList","getApprovalListAction","page","arguments","length","undefined","type","dispatch","Promise","resolve","reject","getAllApprovalListService","then","res","sendDataToReducer","SET_APPROVAL_LIST","data","catch","error","modalsRoot","document","getElementById","body","FIELD_KEYS","RequestsPop","_requestData$user_id2","_requestData$user_id5","_requestData$user_id6","show","handleClose","useDispatch","adjustmentTypeList","useSelector","userData","getUserDataSelector","isSuperAdmin","pidList","setPidList","useState","costCenterList","getParentChildCostCenterSelector","loading","setLoading","positionId","setPositionId","sub_position_id","requestData","setRequestData","adjustment_type_id","pay_period","dispute_type","customer_pid","description","cost_tracking_id","emi","cost_date","amount","user_id","request_date","image","selectedPids","setSelectedPids","handleSelectedWeekData","executedPayPeriodList","usePayFrequency","useEffect","getParentChildCostCenterAction","_requestData$user_id","getPidByUserService","pidListobject","map","i","name","finally","_requestData$user_id3","getPositionByIdService","_res$data$","frequency_type_name","onSubmitPress","useCallback","_requestData$user_id4","_body","passPindintoString","join","CustomToast","_body2","_body3","_body4","_body5","_body6","_body7","getValidDate","_body8","_body9","_body10","_body11","includes","Number","_body12","_body13","_body14","formData","jsonToFormData","addRequestService","updateRequestData","field","val","onChangeInputData","e","_e$target","_e$target2","target","onChangeFileData","_e$target3","_e$target4","_e$target4$files","files","onSeachRecruiter","searchText","getRecuiterFilterService","_res$data","concat","first_name","last_name","onSelectEmployee","_value$position_detai","position_detail","onSelectPids","periodList","useMemo","period","pay_period_from","pay_period_to","costCenterListWithChilds","_item$chields","_item$chields2","push","disabled","chields","subItem","createPortal","CustomModal","title","onHide","position","CustomLoader","visible","loaderPosition","full","size","action","fontFamily","CustomDropdown","label","required","options","valueKey","searching","showClear","fontSize","fontWeight","CustomSearchInput","onSearch","onSelectValue","selectedValue","CustomAutoCompleteDropdown","selectedOptions","displayKey","CustomInput","INPUT_TYPE","PAYROLL_DISPUTE_LIST","CustomDatePicker","inputClassName","mode","for","Date","CustomButton","buttonType","BUTTON_TYPE","buttonLabel","initialFilter","status","STATUS_DROPDOWN_VALUES","_displayData$data","_displayData$data2","_displayData$data3","setRequestFilters","requestFilters","showCreateRequestModal","setShowCreateRequestModa","useRef","setSearchText","searchVal","setSearchVal","fullLoading","setFullLoading","tableLoading","setTableLoading","displayData","setDisplayData","setPage","sortValue","setSortValue","setSortingOrder","getAdjustmentTypeListService","SET_ADJUSTMENT_TYPE","getRequestList","getAlLRequestsListService","sort","sort_val","delaySave","debounce","statusOverleyTemplate","REQUEST_STATUS_INFO","headClass","fontsFamily","borderRadius","boxShadow","height","overflow","RequestAndApprovalFilter","onApplyFilter","updatedFilter","filters","resetFilter","AccessRights","customCondition","allPermissionsAccess","buttonSize","BUTTON_SIZE","tableLayout","width","TABLE_BORDER","CustomOverlayPanel","templateData","colSpan","Link","to","req_no","request_on","formattedNumberFields","textAlign","paddingTop","paddingBottom","Pagination","changedPage","onPageChange","totalPages","last_page","FILTER_KEYS","showStatusFilter","filterRef","filterProps","filterData","setFilterData","useFilterButton","resetFilterData","typeFilterOptionsModifications","typeArr","REQUEST_APPROVAL_TYPE_DROPDOWN_VALUES","CustomFilterButton","onResetClick","_approvalOrHistoryDat","_approvalOrHistoryDat2","setApprovalFilters","approvalFilters","approvalOrHistoryData","setApprovalOrHistoryData","apiType","setApiType","getApprovalOrHistoryData","params","api_type","searchApproval","onExportHistoryData","exportApprovalHistoryService","fileName","moment","format","downloadAnyFileHelper","err","getErrorMessageFromResponse","resetStates","onResetFilter","handleApiType","_filterRef$current","current","icon","_formattedNumberField","_formattedNumberField2","_item$description","tooltipAmount","props","RedirectToEmployeeProfile","employeeId","employee_id","CustomImage","src","employee_image","alt","employee_name","CustomEllipsis","whiteSpace","text","IncentivesTable","RequestsHeader","showIncentive","setShowIncentive","location","useLocation","marginTop","pathname","Badge","badgeContent","total","color","ParticularRequest","_location$state","_requestData$employee","_requestData$office_n","_requestData$request_","_requestData$amount","_requestData$getPid","_requestData$getPid2","_requestData$amount2","_getValidDate","_requestData$cost_hea","_requestData$amount3","_requestData$amount4","_getValidDate2","_requestData$image2","_requestData$comments","_requestData$comments2","_userData$first_name","naviagte","useNavigate","showEditor","setShowEditor","comment","setComment","selectedCommentAttachment","setSelectedCommentAttachment","getSingleRequestData","canApproveOrDeclineAccess","manager_id","getRequestDetailsByRequestNumberService","onUpdateStatusPress","updateStatusOfRequestService","onPostComment","request_id","addRequestApprovalCommentService","zIndex","office_name","type_id","date","split","handleDisputedPeriodDate","getPid","_item$pid","_item$customer_name","listStyleType","pid","customer_name","cost_head","cursor","_requestData$image","_requestData$image$sp","saveAs","getServerImage","comments","_item$image2","user_image","user_name","display","alignSelf","dangerouslySetInnerHTML","__html","_item$image","_item$image$split","marginLeft","padding","QuillEditor","alignItems","_e$target$files","ParticularApprovalHistory","toAbsoluteUrl","profileBreadCrumbs","path","isSeparator","isActive","RequestsPage","getPayFrequencySettingAction","Routes","Route","element","Outlet","PageTitle","breadcrumbs","showPlaceHolder","RequestsTable","ApprovalsTable","index","Navigate","display_field_name","errorMessage","customEmptyMessage","searchTextInputRef","mainInputRef","setData","openSearchList","setOpenSearchList","searchFunc","_","_searchTextInputRef$c","focus","onOptionPress","onInputBlur","setTimeout","onInputClick","autoComplete","readOnly","background","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","KTSVG","onBlur","border","overflowY","opacity","justifyContent","maxHeight","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","fontFmaily","showIcon","hovertemplate","overlayPanelRef","onEnterButtonPress","toggle","onLeaveButton","_overlayPanelRef$curr","hide","onMouseOver","onMouseLeave","OverlayPanel","dismissable","underline","hasAccess","pointerEvents","textDecoration","storedFilteredData","setStoredFilteredData","onApplyClick","onCancelClick","selectedWeekData","setSelectedWeekData","getPayFrequencyData","getPayFrequencySettingSelector","weeklyPayPeriod","getWeeklyPayPeriodSelector","monthlyPayPeriodList","getMonthlyPayPeriodSelector","payPeriodList","setPagePayPeriodList","setExecutedPayPeriodList","allPayPeriodList","setAllPayPeriodList","selectedPayPeriod","setSelectedPayPeriod","getWeeklyPayPeriodAction","getMonthlyPayPeriodAction","_payPeriodList$","presentPeriod","find","currentPayPeriod","currentPayPeriodFromAllPayPeriod","executedCurrentPayPeriod","nextPayPeriod","currPayPeriodIndex","findIndex","pastPayPeriodList","execute","getWeeklyExecutedPayPeriodService","getAllWeeklyPayPeriodService","getMonthlyExecutedPayPeriodService","getAllMonthlyPayPeriodService","weekDropdownList","weekName","_weekDropdownList$","weekType","_data$"],"sourceRoot":""}