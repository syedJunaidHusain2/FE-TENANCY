{"version":3,"file":"static/js/4044.76c43f31.chunk.js","mappings":"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","sources":["app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserOnboardFinalStepContainer.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/HireNew.js","app/modules/standard_manager/management/particularEmployee/compoents/EmpolymentPackageViewChangesModals.js/CustomViewChnagesEmployementPackageModal.js","customComponents/customText/CustomCaptializer/FirstCapital.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/AssignManagerModal.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/ChangePositionModal.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserOrganisationContainer.js","app/modules/standard_manager/management/particularEmployee/compoents/ViewUserRedlineChanges.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/EditUserRedlineModel.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserRedlineComissionUpfrontContainer.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserOverridesContainer.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserAgreementsContainer.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserPersonalDetailContainer.js","app/modules/standard_manager/management/particularEmployee/compoents/ViewChanges.js","app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserDeductionsContainer.js","hooks/employmentPackage/EmploymentPackageBlocks.js","hooks/useUserEmploymentPackage.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useCallback, useState} from 'react'\nimport {\n    digiSignerSignatureRequestService,\n    hireEmployeeDirectlyService,\n    sendEmailbyIdService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport {useSelector} from 'react-redux'\nimport {getUserDataSelector} from '../../../../../../../redux/selectors/AuthSelectors'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomCheckbox from '../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {DIGISIGNER_CONFIG} from '../../../../../../../constants/constants'\n\nconst UserOnboardFinalStepContainer = ({\n    employeeData,\n    selectedDocument,\n    onModalClose,\n    page,\n    hireDirect,\n    onBackPress = null,\n}) => {\n    const userData = useSelector(getUserDataSelector)\n    const [loading, setLoading] = useState(false)\n    // const [name, setName] = useState(`${userData?.first_name} ${userData?.last_name}`)\n    const [name, setName] = useState(null)\n\n    const [allowPermission, setAllowPermission] = useState(false)\n    const handleSubmit = () => {\n        if (employeeData?.id) {\n            if (allowPermission) {\n                setLoading(true)\n                sendEmailbyIdService(employeeData?.id)\n                    .then(() => {\n                        CustomToast.success('Employee created and mail sent')\n                        onModalClose()\n                        sendFormToEmail()\n                    })\n                    .catch((e) => {\n                        CustomToast.error(getErrorMessageFromResponse(e))\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            } else {\n                CustomToast.error(\n                    'Accept acknowledge that all the information added is correct and reviewed.'\n                )\n            }\n        } else {\n            CustomToast.success('Employee created but mail not sent')\n        }\n    }\n    const onHireDirectly = () => {\n        if (employeeData?.id) {\n            if (allowPermission) {\n                setLoading(true)\n                const body = {\n                    employee_id: employeeData?.id,\n                }\n                hireEmployeeDirectlyService(body)\n                    .then(() => {\n                        CustomToast.success('Employee Hired')\n                        onModalClose()\n                        sendFormToEmail()\n                    })\n                    .catch((e) => {\n                        CustomToast.error(getErrorMessageFromResponse(e))\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            } else {\n                CustomToast.error(\n                    'Accept acknowledge that all the information added is correct and reviewed.'\n                )\n            }\n        } else {\n            CustomToast.error('Employee created but mail not sent')\n        }\n    }\n\n    const sendFormToEmail = useCallback(() => {\n        if (DIGISIGNER_CONFIG.attach_document) {\n            const selectedData = selectedDocument.filter((item) => item?.isSelected)\n            selectedData?.map((item) => {\n                digiSignerSignatureRequestService(item?.document_id, item?.name, employeeData)\n            })\n        }\n    }, [employeeData, selectedDocument])\n\n    return (\n        page && (\n            <>\n                <CustomLoader visible={loading} full />\n                <div\n                    className='current d-flex flex-column '\n                    data-kt-stepper-element='content'\n                    style={{marginBottom: '34%'}}\n                >\n                    <div\n                        className='container mt-3 d-flex justify-content-center flex-column  w-md-425px mt-20'\n                        // style={{marginLeft: '-10px'}}\n                    >\n                        <div\n                            className='cmGrey900'\n                            style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                        >\n                            Review the agreement\n                        </div>\n                        <div\n                            className='text-cmGrey700 mt-5'\n                            style={{fontWeight: 600, fontSize: '14px'}}\n                        >\n                            Kindly Review all information before sending out the mail.\n                        </div>\n                        <div className='mt-16 d-flex gap-1'>\n                            <div>\n                                {' '}\n                                <CustomCheckbox\n                                    checked={allowPermission}\n                                    onChange={() => setAllowPermission((val) => !val)}\n                                />\n                            </div>\n                            <div\n                                className='text-cmGrey800'\n                                style={{fontWeight: 600, fontSize: '14px'}}\n                            >\n                                I hereby acknowledge that all the information added is correct and\n                                reviewed.\n                                <label style={{color: 'red'}}>*</label>\n                            </div>\n                        </div>\n\n                        <div className='mt-10'>\n                            <CustomInput\n                                label={'Enter your Name'}\n                                placeholder='Enter Name'\n                                value={name}\n                                onChange={(e) => setName(e?.target?.value)}\n                                style={{fontWeight: 700}}\n                            />\n                        </div>\n                        <div className='d-flex justify-content-center mt-16'>\n                            <div className='me-2'>\n                                <button\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: 700,\n                                    }}\n                                    type='button'\n                                    className='btn text-cmBlue-Crayola border border-cmBlue-Crayola'\n                                    data-kt-stepper-action='previous'\n                                    onClick={onBackPress}\n                                >\n                                    Back\n                                </button>\n                            </div>\n                            <button\n                                type='button'\n                                style={{\n                                    background: '#6078EC',\n                                    color: 'white',\n                                    fontSize: '12px',\n                                }}\n                                className='btn btn-lg fs-6 mb-2 ms-5 '\n                                onClick={() => (hireDirect ? onHireDirectly() : handleSubmit())}\n                            >\n                                {hireDirect ? 'Hire Directly' : 'Submit (Send mail)'}\n                            </button>\n                            {!hireDirect && (\n                                <button\n                                    type='button'\n                                    style={{\n                                        background: '#6078EC',\n                                        color: 'white',\n                                        fontSize: '12px',\n                                    }}\n                                    className='btn btn-lg fs-6 mb-2 ms-5 '\n                                    onClick={onHireDirectly}\n                                >\n                                    Hire Directly\n                                </button>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    )\n}\n\nexport default UserOnboardFinalStepContainer\n","import {useState, useRef, useEffect} from 'react'\n\nimport {Dialog} from 'primereact/dialog'\n\nimport {createPortal} from 'react-dom'\nimport {StepperComponent} from '../../../../../../_metronic/assets/ts/components'\nimport UserOnboardFinalStepContainer from './steps/UserOnboardFinalStepContainer'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport images from '../../../../../../assets/images'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../../redux/selectors/SettingsSelectors'\n\nimport useUserEmploymentPackage, {\n    DEFAULT_EMPLOYEE_DATA,\n    USER_TYPE,\n} from '../../../../../../hooks/useUserEmploymentPackage'\nimport {\n    DIGISIGNER_CONFIG,\n    DOCUMENT_TO_ATTACH_WHILE_ONBOARD,\n    HIRE_FIELD_KEYS,\n    MAIN_DEPARTMENT_ID,\n    MAIN_POSITTIONS_ID,\n} from '../../../../../../constants/constants'\nimport moment from 'moment'\n\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst HireNew = ({\n    id = null,\n    show = false,\n    recruiter_id = null,\n    lead_id = null,\n    handleClose = () => {},\n    getonbording = () => {},\n    setLoader = () => {},\n    prefieldData = null,\n    hireDirect = null,\n}) => {\n    const stepperRef = useRef()\n    const stepper = useRef()\n    const [page, setPage] = useState(false)\n    const companySetting = useSelector(getCompanySettingSelector)\n\n    const {\n        loading,\n        employeeData,\n        setEmployeeData,\n        personalDetailLoading,\n        organizationLoading,\n        redlineLoading,\n        overrideLoading,\n        agreementLoading,\n        saveEmploymentPackage,\n\n        // Edit Section\n        EditPersonalDetailSection,\n        EditOrganisationSection,\n        EditRedlineComissionUpfrontSection,\n        EditOverridesSection,\n        EditAgreementsSection,\n\n        selectedDocument,\n        agreementStep,\n        setAgreementStep,\n    } = useUserEmploymentPackage({prefieldData, lead_id, id, recruiter_id, getonbording})\n\n    const onModalClose = () => {\n        handleClose(employeeData?.id)\n        getonbording()\n        setEmployeeData(DEFAULT_EMPLOYEE_DATA)\n        setLoader(true)\n        setPage(false)\n    }\n\n    const loadStepper = () => {\n        stepper.current = StepperComponent.createInsance(stepperRef.current)\n    }\n\n    const prevStep = () => {\n        if (!stepper.current) {\n            return\n        }\n        if ([5, 6].includes(stepper.current.currentStepIndex)) setAgreementStep(1)\n        stepper.current.goPrev()\n    }\n\n    const updateInitialData = {\n        organisation: () => {\n            const empData = {...employeeData}\n            if (!empData?.sub_position_id)\n                empData[HIRE_FIELD_KEYS.sub_position_id] = MAIN_POSITTIONS_ID.setter\n            if (!empData?.department_id)\n                empData[HIRE_FIELD_KEYS.department_id] = MAIN_DEPARTMENT_ID.sales\n            setEmployeeData(empData)\n        },\n        agreements: () => {\n            const empData = {...employeeData}\n            if (!empData[HIRE_FIELD_KEYS.probation_period])\n                empData[HIRE_FIELD_KEYS.probation_period] = 'None'\n            if (!empData[HIRE_FIELD_KEYS.period_of_agreement_start_date])\n                empData[HIRE_FIELD_KEYS.period_of_agreement_start_date] = new Date()\n            if (!empData[HIRE_FIELD_KEYS.end_date])\n                empData[HIRE_FIELD_KEYS.end_date] = moment().add('1', 'year').toDate()\n            if (!empData[HIRE_FIELD_KEYS.end_date])\n                empData[HIRE_FIELD_KEYS.end_date] = moment().add('1', 'year').toDate()\n            if (!empData[HIRE_FIELD_KEYS.offer_expiry_date])\n                empData[HIRE_FIELD_KEYS.offer_expiry_date] = moment().add('30', 'day').toDate()\n            setEmployeeData(empData)\n        },\n    }\n    useEffect(() => {\n        if (stepper?.current?.currentStepIndex == 2) {\n            updateInitialData.organisation()\n        } else if (stepper?.current?.currentStepIndex == 4) {\n            if (!companySetting?.overrides) updateInitialData.agreements()\n        } else if (stepper?.current?.currentStepIndex == 5) {\n            updateInitialData.agreements()\n        }\n    }, [stepper?.current?.currentStepIndex])\n\n    const nextStep = () => {\n        if (stepper.current.currentStepIndex == 1) {\n            saveEmploymentPackage.personalDetailValidation().then(() => stepper.current.goNext())\n        } else if (stepper.current.currentStepIndex == 2) {\n            saveEmploymentPackage.organisationValidation().then(() => stepper.current.goNext())\n        } else if (stepper.current.currentStepIndex == 3) {\n            saveEmploymentPackage\n                .commissionAndRedlineValidation()\n                .then(() => stepper.current.goNext())\n            setAgreementStep(1)\n        } else if (stepper.current.currentStepIndex == 4) {\n            if (companySetting?.overrides) {\n                saveEmploymentPackage.overrideValidation().then(() => stepper.current.goNext())\n                setAgreementStep(1)\n            } else {\n                if (DIGISIGNER_CONFIG.attach_document && agreementStep == 1) {\n                    saveEmploymentPackage.agreementValidation().then(() => {\n                        setAgreementStep(2)\n                    })\n                } else {\n                    setPage(true)\n                    stepper.current.goNext()\n                }\n            }\n        } else if (stepper.current.currentStepIndex == 5) {\n            if (agreementStep == 1) {\n                saveEmploymentPackage.agreementValidation().then(() => {\n                    if (DIGISIGNER_CONFIG.attach_document) setAgreementStep(2)\n                    else {\n                        setPage(true)\n                        stepper.current.goNext()\n                    }\n                })\n            } else {\n                setPage(true)\n                stepper.current.goNext()\n            }\n        }\n    }\n\n    const submit = () => {\n        window.location.reload()\n    }\n\n    const footer = (\n        <div\n            className='text-cmBlack'\n            style={{fontSize: '16px', fontWeight: '600', fontFamily: 'Manrope'}}\n        >\n            Onboard Employee\n        </div>\n    )\n\n    return createPortal(\n        <Dialog\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            visible={show}\n            onHide={onModalClose}\n            onShow={loadStepper}\n            backdrop='true'\n            header={footer}\n            className='w-sm-75  w-100 mx-auto p-0 m-0'\n        >\n            <div className='border border-gray-200'></div>\n\n            <div className='modal-body py-lg-10  p-0'>\n                <div\n                    ref={stepperRef}\n                    className='stepper stepper-pills stepper-column d-flex flex-column flex-xl-row flex-row-fluid'\n                    id='kt_modal_create_app_stepper'\n                >\n                    <div className='d-flex justify-content-center justify-content-xl-start flex-row-auto w-100 w-xl-300px'>\n                        <div className='stepper-nav ps-lg-10 mt-sm-0'>\n                            <div className='stepper-item current' data-kt-stepper-element='nav'>\n                                <div className='stepper-wrapper'>\n                                    <div className='stepper-icon w-40px h-40px'>\n                                        <i className='stepper-check fas fa-check'></i>\n                                        <span className='stepper-number'>1</span>\n                                    </div>\n                                    <div className='stepper-label mt-1'>\n                                        <h3\n                                            className='stepper-title text-cmBlack'\n                                            style={{\n                                                fontWeight: '600',\n                                                fontFamily: 'Manrope ',\n                                                fontSize: '14px',\n                                            }}\n                                        >\n                                            Details\n                                        </h3>\n                                        <span\n                                            className='text-cmGrey600'\n                                            style={{fontSize: '10px', fontWeight: 400}}\n                                        >\n                                            Employee Details\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className='stepper-line h-40px'></div>\n                            </div>\n                            <div className='stepper-item' data-kt-stepper-element='nav'>\n                                <div className='stepper-wrapper'>\n                                    <div className='stepper-icon w-40px h-40px'>\n                                        <i className='stepper-check fas fa-check'></i>\n                                        <span className='stepper-number'>2</span>\n                                    </div>\n                                    <div className='stepper-label'>\n                                        <h3\n                                            className='stepper-title text-cmBlack'\n                                            style={{\n                                                fontWeight: '600',\n                                                fontFamily: 'Manrope ',\n                                                fontSize: '14px',\n                                            }}\n                                        >\n                                            Organization\n                                        </h3>\n                                        <span\n                                            className='text-cmGrey600'\n                                            style={{fontSize: '10px', fontWeight: 400}}\n                                        >\n                                            Departments and Positions\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className='stepper-line h-40px'></div>\n                            </div>\n\n                            <div className='stepper-item' data-kt-stepper-element='nav'>\n                                <div className='stepper-wrapper'>\n                                    <div className='stepper-icon w-40px h-40px'>\n                                        <i className='stepper-check fas fa-check'></i>\n                                        <span className='stepper-number'>3</span>\n                                    </div>\n                                    <div className='stepper-label'>\n                                        <h3\n                                            className='stepper-title text-cmBlack'\n                                            style={{\n                                                fontWeight: '600',\n                                                fontFamily: 'Manrope ',\n                                                fontSize: '14px',\n                                            }}\n                                        >\n                                            Compensation\n                                        </h3>\n                                        <span\n                                            className='text-cmGrey600'\n                                            style={{fontSize: '10px', fontWeight: 400}}\n                                        >\n                                            Basic Pay Plan\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className='stepper-line h-40px'></div>\n                            </div>\n                            {companySetting?.overrides ? (\n                                <div className='stepper-item' data-kt-stepper-element='nav'>\n                                    <div className='stepper-wrapper'>\n                                        <div className='stepper-icon w-40px h-40px'>\n                                            <i className='stepper-check fas fa-check'></i>\n                                            <span className='stepper-number'>4</span>\n                                        </div>\n                                        <div className='stepper-label'>\n                                            <h3\n                                                className='stepper-title text-cmBlack'\n                                                style={{\n                                                    fontWeight: '600',\n                                                    fontFamily: 'Manrope ',\n                                                    fontSize: '14px',\n                                                }}\n                                            >\n                                                Overrides\n                                            </h3>\n                                            <span\n                                                className='text-cmGrey600'\n                                                style={{fontSize: '10px', fontWeight: 400}}\n                                            >\n                                                Set overrides\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className='stepper-line h-40px'></div>\n                                </div>\n                            ) : (\n                                <></>\n                            )}\n                            <div className='stepper-item' data-kt-stepper-element='nav'>\n                                <div className='stepper-wrapper'>\n                                    <div className='stepper-icon w-40px h-40px'>\n                                        <i className='stepper-check fas fa-check'></i>\n                                        <span className='stepper-number'>\n                                            {companySetting?.overrides ? 5 : 4}\n                                        </span>\n                                    </div>\n                                    <div className='stepper-label'>\n                                        <h3\n                                            className='stepper-title text-cmBlack'\n                                            style={{\n                                                fontWeight: '600',\n                                                fontFamily: 'Manrope ',\n                                                fontSize: '14px',\n                                            }}\n                                        >\n                                            Agreement{' '}\n                                            {DIGISIGNER_CONFIG.attach_document\n                                                ? `${agreementStep} / ${DOCUMENT_TO_ATTACH_WHILE_ONBOARD?.length}`\n                                                : ''}\n                                        </h3>\n                                        <span\n                                            className='text-cmGrey600'\n                                            style={{fontSize: '10px', fontWeight: 400}}\n                                        >\n                                            Input few more details\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className='stepper-line h-40px'></div>\n                            </div>\n                            <div className='stepper-item' data-kt-stepper-element='nav'>\n                                <div className='stepper-wrapper'>\n                                    <div className='stepper-icon w-40px h-40px'>\n                                        <i className='stepper-check fas fa-check'></i>\n                                        <span className='stepper-number'>\n                                            {companySetting?.overrides ? 6 : 5}\n                                        </span>\n                                    </div>\n                                    <div className='stepper-label'>\n                                        <h3\n                                            className='stepper-title text-cmBlack'\n                                            style={{\n                                                fontWeight: 600,\n                                                fontFamily: 'Manrope ',\n                                                fontSize: '14px',\n                                            }}\n                                        >\n                                            Finish\n                                        </h3>\n                                        <span\n                                            className='text-cmGrey600'\n                                            style={{fontSize: '10px', fontWeight: 400}}\n                                        >\n                                            Congratulations!\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div className=' mb-10'></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{marginTop: '-20px', position: 'relative'}}\n                        className='flex-row-fluid py-lg-0 px-lg-15'\n                    >\n                        <CustomLoader\n                            visible={\n                                loading ||\n                                personalDetailLoading ||\n                                organizationLoading ||\n                                redlineLoading ||\n                                overrideLoading ||\n                                agreementLoading\n                            }\n                            full\n                            size={100}\n                        />\n                        <form noValidate id='kt_modal_create_app_form'>\n                            {EditPersonalDetailSection}\n                            {EditOrganisationSection}\n                            {EditRedlineComissionUpfrontSection}\n                            {companySetting?.overrides ? EditOverridesSection : null}\n                            {EditAgreementsSection}\n                            <UserOnboardFinalStepContainer\n                                selectedDocument={selectedDocument}\n                                onBackPress={() => {\n                                    prevStep()\n                                    setPage(false)\n                                }}\n                                employeeData={employeeData}\n                                onModalClose={onModalClose}\n                                page={page}\n                                hireDirect={hireDirect}\n                            />\n\n                            {page === false ? (\n                                <div className='d-flex' style={{justifyContent: 'center'}}>\n                                    <div className='me-2'>\n                                        <button\n                                            style={{\n                                                fontSize: '14px',\n                                                marginLeft: '-70px',\n                                                fontWeight: 700,\n                                            }}\n                                            type='button'\n                                            className='btn mb-2 px-12 mx-2 btn-lg text-cmBlue-Crayola border border-cmBlue-Crayola'\n                                            data-kt-stepper-action='previous'\n                                            onClick={prevStep}\n                                        >\n                                            Back\n                                        </button>\n                                    </div>\n                                    <div>\n                                        <button\n                                            type='button'\n                                            className='btn btn-lg fs-6 mb-2 ms-5 w-md-250px h-md-45px bg-cmBlue-Crayola text-cmwhite'\n                                            data-kt-stepper-action='submit'\n                                            onClick={submit}\n                                            style={{fontWeight: 700}}\n                                        >\n                                            Save and Continue\n                                        </button>\n\n                                        <button\n                                            type='button'\n                                            className='btn btn-lg fs-6 mb-2 px-8 py-4 mx-2 text-cmwhite bg-cmBlue-Crayola'\n                                            data-kt-stepper-action='next'\n                                            onClick={nextStep}\n                                            style={{fontWeight: 700}}\n                                        >\n                                            Save and Continue\n                                        </button>\n                                    </div>\n                                </div>\n                            ) : (\n                                <b></b>\n                            )}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Dialog>,\n        modalsRoot\n    )\n}\n\nexport default HireNew\n\nexport const LockedView = ({visible, userType = USER_TYPE.onboardEmployee}) => (\n    <div className='h-25px'>\n        {visible && userType == USER_TYPE.onboardEmployee ? (\n            <label>\n                <img alt='Sequifi' style={{}} className='' src={images.lock}></img>\n                <label className='ms-2 text-cmGrey700' style={{fontSize: '12px'}}>\n                    Locked\n                </label>\n            </label>\n        ) : null}\n    </div>\n)\n","import React, {useCallback, useEffect, useState} from 'react'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport {\n    formattedNumberFields,\n    formattedNumberFieldsWithoutDecimal,\n    isInputValueExist,\n} from '../../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../../constants/constants'\nimport CustomImage from '../../../../../../../customComponents/customImage/CustomImage'\nimport CustomNoData from '../../../../../../../customComponents/customNoData/CustomNoData'\nimport Pagination from '../../../../../admin/sequidocs/component/Pagination'\nimport {\n    deleteEmploymentPackageHistoryService,\n    getEmploymentPackageHistoryService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomDialog from '../../../../../../../customComponents/customDialog/CustomDialog'\nimport {CustomSortSvg} from '../../../../../../../_metronic/helpers/components/CustomSortSVG'\nimport FirstCapital from '../../../../../../../customComponents/customText/CustomCaptializer/FirstCapital'\n\nexport const MODAL_NAME = {\n    Organization: 'Transfer',\n    Overrides: 'Override',\n    Redline: 'Redline',\n    Upfront: 'Upfront',\n    Commission: 'Commission',\n    Withheld: 'Withheld',\n}\n\nconst CustomViewChnagesEmployementPackageModal = ({\n    show,\n    handleClose,\n    title,\n    modalName = null,\n    userId,\n    PositionId = null,\n    positionData,\n}) => {\n    const [historyData, setHistoryData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [isAscending, setIsAscending] = useState(false)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        getHistoryData()\n    }, [sortValue, sortingOrder])\n\n    const getHistoryData = useCallback(() => {\n        setLoading(true)\n        let type = modalName\n        const body = {\n            type: type,\n            user_id: userId,\n            position_id: PositionId,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        }\n        getEmploymentPackageHistoryService(body)\n            .then((res) => {\n                setHistoryData(res.data)\n            })\n            .finally(() => setLoading(false))\n    }, [PositionId, modalName, sortValue, sortingOrder, userId])\n\n    const deleteHistoryData = (id) => {\n        CustomDialog.warn('Are you sure you want to delete ?', () => {\n            setLoading(true)\n            const body = {\n                id: id,\n                type: modalName,\n            }\n            deleteEmploymentPackageHistoryService(body)\n                .then(() => {\n                    getHistoryData()\n                })\n                .finally(() => setLoading(false))\n        })\n    }\n\n    const percantageChange = useCallback((oldVal, newVal) => {\n        if (oldVal === 0) {\n            if (newVal === 0) {\n                return 0 // Both old and new values are zero, so percentage change is considered 0%\n            } else {\n                return 100 // Old value is zero, and new value is non-zero, so percentage change is considered infinite\n            }\n        }\n\n        const change = newVal - oldVal\n        const percentageChange = (change / oldVal) * 100\n\n        return Math.min(percentageChange, 100)\n    }, [])\n\n    const handleSortClick = () => {\n        const sorted = {...historyData}\n        sorted?.history?.sort((a, b) => {\n            const dateA = new Date(a.effective_date)\n            const dateB = new Date(b.effective_date)\n            return isAscending ? dateA - dateB : dateB - dateA\n        })\n\n        setHistoryData(sorted)\n        setIsAscending(!isAscending)\n    }\n    return (\n        <CustomModal show={show} onHide={handleClose} maxWidth='1300' title={title}>\n            <CustomLoader full visible={loading} />\n            <div style={{fontFamily: fontsFamily.manrope}}>\n                {/* Top blue Card */}\n                {/* Redline */}\n                {modalName == MODAL_NAME.Redline ? (\n                    <div\n                        className='bg-cmBlue-Crayola bg-opacity-10 p-5 d-flex align-items-center gap-5 mb-10'\n                        style={{\n                            borderRadius: 10,\n                            lineHeight: '21px',\n                            fontSize: '16px',\n                            fontWeight: '600',\n                        }}\n                    >\n                        <div className='text-cmGrey900'>Current Redline:</div>\n                        <div className='text-cmGrey900'>\n                            {formattedNumberFields(historyData?.current?.redline, '$')}\n                            {` ${historyData?.current?.redline_type}`}\n                        </div>\n                        <div className='text-cmGrey700'>\n                            {' '}\n                            since {getValidDate(historyData?.current?.effective_date) ?? '-'}\n                        </div>\n                    </div>\n                ) : null}\n                {modalName == MODAL_NAME.Commission ? (\n                    <div\n                        className='bg-cmBlue-Crayola bg-opacity-10 p-5 d-flex align-items-center gap-5 mb-10'\n                        style={{\n                            borderRadius: 10,\n                            lineHeight: '21px',\n                            fontSize: '16px',\n                            fontWeight: '600',\n                        }}\n                    >\n                        <div className='text-cmGrey900'>Current Commission:</div>\n                        <div className='text-cmGrey900'>\n                            {formattedNumberFields(historyData?.current?.commission, '%')}\n                        </div>\n                        <div className='text-cmGrey700'>\n                            since{' '}\n                            {getValidDate(historyData?.current?.commission_effective_date) ?? '-'}\n                        </div>\n                    </div>\n                ) : null}\n                {modalName == MODAL_NAME.Upfront ? (\n                    <div\n                        className='bg-cmBlue-Crayola bg-opacity-10 p-5 d-flex align-items-center gap-5 mb-10'\n                        style={{\n                            borderRadius: 10,\n                            lineHeight: '21px',\n                            fontSize: '16px',\n                            fontWeight: '600',\n                        }}\n                    >\n                        <div className='text-cmGrey900'>Current Upfront:</div>\n                        <div className='text-cmGrey900'>\n                            {formattedNumberFields(historyData?.current?.upfront_pay_amount, '$')}\n                            {''}\n                            {historyData?.current?.upfront_sale_type}\n                        </div>\n                        <div className='text-cmGrey700'>\n                            {' '}\n                            since {getValidDate(historyData?.current?.upfront_effective_date)}\n                        </div>\n                    </div>\n                ) : null}\n                {/* Organization */}\n                {modalName == MODAL_NAME.Organization ? (\n                    <div\n                        className='bg-cmBlue-Crayola bg-opacity-10 p-5 mb-10'\n                        style={{\n                            borderRadius: 10,\n                            lineHeight: '21px',\n                            fontSize: '16px',\n                            fontWeight: '600',\n                        }}\n                    >\n                        {/* first line */}\n                        <div className='d-flex align-items-center gap-5 mb-5'>\n                            <div className='text-cmGrey900'>Current Organization:</div>\n                            <div className='text-cmGrey700'>\n                                {' '}\n                                since {getValidDate(historyData?.current?.effective_date) ?? '-'}\n                            </div>\n                        </div>\n                        {/* second line */}\n                        <div className='d-flex flex-wrap align-items-center gap-12'>\n                            <div className='d-flex align-items-center gap-2'>\n                                <div className='text-cmGrey700'>Office State:</div>\n                                <div className='text-cmGrey900'>\n                                    {historyData?.current?.state_name}\n                                </div>\n                            </div>\n                            <div className='d-flex align-items-center gap-2'>\n                                <div className='text-cmGrey700'>Office Name:</div>\n                                <div className='text-cmGrey900'>\n                                    {historyData?.current?.office_name}\n                                </div>\n                            </div>\n                            <div className='d-flex align-items-center gap-2'>\n                                <div className='text-cmGrey700'>Manager:</div>\n                                <div className='text-cmGrey900'>\n                                    {historyData?.current?.manager_name}\n                                </div>\n                            </div>\n                            <div className='d-flex align-items-center gap-2'>\n                                <div className='text-cmGrey700'>Position:</div>\n                                <div className='text-cmGrey900'>\n                                    {historyData?.current?.sub_position_name}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                {/* Overrides */}\n                {modalName == MODAL_NAME.Overrides ? (\n                    <div\n                        className='bg-cmBlue-Crayola bg-opacity-10 p-5 mb-10'\n                        style={{\n                            borderRadius: 10,\n                            lineHeight: '21px',\n                            fontSize: '16px',\n                            fontWeight: '600',\n                        }}\n                    >\n                        {/* first line */}\n                        <div\n                            className='d-flex align-items-center gap-5 mb-5 text-cmGrey900'\n                            style={{fontWeight: 700}}\n                        >\n                            <div>Current Overrides:</div>\n                            <div>since {getValidDate(historyData?.current?.effective_date)}</div>\n                        </div>\n                        {/* second line */}\n                        <div className='d-flex flex-wrap align-items-center gap-12'>\n                            {positionData?.override?.[0]?.status ? (\n                                <div className='d-flex align-items-center gap-2'>\n                                    <div className='text-cmGrey700'>Direct</div>\n                                    <div className='text-cmGrey900'>\n                                        {formattedNumberFields(\n                                            historyData?.current?.direct_amount,\n                                            historyData?.current?.direct_type == 'percent'\n                                                ? ''\n                                                : '$'\n                                        )}{' '}\n                                        {historyData?.current?.direct_type == 'percent'\n                                            ? '%'\n                                            : historyData?.current?.direct_type}\n                                    </div>\n                                </div>\n                            ) : null}\n                            {positionData?.override?.[1]?.status ? (\n                                <div className='d-flex align-items-center gap-2'>\n                                    <div className='text-cmGrey700'>Indirect</div>\n                                    <div className='text-cmGrey900'>\n                                        {formattedNumberFields(\n                                            historyData?.current?.indirect_amount,\n                                            historyData?.current?.indirect_type == 'percent'\n                                                ? ''\n                                                : '$'\n                                        )}{' '}\n                                        {historyData?.current?.indirect_type == 'percent'\n                                            ? '%'\n                                            : historyData?.current?.indirect_type}\n                                    </div>\n                                </div>\n                            ) : null}\n                            {positionData?.override?.[2]?.status ? (\n                                <div className='d-flex align-items-center gap-2'>\n                                    <div className='text-cmGrey700'>Office</div>\n                                    <div className='text-cmGrey900'>\n                                        {formattedNumberFields(\n                                            historyData?.current?.office_amount,\n                                            historyData?.current?.office_type == 'percent'\n                                                ? ''\n                                                : '$'\n                                        )}{' '}\n                                        {historyData?.current?.office_type == 'percent'\n                                            ? '%'\n                                            : historyData?.current?.office_type}\n                                    </div>\n                                </div>\n                            ) : null}\n                            {positionData?.override?.[3]?.status ? (\n                                <div className='d-flex align-items-center gap-2'>\n                                    <div className='text-cmGrey700'>Office Stack</div>\n                                    <div className='text-cmGrey900'>\n                                        {formattedNumberFields(\n                                            historyData?.current?.office_stack_overrides_amount,\n                                            '%'\n                                        )}{' '}\n                                    </div>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                ) : null}\n\n                {modalName == MODAL_NAME.Withheld ? (\n                    <div\n                        className='bg-cmBlue-Crayola bg-opacity-10 p-5 d-flex align-items-center gap-5 mb-10'\n                        style={{\n                            borderRadius: 10,\n                            lineHeight: '21px',\n                            fontSize: '16px',\n                            fontWeight: '600',\n                        }}\n                    >\n                        <div className='text-cmGrey900'>Current Withheld Amount:</div>\n                        <div className='text-cmGrey900'>\n                            {formattedNumberFields(historyData?.current?.withheld_amount, '$')}{' '}\n                            {historyData?.current?.withheld_type}\n                        </div>\n                        <div className='text-cmGrey700'>\n                            {' '}\n                            since {getValidDate(historyData?.current?.withheld_effective_date)}\n                        </div>\n                    </div>\n                ) : null}\n\n                {/* Table begins */}\n                {/* Redline */}\n                {modalName == MODAL_NAME.Redline ? (\n                    <div className='table-responsive mb-10'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600 text-cmGrey800 border-bottom-1 border-top-1 border-cmGrey300'\n                                    style={{\n                                        fontSize: '12px',\n                                        fontWeight: '600',\n                                        fontFamily: fontsFamily.manrope,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    <th className='text-nowrap px-5 py-1 d-flex align-items-center gap-2'>\n                                        <span>Effective date</span>\n                                        <span\n                                            className='pi pi-sort cursor-pointer'\n                                            onClick={handleSortClick}\n                                        />\n                                    </th>\n                                    <th className='text-nowrap  px-5 py-1'>Old Redline</th>\n                                    <th className='text-nowrap px-5 py-1'>Old Redline Type</th>\n\n                                    <th className='text-nowrap px-5 py-1'>New Redline</th>\n                                    <th className='text-nowrap px-5 py-1'>New Redline Type</th>\n                                    <th className='text-nowrap  px-5 py-1'>Updated on</th>\n                                    <th className='text-nowrap  text-center py-1 px-5'>\n                                        Updated by\n                                    </th>\n                                    <th className='text-nowrap  text-center px-5 py-1'></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {historyData?.history?.length > 0 ? (\n                                    <>\n                                        {historyData?.history?.map((item) => {\n                                            let isFutureDate =\n                                                getValidDate(new Date(), 'YYYY-MM-DD 00:00') <\n                                                getValidDate(\n                                                    item?.effective_date,\n                                                    'YYYY-MM-DD 00:00'\n                                                )\n                                            return (\n                                                <tr\n                                                    className='text-cmGrey800 stripRow'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <td\n                                                        className={\n                                                            isFutureDate\n                                                                ? 'p-5 border border-5 border-right-0 border-bottom-0 border-top-0 border-cmSuccess'\n                                                                : 'p-5 text-nowrap'\n                                                        }\n                                                    >\n                                                        {getValidDate(item?.effective_date)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {item?.Redline?.map((val) => (\n                                                            <div>\n                                                                {isInputValueExist(\n                                                                    val?.old_redline\n                                                                ) ? (\n                                                                    <>\n                                                                        {formattedNumberFields(\n                                                                            val?.old_redline\n                                                                        )}{' '}\n                                                                        {val?.old_redline_type}\n                                                                    </>\n                                                                ) : (\n                                                                    '-'\n                                                                )}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {item?.Redline?.map((val) => (\n                                                            <div>\n                                                                {val?.old_redline_amount_type ??\n                                                                    '-'}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n\n                                                    <td className='p-5 text-nowrap text-cmGrey700'>\n                                                        {item?.Redline?.map((val) => (\n                                                            <div>\n                                                                {isInputValueExist(val?.redline) ? (\n                                                                    <>\n                                                                        {formattedNumberFields(\n                                                                            val?.redline\n                                                                        )}{' '}\n                                                                        {val?.redline_type ?? '-'}\n                                                                    </>\n                                                                ) : (\n                                                                    '-'\n                                                                )}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {item?.Redline?.map((val) => (\n                                                            <div>\n                                                                {val?.redline_amount_type ?? '-'}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {getValidDate(item?.updated_on)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap  text-start d-flex flex-center gap-3'>\n                                                        <div>\n                                                            <CustomImage\n                                                                className={'w-25px h-25px'}\n                                                            />\n                                                        </div>\n                                                        <div className=' text-cmGrey900'>\n                                                            {item?.updater_by}\n                                                        </div>\n                                                    </td>\n                                                    <td className='p-5 text-nowrap text-center'>\n                                                        {isFutureDate ? (\n                                                            <div\n                                                                className='pi pi-trash text-cmGrey700 cursor-pointer'\n                                                                onClick={() =>\n                                                                    deleteHistoryData(item?.id)\n                                                                }\n                                                            />\n                                                        ) : null}\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <>\n                                        <tr>\n                                            <td className='text-center py-5' colSpan={6}>\n                                                <CustomNoData label={'No data found'} />\n                                            </td>\n                                        </tr>\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                        <Pagination />\n                    </div>\n                ) : null}\n                {/* Commission */}\n                {modalName == MODAL_NAME.Commission ? (\n                    <div className='table-responsive mb-10'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600 text-cmGrey800 border-bottom-1 border-top-1 border-cmGrey300'\n                                    style={{\n                                        fontSize: '12px',\n                                        fontWeight: '600',\n                                        fontFamily: fontsFamily.manrope,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    <th className='text-nowrap px-5 py-1 d-flex align-items-center gap-2'>\n                                        <span>Effective date</span>\n                                        <span\n                                            className='pi pi-sort cursor-pointer'\n                                            onClick={handleSortClick}\n                                        />\n                                    </th>\n                                    <th className='text-nowrap  px-5 py-1'>Old %</th>\n                                    <th className='text-nowrap px-5 py-1'>New %</th>\n                                    <th className='text-nowrap  px-5 py-1'>Updated on</th>\n                                    <th className='text-nowrap  text-center py-1 px-5'>\n                                        Updated by\n                                    </th>\n                                    <th className='text-nowrap  text-center px-5 py-1'></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {historyData?.history?.length > 0 ? (\n                                    <>\n                                        {historyData?.history?.map((item) => {\n                                            let isFutureDate =\n                                                getValidDate(new Date(), 'YYYY-MM-DD 00:00') <\n                                                getValidDate(\n                                                    item?.effective_date,\n                                                    'YYYY-MM-DD 00:00'\n                                                )\n                                            let percantage = percantageChange(\n                                                item?.Commission?.[0]?.old_commission,\n                                                item?.Commission?.[0]?.commission\n                                            )\n                                            return (\n                                                <tr\n                                                    className='text-cmGrey800 stripRow'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <td\n                                                        className={\n                                                            isFutureDate\n                                                                ? 'p-5 border border-5 border-right-0 border-bottom-0 border-top-0 border-cmSuccess'\n                                                                : 'p-5 text-nowrap'\n                                                        }\n                                                    >\n                                                        {getValidDate(item?.effective_date)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap text-cmGrey700'>\n                                                        {item?.Commission?.map((val) => (\n                                                            <div>\n                                                                {' '}\n                                                                {formattedNumberFields(\n                                                                    val?.old_commission,\n                                                                    '%'\n                                                                )}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {item?.Commission?.map((val) => (\n                                                            <div className='d-flex gap-2'>\n                                                                <div>\n                                                                    {' '}\n                                                                    {formattedNumberFields(\n                                                                        val?.commission,\n                                                                        '%'\n                                                                    )}\n                                                                </div>\n                                                                {/* {percantage != 0 ? (\n                                                                    <span\n                                                                        className={`text-${\n                                                                            percantage > 0\n                                                                                ? 'cmSuccess'\n                                                                                : 'cmError'\n                                                                        }`}\n                                                                    >\n                                                                        {formattedNumberFields(\n                                                                            percantage,\n                                                                            '%'\n                                                                        )}\n                                                                    </span>\n                                                                ) : null} */}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n\n                                                    <td className='p-5 text-nowrap'>\n                                                        {getValidDate(item?.updated_on)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap  text-start d-flex flex-center gap-3'>\n                                                        <div>\n                                                            <CustomImage\n                                                                className={'w-25px h-25px'}\n                                                            />\n                                                        </div>\n                                                        <div className=' text-cmGrey900'>\n                                                            {item?.updater_by}\n                                                        </div>\n                                                    </td>\n                                                    <td className='p-5 text-nowrap text-center'>\n                                                        {isFutureDate ? (\n                                                            <div\n                                                                className='pi pi-trash text-cmGrey700 cursor-pointer'\n                                                                onClick={() =>\n                                                                    deleteHistoryData(item?.id)\n                                                                }\n                                                            />\n                                                        ) : null}\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <>\n                                        <tr>\n                                            <td className='text-center py-5' colSpan={6}>\n                                                <CustomNoData label={'No data found'} />\n                                            </td>\n                                        </tr>\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                        <Pagination />\n                    </div>\n                ) : null}\n                {/* Upfront */}\n                {modalName == MODAL_NAME.Upfront ? (\n                    <div className='table-responsive mb-10'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600 text-cmGrey800 border-bottom-1 border-top-1 border-cmGrey300'\n                                    style={{\n                                        fontSize: '12px',\n                                        fontWeight: '600',\n                                        fontFamily: fontsFamily.manrope,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    <th className='text-nowrap px-5 py-1 d-flex align-items-center gap-2'>\n                                        <span>Effective date</span>\n                                        <span\n                                            className='pi pi-sort cursor-pointer'\n                                            onClick={handleSortClick}\n                                        />\n                                    </th>\n                                    <th className='text-nowrap  px-5 py-1'>Old Upfront</th>\n                                    <th className='text-nowrap px-5 py-1'>New Upfront</th>\n                                    <th className='text-nowrap  px-5 py-1'>Updated on</th>\n                                    <th className='text-nowrap  text-center py-1 px-5'>\n                                        Updated by\n                                    </th>\n                                    <th className='text-nowrap  text-center px-5 py-1'></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {historyData?.history?.length > 0 ? (\n                                    <>\n                                        {historyData?.history?.map((item) => {\n                                            let isFutureDate =\n                                                getValidDate(new Date(), 'YYYY-MM-DD 00:00') <\n                                                getValidDate(\n                                                    item?.effective_date,\n                                                    'YYYY-MM-DD 00:00'\n                                                )\n                                            let percantage = percantageChange(\n                                                item?.Upfront?.[0]?.old_upfront_pay_amount,\n                                                item?.Upfront?.[0]?.upfront_pay_amount\n                                            )\n                                            return (\n                                                <tr\n                                                    className='text-cmGrey800 stripRow'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <td\n                                                        className={\n                                                            isFutureDate\n                                                                ? 'p-5 border border-5 border-right-0 border-bottom-0 border-top-0 border-cmSuccess'\n                                                                : 'p-5 text-nowrap'\n                                                        }\n                                                    >\n                                                        {getValidDate(item?.effective_date)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {item?.Upfront?.map((val) => (\n                                                            <div>\n                                                                {' '}\n                                                                {formattedNumberFields(\n                                                                    val?.old_upfront_pay_amount\n                                                                )}{' '}\n                                                                {val?.old_upfront_sale_type}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap text-cmGrey700'>\n                                                        {item?.Upfront?.map((val) => (\n                                                            <div className='d-flex gap-2'>\n                                                                <div>\n                                                                    {' '}\n                                                                    {formattedNumberFields(\n                                                                        val?.upfront_pay_amount\n                                                                    )}{' '}\n                                                                    {val?.upfront_sale_type ?? '-'}\n                                                                </div>\n                                                                {/* {percantage != 0 ? (\n                                                                    <span\n                                                                        className={`text-${\n                                                                            percantage > 0\n                                                                                ? 'cmSuccess'\n                                                                                : 'cmError'\n                                                                        } ms-2`}\n                                                                        style={{\n                                                                            fontSize: '12px',\n                                                                            fontWeight: 500,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFieldsWithoutDecimal(\n                                                                            percantage,\n                                                                            '%'\n                                                                        )}\n                                                                    </span>\n                                                                ) : null} */}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {getValidDate(item?.updated_on)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap  text-start d-flex flex-center gap-3'>\n                                                        <div>\n                                                            <CustomImage\n                                                                className={'w-25px h-25px'}\n                                                            />\n                                                        </div>\n                                                        <div className=' text-cmGrey900'>\n                                                            {item?.updater_by}\n                                                        </div>\n                                                    </td>\n                                                    <td className='p-5 text-nowrap text-center'>\n                                                        {isFutureDate ? (\n                                                            <div\n                                                                className='pi pi-trash text-cmGrey700 cursor-pointer'\n                                                                onClick={() =>\n                                                                    deleteHistoryData(item?.id)\n                                                                }\n                                                            />\n                                                        ) : null}\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <>\n                                        <tr>\n                                            <td className='text-center py-5' colSpan={6}>\n                                                <CustomNoData label={'No data found'} />\n                                            </td>\n                                        </tr>\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                        <Pagination />\n                    </div>\n                ) : null}\n                {/* Organization */}\n                {modalName == MODAL_NAME.Organization ? (\n                    <div className='table-responsive mb-10'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600 text-cmGrey800 border-bottom-1 border-top-1 border-cmGrey300'\n                                    style={{\n                                        fontSize: '12px',\n                                        fontWeight: '600',\n                                        fontFamily: fontsFamily.manrope,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    <th className='text-nowrap px-5 py-1 d-flex align-items-center gap-2'>\n                                        <span>Effective date</span>\n                                        <span\n                                            className='pi pi-sort cursor-pointer'\n                                            onClick={handleSortClick}\n                                        />\n                                    </th>\n                                    <th className='text-nowrap px-5 py-1'>Changed</th>\n                                    <th className='text-nowrap px-5 py-1'>Office State</th>\n                                    <th className='text-nowrap px-5 py-1'>Office Name</th>\n                                    <th className='text-nowrap py-1 px-5'>Manager</th>\n                                    {/* <th className='text-nowrap px-5 py-1'>Position</th> */}\n                                    <th className='text-nowrap px-5 py-1 d-flex align-items-center gap-2'>\n                                        <div className='d-flex'>\n                                            <span>Updated on</span>\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'update_on' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('update_on')\n                                                    setSortingOrder(\n                                                        sortValue !== 'update_on' ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                                                    )\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap px-5 py-1'>Updated by</th>\n                                    <th className='text-nowrap px-5 py-1'></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {historyData?.history?.length > 0 ? (\n                                    <>\n                                        {historyData?.history?.map((item) => {\n                                            let isFutureDate =\n                                                getValidDate(new Date(), 'YYYY-MM-DD 00:00') <\n                                                getValidDate(\n                                                    item?.effective_date,\n                                                    'YYYY-MM-DD 00:00'\n                                                )\n                                            return (\n                                                <tr\n                                                    className='text-cmGrey800 stripRow'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <td\n                                                        className={\n                                                            isFutureDate\n                                                                ? 'p-5 border border-5 border-right-0 border-bottom-0 border-top-0 border-cmSuccess'\n                                                                : 'p-5 text-nowrap'\n                                                        }\n                                                    >\n                                                        {getValidDate(\n                                                            item?.effective_date,\n                                                            'MM/DD/YYYY'\n                                                        ) ?? '-'}\n                                                    </td>\n                                                    <td\n                                                        className='px-5 text-start text-nowrap text-cmGrey600'\n                                                        style={{\n                                                            fontSize: '12px',\n                                                            lineHeight: '25px',\n                                                        }}\n                                                    >\n                                                        <div>From</div>\n                                                        <div>To</div>\n                                                    </td>\n                                                    <td\n                                                        className='px-5 text-nowrap'\n                                                        style={{lineHeight: '25px'}}\n                                                    >\n                                                        <div>{item?.old_state_name ?? '-'}</div>\n                                                        <div>{item?.state_name ?? '-'}</div>\n                                                    </td>\n                                                    <td\n                                                        className='px-5 text-nowrap'\n                                                        style={{lineHeight: '25px'}}\n                                                    >\n                                                        <div>{item?.old_office_name ?? '-'}</div>\n                                                        <div>{item?.office_name ?? '-'}</div>\n                                                    </td>\n                                                    <td\n                                                        className='px-5 text-nowrap text-decoration-underline '\n                                                        style={{lineHeight: '25px'}}\n                                                    >\n                                                        <div>{item?.old_manager_name ?? '-'}</div>\n                                                        <div>{item?.manager_name ?? '-'}</div>\n                                                    </td>\n                                                    {/* <td\n                                                        className='px-5 text-nowrap'\n                                                        style={{lineHeight: '25px'}}\n                                                    >\n                                                        <div>{item?.old_sub_position_name}</div>\n                                                        <div>{item?.sub_position_name}</div>\n                                                    </td> */}\n\n                                                    <td className='p-5 text-nowrap '>\n                                                        {getValidDate(\n                                                            item?.updated_on,\n                                                            'MM/DD/YYYY'\n                                                        )}\n                                                    </td>\n\n                                                    <td className='p-5 text-nowrap  text-start d-flex gap-3'>\n                                                        <div>\n                                                            <CustomImage\n                                                                className={'w-25px h-25px'}\n                                                            />\n                                                        </div>\n                                                        <div className='text-cmGrey900'>\n                                                            {item?.updater_by ?? '-'}\n                                                        </div>\n                                                    </td>\n                                                    <td className='p-5 '>\n                                                        {isFutureDate ? (\n                                                            <div\n                                                                className='pi pi-trash text-cmGrey700 cursor-pointer'\n                                                                onClick={() =>\n                                                                    deleteHistoryData(item?.id)\n                                                                }\n                                                            />\n                                                        ) : null}\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <>\n                                        <tr>\n                                            <td className='text-center py-5' colSpan={8}>\n                                                <CustomNoData label={'No data found'} />\n                                            </td>\n                                        </tr>\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                        <Pagination />\n                    </div>\n                ) : null}\n\n                {/* Overrides */}\n                {modalName == MODAL_NAME.Overrides ? (\n                    <div className='table-responsive mb-10'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600 text-cmGrey800 border-bottom-1 border-top-1 border-cmGrey300'\n                                    style={{\n                                        fontSize: '12px',\n                                        fontWeight: '600',\n                                        fontFamily: fontsFamily.manrope,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    <th className='text-nowrap px-5 py-1 d-flex align-items-center gap-2'>\n                                        <span>Effective date</span>\n                                        <span\n                                            className='pi pi-sort cursor-pointer'\n                                            onClick={handleSortClick}\n                                        />\n                                    </th>\n                                    <th className='text-nowrap  px-5 py-1'>Type</th>\n                                    <th className='text-nowrap  px-5 py-1'>Old Overrides</th>\n                                    <th className='text-nowrap px-5 py-1'>New Overrides</th>\n                                    <th className='text-nowrap  px-5 py-1'>Updated on</th>\n                                    <th className='text-nowrap  text-center py-1 px-5'>\n                                        Updated by\n                                    </th>\n                                    <th className='text-nowrap  text-center px-5 py-1'></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {historyData?.history?.length > 0 ? (\n                                    <>\n                                        {historyData?.history?.map((item) => {\n                                            let isFutureDate =\n                                                getValidDate(new Date(), 'YYYY-MM-DD 00:00') <\n                                                getValidDate(\n                                                    item?.effective_date,\n                                                    'YYYY-MM-DD 00:00'\n                                                )\n\n                                            return (\n                                                <tr\n                                                    className='text-cmGrey800 stripRow'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <td\n                                                        className={\n                                                            isFutureDate\n                                                                ? 'p-5 border border-5 border-right-0 border-bottom-0 border-top-0 border-cmSuccess'\n                                                                : 'p-5 text-nowrap'\n                                                        }\n                                                    >\n                                                        {getValidDate(item?.effective_date)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap '>\n                                                        {item?.overrides?.map(\n                                                            (amount, amountIndex) => {\n                                                                const show =\n                                                                    positionData?.override?.[\n                                                                        amountIndex\n                                                                    ]?.status\n\n                                                                return show ? (\n                                                                    <div className='text-cmGrey900'>\n                                                                        <FirstCapital\n                                                                            label={amount?.type}\n                                                                        />\n                                                                        {/* {amount?.type} */}\n                                                                    </div>\n                                                                ) : null\n                                                            }\n                                                        )}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap '>\n                                                        {item?.overrides?.map(\n                                                            (amount, amountIndex) => {\n                                                                const show =\n                                                                    positionData?.override?.[\n                                                                        amountIndex\n                                                                    ]?.status\n\n                                                                let isOldOverridePercent =\n                                                                    amount?.old_type == 'percent'\n                                                                        ? true\n                                                                        : false\n                                                                return show ? (\n                                                                    <div className='text-cmGrey900'>\n                                                                        {formattedNumberFields(\n                                                                            amount?.old_amount,\n                                                                            isOldOverridePercent\n                                                                                ? ''\n                                                                                : amount?.type ==\n                                                                                  'office_stack'\n                                                                                ? '%'\n                                                                                : '$'\n                                                                        )}{' '}\n                                                                        {isOldOverridePercent\n                                                                            ? '%'\n                                                                            : amount?.old_type}\n                                                                    </div>\n                                                                ) : null\n                                                            }\n                                                        )}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap '>\n                                                        {item?.overrides?.map(\n                                                            (amount, amountIndex) => {\n                                                                const show =\n                                                                    positionData?.override?.[\n                                                                        amountIndex\n                                                                    ]?.status\n                                                                let isNewOverridePercent =\n                                                                    amount?.new_type == 'percent'\n                                                                        ? true\n                                                                        : false\n                                                                return show ? (\n                                                                    <div className='text-cmGrey900'>\n                                                                        {formattedNumberFields(\n                                                                            amount?.new_amount,\n                                                                            isNewOverridePercent\n                                                                                ? ''\n                                                                                : amount?.type ==\n                                                                                  'office_stack'\n                                                                                ? '%'\n                                                                                : '$'\n                                                                        )}{' '}\n                                                                        {isNewOverridePercent\n                                                                            ? '%'\n                                                                            : amount?.new_type}\n                                                                    </div>\n                                                                ) : null\n                                                            }\n                                                        )}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {getValidDate(item?.updated_on)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap  text-start d-flex flex-center gap-3'>\n                                                        <div>\n                                                            <CustomImage\n                                                                className={'w-25px h-25px'}\n                                                                src={item?.updater_by?.image}\n                                                            />\n                                                        </div>\n                                                        <div className='text-decoration-underline text-cmGrey900'>\n                                                            {item?.updater_by?.first_name}{' '}\n                                                            {item?.updater_by?.last_name}\n                                                        </div>\n                                                    </td>\n                                                    {isFutureDate ? (\n                                                        <td className='p-5 text-nowrap text-center '>\n                                                            <div\n                                                                className='pi pi-trash text-cmGrey700 cursor-pointer'\n                                                                onClick={() =>\n                                                                    deleteHistoryData(item?.id)\n                                                                }\n                                                            />\n                                                        </td>\n                                                    ) : (\n                                                        <td></td>\n                                                    )}\n                                                </tr>\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <>\n                                        <tr>\n                                            <td className='text-center py-5' colSpan={6}>\n                                                <CustomNoData label={'No data found'} />\n                                            </td>\n                                        </tr>\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                        <Pagination />\n                    </div>\n                ) : null}\n\n                {/* Overrides */}\n                {modalName == MODAL_NAME.Withheld ? (\n                    <div className='table-responsive mb-10'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600 text-cmGrey800 border-bottom-1 border-top-1 border-cmGrey300'\n                                    style={{\n                                        fontSize: '12px',\n                                        fontWeight: '600',\n                                        fontFamily: fontsFamily.manrope,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    <th className='text-nowrap px-5 py-1 d-flex align-items-center gap-2'>\n                                        <span>Effective date</span>\n                                        <span\n                                            className='pi pi-sort cursor-pointer'\n                                            onClick={handleSortClick}\n                                        />\n                                    </th>\n                                    <th className='text-nowrap  px-5 py-1'>Old Amount</th>\n                                    <th className='text-nowrap px-5 py-1'>New Amount</th>\n                                    <th className='text-nowrap  px-5 py-1'>Updated on</th>\n                                    <th className='text-nowrap  text-center py-1 px-5'>\n                                        Updated by\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {historyData?.history?.length > 0 ? (\n                                    <>\n                                        {historyData?.history?.map((item) => {\n                                            let isFutureDate =\n                                                getValidDate(new Date(), 'YYYY-MM-DD 00:00') <\n                                                getValidDate(\n                                                    item?.effective_date,\n                                                    'YYYY-MM-DD 00:00'\n                                                )\n                                            let percantage = percantageChange(\n                                                item?.Withheld?.[0]?.old_withheld_amount,\n                                                item?.Withheld?.[0]?.withheld_amount\n                                            )\n                                            return (\n                                                <tr\n                                                    className='text-cmGrey800 stripRow'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <td\n                                                        className={\n                                                            isFutureDate\n                                                                ? 'p-5 border border-5 border-right-0 border-bottom-0 border-top-0 border-cmSuccess'\n                                                                : 'p-5 text-nowrap'\n                                                        }\n                                                    >\n                                                        {getValidDate(item?.effective_date)}\n                                                    </td>\n\n                                                    <td className='p-5 text-nowrap '>\n                                                        {item?.Withheld?.map((amount) => (\n                                                            <div className='text-cmGrey900'>\n                                                                {formattedNumberFields(\n                                                                    amount?.old_withheld_amount\n                                                                )}{' '}\n                                                                {amount?.old_withheld_type}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {item?.Withheld?.map((amount) => (\n                                                            <div className='d-flex'>\n                                                                <div className='text-cmGrey900'>\n                                                                    {formattedNumberFields(\n                                                                        amount?.withheld_amount\n                                                                    )}{' '}\n                                                                    {amount?.withheld_type}\n                                                                </div>\n                                                                {/* {percantage != 0 ? (\n                                                                    <span\n                                                                        className={`text-${\n                                                                            percantage > 0\n                                                                                ? 'cmSuccess'\n                                                                                : 'cmError'\n                                                                        } ms-2`}\n                                                                        style={{\n                                                                            fontSize: '12px',\n                                                                            fontWeight: 500,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFieldsWithoutDecimal(\n                                                                            percantage,\n                                                                            '%'\n                                                                        )}\n                                                                    </span>\n                                                                ) : null} */}\n                                                            </div>\n                                                        ))}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap'>\n                                                        {getValidDate(item?.updated_on)}\n                                                    </td>\n                                                    <td className='p-5 text-nowrap  text-start d-flex flex-center gap-3'>\n                                                        <div>\n                                                            <CustomImage\n                                                                className={'w-25px h-25px'}\n                                                                src={item?.updater_by?.image}\n                                                            />\n                                                        </div>\n                                                        <div className='text-decoration-underline text-cmGrey900'>\n                                                            {item?.updater_by}{' '}\n                                                        </div>\n                                                    </td>\n                                                    {isFutureDate ? (\n                                                        <td className='p-5 text-nowrap text-center '>\n                                                            <div\n                                                                className='pi pi-trash text-cmGrey700 cursor-pointer'\n                                                                onClick={() =>\n                                                                    deleteHistoryData(item?.id)\n                                                                }\n                                                            />\n                                                        </td>\n                                                    ) : (\n                                                        <td></td>\n                                                    )}\n                                                </tr>\n                                            )\n                                        })}\n                                    </>\n                                ) : (\n                                    <>\n                                        <tr>\n                                            <td className='text-center py-5' colSpan={6}>\n                                                <CustomNoData label={'No data found'} />\n                                            </td>\n                                        </tr>\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                        <Pagination />\n                    </div>\n                ) : null}\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default CustomViewChnagesEmployementPackageModal\n","import React from 'react'\n\nconst FirstCapital = ({label}) => {\n    return <>{label.charAt(0).toUpperCase() + label.slice(1)}</>\n}\n\nexport default FirstCapital\n","import React, {useCallback, useEffect, useState} from 'react'\nimport {Dialog} from 'primereact/dialog'\nimport {\n    getAllManagerListService,\n    getUsersByManagerIdService,\n    reAssignManagerService,\n} from '../../../../../../../services/Services'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\n\nconst AssignManagerModal = ({show, handleClose, onSuccess, employeeData}) => {\n    const [managerList, setManagerList] = useState([])\n    const [usersList, setUsersList] = useState([])\n    const [managerLoading, setManagerLoading] = useState(true)\n    const [userLoading, setUserLoading] = useState(false)\n\n    useEffect(() => {\n        setManagerList([])\n        if (employeeData?.office_id) {\n            getAllManagerListService(employeeData?.office_id).then((res) => {\n                setManagerList(res?.data?.filter((item) => item?.id != employeeData?.id))\n            })\n        }\n    }, [employeeData?.office_id])\n\n    useEffect(() => {\n        if (employeeData?.id) {\n            setUserLoading(true)\n            getUsersByManagerIdService(employeeData?.id)\n                .then((res) => {\n                    setUsersList(res?.data?.user)\n                })\n                .finally(() => {\n                    setManagerLoading(false)\n                    setUserLoading(false)\n                })\n        }\n    }, [employeeData?.id])\n\n    const onReassign = useCallback(() => {\n        const ifEmptyManager =\n            usersList?.length > 0 ? usersList?.some((item) => !item?.manager_id) : true\n        if (ifEmptyManager) return CustomToast.error(`Select all user's new manager`)\n        const body = {\n            old_manager_id: employeeData?.id,\n            users: usersList.map((item) => ({\n                user_id: item?.user_id,\n                manager_id: item?.manager_id,\n            })),\n        }\n\n        setManagerLoading(true)\n        reAssignManagerService(body)\n            .then(() => {\n                onSuccess()\n                CustomToast.success('Manager Assigned Successfully')\n            })\n            .finally(() => setManagerLoading(false))\n    }, [employeeData?.id, onSuccess, usersList])\n\n    const changedManagerOfUser = (userIndex, managerId) => {\n        const uList = [...usersList]\n        uList[userIndex].manager_id = managerId\n        setUsersList(uList)\n    }\n\n    const changeManagerOfAllEmployee = (e) => {\n        const uList = [...usersList]\n        const finalUList = uList.map((item) => ({...item, manager_id: e?.target?.value}))\n        setUsersList(finalUList)\n    }\n    return (\n        <Dialog\n            id='kt_modal_create_app'\n            tabIndex={-1}\n            aria-hidden='true'\n            header={() => (\n                <div className=' w-100 '>\n                    <div\n                        style={{\n                            fontSize: '16px',\n                            color: '#0D1821',\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                        }}\n                    >\n                        Assign New Manager\n                    </div>\n                    <hr className=' mb-0 pb-0 text-cmGrey900' />\n                </div>\n            )}\n            icons={false}\n            className='mw-sm-800px w-sm-75 h-75'\n            visible={show}\n            onHide={handleClose}\n            backdrop={true}\n            footer={() => (\n                <div className='text-center'>\n                    <div\n                        className='btn bg-cmBlue-Crayola py-2 px-20 text-cmwhite'\n                        style={{fontWeight: '500'}}\n                        onClick={onReassign}\n                    >\n                        Save\n                    </div>\n                </div>\n            )}\n        >\n            <div>\n                <div\n                    className='m-0 p-0'\n                    style={{fontFamily: 'Manrope', fontSize: '14px', position: 'relative'}}\n                >\n                    <CustomLoader full visible={managerLoading} />\n\n                    <div className=''>\n                        <div className='modal-body  py-2 px-lg-10 mb-5'>\n                            <div className='py-lg-7 px-lg-10 '>\n                                <>\n                                    <div\n                                        className='d-flex align-items-center flex-wrap justify-content-between'\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    >\n                                        <div>\n                                            <h4\n                                                className='text-cmGrey800 mb-sm-5 mb-3'\n                                                style={{fontWeight: '900'}}\n                                            >\n                                                Select manager for all employees:\n                                            </h4>\n                                        </div>\n                                        <div className='w-sm-25 w-100'>\n                                            <select\n                                                style={{\n                                                    fontWeight: '700',\n                                                    fontSize: '14px',\n                                                }}\n                                                onChange={changeManagerOfAllEmployee}\n                                                data-control='select2'\n                                                data-hide-search='true'\n                                                className='form-select form-select-black form-select-sm text-cmGrey800 bg-cmGrey200 cursor-pointer'\n                                            >\n                                                <option style={{fontWeight: 600}} value=''>\n                                                    Select Manager\n                                                </option>\n                                                {managerList.map((managerItem) => (\n                                                    <option\n                                                        key={managerItem?.id}\n                                                        style={{fontWeight: 600}}\n                                                        value={managerItem?.id}\n                                                    >\n                                                        {managerItem?.first_name}&nbsp;\n                                                        {managerItem?.last_name}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <hr style={{height: '2px'}} />\n                                    <div\n                                        className='d-flex align-items-center flex-wrap justify-content-between'\n                                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                    >\n                                        <div className='w-sm-25 w-100'>\n                                            <label\n                                                className='text-cmGrey800 mb-sm-5 mb-3 text-decoration-underline'\n                                                style={{fontWeight: '600'}}\n                                            >\n                                                Name:\n                                            </label>\n                                        </div>\n                                        <div className='w-sm-25 w-100'>\n                                            <label\n                                                className='text-cmGrey800 mb-sm-5 mb-3 text-decoration-underline '\n                                                style={{fontWeight: '600'}}\n                                            >\n                                                Position:\n                                            </label>\n                                        </div>\n\n                                        <div className='w-sm-25 w-100'>\n                                            <div\n                                                className='text-cmGrey800 mb-sm-5 mb-3 text-decoration-underline'\n                                                style={{fontWeight: '600'}}\n                                            >\n                                                New Manager:\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>\n                                <div\n                                    style={{\n                                        position: 'relative',\n                                    }}\n                                >\n                                    <CustomLoader full visible={userLoading} />\n                                    {usersList?.map((item, index) => (\n                                        <div key={index}>\n                                            <hr style={{height: '2px'}} />\n                                            <div\n                                                className='d-flex align-items-center flex-wrap justify-content-between'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontSize: '14px',\n                                                    position: 'relative',\n                                                }}\n                                            >\n                                                <div className='w-sm-25 w-100'>\n                                                    <div\n                                                        className='text-cmGrey600 mb-3'\n                                                        style={{fontWeight: '600'}}\n                                                    >\n                                                        {item?.first_name} {item?.last_name}\n                                                    </div>\n                                                </div>\n                                                <div className='w-sm-25 w-100'>\n                                                    <div\n                                                        className='text-cmGrey600 mb-3'\n                                                        style={{fontWeight: '600'}}\n                                                    >\n                                                        {item?.['position_name ']}\n                                                    </div>\n                                                </div>\n\n                                                <div className='w-sm-25 w-100'>\n                                                    <select\n                                                        style={{\n                                                            fontWeight: '700',\n                                                            fontSize: '14px',\n                                                        }}\n                                                        value={item?.manager_id}\n                                                        onChange={(e) => {\n                                                            changedManagerOfUser(\n                                                                index,\n                                                                e?.target?.value\n                                                            )\n                                                        }}\n                                                        data-control='select2'\n                                                        data-hide-search='true'\n                                                        className='form-select form-select-black form-select-sm text-cmGrey800 bg-cmGrey200 cursor-pointer'\n                                                    >\n                                                        <option style={{fontWeight: 600}} value=''>\n                                                            Select Manager\n                                                        </option>\n                                                        {managerList.map((managerItem) => (\n                                                            <option\n                                                                key={managerItem?.id}\n                                                                style={{fontWeight: 600}}\n                                                                value={managerItem?.id}\n                                                            >\n                                                                {managerItem?.first_name}&nbsp;\n                                                                {managerItem?.last_name}\n                                                            </option>\n                                                        ))}\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default AssignManagerModal\n","import {\n    MAIN_POSITTIONS_ID,\n    OVERRIDE_TYPE,\n    UNIT_TYPE1,\n    UNIT_TYPE2,\n    SHOW_BASED_ON_HOST,\n} from '../../../../../../../constants/constants'\nimport {LockedView} from '../HireNew'\nimport {HIRE_FIELD_KEYS} from '../../../../../../../constants/constants'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport _ from 'lodash'\nimport {\n    getBooleanValue,\n    getErrorMessageFromResponse,\n    percentageLimitCheck,\n} from '../../../../../../../helpers/CommonHelpers'\nimport useUserEmploymentPackage, {\n    USER_TYPE,\n} from '../../../../../../../hooks/useUserEmploymentPackage'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {useSelector} from 'react-redux'\nimport {\n    getCompanySettingSelector,\n    getDepartmentWithPositionSelector,\n} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomCheckbox from '../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomButton from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\n\nconst ChangePositionModal = ({\n    showChangePositionModal,\n    onCloseChangePositionModal,\n    userType,\n    empData,\n}) => {\n    const [effectiveDate, setEffectiveDate] = useState(new Date())\n    const companySetting = useSelector(getCompanySettingSelector)\n\n    const {\n        loading,\n        redlineLoading,\n        organizationLoading,\n        overrideLoading,\n        saveEmploymentPackage,\n        employeeData,\n        getPositionData,\n        setEmployeeData,\n        isStackModalEnabled,\n        bothPositionData,\n        userAssociatedOffices,\n        firstPositionDetail,\n        secondPositionDetail,\n        selectedPrimaryOffice,\n        parentPositionData,\n    } = useUserEmploymentPackage({\n        prefieldData: empData,\n        id: empData?.id,\n        userType: USER_TYPE.hiredEmployee,\n        callOnLoadApi: false,\n    })\n\n    const updateEmployeeData = useCallback(\n        (field, value) => {\n            setEmployeeData((val) => ({\n                ...val,\n                [field]: value,\n            }))\n        },\n        [setEmployeeData]\n    )\n\n    const updateMultipleKeysOfEmployeeData = useCallback(\n        (data) => {\n            setEmployeeData(data)\n        },\n        [setEmployeeData]\n    )\n\n    const departmentWithPositionList = useSelector(getDepartmentWithPositionSelector)\n\n    const departmentList = useMemo(() => {\n        return departmentWithPositionList?.filter((item) => item?.position?.length > 0)\n    }, [departmentWithPositionList])\n\n    const positionList = useMemo(\n        () => departmentList?.find((item) => item?.id == employeeData?.department_id)?.position,\n        [departmentList, employeeData?.department_id]\n    )\n\n    const onChangeCompensationData = (index, e) => {\n        const data = [...employeeData?.employee_compensation]\n        data[index][e?.target?.name] = e?.target?.value\n        updateEmployeeData(HIRE_FIELD_KEYS.employee_compensation, data)\n    }\n\n    useEffect(() => {\n        if (employeeData?.employee_compensation) {\n            let employeeCompensationData = _.cloneDeep(employeeData?.employee_compensation)\n            employeeCompensationData[0].commission_effective_date = effectiveDate\n            employeeCompensationData[0].upfront_effective_date = effectiveDate\n            employeeCompensationData[0].redline_effective_date = effectiveDate\n            employeeCompensationData[0].withheld_effective_date = effectiveDate\n            employeeCompensationData[1].commission_effective_date = effectiveDate\n            employeeCompensationData[1].upfront_effective_date = effectiveDate\n            employeeCompensationData[1].redline_effective_date = effectiveDate\n            employeeCompensationData[1].withheld_effective_date = effectiveDate\n            updateMultipleKeysOfEmployeeData({\n                ...employeeData,\n                [HIRE_FIELD_KEYS.employee_compensation]: employeeCompensationData,\n                [HIRE_FIELD_KEYS.override_effective_date]: effectiveDate,\n            })\n        }\n    }, [effectiveDate])\n\n    const onUpdatePositionPress = useCallback(() => {\n        saveEmploymentPackage.organisationValidation(null, true).then(() => {\n            saveEmploymentPackage.commissionAndRedlineValidation(true).then(() => {\n                saveEmploymentPackage.overrideValidation(true).then(() => {\n                    // Final Store\n                    saveEmploymentPackage\n                        .organisationValidation(null)\n                        .then(() => {\n                            saveEmploymentPackage\n                                .commissionAndRedlineValidation()\n                                .then(() => {\n                                    saveEmploymentPackage\n                                        .overrideValidation()\n                                        .then(() => {\n                                            onCloseChangePositionModal()\n                                        })\n                                        .catch((e) => {\n                                            CustomToast.error(\n                                                `Error While Store Overrides: ${getErrorMessageFromResponse(\n                                                    e\n                                                )}`\n                                            )\n                                        })\n                                })\n                                .catch((e) => {\n                                    CustomToast.error(\n                                        `Error While Store Compemsation Plan: ${getErrorMessageFromResponse(\n                                            e\n                                        )}`\n                                    )\n                                })\n                        })\n                        .catch((e) => {\n                            CustomToast.error(\n                                `Error While Store Position: ${getErrorMessageFromResponse(e)}`\n                            )\n                        })\n                })\n            })\n        })\n    }, [onCloseChangePositionModal, saveEmploymentPackage])\n\n    const onChangeInputData = (e) => {\n        updateEmployeeData(e?.target?.name, e?.target?.value)\n    }\n\n    const onChangeInputDataWithLimit = (e) => {\n        if (percentageLimitCheck(100, e.target.value)) onChangeInputData(e)\n    }\n\n    const onChangeOverridesType = (e, override) => {\n        updateEmployeeData(override, null)\n        onChangeInputData(e)\n    }\n\n    const isOverrideTypeIsPercent = useCallback((val) => {\n        return val == 'percent'\n    }, [])\n\n    const updateAdditionalOfficeOverrideData = (additionalOfficeIndex, key, value) => {\n        const data = _.cloneDeep(employeeData?.additional_locations)\n        data[additionalOfficeIndex][key] = value\n        updateEmployeeData(HIRE_FIELD_KEYS.additional_locations, data)\n    }\n    const updateAdditionalOfficeOverrideType = (additionalOfficeIndex, key, value) => {\n        const data = _.cloneDeep(employeeData?.additional_locations)\n        data[additionalOfficeIndex][key] = value\n        data[additionalOfficeIndex]['overrides_amount'] = null\n        updateEmployeeData(HIRE_FIELD_KEYS.additional_locations, data)\n    }\n\n    return (\n        <CustomModal\n            show={showChangePositionModal}\n            onHide={onCloseChangePositionModal}\n            title={'Change Position'}\n        >\n            <CustomLoader\n                full\n                visible={loading || redlineLoading || organizationLoading || overrideLoading}\n            />\n            <div\n                className='mb-sm-15 p-5'\n                style={{fontSize: '14px'}}\n                data-kt-stepper-element='content'\n            >\n                <div className='w-sm-75 mx-auto w-100'>\n                    {/* Organisation */}\n                    <div className='mt-4 '>\n                        <div className='row -align-items-center'>\n                            <div className='col-sm text-cmGrey700'>\n                                <div className=''>\n                                    <CustomDropdown\n                                        label={'Department'}\n                                        required\n                                        options={departmentList}\n                                        placeholder='Select Department'\n                                        name={HIRE_FIELD_KEYS.department_id}\n                                        value={employeeData.department_id ?? ''}\n                                        valueKey='id'\n                                        onChange={(e) => {\n                                            updateMultipleKeysOfEmployeeData({\n                                                ...employeeData,\n                                                [HIRE_FIELD_KEYS.position_id]: null,\n                                                [HIRE_FIELD_KEYS.sub_position_id]: null,\n                                                [HIRE_FIELD_KEYS.department_id]: e?.target?.value,\n                                            })\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                            <div className='col-sm text-cmGrey700'>\n                                <div className=''>\n                                    <CustomDropdown\n                                        label={'Position'}\n                                        required\n                                        options={positionList}\n                                        placeholder='Select Position'\n                                        valueKey='id'\n                                        onChange={(e) => {\n                                            getPositionData(e?.target?.value, false, true)\n                                        }}\n                                        name={HIRE_FIELD_KEYS.sub_position_id}\n                                        value={employeeData.sub_position_id ?? ''}\n                                        displayKey='position_name'\n                                    />\n                                    <div className='mt-5 d-flex align-itmes-center gap-3 mt-5'>\n                                        <CustomCheckbox\n                                            checked={\n                                                getBooleanValue(employeeData?.self_gen_accounts) ==\n                                                1\n                                                    ? true\n                                                    : false\n                                            }\n                                            onChange={(e) => {\n                                                const val =\n                                                    getBooleanValue(\n                                                        employeeData?.self_gen_accounts\n                                                    ) == 1\n                                                        ? 0\n                                                        : 1\n                                                if (val) {\n                                                    getPositionData(\n                                                        MAIN_POSITTIONS_ID.closer ==\n                                                            parentPositionData?.id\n                                                            ? MAIN_POSITTIONS_ID.setter\n                                                            : MAIN_POSITTIONS_ID.closer,\n                                                        true,\n                                                        true\n                                                    )\n                                                } else {\n                                                    updateEmployeeData(\n                                                        HIRE_FIELD_KEYS.self_gen_accounts,\n                                                        val\n                                                    )\n                                                }\n                                            }}\n                                        />\n\n                                        <span\n                                            className='text-cmGrey700 text-wrap'\n                                            style={{fontWeight: 600}}\n                                        >\n                                            May act as both setter and closer\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Effective Date */}\n                    <div className='mt-4 '>\n                        <div className='row -align-items-center'>\n                            <div className='col-sm text-cmGrey700'>\n                                <div className=''>\n                                    <CustomDatePicker\n                                        label={`Effective date for whole compensation plan`}\n                                        required\n                                        onChange={(e) => setEffectiveDate(e?.target?.value)}\n                                        value={effectiveDate}\n                                        placeholder='Effective date for whole compensation plan'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Compensation Plan */}\n                    {(employeeData?.self_gen_accounts ? [0, 1] : [0])?.map((positionIndex) => {\n                        const positionDetail =\n                            positionIndex == 0 ? firstPositionDetail : secondPositionDetail\n                        const positionName =\n                            bothPositionData?.[\n                                positionIndex == 0 ? 'firstPosition' : 'secondPosition'\n                            ]?.name\n                        return (\n                            <div className='w-100 pt-5'>\n                                {positionIndex == 0 ? (\n                                    <span style={{fontWeight: 600, textDecoration: 'underline'}}>\n                                        Primary Position:{' '}\n                                        <span style={{fontWeight: 400}}>{positionName}</span>\n                                    </span>\n                                ) : null}\n                                {positionIndex == 1 && <hr className='text-black my-5' />}\n                                <div className='w-100'>\n                                    <div className='container mt-5'>\n                                        <div className='row'>\n                                            <div className='col'>\n                                                <CustomInput\n                                                    label={`${positionName} Commission`}\n                                                    required\n                                                    suffixText='%'\n                                                    disabled={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        positionDetail?.commission_parentag_hiring_locked\n                                                    }\n                                                    name={HIRE_FIELD_KEYS.commission}\n                                                    onChange={(e) => {\n                                                        if (\n                                                            percentageLimitCheck(\n                                                                100,\n                                                                e.target.value\n                                                            )\n                                                        )\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                    }}\n                                                    value={\n                                                        employeeData?.employee_compensation?.[\n                                                            positionIndex\n                                                        ]?.commission\n                                                    }\n                                                    placeholder='Comission'\n                                                />\n                                                <LockedView\n                                                    visible={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        positionDetail?.commission_parentag_hiring_locked\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className='container mt-5'>\n                                        <div className='d-flex flex-wrap g-2'>\n                                            <div\n                                                className='col text-cmGrey700'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontSize: '14px',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <label className='d-flex  flex-wrap'>\n                                                    <CustomDropdown\n                                                        label={`${positionName} Redline Type`}\n                                                        required\n                                                        options={[\n                                                            {\n                                                                name: 'Shift based on Location',\n                                                                value: 'Shift based on Location',\n                                                            },\n                                                            {\n                                                                name: 'Fixed',\n                                                                value: 'Fixed',\n                                                            },\n                                                        ]}\n                                                        name={HIRE_FIELD_KEYS.redline_amount_type}\n                                                        onChange={(e) =>\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                        }\n                                                        value={\n                                                            employeeData?.employee_compensation?.[\n                                                                positionIndex\n                                                            ]?.redline_amount_type\n                                                        }\n                                                        searching={false}\n                                                    />\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className='container mt-5'>\n                                        <div className='d-flex flex-wrap'>\n                                            <div\n                                                className='col text-cmGrey700'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontSize: '14px',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <div className='row align-items-end mb-5 gap-md-0'>\n                                                    <div className='col-md'>\n                                                        <CustomInput\n                                                            label={`${positionName}${\n                                                                isStackModalEnabled &&\n                                                                positionIndex == 0 &&\n                                                                positionName == 'Closer'\n                                                                    ? ' and Stack'\n                                                                    : ''\n                                                            } Redline`}\n                                                            required\n                                                            prefixText='$'\n                                                            type={INPUT_TYPE.number}\n                                                            name={HIRE_FIELD_KEYS.redline}\n                                                            onChange={(e) =>\n                                                                onChangeCompensationData(\n                                                                    positionIndex,\n                                                                    e\n                                                                )\n                                                            }\n                                                            value={\n                                                                employeeData\n                                                                    ?.employee_compensation?.[\n                                                                    positionIndex\n                                                                ]?.redline\n                                                            }\n                                                        />\n                                                    </div>\n                                                    <div className='mt-5 col-md-5'>\n                                                        <CustomDropdown\n                                                            // label={`${positionName} Redline Amount Type`}\n                                                            name={HIRE_FIELD_KEYS.redline_type}\n                                                            onChange={(e) =>\n                                                                onChangeCompensationData(\n                                                                    positionIndex,\n                                                                    e\n                                                                )\n                                                            }\n                                                            value={\n                                                                employeeData\n                                                                    ?.employee_compensation?.[\n                                                                    positionIndex\n                                                                ]?.redline_type\n                                                            }\n                                                            options={UNIT_TYPE2}\n                                                            placeholder={`${positionName} Redline Amount Type`}\n                                                            searching={false}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    {positionDetail?.upfront_status ? (\n                                        <div className='container mt-10'>\n                                            <div className=''>\n                                                <div\n                                                    className='text-cmGrey700'\n                                                    style={{\n                                                        fontFamily: 'Manrope',\n                                                        fontSize: '14px',\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <div className='row gap-md-0'>\n                                                        <div className='col-md'>\n                                                            <CustomInput\n                                                                required\n                                                                label={`${positionName} Upfront Pay \n                                                                                                                      `}\n                                                                prefixText={'$'}\n                                                                type={INPUT_TYPE.number}\n                                                                disabled={\n                                                                    userType ==\n                                                                        USER_TYPE.onboardEmployee &&\n                                                                    positionDetail?.upfront_ammount_locked\n                                                                }\n                                                                name={\n                                                                    HIRE_FIELD_KEYS.upfront_pay_amount\n                                                                }\n                                                                onChange={(e) =>\n                                                                    onChangeCompensationData(\n                                                                        positionIndex,\n                                                                        e\n                                                                    )\n                                                                }\n                                                                value={\n                                                                    employeeData\n                                                                        ?.employee_compensation?.[\n                                                                        positionIndex\n                                                                    ]?.upfront_pay_amount\n                                                                }\n                                                                placeholder='0'\n                                                            />\n                                                            <LockedView\n                                                                visible={\n                                                                    userType ==\n                                                                        USER_TYPE.onboardEmployee &&\n                                                                    positionDetail?.upfront_ammount_locked\n                                                                }\n                                                            />\n                                                        </div>\n\n                                                        <div className='col-md-5'>\n                                                            <CustomDropdown\n                                                                label='Type'\n                                                                hideLabel\n                                                                name={\n                                                                    HIRE_FIELD_KEYS.upfront_sale_type\n                                                                }\n                                                                onChange={(e) =>\n                                                                    onChangeCompensationData(\n                                                                        positionIndex,\n                                                                        e\n                                                                    )\n                                                                }\n                                                                value={\n                                                                    employeeData\n                                                                        ?.employee_compensation?.[\n                                                                        positionIndex\n                                                                    ]?.upfront_sale_type\n                                                                }\n                                                                disabled={\n                                                                    userType ==\n                                                                        USER_TYPE.onboardEmployee &&\n                                                                    positionDetail?.calculated_locked\n                                                                }\n                                                                options={UNIT_TYPE1}\n                                                                placeholder='Select unit'\n                                                            />\n                                                            <LockedView\n                                                                visible={\n                                                                    userType ==\n                                                                        USER_TYPE.onboardEmployee &&\n                                                                    positionDetail?.calculated_locked\n                                                                }\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ) : null}\n\n                                    {positionDetail?.reconciliation_status &&\n                                    companySetting?.reconciliation ? (\n                                        <div className='container mt-10'>\n                                            <div\n                                                className=' text-cmGrey700'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontSize: '14px',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <div className='row gap-md-0'>\n                                                    <div className='col-md'>\n                                                        <CustomInput\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.commission_withheld_locked\n                                                            }\n                                                            required\n                                                            label={`${positionName} withheld amount`}\n                                                            prefixText={'$'}\n                                                            type={INPUT_TYPE.number}\n                                                            name={HIRE_FIELD_KEYS.withheld_amount}\n                                                            onChange={(e) =>\n                                                                onChangeCompensationData(\n                                                                    positionIndex,\n                                                                    e\n                                                                )\n                                                            }\n                                                            value={\n                                                                employeeData\n                                                                    ?.employee_compensation?.[\n                                                                    positionIndex\n                                                                ]?.withheld_amount\n                                                            }\n                                                            placeholder='0'\n                                                        />\n                                                        <LockedView\n                                                            visible={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.commission_withheld_locked\n                                                            }\n                                                        />\n                                                    </div>\n\n                                                    <div className='col-md-5'>\n                                                        <CustomDropdown\n                                                            label='Type'\n                                                            hideLabel\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.commission_type_locked\n                                                            }\n                                                            name={HIRE_FIELD_KEYS.withheld_type}\n                                                            onChange={(e) =>\n                                                                onChangeCompensationData(\n                                                                    positionIndex,\n                                                                    e\n                                                                )\n                                                            }\n                                                            value={\n                                                                employeeData\n                                                                    ?.employee_compensation?.[\n                                                                    positionIndex\n                                                                ]?.withheld_type\n                                                            }\n                                                            options={UNIT_TYPE1}\n                                                            placeholder='Select unit'\n                                                        />\n                                                        <LockedView\n                                                            visible={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.commission_type_locked\n                                                            }\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ) : null}\n                                </div>\n                            </div>\n                        )\n                    })}\n\n                    {/* Overrides */}\n                    <div className=''>\n                        <div className='d-flex w-100 align-items-center justify-content-center my-10'>\n                            <hr className='w-40' />\n                            <span className='mx-5' style={{fontWeight: 'bold'}}>\n                                Overrides\n                            </span>\n                            <hr className='w-40' />\n                        </div>\n                        {firstPositionDetail?.override?.[0]?.status ||\n                        firstPositionDetail?.override?.[1]?.status ||\n                        firstPositionDetail?.override?.[2]?.status ||\n                        (isStackModalEnabled && firstPositionDetail?.override?.[3]?.status) ? (\n                            <>\n                                {/* Direct Overrides */}\n                                {firstPositionDetail?.override?.[0]?.status ? (\n                                    <div className='container mb-5' style={{}}>\n                                        <div className='row text-cmGrey700'>\n                                            <div className='row align-items-end'>\n                                                <div className='col-sm'>\n                                                    <div>\n                                                        <CustomInput\n                                                            label={'Direct Overrides'}\n                                                            prefixText={\n                                                                isOverrideTypeIsPercent(\n                                                                    employeeData.direct_overrides_type\n                                                                )\n                                                                    ? ''\n                                                                    : '$'\n                                                            }\n                                                            suffixText={\n                                                                isOverrideTypeIsPercent(\n                                                                    employeeData.direct_overrides_type\n                                                                )\n                                                                    ? '%'\n                                                                    : ''\n                                                            }\n                                                            type={INPUT_TYPE.number}\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                firstPositionDetail?.override?.[0]\n                                                                    ?.override_ammount_locked\n                                                            }\n                                                            onChange={\n                                                                isOverrideTypeIsPercent(\n                                                                    employeeData.direct_overrides_type\n                                                                )\n                                                                    ? onChangeInputDataWithLimit\n                                                                    : onChangeInputData\n                                                            }\n                                                            name={\n                                                                HIRE_FIELD_KEYS.direct_overrides_amount\n                                                            }\n                                                            value={\n                                                                employeeData.direct_overrides_amount\n                                                            }\n                                                            placeholder='50'\n                                                        />\n                                                    </div>\n                                                    <LockedView\n                                                        visible={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            firstPositionDetail?.override?.[0]\n                                                                ?.override_ammount_locked\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className='col-sm'>\n                                                    <label className=''>\n                                                        <CustomDropdown\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                firstPositionDetail?.override?.[0]\n                                                                    ?.override_type_locked\n                                                            }\n                                                            onChange={(e) =>\n                                                                onChangeOverridesType(\n                                                                    e,\n                                                                    HIRE_FIELD_KEYS.direct_overrides_amount\n                                                                )\n                                                            }\n                                                            name={\n                                                                HIRE_FIELD_KEYS.direct_overrides_type\n                                                            }\n                                                            value={\n                                                                employeeData.direct_overrides_type ??\n                                                                ''\n                                                            }\n                                                            options={OVERRIDE_TYPE}\n                                                            searching={false}\n                                                        />\n                                                    </label>\n                                                    <LockedView\n                                                        visible={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            firstPositionDetail?.override?.[0]\n                                                                ?.override_type_locked\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <p></p>\n                                )}\n\n                                {/* Indirect Overrides */}\n                                {firstPositionDetail?.override?.[1]?.status ? (\n                                    <div className='container mb-5' style={{}}>\n                                        <div className='row text-cmGrey700'>\n                                            <div className='row align-items-end'>\n                                                <div className='col-sm'>\n                                                    <div className=''>\n                                                        <CustomInput\n                                                            label={'Indirect Overrides'}\n                                                            prefixText={\n                                                                isOverrideTypeIsPercent(\n                                                                    employeeData.indirect_overrides_type\n                                                                )\n                                                                    ? ''\n                                                                    : '$'\n                                                            }\n                                                            suffixText={\n                                                                isOverrideTypeIsPercent(\n                                                                    employeeData.indirect_overrides_type\n                                                                )\n                                                                    ? '%'\n                                                                    : ''\n                                                            }\n                                                            type={INPUT_TYPE.number}\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                firstPositionDetail?.override?.[1]\n                                                                    ?.override_ammount_locked\n                                                            }\n                                                            onChange={\n                                                                isOverrideTypeIsPercent(\n                                                                    employeeData.indirect_overrides_type\n                                                                )\n                                                                    ? onChangeInputDataWithLimit\n                                                                    : onChangeInputData\n                                                            }\n                                                            name={\n                                                                HIRE_FIELD_KEYS.indirect_overrides_amount\n                                                            }\n                                                            value={\n                                                                employeeData.indirect_overrides_amount\n                                                            }\n                                                            placeholder='50'\n                                                        />\n                                                    </div>\n                                                    <LockedView\n                                                        visible={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            firstPositionDetail?.override?.[1]\n                                                                ?.override_ammount_locked\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className='col-sm '>\n                                                    <label>\n                                                        <CustomDropdown\n                                                            placeholder='Select unit'\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                firstPositionDetail?.override?.[1]\n                                                                    ?.override_type_locked\n                                                            }\n                                                            onChange={(e) =>\n                                                                onChangeOverridesType(\n                                                                    e,\n                                                                    HIRE_FIELD_KEYS.indirect_overrides_amount\n                                                                )\n                                                            }\n                                                            name={\n                                                                HIRE_FIELD_KEYS.indirect_overrides_type\n                                                            }\n                                                            value={\n                                                                employeeData.indirect_overrides_type ??\n                                                                ''\n                                                            }\n                                                            options={OVERRIDE_TYPE}\n                                                            searching={false}\n                                                        />\n                                                    </label>\n                                                    <LockedView\n                                                        visible={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            firstPositionDetail?.override?.[1]\n                                                                ?.override_type_locked\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <></>\n                                )}\n\n                                {/* Office Overrides */}\n                                {firstPositionDetail?.override?.[2]?.status ? (\n                                    <>\n                                        <span\n                                            style={{fontWeight: 600}}\n                                            className='text-cmGrey700 mt-5'\n                                        >\n                                            Office Overrides:\n                                        </span>\n                                        <div className='container' style={{}}>\n                                            <div className='row text-cmGrey700'>\n                                                <div className=' row align-items-end'>\n                                                    <div className='col-sm'>\n                                                        <div>\n                                                            <CustomInput\n                                                                label={`↳ Office: ${selectedPrimaryOffice?.office_name}, ${selectedPrimaryOffice?.state_name}`}\n                                                                prefixText={\n                                                                    isOverrideTypeIsPercent(\n                                                                        employeeData.office_overrides_type\n                                                                    )\n                                                                        ? ''\n                                                                        : '$'\n                                                                }\n                                                                suffixText={\n                                                                    isOverrideTypeIsPercent(\n                                                                        employeeData.office_overrides_type\n                                                                    )\n                                                                        ? '%'\n                                                                        : ''\n                                                                }\n                                                                disabled={\n                                                                    userType ==\n                                                                        USER_TYPE.onboardEmployee &&\n                                                                    firstPositionDetail\n                                                                        ?.override?.[2]\n                                                                        ?.override_ammount_locked\n                                                                }\n                                                                type={INPUT_TYPE.number}\n                                                                onChange={\n                                                                    isOverrideTypeIsPercent(\n                                                                        employeeData.office_overrides_type\n                                                                    )\n                                                                        ? onChangeInputDataWithLimit\n                                                                        : onChangeInputData\n                                                                }\n                                                                name={\n                                                                    HIRE_FIELD_KEYS.office_overrides_amount\n                                                                }\n                                                                value={\n                                                                    employeeData.office_overrides_amount\n                                                                }\n                                                                placeholder='50'\n                                                            />\n                                                        </div>\n                                                        <LockedView\n                                                            visible={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                firstPositionDetail?.override?.[2]\n                                                                    ?.override_ammount_locked\n                                                            }\n                                                        />\n                                                    </div>\n                                                    <div className='col-sm'>\n                                                        <label className=''>\n                                                            <CustomDropdown\n                                                                disabled={\n                                                                    userType ==\n                                                                        USER_TYPE.onboardEmployee &&\n                                                                    firstPositionDetail\n                                                                        ?.override?.[2]\n                                                                        ?.override_type_locked\n                                                                }\n                                                                searching={false}\n                                                                onChange={(e) =>\n                                                                    onChangeOverridesType(\n                                                                        e,\n                                                                        HIRE_FIELD_KEYS.office_overrides_amount\n                                                                    )\n                                                                }\n                                                                name={\n                                                                    HIRE_FIELD_KEYS.office_overrides_type\n                                                                }\n                                                                value={\n                                                                    employeeData.office_overrides_type ??\n                                                                    ''\n                                                                }\n                                                                options={OVERRIDE_TYPE}\n                                                            />\n                                                        </label>\n\n                                                        <LockedView\n                                                            visible={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                firstPositionDetail?.override?.[2]\n                                                                    ?.override_type_locked\n                                                            }\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {SHOW_BASED_ON_HOST.additionalOfficeOverrides &&\n                                        userAssociatedOffices?.length > 0 &&\n                                        firstPositionDetail?.override?.[2]?.status ? (\n                                            <>\n                                                {userAssociatedOffices?.map(\n                                                    (officeItem, officeIndex) => (\n                                                        <div className='container mb-5' style={{}}>\n                                                            <div className='row text-cmGrey700'>\n                                                                <div className=' row align-items-end'>\n                                                                    <div className='col-sm'>\n                                                                        <div>\n                                                                            <CustomInput\n                                                                                label={`↳ Office: ${officeItem?.office_name}, ${officeItem?.state_name}`}\n                                                                                prefixText={\n                                                                                    isOverrideTypeIsPercent(\n                                                                                        officeItem.overrides_type\n                                                                                    )\n                                                                                        ? ''\n                                                                                        : '$'\n                                                                                }\n                                                                                suffixText={\n                                                                                    isOverrideTypeIsPercent(\n                                                                                        officeItem.overrides_type\n                                                                                    )\n                                                                                        ? '%'\n                                                                                        : ''\n                                                                                }\n                                                                                type={\n                                                                                    INPUT_TYPE.number\n                                                                                }\n                                                                                onChange={(e) => {\n                                                                                    if (\n                                                                                        officeItem?.overrides_type ==\n                                                                                        'percent'\n                                                                                    ) {\n                                                                                        if (\n                                                                                            percentageLimitCheck(\n                                                                                                100,\n                                                                                                e\n                                                                                                    .target\n                                                                                                    .value\n                                                                                            )\n                                                                                        ) {\n                                                                                            updateAdditionalOfficeOverrideData(\n                                                                                                officeIndex,\n                                                                                                'overrides_amount',\n                                                                                                e\n                                                                                                    ?.target\n                                                                                                    ?.value\n                                                                                            )\n                                                                                        }\n                                                                                    } else {\n                                                                                        updateAdditionalOfficeOverrideData(\n                                                                                            officeIndex,\n                                                                                            'overrides_amount',\n                                                                                            e\n                                                                                                ?.target\n                                                                                                ?.value\n                                                                                        )\n                                                                                    }\n                                                                                }}\n                                                                                value={\n                                                                                    officeItem?.overrides_amount\n                                                                                }\n                                                                                placeholder='50'\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='col-sm'>\n                                                                        <label className=''>\n                                                                            <CustomDropdown\n                                                                                searching={false}\n                                                                                value={\n                                                                                    officeItem?.overrides_type\n                                                                                }\n                                                                                onChange={(e) => {\n                                                                                    updateAdditionalOfficeOverrideType(\n                                                                                        officeIndex,\n                                                                                        'overrides_type',\n                                                                                        e?.target\n                                                                                            ?.value\n                                                                                    )\n                                                                                }}\n                                                                                options={\n                                                                                    OVERRIDE_TYPE\n                                                                                }\n                                                                            />\n                                                                        </label>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                )}\n                                            </>\n                                        ) : null}\n                                    </>\n                                ) : (\n                                    <></>\n                                )}\n\n                                {/* Stack Office Overrides */}\n                                {isStackModalEnabled &&\n                                firstPositionDetail?.override?.[3]?.status ? (\n                                    <div className='container' style={{}}>\n                                        <div className='row text-cmGrey700'>\n                                            <div className=' row align-items-end'>\n                                                <div className='col-sm'>\n                                                    <div>\n                                                        <CustomInput\n                                                            label={'Stack Split'}\n                                                            suffixText={'%'}\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                firstPositionDetail?.override?.[3]\n                                                                    ?.override_ammount_locked\n                                                            }\n                                                            type={INPUT_TYPE.number}\n                                                            onChange={(e) => {\n                                                                if (\n                                                                    percentageLimitCheck(\n                                                                        100,\n                                                                        e.target.value\n                                                                    )\n                                                                )\n                                                                    onChangeInputData(e)\n                                                            }}\n                                                            name={\n                                                                HIRE_FIELD_KEYS.office_stack_overrides_amount\n                                                            }\n                                                            value={\n                                                                employeeData.office_stack_overrides_amount\n                                                            }\n                                                            placeholder='50'\n                                                        />\n                                                    </div>\n                                                    <LockedView\n                                                        visible={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            firstPositionDetail?.override?.[3]\n                                                                ?.override_ammount_locked\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <></>\n                                )}\n                            </>\n                        ) : null}\n                    </div>\n                </div>\n                <div className='mt-5'>\n                    <CustomButton\n                        loading={redlineLoading || organizationLoading}\n                        buttonLabel='Update Position'\n                        onClick={onUpdatePositionPress}\n                    />\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default memo(ChangePositionModal)\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {getRecuiterFilterService} from '../../../../../../../services/Services'\nimport TrashIcon from '../../../../../../../assets/icons/TrashIcon.png'\nimport {\n    HIRE_FIELD_KEYS,\n    MAIN_POSITTIONS_ID,\n    SHOW_BASED_ON_HOST,\n} from '../../../../../../../constants/constants'\nimport CustomSearchInput from '../../../../../../../customComponents/customInputs/customSearchInput/CustomSearchInput'\nimport {useSelector} from 'react-redux'\nimport {\n    getDepartmentWithPositionSelector,\n    geyAllStatesWithOfficesSelector,\n} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport _ from 'lodash'\nimport {getBooleanValue} from '../../../../../../../helpers/CommonHelpers'\nimport CustomDialog from '../../../../../../../customComponents/customDialog/CustomDialog'\nimport AssignManagerModal from './AssignManagerModal'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {USER_TYPE} from '../../../../../../../hooks/useUserEmploymentPackage'\nimport ChangePositionModal from './ChangePositionModal'\n\nconst UserOrganisationContainer = ({\n    managerList,\n    userType = 'onboardEmployee',\n    employeeData,\n    updateEmployeeData,\n    teamList,\n    getPositionData,\n    parentPositionData,\n    updateMultipleKeysOfEmployeeData,\n    managerLoading,\n    getEmployeeData,\n    getTopCardUserProfile,\n    saveEmploymentPackage,\n}) => {\n    const recruiterDataRef = useRef({\n        recruiter: employeeData?.recruiter_id,\n        additional_recruiter1: employeeData?.additional_recruter?.[0]?.recruiter_id,\n        additional_recruiter2: employeeData?.additional_recruter?.[1]?.recruiter_id,\n    })\n    const [showAssignedManagerDialog, setShowAssignedManagerDialog] = useState(false)\n    const [showDialog, setShowDialog] = useState(false)\n    const [showChangePositionModal, setShowChangePositionModal] = useState(false)\n\n    useEffect(() => {\n        recruiterDataRef.current = {\n            recruiter: employeeData?.recruiter_id,\n            additional_recruiter1: employeeData?.additional_recruter?.[0]?.recruiter_id,\n            additional_recruiter2: employeeData?.additional_recruter?.[1]?.recruiter_id,\n        }\n    }, [employeeData?.recruiter_id, employeeData?.additional_recruter])\n\n    const handleAssignedManagerDialog = useCallback(() => {\n        setShowAssignedManagerDialog(!showAssignedManagerDialog)\n    }, [showAssignedManagerDialog])\n\n    const reassignManager = useCallback(() => {\n        if (userType == USER_TYPE.hiredEmployee && getBooleanValue(employeeData?.is_manager)) {\n            if (employeeData?.manager_id) {\n                if (employeeData?.total_employee > 0) {\n                    CustomDialog.warn(\n                        'Are you sure you want to Re-assign all the personnel ?',\n                        () => {\n                            handleAssignedManagerDialog()\n                        },\n                        () => {\n                            setShowDialog(false)\n                        }\n                    )\n                } else {\n                    updateEmployeeData(\n                        HIRE_FIELD_KEYS.is_manager,\n                        !getBooleanValue(employeeData?.is_manager)\n                    )\n                }\n            } else {\n                updateEmployeeData(HIRE_FIELD_KEYS.is_manager, 1)\n                CustomToast.error('Please select own manager first')\n            }\n        } else {\n            updateEmployeeData(\n                HIRE_FIELD_KEYS.is_manager,\n                !getBooleanValue(employeeData?.is_manager)\n            )\n        }\n    }, [\n        employeeData?.is_manager,\n        employeeData?.manager_id,\n        employeeData?.total_employee,\n        handleAssignedManagerDialog,\n        userType,\n        updateEmployeeData,\n    ])\n\n    const departmentWithPositionList = useSelector(getDepartmentWithPositionSelector)\n    const departmentList = useMemo(() => {\n        return departmentWithPositionList?.filter((item) => item?.position?.length > 0)\n    }, [departmentWithPositionList])\n\n    const positionList = useMemo(\n        () => departmentList?.find((item) => item?.id == employeeData?.department_id)?.position,\n        [departmentList, employeeData?.department_id]\n    )\n    const allStatesWithOffices = useSelector(geyAllStatesWithOfficesSelector)\n\n    const onChangeInputData = (e) => {\n        updateEmployeeData(e?.target?.name, e?.target?.value)\n    }\n\n    const onSeachRecruiter = useCallback(\n        (searchText, type) =>\n            new Promise((resolve) => {\n                getRecuiterFilterService(searchText)\n                    .then((res) => {\n                        const data = res?.data?.map((item) => ({\n                            ...item,\n                            name: `${item?.first_name} ${item?.last_name}`,\n                        }))\n                        let finalData = null\n                        if (type == 'recruiter') {\n                            finalData = data.filter(\n                                (item) =>\n                                    ![\n                                        recruiterDataRef.current?.additional_recruiter1,\n                                        recruiterDataRef.current?.additional_recruiter2,\n                                    ].includes(item?.id)\n                            )\n                        } else if (type == 'add_rec_0') {\n                            finalData = data.filter(\n                                (item) =>\n                                    ![\n                                        recruiterDataRef.current?.recruiter,\n                                        recruiterDataRef.current?.additional_recruiter2,\n                                    ].includes(item?.id)\n                            )\n                        } else if (type == 'add_rec_1') {\n                            finalData = data.filter(\n                                (item) =>\n                                    ![\n                                        recruiterDataRef.current?.recruiter,\n                                        recruiterDataRef.current?.additional_recruiter1,\n                                    ].includes(item?.id)\n                            )\n                        }\n                        resolve(finalData)\n                    })\n                    .catch(() => {\n                        resolve([])\n                    })\n            }),\n        []\n    )\n\n    const onSuccessAssignManager = useCallback(() => {\n        setShowAssignedManagerDialog(!showAssignedManagerDialog)\n        saveEmploymentPackage(0).then(() => {\n            getEmployeeData()\n        })\n    }, [getEmployeeData, saveEmploymentPackage, showAssignedManagerDialog])\n\n    const managerNames = useMemo(() => {\n        const filteredData = managerList?.filter((item) => item?.id != employeeData?.id)\n        return filteredData?.map((item) => ({\n            ...item,\n            name: `${item?.first_name}  ${item?.last_name}`,\n        }))\n    }, [employeeData?.id, managerList])\n\n    const officeList = useCallback(\n        (index) => {\n            const offArr = employeeData?.office_id ? [Number(employeeData?.office_id)] : []\n            const additionalOfficeArr = employeeData?.additional_locations\n                ?.filter((item, ind) => item?.office_id && ind != index)\n                ?.map((item) => Number(item?.office_id))\n            const finalOfficeArr = [...offArr, ...additionalOfficeArr]\n            const stateOfficeList =\n                employeeData?.additional_locations?.[index]?.state_id &&\n                allStatesWithOffices?.length > 0 &&\n                allStatesWithOffices?.find(\n                    (item) => item?.id == employeeData?.additional_locations?.[index]?.state_id\n                )?.office\n\n            return stateOfficeList?.length > 0\n                ? stateOfficeList?.filter((item) => !finalOfficeArr.includes(Number(item?.id)))\n                : []\n        },\n        [allStatesWithOffices, employeeData?.additional_locations, employeeData?.office_id]\n    )\n\n    const onChangePositionPress = useCallback(() => {\n        setShowChangePositionModal(true)\n    }, [])\n\n    const onCloseChangePositionModal = useCallback(() => {\n        setShowChangePositionModal(false)\n        getEmployeeData()\n        getTopCardUserProfile()\n    }, [getEmployeeData, getTopCardUserProfile])\n\n    const employeeDataWithTodayEffectiveDate = useMemo(() => {\n        if (employeeData?.employee_compensation?.length > 0) {\n            let effectiveDate = new Date()\n            let employee_compensation = _.cloneDeep(employeeData?.employee_compensation)\n            employee_compensation[0].commission_effective_date = effectiveDate\n            employee_compensation[0].upfront_effective_date = effectiveDate\n            employee_compensation[0].redline_effective_date = effectiveDate\n            employee_compensation[0].withheld_effective_date = effectiveDate\n            employee_compensation[1].commission_effective_date = effectiveDate\n            employee_compensation[1].upfront_effective_date = effectiveDate\n            employee_compensation[1].redline_effective_date = effectiveDate\n            employee_compensation[1].withheld_effective_date = effectiveDate\n            return {...employeeData, override_effective_date: effectiveDate, employee_compensation}\n        }\n    }, [employeeData])\n\n    return (\n        <div\n            className='pb-5 mb-sm-15 px-2'\n            style={{fontSize: '14px'}}\n            data-kt-stepper-element='content'\n        >\n            {showChangePositionModal ? (\n                <ChangePositionModal\n                    showChangePositionModal={showChangePositionModal}\n                    onCloseChangePositionModal={onCloseChangePositionModal}\n                    userType={USER_TYPE.hiredEmployee}\n                    empData={employeeDataWithTodayEffectiveDate}\n                />\n            ) : null}\n            <div className='w-sm-75 w-100 mx-auto'>\n                {userType === USER_TYPE.hiredEmployee ? (\n                    <div className='row align-items-end'>\n                        <div className='col-sm text-cmGrey700'>\n                            <CustomDropdown\n                                label={'Office'}\n                                required\n                                name={HIRE_FIELD_KEYS.state_id}\n                                value={employeeData?.state_id ?? ''}\n                                onChange={(e) => {\n                                    updateMultipleKeysOfEmployeeData({\n                                        ...employeeData,\n                                        [HIRE_FIELD_KEYS.state_id]: e?.target?.value,\n                                        [HIRE_FIELD_KEYS.office_id]: null,\n                                        [HIRE_FIELD_KEYS.manager_id]: null,\n                                    })\n                                }}\n                                options={allStatesWithOffices}\n                                valueKey='id'\n                                disabled={userType == USER_TYPE.hiredEmployee}\n                            />\n                        </div>\n                        <div className='col-sm '>\n                            <CustomDropdown\n                                value={employeeData?.office_id}\n                                onChange={onChangeInputData}\n                                name={HIRE_FIELD_KEYS.office_id}\n                                options={\n                                    allStatesWithOffices?.find(\n                                        (item) => item?.id == employeeData?.state_id\n                                    )?.office\n                                }\n                                valueKey='id'\n                                displayKey='office_name'\n                                disabled={userType == USER_TYPE.hiredEmployee}\n                            />\n                        </div>\n                    </div>\n                ) : null}\n\n                <div className='mt-4 '>\n                    <div className='row -align-items-center'>\n                        <div className='col-sm text-cmGrey700'>\n                            <div className=''>\n                                <CustomDropdown\n                                    label={'Department'}\n                                    required\n                                    disabled={userType == USER_TYPE.hiredEmployee}\n                                    showClear={false}\n                                    options={departmentList}\n                                    placeholder='Select Department'\n                                    name={HIRE_FIELD_KEYS.department_id}\n                                    value={employeeData.department_id ?? ''}\n                                    valueKey='id'\n                                    onChange={(e) => {\n                                        updateMultipleKeysOfEmployeeData({\n                                            ...employeeData,\n                                            [HIRE_FIELD_KEYS.position_id]: null,\n                                            [HIRE_FIELD_KEYS.sub_position_id]: null,\n                                            [HIRE_FIELD_KEYS.department_id]: e?.target?.value,\n                                        })\n                                    }}\n                                />\n                                <div className='row d-flex mt-5 justify-content-center align-items-center'>\n                                    <div\n                                        className='col text-cmGrey700 d-flex flex-wrap align-items-center'\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '14px',\n                                            fontWeight: 600,\n                                        }}\n                                    >\n                                        <div className='me-2'>\n                                            <CustomCheckbox\n                                                checked={\n                                                    getBooleanValue(employeeData?.is_manager) == 1\n                                                }\n                                                onChange={(e) => {\n                                                    reassignManager()\n                                                }}\n                                            />\n                                        </div>\n                                        Is Manager ?\n                                        {showDialog\n                                            ? CustomDialog.warn(\n                                                  'Are you sure you want to Re-assign all the personnel ?',\n                                                  () => {\n                                                      handleAssignedManagerDialog()\n                                                  },\n                                                  () => {\n                                                      setShowDialog(false)\n                                                      onChangeInputData({\n                                                          target: {\n                                                              name: HIRE_FIELD_KEYS.is_manager,\n                                                              value: !getBooleanValue(\n                                                                  employeeData?.is_manager\n                                                              ),\n                                                          },\n                                                      })\n                                                  }\n                                              )\n                                            : null}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='col-sm text-cmGrey700'>\n                            <div className=''>\n                                <CustomDropdown\n                                    showLink={userType == USER_TYPE.hiredEmployee}\n                                    linkLabel='Change'\n                                    onLinkPress={onChangePositionPress}\n                                    disabled={userType == USER_TYPE.hiredEmployee}\n                                    label={'Position'}\n                                    required\n                                    showClear={false}\n                                    options={positionList}\n                                    placeholder='Select Position'\n                                    valueKey='id'\n                                    onChange={(e) => {\n                                        getPositionData(e?.target?.value, false, true)\n                                    }}\n                                    name={HIRE_FIELD_KEYS.sub_position_id}\n                                    value={employeeData.sub_position_id ?? ''}\n                                    displayKey='position_name'\n                                />\n                                <div className='mt-5 d-flex align-itmes-center gap-3 mt-5'>\n                                    <CustomCheckbox\n                                        disable={userType == USER_TYPE.hiredEmployee}\n                                        checked={\n                                            getBooleanValue(employeeData?.self_gen_accounts) == 1\n                                                ? true\n                                                : false\n                                        }\n                                        onChange={(e) => {\n                                            const val =\n                                                getBooleanValue(employeeData?.self_gen_accounts) ==\n                                                1\n                                                    ? 0\n                                                    : 1\n                                            if (val) {\n                                                getPositionData(\n                                                    MAIN_POSITTIONS_ID.closer ==\n                                                        parentPositionData?.id\n                                                        ? MAIN_POSITTIONS_ID.setter\n                                                        : MAIN_POSITTIONS_ID.closer,\n                                                    true,\n                                                    true\n                                                )\n                                            } else {\n                                                updateEmployeeData(\n                                                    HIRE_FIELD_KEYS.self_gen_accounts,\n                                                    val\n                                                )\n                                            }\n                                        }}\n                                    />\n\n                                    <span\n                                        className='text-cmGrey700 text-wrap'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        May act as both setter and closer\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='mt-5'>\n                    <div className='row align-items-center'>\n                        <div className='col-sm'>\n                            <CustomDropdown\n                                label={'Manager'}\n                                required={\n                                    getBooleanValue(employeeData?.is_manager) == 0 ? true : false\n                                }\n                                options={managerNames}\n                                placeholder={managerLoading ? 'Loading...' : 'Select Manager'}\n                                valueKey='id'\n                                displayKey='name'\n                                onChange={onChangeInputData}\n                                name={HIRE_FIELD_KEYS.manager_id}\n                                value={employeeData?.manager_id ?? ''}\n                            />\n                        </div>\n                        <div className='col-sm'>\n                            <CustomDropdown\n                                required={SHOW_BASED_ON_HOST?.teamRequiredForOnboarding}\n                                label={'Team'}\n                                options={teamList}\n                                placeholder={managerLoading ? 'Loading...' : 'Select Team'}\n                                valueKey='id'\n                                displayKey='team_name'\n                                onChange={onChangeInputData}\n                                name={HIRE_FIELD_KEYS.team_id}\n                                value={employeeData.team_id ?? ''}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {getBooleanValue(employeeData?.is_manager) == 1 ? (\n                    <div\n                        className='text-cmGrey700 mt-9'\n                        style={{fontWeight: '600', fontFamily: 'Manrope'}}\n                    >\n                        <div className='mb-2'> Additional Office Location</div>\n                        {employeeData?.additional_locations?.map((item, index) => (\n                            <div className='d-flex flex-wrap mb-4 gap-3' key={index}>\n                                <div\n                                    className='text-cmGrey700'\n                                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                >\n                                    {/* Additional Office Location<label className='text-cmError'>*</label> */}\n                                    <label className='d-flex w-175px flex-row'>\n                                        <CustomDropdown\n                                            options={allStatesWithOffices}\n                                            placeholder={'Select State'}\n                                            valueKey='id'\n                                            value={item?.state_id}\n                                            onChange={(e) => {\n                                                const temp = [...employeeData?.additional_locations]\n                                                temp[index].state_id = e.target.value\n                                                onChangeInputData({\n                                                    target: HIRE_FIELD_KEYS.additional_locations,\n                                                    value: temp,\n                                                })\n                                            }}\n                                        />\n                                    </label>\n                                </div>\n                                <div\n                                    className=''\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                    }}\n                                >\n                                    <label className='d-flex w-175px flex-row'>\n                                        <CustomDropdown\n                                            options={officeList(index)}\n                                            placeholder={'Select Office'}\n                                            valueKey='id'\n                                            displayKey='office_name'\n                                            value={item?.office_id ?? ''}\n                                            onChange={(e) => {\n                                                const temp = [...employeeData?.additional_locations]\n                                                temp[index].office_id = e.target.value\n                                                onChangeInputData({\n                                                    target: HIRE_FIELD_KEYS.additional_locations,\n                                                    value: temp,\n                                                })\n                                            }}\n                                            name={HIRE_FIELD_KEYS.office_id}\n                                        />\n                                    </label>\n                                </div>\n                                <div\n                                    className='col-sm-2 cursor-pointer '\n                                    style={{\n                                        alignSelf: 'center',\n                                        fontWeight: '600',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                    onClick={() => {\n                                        const temp = [...employeeData?.additional_locations]\n                                        const finalTemp = temp?.filter((im, ind) => ind != index)\n                                        onChangeInputData({\n                                            target: {\n                                                name: HIRE_FIELD_KEYS.additional_locations,\n                                                value: finalTemp,\n                                            },\n                                        })\n                                    }}\n                                >\n                                    <img src={TrashIcon} alt='' width={32} />\n                                </div>\n                            </div>\n                        ))}\n                        <ul\n                            style={{\n                                fontFamily: 'Manrope',\n                                fontSize: '14px',\n                            }}\n                            className='nav nav-stretch  nav-line-tabs nav-line-tabs-2x border-transparent  flex-nowrap text-cmBlue-Crayola cursor-pointer'\n                        >\n                            {employeeData?.additional_locations?.length < 5 && (\n                                <li className='nav-item d-flex mb-5'>\n                                    <div\n                                        style={{\n                                            width: '15px',\n                                            height: '15px',\n                                        }}\n                                        className='d-flex text-center align-item-center justify-content-center border border-cmBlue-Crayola border-2'\n                                    >\n                                        <b style={{marginTop: '-5px'}}>+</b>\n                                    </div>\n                                </li>\n                            )}\n                            <li\n                                className='ms-2 text-cmBlue-Crayola'\n                                style={{\n                                    fontSize: '14px',\n                                    textDecoration: 'underline',\n                                    padding: '0px',\n                                    marginTop: '-3px',\n                                    fontWeight: 600,\n                                }}\n                                onClick={() => {\n                                    onChangeInputData({\n                                        target: {\n                                            name: HIRE_FIELD_KEYS.additional_locations,\n                                            value: [\n                                                ...employeeData?.additional_locations,\n                                                {\n                                                    state_id: null,\n                                                    office_id: null,\n                                                },\n                                            ],\n                                        },\n                                    })\n                                }}\n                            >\n                                Add Location\n                            </li>\n                        </ul>\n                    </div>\n                ) : null}\n                <div className='mt-7 '>\n                    <div className='row'>\n                        <div\n                            className='col-sm-12 text-cmGrey700'\n                            style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                        >\n                            <div className='mb-1'>Recruiter</div>\n                            <div className='d-flex'>\n                                <CustomSearchInput\n                                    style={{width: '98%'}}\n                                    zIndex={30}\n                                    onSearch={(text) => onSeachRecruiter(text, 'recruiter')}\n                                    onSelectValue={(value) => {\n                                        updateMultipleKeysOfEmployeeData({\n                                            ...employeeData,\n                                            [HIRE_FIELD_KEYS.recruiter_id]: value?.id,\n                                            [HIRE_FIELD_KEYS.recruiter_name]: value?.name,\n                                        })\n                                    }}\n                                    selectedValue={employeeData?.recruiter_name}\n                                />\n                                {employeeData?.recruiter_id ? (\n                                    <div\n                                        className='cursor-pointer  bg-cmError px-3 btn btn-sm d-flex align-items-center justify-content-center bg-opacity-10 '\n                                        onClick={() => {\n                                            const data = [...employeeData?.additional_recruter]\n                                            data[0] = {\n                                                ...data?.[0],\n                                                recruiter_id: null,\n                                                recruiter_first_name: null,\n                                                recruiter_last_name: null,\n                                            }\n                                            data[1] = {\n                                                ...data?.[1],\n                                                recruiter_id: null,\n                                                recruiter_first_name: null,\n                                                recruiter_last_name: null,\n                                            }\n                                            updateMultipleKeysOfEmployeeData({\n                                                ...employeeData,\n                                                [HIRE_FIELD_KEYS.recruiter_id]: null,\n                                                [HIRE_FIELD_KEYS.recruiter_name]: null,\n                                                [HIRE_FIELD_KEYS.additional_recruter]: data,\n                                            })\n                                        }}\n                                    >\n                                        <i className=' bi bi-x text-cmError fs-1' />\n                                    </div>\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {employeeData?.recruiter_id ? (\n                    <>\n                        <div className=' mt-7'>\n                            <div className='d-flex flex-wrap justify-content-between gap-5 '>\n                                <div\n                                    className='text-cmGrey700'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: 600,\n                                    }}\n                                >\n                                    Additional Recruiter\n                                    <label\n                                        className='text-cmGrey500'\n                                        style={{fontWeight: 600, fontSize: '12px'}}\n                                    >\n                                        {' '}\n                                        (or Override)\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-3'>\n                            <div className='row'>\n                                <div style={{fontFamily: 'Manrope', fontSize: '14px'}}>\n                                    <label className=' d-flex'>\n                                        <CustomSearchInput\n                                            style={{width: '100%'}}\n                                            onSearch={(text) => onSeachRecruiter(text, 'add_rec_0')}\n                                            onSelectValue={(value) => {\n                                                const data = [...employeeData?.additional_recruter]\n                                                data[0] = {\n                                                    ...data?.[0],\n                                                    recruiter_id: value?.id,\n                                                    recruiter_first_name: value?.first_name,\n                                                    recruiter_last_name: value?.last_name,\n                                                }\n                                                onChangeInputData({\n                                                    target: {\n                                                        name: HIRE_FIELD_KEYS.additional_recruter,\n                                                        value: data,\n                                                    },\n                                                })\n                                            }}\n                                            zIndex={10}\n                                            selectedValue={\n                                                employeeData?.additional_recruter?.[0]\n                                                    ?.recruiter_first_name\n                                                    ? `${employeeData?.additional_recruter?.[0]?.recruiter_first_name} ${employeeData?.additional_recruter?.[0]?.recruiter_last_name}`\n                                                    : null\n                                            }\n                                        />\n                                        {employeeData?.additional_recruter?.[0]?.recruiter_id ? (\n                                            <div\n                                                className='cursor-pointer  bg-cmError px-3 ms-5 btn btn-sm d-flex align-items-center justify-content-center bg-opacity-10 '\n                                                onClick={() => {\n                                                    const data = [\n                                                        ...employeeData?.additional_recruter,\n                                                    ]\n                                                    data[0] = {\n                                                        ...data?.[0],\n                                                        recruiter_id: null,\n                                                        recruiter_first_name: null,\n                                                        recruiter_last_name: null,\n                                                    }\n                                                    updateMultipleKeysOfEmployeeData({\n                                                        ...employeeData,\n                                                        [HIRE_FIELD_KEYS.additional_recruter]: data,\n                                                    })\n                                                }}\n                                            >\n                                                <i className=' bi bi-x text-cmError fs-1' />\n                                            </div>\n                                        ) : null}\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-3'>\n                            <div className='row'>\n                                <div style={{fontFamily: 'Manrope', fontSize: '14px'}}>\n                                    <label className=' d-flex'>\n                                        <CustomSearchInput\n                                            style={{width: '100%'}}\n                                            onSearch={(text) => onSeachRecruiter(text, 'add_rec_1')}\n                                            onSelectValue={(value) => {\n                                                const data = [...employeeData?.additional_recruter]\n                                                data[1] = {\n                                                    ...data?.[1],\n                                                    recruiter_id: value?.id,\n                                                    recruiter_first_name: value?.first_name,\n                                                    recruiter_last_name: value?.last_name,\n                                                }\n                                                onChangeInputData({\n                                                    target: {\n                                                        name: HIRE_FIELD_KEYS.additional_recruter,\n                                                        value: data,\n                                                    },\n                                                })\n                                            }}\n                                            zIndex={1}\n                                            selectedValue={\n                                                employeeData?.additional_recruter?.[1]\n                                                    ?.recruiter_first_name\n                                                    ? `${employeeData?.additional_recruter?.[1]?.recruiter_first_name} ${employeeData?.additional_recruter?.[1]?.recruiter_last_name}`\n                                                    : null\n                                            }\n                                        />\n                                        {employeeData?.additional_recruter?.[1]?.recruiter_id ? (\n                                            <div\n                                                className='cursor-pointer  bg-cmError px-3 ms-5 btn btn-sm d-flex align-items-center justify-content-center bg-opacity-10 '\n                                                onClick={() => {\n                                                    const data = [\n                                                        ...employeeData?.additional_recruter,\n                                                    ]\n                                                    data[1] = {\n                                                        ...data?.[1],\n                                                        recruiter_id: null,\n                                                        recruiter_first_name: null,\n                                                        recruiter_last_name: null,\n                                                    }\n                                                    updateMultipleKeysOfEmployeeData({\n                                                        ...employeeData,\n                                                        [HIRE_FIELD_KEYS.additional_recruter]: data,\n                                                    })\n                                                }}\n                                            >\n                                                <i className=' bi bi-x text-cmError fs-1' />\n                                            </div>\n                                        ) : null}\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n            <AssignManagerModal\n                show={showAssignedManagerDialog}\n                handleClose={handleAssignedManagerDialog}\n                employeeData={employeeData}\n                onSuccess={onSuccessAssignManager}\n            />\n        </div>\n    )\n}\n\nexport default UserOrganisationContainer\n","import React, {useEffect, useMemo, useState} from 'react'\n\nimport {Sidebar} from 'primereact/sidebar'\nimport moment from 'moment'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {TabView, TabPanel} from 'primereact/tabview'\nimport {\n    formattedNumberFields,\n    getEmployeeRedlineHelper,\n} from '../../../../../../helpers/CommonHelpers'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\n\nexport default function ViewUserRedlineChanges({\n    toggleView,\n    closeToggle,\n    redlineData,\n    self_gen = false,\n}) {\n    const pastUpcomingRedline = useMemo(() => {\n        const data = getEmployeeRedlineHelper(redlineData, null, self_gen)\n        return data\n    }, [redlineData, self_gen])\n    return (\n        <>\n            <Sidebar\n                visible={toggleView}\n                position='right'\n                onHide={closeToggle}\n                showCloseIcon={false}\n                className={'w-sm-50 w-100 px-0 mx-0'}\n            >\n                <div className='m-0 p-0' id='kt_explore_body'>\n                    <div className='text-cmBlack mx-10 d-flex justify-content-between align-items-center mb-4'>\n                        <div\n                            className=''\n                            style={{fontSize: '16px', fontWeight: '600', fontFamily: 'Manrope'}}\n                        >\n                            Redlines\n                        </div>\n                        <div className='d-flex align-items-center gap-2'>\n                            <div\n                                className='bi bi-x-lg fs-3 bg-hover-cmGrey200 text-cmBlack rounded-circle px-1 '\n                                onClick={closeToggle}\n                            />\n                        </div>\n                    </div>\n                    <div className='card shadow-none'>\n                        <div className='mt-0 border border-cmGrey200'></div>\n                        <div\n                            style={{\n                                fontWeight: 600,\n                            }}\n                        >\n                            <div className='d-flex justify-content-between align-items-center mb-5 mt-3'>\n                                <div className='d-flex align-items-center gap-3'>\n                                    <div className='text-cmGrey900'>Current Redline: </div>\n                                    <div className='text-cmGrey700'>\n                                        {pastUpcomingRedline?.current?.redline_amount\n                                            ? `${formattedNumberFields(\n                                                  pastUpcomingRedline?.current?.redline_amount,\n                                                  ''\n                                              )} / ${pastUpcomingRedline?.current?.redline_type}`\n                                            : '-'}{' '}\n                                        since{' '}\n                                        {pastUpcomingRedline?.current?.start_date\n                                            ? getValidDate(pastUpcomingRedline?.current?.start_date)\n                                            : '-'}\n                                    </div>\n                                </div>\n                            </div>\n                            <hr />\n                        </div>\n                        <div>\n                            <TabView>\n                                <TabPanel header='Past'>\n                                    <CommonRedlineTable redlineData={pastUpcomingRedline?.past} />\n                                </TabPanel>\n                                <TabPanel header='Upcoming'>\n                                    <CommonRedlineTable\n                                        redlineData={pastUpcomingRedline?.upcoming}\n                                    />\n                                </TabPanel>\n                            </TabView>\n                        </div>\n                    </div>\n                </div>\n            </Sidebar>\n        </>\n    )\n}\nconst CommonRedlineTable = ({redlineData = []}) => {\n    return (\n        <div className='table-responsive table-bordered mb-10'>\n            <table className='table'>\n                <thead>\n                    <tr\n                        className='text-cmGrey500 text-cmGrey800 border-cmGrey400'\n                        style={{\n                            fontSize: '14px',\n                            fontWeight: '600',\n                            fontFamily: fontsFamily.manrope,\n                        }}\n                    >\n                        <th className='text-nowrap p-3 '>Effective date</th>\n                        <th className='text-nowrap p-3 '>Redline</th>\n                        <th className='text-nowrap p-3 '>Redline Type</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {redlineData?.map((item, index) => {\n                        return (\n                            <>\n                                {\n                                    <>\n                                        <tr\n                                            className='text-cmGrey800 stripRow'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontFamily: fontsFamily.manrope,\n                                                fontWeight: 600,\n                                                lineHeight: '20px',\n                                            }}\n                                        >\n                                            <td className='p-3 text-nowrap'>\n                                                {getValidDate(item?.start_date)}\n                                            </td>\n                                            <td className='p-3 text-nowrap text-cmGrey700'>\n                                                {item?.redline}\n                                            </td>\n                                            <td className='p-3 text-nowrap text-cmGrey700'>\n                                                {item?.redline_type}\n                                            </td>\n                                        </tr>\n                                    </>\n                                }\n                            </>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport _ from 'lodash'\nimport {TabView, TabPanel} from 'primereact/tabview'\nimport moment from 'moment'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {\n    formattedNumberFields,\n    getEmployeeRedlineHelper,\n} from '../../../../../../../helpers/CommonHelpers'\nimport {\n    MAIN_POSITTIONS_ID,\n    UNIT_TYPE2,\n    getValidDate,\n} from '../../../../../../../constants/constants'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport ViewUserRedlineChanges from '../../../../management/particularEmployee/compoents/ViewUserRedlineChanges'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomLink from '../../../../../../../customComponents/customButtton/CustomLink'\n\nconst EditUserRedlineModel = ({\n    employeeData,\n    onSavePress,\n    redline_data = [],\n    show,\n    handleClose,\n    self_gen = false,\n}) => {\n    const [redlineData, setRedlineData] = useState(redline_data ?? [])\n    const [auditToggleView, setAuditToggleView] = useState(false)\n\n    useEffect(() => {\n        const data = redline_data?.map((item) => ({\n            ...item,\n            edit: false,\n        }))\n        setRedlineData(data)\n    }, [redline_data])\n\n    const onEditPress = useCallback(\n        (index) => {\n            const data = [...redlineData]\n            data[index].edit = true\n            setRedlineData(data)\n        },\n        [redlineData]\n    )\n\n    const onEditSavePress = useCallback(\n        (index) => {\n            const data = [...redlineData]\n            data[index].edit = false\n            setRedlineData(data)\n        },\n        [redlineData]\n    )\n\n    const onDeletePress = useCallback(\n        (index) => {\n            const data = redlineData?.filter((item, ind) => ind != index)\n            setRedlineData(data)\n        },\n        [redlineData]\n    )\n\n    const handleSave = useCallback(() => {\n        const isFilledData = redlineData.map((item) =>\n            item?.redline && item?.start_date ? true : false\n        )\n        if (isFilledData.includes(false)) {\n            return CustomToast.error('Please fill empty data')\n        }\n        onSavePress(self_gen ? 'self_gen_redline_data' : 'redline_data', redlineData)\n    }, [onSavePress, redlineData, self_gen])\n\n    const currentRedline = useMemo(() => {\n        const data = getEmployeeRedlineHelper(employeeData, null, self_gen)?.current\n        return data\n    }, [employeeData, self_gen])\n\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            title={`Edit User Redline | ${employeeData?.first_name} ${employeeData?.last_name} (${\n                employeeData?.position_id == MAIN_POSITTIONS_ID.closer\n                    ? !self_gen\n                        ? 'Closer'\n                        : 'Setter'\n                    : self_gen\n                    ? 'Closer'\n                    : 'Setter'\n            })`}\n            maxWidth='1000'\n        >\n            <div\n                className='px-sm-20 px-5 mx-auto'\n                style={{\n                    fontSize: 14,\n                    fontFamily: fontsFamily.manrope,\n                }}\n            >\n                <div\n                    style={{\n                        fontWeight: 600,\n                    }}\n                >\n                    <div className='d-flex justify-content-between align-items-center mb-5'>\n                        <div className='d-flex align-items-center gap-3'>\n                            <div className='text-cmGrey900'>Current Redline: </div>\n                            <div className='text-cmGrey700'>\n                                {currentRedline?.redline_amount\n                                    ? `${formattedNumberFields(\n                                          currentRedline?.redline_amount,\n                                          ''\n                                      )} / ${currentRedline?.redline_type}`\n                                    : '-'}{' '}\n                                since{' '}\n                                {currentRedline?.start_date\n                                    ? getValidDate(currentRedline?.start_date)\n                                    : '-'}\n                            </div>\n\n                            <CustomLink\n                                label={'Audit log'}\n                                onClick={() => setAuditToggleView(true)}\n                            />\n                        </div>\n                    </div>\n                    <hr />\n                </div>\n\n                <div\n                    className='d-flex justify-content-between align-items-center mb-5'\n                    style={{\n                        fontWeight: 600,\n                    }}\n                >\n                    <div className='text-cmGrey900'>Other Redlines</div>\n                </div>\n                {/* Header ends */}\n                <div>\n                    <TabView>\n                        <TabPanel header='Past'>\n                            <CommonRedlineTable\n                                type='past'\n                                redlineData={redlineData}\n                                setRedlineData={setRedlineData}\n                                onEditPress={onEditPress}\n                                onDeletePress={onDeletePress}\n                                onEditSavePress={onEditSavePress}\n                                self_gen={self_gen}\n                            />\n                        </TabPanel>\n                        <TabPanel header='Upcoming'>\n                            <CommonRedlineTable\n                                type='upcoming'\n                                redlineData={redlineData}\n                                onEditPress={onEditPress}\n                                onDeletePress={onDeletePress}\n                                onEditSavePress={onEditSavePress}\n                                setRedlineData={setRedlineData}\n                                self_gen={self_gen}\n                            />\n                        </TabPanel>\n                    </TabView>\n                </div>\n                <div className='row align-items-center justify-content-center w-75 mx-auto'>\n                    <div className='col-sm'>\n                        <CustomButton\n                            width={100}\n                            buttonType={BUTTON_TYPE.error}\n                            buttonLabel='Cancel'\n                            onClick={handleClose}\n                        />\n                    </div>\n                    <div className='col-sm'>\n                        <CustomButton\n                            width={100}\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel='Save'\n                            onClick={handleSave}\n                        />\n                    </div>\n                </div>\n            </div>\n            <ViewUserRedlineChanges\n                redlineData={employeeData}\n                toggleView={auditToggleView}\n                closeToggle={() => {\n                    setAuditToggleView(false)\n                }}\n                self_gen={self_gen}\n            />\n        </CustomModal>\n    )\n}\n\nexport default EditUserRedlineModel\n\nconst CommonRedlineTable = ({\n    onEditPress,\n    onDeletePress,\n    onEditSavePress,\n    type = 'past',\n    redlineData = [],\n    setRedlineData = null,\n    self_gen = false,\n}) => {\n    const changeRedline = (index, key, value) => {\n        const data = _.cloneDeep(redlineData)\n        data[index][key] = value\n        setRedlineData(data)\n    }\n    return (\n        <div className='table-responsive table-bordered mb-10'>\n            <table className='table'>\n                <thead>\n                    <tr\n                        className='text-cmGrey500 text-cmGrey800 border-cmGrey400'\n                        style={{\n                            fontSize: '14px',\n                            fontWeight: '600',\n                            fontFamily: fontsFamily.manrope,\n                        }}\n                    >\n                        <th className='text-nowrap p-3 '>Effective date</th>\n                        <th className='text-nowrap p-3 '>Redline</th>\n                        <th className='text-nowrap p-3 '>Redline Type</th>\n                        <th className='text-nowrap p-3 '></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {redlineData?.map((item, index) => {\n                        let show = false\n                        if (type == 'past') {\n                            show =\n                                (item?.new && item?.type == 'past') ||\n                                new Date(\n                                    moment(item?.start_date, 'YYYYY-MM-DD').format(\n                                        'YYYY-MM-DD 00:00:00'\n                                    )\n                                ) < new Date(moment().format('YYYY-MM-DD 00:00:00'))\n                        } else {\n                            show =\n                                (item?.new && item?.type == 'upcoming') ||\n                                new Date(\n                                    moment(item?.start_date, 'YYYYY-MM-DD').format(\n                                        'YYYY-MM-DD 00:00:00'\n                                    )\n                                ) >= new Date(moment().format('YYYY-MM-DD 00:00:00'))\n                        }\n\n                        return (\n                            <>\n                                {show && (\n                                    <>\n                                        {item?.edit ? (\n                                            <tr\n                                                className='text-cmGrey800 stripRow'\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: fontsFamily.manrope,\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <td className='p-3 text-nowrap'>\n                                                    {(item?.new &&\n                                                        item?.type == 'past' &&\n                                                        item?.edit) ||\n                                                    (item?.edit && item?.type == 'upcoming') ? (\n                                                        <div className='w-150px'>\n                                                            <CustomDatePicker\n                                                                minDate={\n                                                                    type == 'upcoming'\n                                                                        ? new Date()\n                                                                        : null\n                                                                }\n                                                                maxDate={\n                                                                    type == 'past'\n                                                                        ? new Date(\n                                                                              new Date().setDate(\n                                                                                  new Date().getDate() -\n                                                                                      1\n                                                                              )\n                                                                          )\n                                                                        : null\n                                                                }\n                                                                value={\n                                                                    item?.start_date\n                                                                        ? new Date(item?.start_date)\n                                                                        : null\n                                                                }\n                                                                onChange={(e) => {\n                                                                    changeRedline(\n                                                                        index,\n                                                                        'start_date',\n                                                                        e?.target?.value\n                                                                    )\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    ) : (\n                                                        getValidDate(item?.start_date)\n                                                    )}\n                                                </td>\n                                                <td className='p-3 text-nowrap'>\n                                                    <div className='w-150px'>\n                                                        <CustomInput\n                                                            type={INPUT_TYPE.currency}\n                                                            placeholder={'0.00'}\n                                                            prefixText='$'\n                                                            value={item?.redline}\n                                                            onChange={(e) =>\n                                                                changeRedline(\n                                                                    index,\n                                                                    'redline',\n                                                                    e?.target?.value\n                                                                )\n                                                            }\n                                                        />\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <div className='w-150px'>\n                                                        <CustomDropdown\n                                                            searching={false}\n                                                            options={UNIT_TYPE2}\n                                                            onChange={(e) => {\n                                                                changeRedline(\n                                                                    index,\n                                                                    'redline_type',\n                                                                    e?.target?.value\n                                                                )\n                                                            }}\n                                                            value={item?.redline_type ?? ''}\n                                                        />\n                                                    </div>\n                                                </td>\n                                                <td className='p-3 text-nowrap'>\n                                                    <CustomButton\n                                                        icon='bi bi-check2'\n                                                        onClick={() => onEditSavePress(index)}\n                                                    />\n                                                </td>\n                                                {type == 'upcoming' || item?.new ? (\n                                                    <td className='p-3 text-nowrap'>\n                                                        <CustomButton\n                                                            buttonType={BUTTON_TYPE.error}\n                                                            icon='bi bi-trash'\n                                                            onClick={() => onDeletePress(index)}\n                                                        />\n                                                    </td>\n                                                ) : (\n                                                    <td></td>\n                                                )}\n                                            </tr>\n                                        ) : (\n                                            <tr\n                                                className='text-cmGrey800 stripRow'\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: fontsFamily.manrope,\n                                                    fontWeight: 600,\n                                                    lineHeight: '20px',\n                                                }}\n                                            >\n                                                <td className='p-3 text-nowrap'>\n                                                    {getValidDate(item?.start_date)}\n                                                </td>\n                                                <td className='p-3 text-nowrap text-cmGrey700'>\n                                                    {item?.redline}\n                                                </td>\n                                                <td className='p-3 text-nowrap text-cmGrey700'>\n                                                    {item?.redline_type}\n                                                </td>\n                                                <td className='p-3 text-nowrap d-flex gap-5 align-items-center '>\n                                                    <div\n                                                        className='bi bi-pencil fs-5 cursor-pointer'\n                                                        onClick={() => onEditPress(index)}\n                                                    />\n                                                    {type == 'upcoming' || item?.new ? (\n                                                        <div\n                                                            className='bi bi-trash fs-3 cursor-pointer'\n                                                            onClick={() => onDeletePress(index)}\n                                                        />\n                                                    ) : null}\n                                                </td>\n                                            </tr>\n                                        )}\n                                    </>\n                                )}\n                            </>\n                        )\n                    })}\n                    <tr colSpan={5}>\n                        <div style={{padding: 5}} className='w-150px'>\n                            <CustomLink\n                                icon={'bi bi-plus-square'}\n                                onClick={() => {\n                                    const data = _.cloneDeep(redlineData)\n                                    data.push({\n                                        type,\n                                        new: true,\n                                        edit: true,\n                                        redline: null,\n                                        start_date: null,\n                                        redline_type: 'per watt',\n                                    })\n                                    setRedlineData(data)\n                                }}\n                            />\n                        </div>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import {UNIT_TYPE1, UNIT_TYPE2} from '../../../../../../../constants/constants'\nimport {LockedView} from '../HireNew'\nimport {HIRE_FIELD_KEYS} from '../../../../../../../constants/constants'\nimport {memo, useCallback, useState} from 'react'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {percentageLimitCheck} from '../../../../../../../helpers/CommonHelpers'\nimport EditUserRedlineModel from './EditUserRedlineModel'\nimport {USER_TYPE} from '../../../../../../../hooks/useUserEmploymentPackage'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../../../redux/selectors/SettingsSelectors'\n\nconst UserRedlineComissionUpfrontContainer = ({\n    firstPositionDetail,\n    secondPositionDetail,\n    userType,\n    employeeData,\n    updateEmployeeData,\n    isStackModalEnabled,\n    bothPositionData,\n}) => {\n    const [editRedline, setEditRedline] = useState(false)\n    const [editSelfGenRedline, setEditSelfGenRedline] = useState(false)\n    const companySetting = useSelector(getCompanySettingSelector)\n\n    const closeRedlinePopup = () => {\n        setEditRedline(false)\n        setEditSelfGenRedline(false)\n    }\n\n    const onSaveOtherRedlinePress = useCallback(\n        (key, redlineData) => {\n            closeRedlinePopup()\n            updateEmployeeData(key, redlineData)\n        },\n        [updateEmployeeData]\n    )\n\n    const onChangeCompensationData = (index, e) => {\n        const data = [...employeeData?.employee_compensation]\n        data[index][e?.target?.name] = e?.target?.value\n        updateEmployeeData(HIRE_FIELD_KEYS.employee_compensation, data)\n    }\n\n    const onChangeInputData = (e) => {\n        updateEmployeeData(e?.target?.name, e?.target?.value)\n    }\n\n    return (\n        <div className='mb-sm-15 p-5' style={{fontSize: '14px'}} data-kt-stepper-element='content'>\n            <div className='w-sm-75 mx-auto w-100'>\n                {/* First Position */}\n                {(employeeData?.self_gen_accounts ? [0, 1] : [0])?.map((positionIndex) => {\n                    const positionDetail =\n                        positionIndex == 0 ? firstPositionDetail : secondPositionDetail\n                    const positionName =\n                        bothPositionData?.[positionIndex == 0 ? 'firstPosition' : 'secondPosition']\n                            ?.name\n                    return (\n                        <div className='w-100 pt-5'>\n                            {positionIndex == 0 ? (\n                                <span style={{fontWeight: 600, textDecoration: 'underline'}}>\n                                    Primary Position:{' '}\n                                    <span style={{fontWeight: 400}}>{positionName}</span>\n                                </span>\n                            ) : null}\n                            {positionIndex == 1 && (\n                                <hr className='my-5' style={{color: 'black', opacity: 1}} />\n                            )}\n                            <div className='w-100'>\n                                <div className='container mt-5'>\n                                    <div className='row'>\n                                        <div className='col'>\n                                            <CustomInput\n                                                label={`${positionName} Commission ${\n                                                    userType == USER_TYPE.hiredEmployee\n                                                        ? 'with Effective Date'\n                                                        : ''\n                                                }`}\n                                                required\n                                                suffixText='%'\n                                                disabled={\n                                                    userType == USER_TYPE.onboardEmployee &&\n                                                    positionDetail?.commission_parentag_hiring_locked\n                                                }\n                                                name={HIRE_FIELD_KEYS.commission}\n                                                onChange={(e) => {\n                                                    if (percentageLimitCheck(100, e.target.value))\n                                                        onChangeCompensationData(positionIndex, e)\n                                                }}\n                                                value={\n                                                    employeeData?.employee_compensation?.[\n                                                        positionIndex\n                                                    ]?.commission\n                                                }\n                                                placeholder='Comission'\n                                            />\n                                            <LockedView\n                                                visible={\n                                                    userType == USER_TYPE.onboardEmployee &&\n                                                    positionDetail?.commission_parentag_hiring_locked\n                                                }\n                                            />\n                                        </div>\n\n                                        {userType == USER_TYPE.hiredEmployee && (\n                                            <div className='col'>\n                                                <CustomDatePicker\n                                                    hideLabel\n                                                    label={`${positionName} Comission with Effective Date`}\n                                                    required\n                                                    name={HIRE_FIELD_KEYS.commission_effective_date}\n                                                    onChange={(e) =>\n                                                        onChangeCompensationData(positionIndex, e)\n                                                    }\n                                                    value={\n                                                        employeeData?.employee_compensation?.[\n                                                            positionIndex\n                                                        ]?.commission_effective_date\n                                                    }\n                                                    placeholder='Comission Effective Date'\n                                                />\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <div className='container mt-5'>\n                                    <div className='d-flex flex-wrap g-2'>\n                                        <div\n                                            className='col text-cmGrey700'\n                                            style={{\n                                                fontFamily: 'Manrope',\n                                                fontSize: '14px',\n                                                fontWeight: 600,\n                                            }}\n                                        >\n                                            <label className='d-flex  flex-wrap'>\n                                                <CustomDropdown\n                                                    label={`${positionName} Redline Type`}\n                                                    required\n                                                    options={[\n                                                        {\n                                                            name: 'Shift based on Location',\n                                                            value: 'Shift based on Location',\n                                                        },\n                                                        {\n                                                            name: 'Fixed',\n                                                            value: 'Fixed',\n                                                        },\n                                                    ]}\n                                                    name={HIRE_FIELD_KEYS.redline_amount_type}\n                                                    onChange={(e) =>\n                                                        onChangeCompensationData(positionIndex, e)\n                                                    }\n                                                    value={\n                                                        employeeData?.employee_compensation?.[\n                                                            positionIndex\n                                                        ]?.redline_amount_type\n                                                    }\n                                                    searching={false}\n                                                />\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='container mt-5'>\n                                    <div className='d-flex flex-wrap'>\n                                        <div\n                                            className='col text-cmGrey700'\n                                            style={{\n                                                fontFamily: 'Manrope',\n                                                fontSize: '14px',\n                                                fontWeight: 600,\n                                            }}\n                                        >\n                                            <div className='row align-items-end mb-5 gap-md-0'>\n                                                <div className='col-md'>\n                                                    <CustomInput\n                                                        label={`${positionName}${\n                                                            isStackModalEnabled &&\n                                                            positionIndex == 0 &&\n                                                            positionName == 'Closer'\n                                                                ? ' and Stack'\n                                                                : ''\n                                                        } Redline`}\n                                                        required\n                                                        prefixText='$'\n                                                        type={INPUT_TYPE.number}\n                                                        name={HIRE_FIELD_KEYS.redline}\n                                                        onChange={(e) =>\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                        }\n                                                        value={\n                                                            employeeData?.employee_compensation?.[\n                                                                positionIndex\n                                                            ]?.redline\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className='mt-5 col-md-5'>\n                                                    <CustomDropdown\n                                                        // label={`${positionName} Redline Amount Type`}\n                                                        name={HIRE_FIELD_KEYS.redline_type}\n                                                        onChange={(e) =>\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                        }\n                                                        value={\n                                                            employeeData?.employee_compensation?.[\n                                                                positionIndex\n                                                            ]?.redline_type\n                                                        }\n                                                        options={UNIT_TYPE2}\n                                                        placeholder={`${positionName} Redline Amount Type`}\n                                                        searching={false}\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            {userType == USER_TYPE.hiredEmployee && (\n                                                <div className=''>\n                                                    <CustomDatePicker\n                                                        // hideLabel\n                                                        label={`${positionName} Redline Effective Date`}\n                                                        required\n                                                        name={\n                                                            HIRE_FIELD_KEYS.redline_effective_date\n                                                        }\n                                                        onChange={(e) =>\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                        }\n                                                        value={\n                                                            employeeData?.employee_compensation?.[\n                                                                positionIndex\n                                                            ]?.redline_effective_date\n                                                        }\n                                                        placeholder='Redline Effective Date'\n                                                    />\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {positionDetail?.upfront_status ? (\n                                    <div className='container mt-10'>\n                                        <div className=''>\n                                            <div\n                                                className='text-cmGrey700'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontSize: '14px',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <div className='row gap-md-0'>\n                                                    <div className='col-md'>\n                                                        <CustomInput\n                                                            required\n                                                            label={`${positionName} Upfront Pay \n                                                                                                                      `}\n                                                            prefixText={'$'}\n                                                            type={INPUT_TYPE.number}\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.upfront_ammount_locked\n                                                            }\n                                                            name={\n                                                                HIRE_FIELD_KEYS.upfront_pay_amount\n                                                            }\n                                                            onChange={(e) =>\n                                                                onChangeCompensationData(\n                                                                    positionIndex,\n                                                                    e\n                                                                )\n                                                            }\n                                                            value={\n                                                                employeeData\n                                                                    ?.employee_compensation?.[\n                                                                    positionIndex\n                                                                ]?.upfront_pay_amount\n                                                            }\n                                                            placeholder='0'\n                                                        />\n                                                        <LockedView\n                                                            visible={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.upfront_ammount_locked\n                                                            }\n                                                        />\n                                                    </div>\n\n                                                    <div className='col-md-5'>\n                                                        <CustomDropdown\n                                                            label='Type'\n                                                            hideLabel\n                                                            name={HIRE_FIELD_KEYS.upfront_sale_type}\n                                                            onChange={(e) =>\n                                                                onChangeCompensationData(\n                                                                    positionIndex,\n                                                                    e\n                                                                )\n                                                            }\n                                                            value={\n                                                                employeeData\n                                                                    ?.employee_compensation?.[\n                                                                    positionIndex\n                                                                ]?.upfront_sale_type\n                                                            }\n                                                            disabled={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.calculated_locked\n                                                            }\n                                                            options={UNIT_TYPE1}\n                                                            placeholder='Select unit'\n                                                        />\n                                                        <LockedView\n                                                            visible={\n                                                                userType ==\n                                                                    USER_TYPE.onboardEmployee &&\n                                                                positionDetail?.calculated_locked\n                                                            }\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                                {userType == USER_TYPE.hiredEmployee && (\n                                                    <div className=''>\n                                                        <CustomDatePicker\n                                                            label={`${positionName} Upfront Pay \n                                                            ${\n                                                                userType == USER_TYPE.hiredEmployee\n                                                                    ? 'Effective Date'\n                                                                    : ''\n                                                            }\n                                                            `}\n                                                            required\n                                                            name={\n                                                                HIRE_FIELD_KEYS.upfront_effective_date\n                                                            }\n                                                            onChange={(e) =>\n                                                                onChangeCompensationData(\n                                                                    positionIndex,\n                                                                    e\n                                                                )\n                                                            }\n                                                            value={\n                                                                employeeData\n                                                                    ?.employee_compensation?.[\n                                                                    positionIndex\n                                                                ]?.upfront_effective_date\n                                                            }\n                                                            placeholder='Upfront Pay Effective Date'\n                                                        />\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                ) : null}\n\n                                {positionDetail?.reconciliation_status &&\n                                companySetting?.reconciliation ? (\n                                    <div className='container mt-10'>\n                                        <div\n                                            className=' text-cmGrey700'\n                                            style={{\n                                                fontFamily: 'Manrope',\n                                                fontSize: '14px',\n                                                fontWeight: 600,\n                                            }}\n                                        >\n                                            <div className='row gap-md-0'>\n                                                <div className='col-md'>\n                                                    <CustomInput\n                                                        disabled={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            positionDetail?.commission_withheld_locked\n                                                        }\n                                                        required\n                                                        label={`${positionName} withheld amount`}\n                                                        prefixText={'$'}\n                                                        type={INPUT_TYPE.number}\n                                                        name={HIRE_FIELD_KEYS.withheld_amount}\n                                                        onChange={(e) =>\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                        }\n                                                        value={\n                                                            employeeData?.employee_compensation?.[\n                                                                positionIndex\n                                                            ]?.withheld_amount\n                                                        }\n                                                        placeholder='0'\n                                                    />\n                                                    <LockedView\n                                                        visible={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            positionDetail?.commission_withheld_locked\n                                                        }\n                                                    />\n                                                </div>\n\n                                                <div className='col-md-5'>\n                                                    <CustomDropdown\n                                                        label='Type'\n                                                        hideLabel\n                                                        disabled={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            positionDetail?.commission_type_locked\n                                                        }\n                                                        name={HIRE_FIELD_KEYS.withheld_type}\n                                                        onChange={(e) =>\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                        }\n                                                        value={\n                                                            employeeData?.employee_compensation?.[\n                                                                positionIndex\n                                                            ]?.withheld_type\n                                                        }\n                                                        options={UNIT_TYPE1}\n                                                        placeholder='Select unit'\n                                                    />\n                                                    <LockedView\n                                                        visible={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            positionDetail?.commission_type_locked\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                            {userType == USER_TYPE.hiredEmployee && (\n                                                <div className=''>\n                                                    <CustomDatePicker\n                                                        label={`${positionName} withheld ${\n                                                            userType == USER_TYPE.hiredEmployee\n                                                                ? 'Effective Date'\n                                                                : ''\n                                                        }`}\n                                                        required\n                                                        name={\n                                                            HIRE_FIELD_KEYS.withheld_effective_date\n                                                        }\n                                                        onChange={(e) =>\n                                                            onChangeCompensationData(\n                                                                positionIndex,\n                                                                e\n                                                            )\n                                                        }\n                                                        value={\n                                                            employeeData?.employee_compensation?.[\n                                                                positionIndex\n                                                            ]?.withheld_effective_date\n                                                        }\n                                                        placeholder='Withheld amount Effective Date'\n                                                    />\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                ) : null}\n                            </div>\n                        </div>\n                    )\n                })}\n                {/* Self-Gen Commission */}\n                {/* {employeeData?.self_gen_accounts ? (\n                    <div className='container mt-5'>\n                        <div className='row'>\n                            <div className='col'>\n                                <CustomInput\n                                    label={`Self-Gen Commission${\n                                        userType == USER_TYPE.hiredEmployee\n                                            ? 'with Effective Date'\n                                            : ''\n                                    }`}\n                                    required\n                                    suffixText='%'\n                                    name={HIRE_FIELD_KEYS.commission_selfgen}\n                                    onChange={(e) => {\n                                        if (percentageLimitCheck(100, e.target.value))\n                                            onChangeInputData(e)\n                                    }}\n                                    value={employeeData?.commission_selfgen}\n                                    placeholder='Comission'\n                                />\n                            </div>\n\n                            {userType == USER_TYPE.hiredEmployee && (\n                                <div className='col'>\n                                    <CustomDatePicker\n                                        hideLabel\n                                        label={`Self - Gen Comission with Effective Date`}\n                                        required\n                                        name={HIRE_FIELD_KEYS.commission_selfgen_effective_date}\n                                        onChange={onChangeInputData}\n                                        value={employeeData?.commission_selfgen_effective_date}\n                                        placeholder='Comission Effective Date'\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                ) : null} */}\n            </div>\n            {editRedline ? (\n                <EditUserRedlineModel\n                    employeeData={employeeData}\n                    show={editRedline}\n                    handleClose={closeRedlinePopup}\n                    redline_data={employeeData?.redline_data}\n                    onSavePress={onSaveOtherRedlinePress}\n                />\n            ) : null}\n            {editSelfGenRedline ? (\n                <EditUserRedlineModel\n                    self_gen={true}\n                    employeeData={employeeData}\n                    show={editSelfGenRedline}\n                    handleClose={closeRedlinePopup}\n                    redline_data={employeeData?.self_gen_redline_data}\n                    onSavePress={onSaveOtherRedlinePress}\n                />\n            ) : null}\n        </div>\n    )\n}\n\nexport default memo(UserRedlineComissionUpfrontContainer)\n","import {LockedView} from '../HireNew'\nimport {\n    OVERRIDE_TYPE,\n    UNIT_TYPE1,\n    getValidDate,\n    SHOW_BASED_ON_HOST,\n} from '../../../../../../../constants/constants'\nimport {HIRE_FIELD_KEYS} from '../../../../../../../constants/constants'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {USER_TYPE} from '../../../../../../../hooks/useUserEmploymentPackage'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {getBooleanValue, percentageLimitCheck} from '../../../../../../../helpers/CommonHelpers'\nimport _ from 'lodash'\n\nconst UserOverridesContainer = ({\n    firstPositionDetail,\n    employeeData,\n    updateEmployeeData,\n    userType,\n    isStackModalEnabled,\n    userAssociatedOffices,\n    selectedPrimaryOffice,\n}) => {\n    const onChangeInputData = (e) => {\n        updateEmployeeData(e?.target?.name, e?.target?.value)\n    }\n\n    const onChangeInputDataWithLimit = (e) => {\n        if (percentageLimitCheck(100, e.target.value)) onChangeInputData(e)\n    }\n\n    const onChangeOverridesType = (e, override) => {\n        updateEmployeeData(override, null)\n        onChangeInputData(e)\n    }\n\n    const updateAdditionalOfficeOverrideData = (additionalOfficeIndex, key, value) => {\n        const data = _.cloneDeep(employeeData?.additional_locations)\n        data[additionalOfficeIndex][key] = value\n\n        updateEmployeeData(HIRE_FIELD_KEYS.additional_locations, data)\n    }\n    const updateAdditionalOfficeOverrideType = (additionalOfficeIndex, key, value) => {\n        const data = _.cloneDeep(employeeData?.additional_locations)\n        data[additionalOfficeIndex][key] = value\n        data[additionalOfficeIndex]['overrides_amount'] = null\n        updateEmployeeData(HIRE_FIELD_KEYS.additional_locations, data)\n    }\n\n    return (\n        <div className='p-5' style={{fontSize: '14px'}} data-kt-stepper-element='content'>\n            <div className='w-sm-75 mx-auto w-100'>\n                {firstPositionDetail?.override?.[0]?.status ||\n                firstPositionDetail?.override?.[1]?.status ||\n                firstPositionDetail?.override?.[2]?.status ||\n                (isStackModalEnabled && firstPositionDetail?.override?.[3]?.status) ? (\n                    <>\n                        {userType == USER_TYPE.hiredEmployee && (\n                            <div className='mb-5'>\n                                <CustomDatePicker\n                                    label={'Effective Date'}\n                                    onChange={onChangeInputData}\n                                    name={HIRE_FIELD_KEYS.override_effective_date}\n                                    value={employeeData.override_effective_date}\n                                />\n                            </div>\n                        )}\n\n                        {/* Direct Overrides */}\n                        {firstPositionDetail?.override?.[0]?.status ? (\n                            <div className='container mb-5' style={{}}>\n                                <div className='row text-cmGrey700'>\n                                    <div className='row align-items-end'>\n                                        <div className='col-sm'>\n                                            <div>\n                                                <CustomInput\n                                                    label={'Direct Overrides'}\n                                                    prefixText={\n                                                        employeeData.direct_overrides_type !=\n                                                        'percent'\n                                                            ? '$'\n                                                            : ''\n                                                    }\n                                                    suffixText={\n                                                        employeeData.direct_overrides_type ==\n                                                        'percent'\n                                                            ? '%'\n                                                            : ''\n                                                    }\n                                                    type={INPUT_TYPE.number}\n                                                    disabled={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        firstPositionDetail?.override?.[0]\n                                                            ?.override_ammount_locked\n                                                    }\n                                                    onChange={\n                                                        employeeData.direct_overrides_type ==\n                                                        'percent'\n                                                            ? onChangeInputDataWithLimit\n                                                            : onChangeInputData\n                                                    }\n                                                    name={HIRE_FIELD_KEYS.direct_overrides_amount}\n                                                    value={employeeData.direct_overrides_amount}\n                                                    placeholder='50'\n                                                />\n                                            </div>\n                                            <LockedView\n                                                visible={\n                                                    userType == USER_TYPE.onboardEmployee &&\n                                                    firstPositionDetail?.override?.[0]\n                                                        ?.override_ammount_locked\n                                                }\n                                            />\n                                        </div>\n                                        <div className='col-sm'>\n                                            <label className=''>\n                                                <CustomDropdown\n                                                    disabled={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        firstPositionDetail?.override?.[0]\n                                                            ?.override_type_locked\n                                                    }\n                                                    onChange={(e) =>\n                                                        onChangeOverridesType(\n                                                            e,\n                                                            HIRE_FIELD_KEYS.direct_overrides_amount\n                                                        )\n                                                    }\n                                                    name={HIRE_FIELD_KEYS.direct_overrides_type}\n                                                    value={employeeData.direct_overrides_type ?? ''}\n                                                    options={OVERRIDE_TYPE}\n                                                    searching={false}\n                                                />\n                                            </label>\n                                            <LockedView\n                                                visible={\n                                                    userType == USER_TYPE.onboardEmployee &&\n                                                    firstPositionDetail?.override?.[0]\n                                                        ?.override_type_locked\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <p></p>\n                        )}\n\n                        {/* Indirect Overrides */}\n                        {firstPositionDetail?.override?.[1]?.status ? (\n                            <div className='container mb-5' style={{}}>\n                                <div className='row text-cmGrey700'>\n                                    <div className='row align-items-end'>\n                                        <div className='col-sm'>\n                                            <div className=''>\n                                                <CustomInput\n                                                    label={'Indirect Overrides'}\n                                                    prefixText={\n                                                        employeeData.indirect_overrides_type !=\n                                                        'percent'\n                                                            ? '$'\n                                                            : ''\n                                                    }\n                                                    suffixText={\n                                                        employeeData.indirect_overrides_type ==\n                                                        'percent'\n                                                            ? '%'\n                                                            : ''\n                                                    }\n                                                    type={INPUT_TYPE.number}\n                                                    disabled={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        firstPositionDetail?.override?.[1]\n                                                            ?.override_ammount_locked\n                                                    }\n                                                    onChange={\n                                                        employeeData.indirect_overrides_type ==\n                                                        'percent'\n                                                            ? onChangeInputDataWithLimit\n                                                            : onChangeInputData\n                                                    }\n                                                    name={HIRE_FIELD_KEYS.indirect_overrides_amount}\n                                                    value={employeeData.indirect_overrides_amount}\n                                                    placeholder='50'\n                                                />\n                                            </div>\n                                            <LockedView\n                                                visible={\n                                                    userType == USER_TYPE.onboardEmployee &&\n                                                    firstPositionDetail?.override?.[1]\n                                                        ?.override_ammount_locked\n                                                }\n                                            />\n                                        </div>\n                                        <div className='col-sm '>\n                                            <label>\n                                                <CustomDropdown\n                                                    placeholder='Select unit'\n                                                    disabled={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        firstPositionDetail?.override?.[1]\n                                                            ?.override_type_locked\n                                                    }\n                                                    onChange={(e) =>\n                                                        onChangeOverridesType(\n                                                            e,\n                                                            HIRE_FIELD_KEYS.indirect_overrides_amount\n                                                        )\n                                                    }\n                                                    name={HIRE_FIELD_KEYS.indirect_overrides_type}\n                                                    value={\n                                                        employeeData.indirect_overrides_type ?? ''\n                                                    }\n                                                    options={OVERRIDE_TYPE}\n                                                    searching={false}\n                                                />\n                                            </label>\n                                            <LockedView\n                                                visible={\n                                                    userType == USER_TYPE.onboardEmployee &&\n                                                    firstPositionDetail?.override?.[1]\n                                                        ?.override_type_locked\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <></>\n                        )}\n\n                        {/* Office Overrides */}\n                        {firstPositionDetail?.override?.[2]?.status ? (\n                            <>\n                                <span style={{fontWeight: 600}} className='text-cmGrey700 mt-5'>\n                                    Office Overrides:\n                                </span>\n                                <div className='container' style={{}}>\n                                    <div className='row text-cmGrey700'>\n                                        <div className=' row align-items-end'>\n                                            <div className='col-sm'>\n                                                <div>\n                                                    <CustomInput\n                                                        label={`↳ Office: ${selectedPrimaryOffice?.office_name}, ${selectedPrimaryOffice?.state_name}`}\n                                                        prefixText={\n                                                            employeeData.office_overrides_type !=\n                                                            'percent'\n                                                                ? '$'\n                                                                : ''\n                                                        }\n                                                        suffixText={\n                                                            employeeData.office_overrides_type ==\n                                                            'percent'\n                                                                ? '%'\n                                                                : ''\n                                                        }\n                                                        disabled={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            firstPositionDetail?.override?.[2]\n                                                                ?.override_ammount_locked\n                                                        }\n                                                        type={INPUT_TYPE.number}\n                                                        onChange={\n                                                            employeeData.office_overrides_type ==\n                                                            'percent'\n                                                                ? onChangeInputDataWithLimit\n                                                                : onChangeInputData\n                                                        }\n                                                        name={\n                                                            HIRE_FIELD_KEYS.office_overrides_amount\n                                                        }\n                                                        value={employeeData.office_overrides_amount}\n                                                        placeholder='50'\n                                                    />\n                                                </div>\n                                                <LockedView\n                                                    visible={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        firstPositionDetail?.override?.[2]\n                                                            ?.override_ammount_locked\n                                                    }\n                                                />\n                                            </div>\n                                            <div className='col-sm'>\n                                                <label className=''>\n                                                    <CustomDropdown\n                                                        disabled={\n                                                            userType == USER_TYPE.onboardEmployee &&\n                                                            firstPositionDetail?.override?.[2]\n                                                                ?.override_type_locked\n                                                        }\n                                                        searching={false}\n                                                        onChange={(e) =>\n                                                            onChangeOverridesType(\n                                                                e,\n                                                                HIRE_FIELD_KEYS.office_overrides_amount\n                                                            )\n                                                        }\n                                                        name={HIRE_FIELD_KEYS.office_overrides_type}\n                                                        value={\n                                                            employeeData.office_overrides_type ?? ''\n                                                        }\n                                                        options={OVERRIDE_TYPE}\n                                                    />\n                                                </label>\n\n                                                <LockedView\n                                                    visible={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        firstPositionDetail?.override?.[2]\n                                                            ?.override_type_locked\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* Override With Multiple Office */}\n                                {SHOW_BASED_ON_HOST.additionalOfficeOverrides &&\n                                getBooleanValue(employeeData?.is_manager) == 1 &&\n                                userAssociatedOffices?.length > 0 &&\n                                firstPositionDetail?.override?.[2]?.status ? (\n                                    <>\n                                        {userAssociatedOffices?.map((officeItem, officeIndex) => (\n                                            <div className='container mb-5' style={{}}>\n                                                <div className='row text-cmGrey700'>\n                                                    <div className=' row align-items-end'>\n                                                        <div className='col-sm'>\n                                                            <div>\n                                                                <CustomInput\n                                                                    label={`↳ Office: ${officeItem?.office_name}, ${officeItem?.state_name}`}\n                                                                    prefixText={\n                                                                        officeItem?.overrides_type ==\n                                                                        'percent'\n                                                                            ? ''\n                                                                            : '$'\n                                                                    }\n                                                                    suffixText={\n                                                                        officeItem?.overrides_type ==\n                                                                        'percent'\n                                                                            ? '%'\n                                                                            : ''\n                                                                    }\n                                                                    type={INPUT_TYPE.number}\n                                                                    onChange={(e) => {\n                                                                        if (\n                                                                            officeItem?.overrides_type ==\n                                                                            'percent'\n                                                                        ) {\n                                                                            if (\n                                                                                percentageLimitCheck(\n                                                                                    100,\n                                                                                    e.target.value\n                                                                                )\n                                                                            ) {\n                                                                                updateAdditionalOfficeOverrideData(\n                                                                                    officeIndex,\n                                                                                    'overrides_amount',\n                                                                                    e?.target?.value\n                                                                                )\n                                                                            }\n                                                                        } else {\n                                                                            updateAdditionalOfficeOverrideData(\n                                                                                officeIndex,\n                                                                                'overrides_amount',\n                                                                                e?.target?.value\n                                                                            )\n                                                                        }\n                                                                    }}\n                                                                    value={\n                                                                        officeItem?.overrides_amount\n                                                                    }\n                                                                    placeholder='50'\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div className='col-sm'>\n                                                            <label className=''>\n                                                                <CustomDropdown\n                                                                    searching={false}\n                                                                    value={\n                                                                        officeItem?.overrides_type\n                                                                    }\n                                                                    onChange={(e) => {\n                                                                        updateAdditionalOfficeOverrideType(\n                                                                            officeIndex,\n                                                                            'overrides_type',\n                                                                            e?.target?.value\n                                                                        )\n                                                                        // updateAdditionalOfficeOverrideData(\n                                                                        //     officeIndex,\n                                                                        //     'overrides_type',\n                                                                        //     e?.target?.value\n                                                                        // )\n                                                                    }}\n                                                                    options={OVERRIDE_TYPE}\n                                                                />\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </>\n                                ) : null}\n                            </>\n                        ) : (\n                            <></>\n                        )}\n\n                        {/* Stack Office Overrides */}\n                        {isStackModalEnabled && firstPositionDetail?.override?.[3]?.status ? (\n                            <div className='container' style={{}}>\n                                <div className='row text-cmGrey700'>\n                                    <div className=' row align-items-end'>\n                                        <div className='col-sm'>\n                                            <div>\n                                                <CustomInput\n                                                    label={'Stack Split'}\n                                                    suffixText={'%'}\n                                                    disabled={\n                                                        userType == USER_TYPE.onboardEmployee &&\n                                                        firstPositionDetail?.override?.[3]\n                                                            ?.override_ammount_locked\n                                                    }\n                                                    type={INPUT_TYPE.number}\n                                                    onChange={(e) => {\n                                                        if (\n                                                            percentageLimitCheck(\n                                                                100,\n                                                                e.target.value\n                                                            )\n                                                        )\n                                                            onChangeInputData(e)\n                                                    }}\n                                                    name={\n                                                        HIRE_FIELD_KEYS.office_stack_overrides_amount\n                                                    }\n                                                    value={\n                                                        employeeData.office_stack_overrides_amount\n                                                    }\n                                                    placeholder='50'\n                                                />\n                                            </div>\n                                            <LockedView\n                                                visible={\n                                                    userType == USER_TYPE.onboardEmployee &&\n                                                    firstPositionDetail?.override?.[3]\n                                                        ?.override_ammount_locked\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <></>\n                        )}\n                    </>\n                ) : (\n                    <div\n                        className='text-cmGrey700 text-center mt-10'\n                        style={{fontWeight: 600, fontSize: '14px'}}\n                    >\n                        No overrides found\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default UserOverridesContainer\n","import 'react-datepicker/dist/react-datepicker.css'\nimport {\n    DOCUMENT_TO_ATTACH_WHILE_ONBOARD,\n    HIRE_FIELD_KEYS,\n} from '../../../../../../../constants/constants'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {getBooleanValue} from '../../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport _ from 'lodash'\nimport moment from 'moment'\n\nconst UserAgreementsContainer = ({\n    employeeData,\n    updateEmployeeData,\n    updateMultipleKeysOfEmployeeData,\n    agreementStep,\n    selectedDocument,\n    setSelectedDocument,\n}) => {\n    const onChangeInputData = (e) => {\n        updateEmployeeData(e?.target?.name, e?.target?.value)\n    }\n\n    const onCheckAttachDocumentPress = (index) => {\n        let data = _.cloneDeep(selectedDocument)\n        data[index].isSelected = !data[index].isSelected\n        setSelectedDocument(data)\n    }\n\n    return (\n        <div className='mb-sm-15 px-5' style={{fontSize: '14px'}} data-kt-stepper-element='content'>\n            <div className='w-sm-75 w-100  mx-auto'>\n                {agreementStep == 1 ? (\n                    <>\n                        <div className='mt-4'>\n                            <div className='d-flex flex-wrap'>\n                                <div className='col-sm-12 text-cmGrey700'>\n                                    <label className='d-flex flex-row'>\n                                        <CustomDropdown\n                                            label={'Probation Period'}\n                                            onChange={onChangeInputData}\n                                            name={HIRE_FIELD_KEYS.probation_period}\n                                            value={employeeData.probation_period ?? ''}\n                                            options={[\n                                                {name: 'None', value: 'None'},\n                                                {name: '60 Days', value: '60'},\n                                                {name: '30 Days', value: '30'},\n                                            ]}\n                                            searching={false}\n                                        />\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='d-flex flex-wrap mt-6 '>\n                            <label className='me-8 text-cmGrey700' style={{fontWeight: 600}}>\n                                Offer includes bonus?\n                            </label>\n\n                            <CustomCheckbox\n                                checked={\n                                    getBooleanValue(employeeData.offer_include_bonus) == 1\n                                        ? true\n                                        : false\n                                }\n                                name={HIRE_FIELD_KEYS.offer_include_bonus}\n                                onChange={(e) => {\n                                    const value = !getBooleanValue(employeeData.offer_include_bonus)\n                                    updateMultipleKeysOfEmployeeData({\n                                        ...employeeData,\n                                        [HIRE_FIELD_KEYS.offer_include_bonus]: value,\n                                        [HIRE_FIELD_KEYS.offer_expiry_date]: value\n                                            ? employeeData?.offer_expiry_date\n                                            : null,\n                                        [HIRE_FIELD_KEYS.hiring_bonus_amount]: value\n                                            ? employeeData?.hiring_bonus_amount\n                                            : null,\n                                    })\n                                }}\n                            />\n                        </div>\n\n                        {getBooleanValue(employeeData?.offer_include_bonus) ? (\n                            <div className='mt-7 w-sm-100'>\n                                <div className='row align-items-center'>\n                                    <div className='col-sm'>\n                                        <CustomInput\n                                            label={'Hiring Bonus / Resign Bonus'}\n                                            required\n                                            prefixText={'$'}\n                                            type={INPUT_TYPE.number}\n                                            onChange={onChangeInputData}\n                                            name={HIRE_FIELD_KEYS.hiring_bonus_amount}\n                                            value={employeeData.hiring_bonus_amount}\n                                            placeholder='Enter Amount'\n                                        />\n                                    </div>\n                                    <div className='col-sm text-cmGrey600'>\n                                        <div className='d-flex flex-row flex-wrap'>\n                                            <CustomDatePicker\n                                                label={'Date to be paid'}\n                                                required\n                                                name={HIRE_FIELD_KEYS.date_to_be_paid}\n                                                value={\n                                                    employeeData?.date_to_be_paid\n                                                        ? new Date(employeeData?.date_to_be_paid)\n                                                        : null\n                                                }\n                                                onChange={onChangeInputData}\n                                                inputClassName='py-1'\n                                                //\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : null}\n\n                        <div className='mt-7 text-cmGrey700 w-sm-100'>\n                            <div className='row align-items-end'>\n                                <div className='col min-w-150px'>\n                                    <CustomDatePicker\n                                        label={'Period of Agreement'}\n                                        required\n                                        // minDate={new Date()}\n                                        name={HIRE_FIELD_KEYS.period_of_agreement_start_date}\n                                        value={\n                                            employeeData?.period_of_agreement_start_date\n                                                ? new Date(\n                                                      employeeData?.period_of_agreement_start_date\n                                                  )\n                                                : null\n                                        }\n                                        onChange={(e) => {\n                                            onChangeInputData(e)\n                                            updateEmployeeData(\n                                                HIRE_FIELD_KEYS.offer_expiry_date,\n                                                null\n                                            )\n                                            if (\n                                                new Date(\n                                                    employeeData?.period_of_agreement_start_date\n                                                ) > new Date(employeeData?.end_date)\n                                            ) {\n                                                setTimeout(\n                                                    () =>\n                                                        updateEmployeeData(\n                                                            HIRE_FIELD_KEYS.end_date,\n                                                            null\n                                                        ),\n                                                    300\n                                                )\n                                            }\n                                        }}\n                                        // inputClassName='py-1 '\n                                    />\n                                </div>\n\n                                <div className='text-center mb-3 fw-bolder col'>-</div>\n\n                                <div className='min-w-150px col'>\n                                    <CustomDatePicker\n                                        name={HIRE_FIELD_KEYS.end_date}\n                                        value={\n                                            employeeData?.end_date\n                                                ? new Date(employeeData?.end_date)\n                                                : null\n                                        }\n                                        onChange={(e) => {\n                                            onChangeInputData(e)\n                                            updateEmployeeData(\n                                                HIRE_FIELD_KEYS.offer_expiry_date,\n                                                null\n                                            )\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        {employeeData?.period_of_agreement_start_date ? (\n                            <div className='mt-6 w-sm-100'>\n                                <div className='row'>\n                                    <div className='col-sm-6 mb-3 text-cmGrey700 text-nowrap'>\n                                        <div>\n                                            <CustomDatePicker\n                                                label={'Offer Expiry Date'}\n                                                required\n                                                name={HIRE_FIELD_KEYS.offer_expiry_date}\n                                                value={\n                                                    employeeData?.offer_expiry_date\n                                                        ? new Date(employeeData?.offer_expiry_date)\n                                                        : null\n                                                }\n                                                onChange={onChangeInputData}\n                                                inputClassName='py-1'\n                                                minDate={moment().add(1, 'd').toDate()}\n                                                // maxDate={\n                                                //     employeeData?.period_of_agreement_start_date\n                                                //         ? new Date(\n                                                //               employeeData?.period_of_agreement_start_date\n                                                //           )\n                                                //         : null\n                                                // }\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : null}\n                    </>\n                ) : (\n                    <>\n                        <div\n                            className='current d-flex flex-column '\n                            data-kt-stepper-element='content'\n                            style={{marginBottom: '34%'}}\n                        >\n                            <div className='container mt-3 d-flex justify-content-center flex-column  w-md-425px mt-20'>\n                                <div\n                                    className='cmGrey900'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: 800,\n                                    }}\n                                >\n                                    Attach Forms\n                                </div>\n                                <div\n                                    className='text-cmGrey700 my-5'\n                                    style={{fontWeight: 600, fontSize: '14px'}}\n                                >\n                                    Please ensure the relevant forms are selected for employee\n                                </div>\n                                {DOCUMENT_TO_ATTACH_WHILE_ONBOARD.map((item, index, data) => (\n                                    <>\n                                        <div className='d-flex gap-1'>\n                                            <div>\n                                                <CustomCheckbox\n                                                    checked={\n                                                        getBooleanValue(\n                                                            selectedDocument?.[index].isSelected\n                                                        ) == 1\n                                                    }\n                                                    onChange={() =>\n                                                        onCheckAttachDocumentPress(index)\n                                                    }\n                                                />\n                                            </div>\n                                            <div\n                                                className='text-cmGrey800'\n                                                style={{fontWeight: 600, fontSize: '14px'}}\n                                            >\n                                                {item?.name}\n                                            </div>\n                                        </div>\n                                        {DOCUMENT_TO_ATTACH_WHILE_ONBOARD?.length - 1 != index ? (\n                                            <hr className='my-5' />\n                                        ) : null}\n                                    </>\n                                ))}\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default UserAgreementsContainer\n","import {useSelector} from 'react-redux'\nimport {geyAllStatesWithOfficesSelector} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport {HIRE_FIELD_KEYS} from '../../../../../../../constants/constants'\nimport CustomInput, {\n    CommonLabel,\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport useOfficeLocation from '../../../../../../../hooks/useOfficeLocation'\nimport {useCallback, useEffect, useMemo} from 'react'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport _ from 'lodash'\nimport {Button} from 'primereact/button'\nconst UserPersonalDetailContainer = ({\n    employeeData,\n    updateEmployeeData,\n    updateMultipleKeysOfEmployeeData,\n}) => {\n    const allStatesWithOffices = useSelector(geyAllStatesWithOfficesSelector)\n\n    const onChangeInputData = (e) => {\n        updateEmployeeData(e?.target?.name, e?.target?.value)\n    }\n\n    const officeList = useMemo(() => {\n        return (\n            allStatesWithOffices?.length > 0 &&\n            allStatesWithOffices?.find((item) => item?.id == employeeData?.state_id)?.office\n        )\n    }, [allStatesWithOffices, employeeData?.state_id])\n\n    const onChangeWorkEmail = useCallback(\n        (value, index) => {\n            const empWorkEmailData = _.cloneDeep(employeeData?.work_email)\n            empWorkEmailData[index].email = value\n            updateEmployeeData(HIRE_FIELD_KEYS.work_email, empWorkEmailData)\n        },\n        [employeeData?.work_email, updateEmployeeData]\n    )\n\n    const onCancelWorkEmailPress = useCallback(\n        (index) => {\n            const data = _.cloneDeep(employeeData?.work_email)\n            const updatedData = data?.filter((emailItem, emailIndex) => emailIndex != index)\n            updateEmployeeData(HIRE_FIELD_KEYS.work_email, updatedData)\n        },\n        [employeeData?.work_email, updateEmployeeData]\n    )\n\n    const onAddWorkEmailPress = useCallback(() => {\n        updateEmployeeData(HIRE_FIELD_KEYS.work_email, [...employeeData?.work_email, {email: ''}])\n    }, [employeeData?.work_email, updateEmployeeData])\n\n    return (\n        <div\n            className='current px-2'\n            data-kt-stepper-element='content'\n            style={{marginBottom: '15%'}}\n        >\n            <div className='w-sm-75 mx-auto'>\n                <div className='container mt-4 '>\n                    <div className='row align-items-center'>\n                        <div className='col-sm text-cmGrey700'>\n                            <CustomInput\n                                label={'First Name'}\n                                required\n                                name={HIRE_FIELD_KEYS.first_name}\n                                value={employeeData.first_name || ''}\n                                onChange={onChangeInputData}\n                                placeholder='Enter First Name'\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                        <div className='col-sm'>\n                            <CustomInput\n                                label={'Last Name'}\n                                required\n                                onChange={onChangeInputData}\n                                name={HIRE_FIELD_KEYS.last_name}\n                                value={employeeData.last_name || ''}\n                                placeholder='Enter Last Name'\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='container mt-7 w-md-525px'>\n                    <div className='row'>\n                        <div className='col-sm-12 text-cmGrey700'>\n                            <CustomInput\n                                label={'Personal Email'}\n                                subLabel={'(This email will be use for login)'}\n                                required\n                                type={INPUT_TYPE.email}\n                                onChange={onChangeInputData}\n                                name={HIRE_FIELD_KEYS.email}\n                                value={employeeData.email || ''}\n                                placeholder='Enter email'\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                {/* Work Emails */}\n                <div className='container mt-7 w-md-525px'>\n                    <div className='row'>\n                        <div className='row col-sm-12 text-cmGrey700'>\n                            <div className='col-sm-10 mb-2'>\n                                <CommonLabel\n                                    label='Work Emails'\n                                    subLabel='(For official use by manager / admin only)'\n                                />\n                            </div>\n                        </div>\n\n                        <div className='w-100'>\n                            {employeeData?.work_email?.length > 0 &&\n                                employeeData?.work_email?.map((item, index) => (\n                                    <div className='d-flex w-100  align-items-center justify-content-evenly text-cmGrey700 mb-5'>\n                                        <div className='w-5' style={{fontSize: 14}}>\n                                            {index + 1}.\n                                        </div>\n                                        <div className='w-100'>\n                                            <CustomInput\n                                                hideLabel\n                                                required\n                                                type={INPUT_TYPE.email}\n                                                onChange={(e) =>\n                                                    onChangeWorkEmail(e?.target?.value, index)\n                                                }\n                                                name={HIRE_FIELD_KEYS.email}\n                                                value={item?.email || ''}\n                                                placeholder={`Enter work email ${index + 1}`}\n                                            />\n                                        </div>\n                                        <div className='w-25'>\n                                            <i\n                                                class='fa-solid fa-square-xmark text-cmGrey400 cursor-pointer ms-5 align-bottom'\n                                                style={{fontSize: '35px'}}\n                                                onClick={() => onCancelWorkEmailPress(index)}\n                                            ></i>\n                                        </div>\n                                    </div>\n                                ))}\n\n                            <div className='d-flex align-items-center text-cmBlue-Crayola gap-1'>\n                                <span className='cursor-pointer' onClick={onAddWorkEmailPress}>\n                                    <span className='bi bi-plus-square fs-4 '></span>{' '}\n                                    <span className='fw-bold text-decoration-underline'>\n                                        Add Work Email\n                                    </span>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='container mt-7 w-md-525px'>\n                    <div className='row'>\n                        <div className='col-sm-12 text-cmGrey700 '>\n                            <CustomInput\n                                label={'Phone Number'}\n                                required\n                                type={INPUT_TYPE.mobile}\n                                onChange={onChangeInputData}\n                                name={HIRE_FIELD_KEYS.mobile_no}\n                                value={employeeData.mobile_no || ''}\n                                placeholder='Enter Phone Number'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='container mt-7 '>\n                    <div className='row align-items-end'>\n                        <div className='col-sm'>\n                            <CustomDropdown\n                                label={'Office Location'}\n                                required\n                                placeholder='Select State'\n                                searching={false}\n                                options={allStatesWithOffices}\n                                valueKey='id'\n                                name={HIRE_FIELD_KEYS.state_id}\n                                value={employeeData?.state_id || ''}\n                                onChange={(e) => {\n                                    updateMultipleKeysOfEmployeeData({\n                                        ...employeeData,\n                                        [HIRE_FIELD_KEYS.state_id]: e?.target?.value,\n                                        [HIRE_FIELD_KEYS.office_id]: null,\n                                        [HIRE_FIELD_KEYS.manager_id]: null,\n                                    })\n                                }}\n                            />\n                        </div>\n                        <div className='col-sm'>\n                            <CustomDropdown\n                                value={employeeData?.office_id || ''}\n                                onChange={onChangeInputData}\n                                name={HIRE_FIELD_KEYS.office_id}\n                                displayKey='office_name'\n                                valueKey='id'\n                                placeholder='Select Office'\n                                searching={false}\n                                options={officeList}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPersonalDetailContainer\n","import React, {useEffect, useState} from 'react'\nimport {getUserRedlineService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {Sidebar} from 'primereact/sidebar'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport moment from 'moment'\nimport {getEmployeeRedlineHelper} from '../../../../../../helpers/CommonHelpers'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDatePicker from '../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\n\nexport default function ViewChanges({toggleView, closeToggle, id}) {\n    const [loading, setLoading] = useState(true)\n    const [redlineData, setRedlineData] = useState([])\n    useEffect(() => {\n        setLoading(true)\n        // Past Redlines\n        getUserRedlineService(id)\n            .then((res) => {\n                const data = getEmployeeRedlineHelper({redline_data: res?.data})\n                setRedlineData(data?.past)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [id])\n\n    return (\n        <>\n            <Sidebar\n                visible={toggleView}\n                position='right'\n                onHide={closeToggle}\n                showCloseIcon={false}\n                className={'w-sm-50 w-100 px-0 mx-0'}\n            >\n                <div className='m-0 p-0' id='kt_explore_body'>\n                    <CustomLoader full visible={loading} />\n                    <div className='text-cmBlack mx-10 d-flex justify-content-between align-items-center mb-4'>\n                        <div\n                            className=''\n                            style={{fontSize: '16px', fontWeight: '600', fontFamily: 'Manrope'}}\n                        >\n                            Past Redlines\n                        </div>\n                        <div className='d-flex align-items-center gap-2'>\n                            <div\n                                className='bi bi-x-lg fs-3 bg-hover-cmGrey200 text-cmBlack rounded-circle px-1 '\n                                onClick={closeToggle}\n                            />\n                        </div>\n                    </div>\n                    <div className='card shadow-none'>\n                        <div className='mt-0 border border-cmGrey200'></div>\n\n                        <div className='mt-15 '>\n                            {/* first row */}\n\n                            <div className=''>\n                                <div>\n                                    {redlineData?.length > 0 ? (\n                                        redlineData?.map((item) => (\n                                            <table\n                                                style={{\n                                                    fontWeight: 600,\n                                                    borderRadius: 15,\n                                                    overflow: 'hidden',\n                                                }}\n                                                className='w-100 mb-10'\n                                            >\n                                                <tr className='text-start stripRow'>\n                                                    <td className='px-5 py-2 text-cmGrey700 '>\n                                                        Redline:\n                                                    </td>\n                                                    <td className='px-5  py-2 text-cmBlack'>\n                                                        {item?.redline} {item?.redline_type}\n                                                    </td>\n                                                </tr>\n                                                <tr className='text-start stripRow px-5'>\n                                                    <td className='px-5  py-2 text-cmGrey700 '>\n                                                        Effective Date:\n                                                    </td>\n                                                    <td className='px-5  py-2 text-cmBlack '>\n                                                        {getValidDate(item?.start_date)}\n                                                    </td>\n                                                </tr>\n                                                <tr className='text-start stripRow px-5'>\n                                                    <td className='px-5  py-2 text-cmGrey700 '>\n                                                        Updated by:\n                                                    </td>\n                                                    <td className='px-5  py-2 text-cmBlack '>\n                                                        <CustomImage\n                                                            src={item?.image}\n                                                            className='avatar me-2'\n                                                            style={{\n                                                                width: '30px',\n                                                                height: '30px',\n                                                            }}\n                                                            alt='img'\n                                                        />\n                                                        <span> {item?.updater_name}</span>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        ))\n                                    ) : (\n                                        <div style={{textAlign: 'center'}}>\n                                            No Redline Data Available\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Sidebar>\n        </>\n    )\n}\n","import 'react-datepicker/dist/react-datepicker.css'\nimport {HIRE_FIELD_KEYS} from '../../../../../../../constants/constants'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomNoData from '../../../../../../../customComponents/customNoData/CustomNoData'\n\nconst UserDeductionsContainer = ({employeeData, updateEmployeeData}) => {\n    return (\n        <div\n            className='mb-sm-15 gap-5 px-5'\n            style={{fontSize: '14px'}}\n            data-kt-stepper-element='content'\n        >\n            {employeeData?.deduction?.length > 0 ? (\n                <>\n                    {employeeData?.deduction?.map((item, index) => (\n                        <div className='my-5'>\n                            <CustomInput\n                                type={INPUT_TYPE.currency}\n                                label={item?.cost_center_name}\n                                prefixText={item?.deduction_type == '$' ? '$' : ''}\n                                suffixText={item?.deduction_type == '%' ? '%' : ''}\n                                name='ammount_par_paycheck'\n                                value={item?.ammount_par_paycheck}\n                                onChange={(e) => {\n                                    const data = [...employeeData?.deduction]\n                                    data[index].ammount_par_paycheck = e?.target?.value\n                                    updateEmployeeData(HIRE_FIELD_KEYS.deduction, data)\n                                }}\n                            />\n                        </div>\n                    ))}\n                </>\n            ) : (\n                // <span className='d-flex flex-center mt-20 text-cmGrey600'>No deduction Found</span>\n                <CustomNoData label={'No deduction Found'} className={'py-5'} />\n            )}\n        </div>\n    )\n}\n\nexport default UserDeductionsContainer\n","import {useCallback, useEffect, useState} from 'react'\nimport {getValidDate, SHOW_BASED_ON_HOST} from '../../constants/constants'\nimport CustomNoData from '../../customComponents/customNoData/CustomNoData'\nimport {\n    formattedNumberFields,\n    formattedPhoneNumber,\n    getBooleanValue,\n    getErrorMessageFromResponse,\n} from '../../helpers/CommonHelpers'\nimport {updateHireDateOfEmployeeService} from '../../services/Services'\nimport CustomToast from '../../customComponents/customToast/CustomToast'\nimport CustomModal from '../../customComponents/customModal/CustomModal'\nimport CustomLoader from '../../customComponents/customLoader/CustomLoader'\nimport CustomDatePicker from '../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomButton, {BUTTON_TYPE} from '../../customComponents/customButtton/CustomButton'\nimport {USER_TYPE} from '../useUserEmploymentPackage'\nimport {Link} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport {getCompanyOverrideSettingSelector} from '../../redux/selectors/SettingsSelectors'\nimport CustomViewChnagesEmployementPackageModal, {\n    MODAL_NAME,\n} from '../../app/modules/standard_manager/management/particularEmployee/compoents/EmpolymentPackageViewChangesModals.js/CustomViewChnagesEmployementPackageModal'\nimport CustomEditIcon from '../../customComponents/customIcons/CustomEditIcon'\nimport CustomLink from '../../customComponents/customButtton/CustomLink'\nimport AccessRights from '../../accessRights/AccessRights'\nimport useCustomAccessRights from '../../accessRights/useCustomAccessRights'\n\nconst CommonTableRow = ({\n    fieldName = null,\n    fieldValue = null,\n    showViewChangesButton = false,\n    showEditButton,\n    onEditButtonPress,\n    onViewChangesPress = () => {},\n    equalColumn = false,\n}) => (\n    <div\n        className={`px-10 py-4 d-flex flex-wrap align-items-center stripRow \n            justify-content-between \n        `}\n        style={{\n            fontSize: '14px',\n            fontFamily: 'Manrope',\n            fontWeight: 600,\n        }}\n    >\n        <div className={`${equalColumn ? 'col-xxl-6' : 'col-xxl-4'} text-cmBlack`}>\n            {fieldName}:\n        </div>\n        <div className={` ${equalColumn ? 'col-xxl-6' : 'col-xxl-8'}`}>\n            <div className='d-flex flex-wrap gap-2 gap-sm-5 align-items-center justify-content-between'>\n                <div className='text-cmGrey600'>{fieldValue}</div>\n                {showViewChangesButton ? (\n                    <div className=''>\n                        <CustomLink label={'View Changes'} onClick={onViewChangesPress} />\n                    </div>\n                ) : null}\n                {showEditButton ? <CustomEditIcon onClick={onEditButtonPress} /> : null}\n            </div>\n        </div>\n    </div>\n)\n\nconst ViewPersonolDetailBlock = ({employeeData}) => (\n    <div>\n        <div className='w-100'>\n            <div className='px-10 py-4 stripRow'>\n                <div className='d-flex flex-wrap justify-content-between gap-3 '>\n                    <div\n                        className='col-sm text-cmGrey900 d-flex flex-wrap'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                    >\n                        First Name:{' '}\n                        {<span className='ms-2 text-cmGrey700'>{employeeData?.first_name}</span>}\n                    </div>\n                    <div\n                        className='col-sm text-cmGrey900 d-flex flex-wrap'\n                        style={{\n                            fontFamily: 'Manrope',\n                            fontSize: '14px',\n                            fontWeight: '600',\n                        }}\n                    >\n                        Last Name:{' '}\n                        {<span className='ms-2 text-cmGrey700'>{employeeData?.last_name}</span>}\n                    </div>\n                </div>\n            </div>\n            <div className='px-10 py-4 d-flex flex-wrap justify-content-between stripRow gap-3'>\n                <div className='d-flex flex-wrap justify-content-between gap-3'>\n                    <div\n                        className='col-sm-12 text-cmGrey900'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                    >\n                        Email: {<span className='text-cmGrey700'>{employeeData?.email}</span>}\n                    </div>\n                </div>\n            </div>\n            <div className='px-10 py-4 d-flex flex-wrap justify-content-between stripRow gap-3'>\n                <div className='d-flex flex-wrap justify-content-between gap-3'>\n                    <div\n                        className='col-sm-12 text-cmGrey900'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                    >\n                        Work Email:{' '}\n                        {\n                            <span className='text-cmGrey700'>\n                                {employeeData?.work_email?.map((i) => i?.email).join(', ')}\n                            </span>\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className='px-10 py-4 d-flex flex-wrap justify-content-between stripRow gap-3'>\n                <div className='d-flex flex-wrap justify-content-between'>\n                    <div\n                        className='col-sm-12 text-cmGrey900'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                    >\n                        Phone Number:{' '}\n                        {\n                            <span className='ms-2 text-cmGrey700'>\n                                {formattedPhoneNumber(employeeData?.mobile_no)}\n                            </span>\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className='px-10 py-4 d-flex flex-wrap justify-content-between stripRow gap-3'>\n                <div className='d-flex flex-wrap gap-3'>\n                    <div\n                        className=' text-cmGrey900 d-flex flex-wrap gap-3'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                    >\n                        Office:{' '}\n                        <span className='text-cmGrey700 d-flex flex-wrap'>\n                            {employeeData?.office?.office_name}, {employeeData?.office?.state?.name}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nconst ViewOrganisationBlock = ({employeeData, type}) => {\n    return (\n        <div className='pb-5' style={{fontSize: '14px'}}>\n            <div className='w-100 '>\n                {type == USER_TYPE.hiredEmployee ? (\n                    <div\n                        className='stripRow gap-3 d-flex flex-wrap justify-content-between px-10 py-4'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                    >\n                        <div className='col-sm d-flex align-items-center gap-3'>\n                            <div className='text-cmBlack text-nowrap' style={{}}>\n                                Office State:\n                            </div>\n                            <div className='text-cmGrey600 text-nowrap'>\n                                {employeeData?.office?.state?.name}\n                            </div>\n                        </div>\n                        <div className='col-sm d-flex align-items-center gap-3'>\n                            <div className='text-cmBlack text-nowrap'> Office Name:</div>\n                            <div className='text-cmGrey600 text-nowrap'>\n                                {employeeData?.office?.office_name}\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n\n                <div\n                    className='px-10 gap-3 py-4 d-flex flex-wrap justify-content-between stripRow '\n                    style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                >\n                    <div className='d-flex col-sm col-12 align-items-center gap-3 '>\n                        <div className='text-cmBlack text-nowrap' style={{}}>\n                            Department:\n                        </div>\n                        <div className='text-cmGrey600 text-nowrap'>\n                            {employeeData?.department_name}\n                        </div>\n                    </div>\n                    <div className='d-flex col-sm col-12 align-items-center gap-3'>\n                        <div className='text-cmBlack text-nowrap'> Position:</div>\n                        <div className='text-cmGrey600 text-nowrap'>\n                            {employeeData?.sub_position_name}\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    className='px-10 gap-3 py-4 d-flex flex-wrap justify-content-between stripRow '\n                    style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                >\n                    <div className='d-flex col-sm col-12 align-items-center gap-3'>\n                        <div className='text-cmBlack text-nowrap' style={{}}>\n                            Manager:\n                        </div>\n                        <div className='text-cmGrey600 text-nowrap'>\n                            {employeeData?.manager_name}\n                        </div>\n                    </div>\n                    <div className='d-flex col-sm col-12 align-items-center gap-3'>\n                        <div className='text-cmBlack text-nowrap'> Team:</div>\n                        <div className='text-cmGrey600 text-nowrap'>{employeeData?.team_name}</div>\n                    </div>\n                </div>\n\n                <div\n                    className='px-10 py-4 gap-3 d-flex flex-wrap justify-content-between stripRow '\n                    style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                >\n                    <div className='col-sm d-flex align-items-center gap-3'>\n                        <div className='text-cmBlack text-nowrap' style={{}}>\n                            Is Manager:\n                        </div>\n                        <div className='text-cmGrey600 text-nowrap'>\n                            {employeeData?.is_manager == 1 ? 'Yes' : 'No'}\n                        </div>\n                    </div>\n                    <div className='col-sm d-flex align-items-center gap-3'>\n                        <div className='text-cmBlack text-nowrap' style={{fontSize: 14}}>\n                            May act as both setter and closer\n                        </div>\n                        <div className='text-cmGrey600 text-nowrap'>\n                            {getBooleanValue(employeeData?.self_gen_accounts) == 1 ? 'Yes' : 'No'}\n                        </div>\n                    </div>\n                </div>\n\n                {employeeData.is_manager == 1 && employeeData?.additional_locations?.length > 0 ? (\n                    <div\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                        className='stripRow'\n                    >\n                        <div\n                            className='text-cmBlack gap-3 px-10 py-4 d-flex flex-wrap justify-content-between text-decoration-underline'\n                            style={{fontSize: '15px', fontFamily: 'Manrope'}}\n                        >\n                            Additional Office Location:\n                        </div>\n                        {employeeData?.additional_locations?.map((item) => (\n                            <div\n                                className='px-10 py-4 d-flex flex-wrap justify-content-between stripRow '\n                                key={item?.state_id}\n                            >\n                                <div className='col-sm d-flex align-items-center gap-3'>\n                                    <div className='text-cmBlack text-nowrap'> Office State:</div>\n                                    <div className='text-cmGrey600 text-nowrap'>\n                                        {item?.state_name}\n                                    </div>\n                                </div>\n                                <div className='d-flex col-sm col-12 align-items-center gap-3'>\n                                    <div className='text-cmBlack text-nowrap'> Office Name:</div>\n                                    <div className='text-cmGrey600 text-nowrap'>\n                                        {item?.office_name ? item?.office_name : '-'}\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                ) : null}\n\n                <div\n                    className='px-10 py-4 d-flex flex-wrap gap-3 stripRow '\n                    style={{fontFamily: 'Manrope'}}\n                >\n                    <div className='text-cmBlack text-nowrap' style={{fontWeight: 600}}>\n                        {' '}\n                        Recruiter:\n                    </div>\n                    <div className='text-cmGrey600 text-nowrap ' style={{fontWeight: 600}}>\n                        {employeeData?.recruiter_name ?? 'NA'}\n                    </div>\n                </div>\n\n                {employeeData?.recruiter_id ? (\n                    <>\n                        <div\n                            className='px-10 py-4 d-flex flex-wrap justify-content-between stripRow gap-3'\n                            style={{fontWeight: 600}}\n                        >\n                            <div\n                                className='col-sm text-nowrap text-cmBlack  '\n                                style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                            >\n                                Additional Recruiter\n                                <span\n                                    className='text-cmGrey500 text-nowrap'\n                                    style={{fontWeight: 600, fontSize: '12px'}}\n                                >\n                                    (or Override):\n                                </span>\n                            </div>\n                            <div className='col-sm text-cmGrey600 '>\n                                {employeeData?.additional_recruter.length > 0\n                                    ? employeeData?.additional_recruter?.map((item, index) => (\n                                          <span\n                                              key={index}\n                                              className='text-cmGrey900'\n                                              style={{fontWeight: 600}}\n                                          >\n                                              {index == 1 && item?.recruiter_first_name && (\n                                                  <label\n                                                      className='mx-2 text-cmGrey500'\n                                                      style={{fontWeight: 600, fontSize: '12px'}}\n                                                  >\n                                                      and\n                                                  </label>\n                                              )}\n                                              {item?.recruiter_first_name}{' '}\n                                              {item?.recruiter_last_name}\n                                          </span>\n                                      ))\n                                    : null}\n                            </div>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nconst ViewRedlineComissionUpfrontBlock = ({\n    employeeData,\n    userType,\n    firstPositionDetail,\n    secondPositionDetail,\n    bothPositionData,\n    isStackModalEnabled,\n    companySetting,\n}) => {\n    const [selectedPositionIndex, setSelectedPositionIndex] = useState(0)\n    const [modalType, setModalType] = useState(MODAL_NAME.Commission)\n    const [showModal, setShowModal] = useState(false)\n\n    const handleHistoryModalClose = () => {\n        setShowModal(false)\n    }\n\n    return (\n        <div className='pb-5' style={{fontSize: '14px'}} key={employeeData?.id}>\n            {showModal ? (\n                <CustomViewChnagesEmployementPackageModal\n                    show={showModal}\n                    modalName={modalType}\n                    handleClose={handleHistoryModalClose}\n                    title={`${modalType} Changes - ${employeeData?.first_name} ${employeeData?.last_name}`}\n                    userId={employeeData?.id}\n                    PositionId={\n                        bothPositionData?.[\n                            selectedPositionIndex == 0 ? 'firstPosition' : 'secondPosition'\n                        ]?.parentPositionId\n                    }\n                />\n            ) : null}\n            <div className='w-100'>\n                {(employeeData?.self_gen_accounts ? [0, 1] : [0])?.map((positionIndex) => {\n                    const positionDetail =\n                        positionIndex == 0 ? firstPositionDetail : secondPositionDetail\n                    const positionName =\n                        positionIndex == 0\n                            ? bothPositionData?.firstPosition.name\n                            : bothPositionData?.secondPosition?.name\n\n                    const data = employeeData?.employee_compensation?.[positionIndex]\n                    return (\n                        <>\n                            <CommonTableRow\n                                fieldName={`${positionName} Commissions`}\n                                fieldValue={\n                                    <>\n                                        {data?.commission}%\n                                        {userType == USER_TYPE.hiredEmployee &&\n                                            data?.commission_effective_date && (\n                                                <>\n                                                    <span style={{opacity: 0.5}}> since </span>{' '}\n                                                    {getValidDate(data?.commission_effective_date)}\n                                                </>\n                                            )}\n                                    </>\n                                }\n                                showViewChangesButton={userType == USER_TYPE.hiredEmployee}\n                                onViewChangesPress={() => {\n                                    setShowModal(true)\n                                    setModalType(MODAL_NAME.Commission)\n                                    setSelectedPositionIndex(positionIndex)\n                                }}\n                            />\n\n                            <CommonTableRow\n                                fieldName={`${positionName} Redline Type`}\n                                fieldValue={data?.redline_amount_type}\n                            />\n\n                            <CommonTableRow\n                                fieldName={\n                                    <>\n                                        {positionName}\n                                        {isStackModalEnabled &&\n                                        positionIndex == 0 &&\n                                        positionName == 'Closer'\n                                            ? ' and Stack'\n                                            : ''}{' '}\n                                        Redline\n                                    </>\n                                }\n                                fieldValue={\n                                    <>\n                                        {data?.redline} {data?.redline_type}\n                                        {userType == USER_TYPE.hiredEmployee &&\n                                            data?.redline_effective_date && (\n                                                <>\n                                                    <span style={{opacity: 0.5}}> since </span>{' '}\n                                                    {getValidDate(data?.redline_effective_date) ??\n                                                        '-'}\n                                                </>\n                                            )}\n                                    </>\n                                }\n                                showViewChangesButton={userType == USER_TYPE.hiredEmployee}\n                                onViewChangesPress={() => {\n                                    setShowModal(true)\n                                    setModalType(MODAL_NAME.Redline)\n                                    setSelectedPositionIndex(positionIndex)\n                                }}\n                            />\n\n                            {positionDetail?.upfront_status ? (\n                                <CommonTableRow\n                                    fieldName={`${positionName} Upfront Pay`}\n                                    fieldValue={\n                                        <>\n                                            {data?.upfront_pay_amount} {data?.upfront_sale_type}\n                                            {userType == USER_TYPE.hiredEmployee &&\n                                                data?.upfront_effective_date && (\n                                                    <>\n                                                        <span style={{opacity: 0.5}}> since </span>{' '}\n                                                        {getValidDate(\n                                                            data?.upfront_effective_date\n                                                        ) ?? '-'}\n                                                    </>\n                                                )}\n                                        </>\n                                    }\n                                    showViewChangesButton={userType == USER_TYPE.hiredEmployee}\n                                    onViewChangesPress={() => {\n                                        setShowModal(true)\n                                        setModalType(MODAL_NAME.Upfront)\n                                        setSelectedPositionIndex(positionIndex)\n                                    }}\n                                />\n                            ) : null}\n\n                            {companySetting?.reconciliation &&\n                            positionDetail?.reconciliation_status ? (\n                                <CommonTableRow\n                                    fieldName={`${positionName} Withheld amount`}\n                                    fieldValue={\n                                        <>\n                                            {data?.withheld_amount} {data?.withheld_type}\n                                            {userType == USER_TYPE.hiredEmployee &&\n                                                data?.withheld_effective_date && (\n                                                    <>\n                                                        <span style={{opacity: 0.5}}> since </span>{' '}\n                                                        {getValidDate(\n                                                            data?.withheld_effective_date\n                                                        ) ?? '-'}\n                                                    </>\n                                                )}\n                                        </>\n                                    }\n                                    showViewChangesButton={userType == USER_TYPE.hiredEmployee}\n                                    onViewChangesPress={() => {\n                                        setShowModal(true)\n                                        setModalType(MODAL_NAME.Withheld)\n                                        setSelectedPositionIndex(positionIndex)\n                                    }}\n                                />\n                            ) : null}\n                        </>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst ViewOverridesBlock = ({\n    employeeData,\n    firstPositionDetail,\n    isStackModalEnabled,\n    selectedPrimaryOffice,\n    userType,\n    userAssociatedOffices,\n    positionAndCompanySetting,\n}) => {\n    const companyOverrideSetting = useSelector(getCompanyOverrideSettingSelector)\n    return (\n        <div className='pb-5' style={{fontSize: '14px'}}>\n            {firstPositionDetail?.override?.[0]?.status ||\n            firstPositionDetail?.override?.[1]?.status ||\n            firstPositionDetail?.override?.[2]?.status ||\n            (isStackModalEnabled && firstPositionDetail?.override?.[3]?.status) ? (\n                <div className='w-100'>\n                    {/* Effective Date */}\n                    {userType == USER_TYPE.hiredEmployee &&\n                        employeeData?.override_effective_date && (\n                            <CommonTableRow\n                                equalColumn\n                                fieldName={'Effective Date'}\n                                fieldValue={\n                                    getValidDate(employeeData?.override_effective_date) ?? '-'\n                                }\n                            />\n                        )}\n\n                    {/* Direct Overrides */}\n                    {firstPositionDetail?.override?.[0]?.status ? (\n                        <CommonTableRow\n                            equalColumn\n                            fieldName={'Direct Overrides'}\n                            fieldValue={\n                                <>\n                                    {employeeData?.direct_overrides_amount}{' '}\n                                    {employeeData?.direct_overrides_type == 'percent'\n                                        ? '%'\n                                        : employeeData?.direct_overrides_type}\n                                </>\n                            }\n                        />\n                    ) : null}\n\n                    {/* Indirect Overrides */}\n                    {firstPositionDetail?.override?.[1]?.status ? (\n                        <CommonTableRow\n                            equalColumn\n                            fieldName={'Indirect Overrides'}\n                            fieldValue={\n                                <>\n                                    {employeeData?.indirect_overrides_amount}{' '}\n                                    {employeeData?.indirect_overrides_type == 'percent'\n                                        ? '%'\n                                        : employeeData?.indirect_overrides_type}\n                                </>\n                            }\n                        />\n                    ) : (\n                        <></>\n                    )}\n\n                    {/* Office Overrides */}\n                    {firstPositionDetail?.override?.[2]?.status ? (\n                        <>\n                            <CommonTableRow\n                                equalColumn\n                                fieldName={'Office Overrides'}\n                                fieldValue={''}\n                            />\n                            <CommonTableRow\n                                equalColumn\n                                fieldName={`↳  Office : ${selectedPrimaryOffice?.office_name}, ${selectedPrimaryOffice?.state_name} `}\n                                fieldValue={\n                                    <>\n                                        {employeeData?.office_overrides_amount}{' '}\n                                        {employeeData?.office_overrides_type == 'percent'\n                                            ? '%'\n                                            : employeeData?.office_overrides_type}\n                                    </>\n                                }\n                            />\n\n                            {SHOW_BASED_ON_HOST.additionalOfficeOverrides &&\n                                employeeData?.is_manager &&\n                                positionAndCompanySetting?.firstPosition?.overrides?.office &&\n                                userAssociatedOffices?.length > 0 &&\n                                userAssociatedOffices?.map((item) => (\n                                    <>\n                                        {Number(item?.overrides_amount) > 0 ? (\n                                            <CommonTableRow\n                                                equalColumn\n                                                fieldName={`↳  Office : ${item?.office_name}, ${item?.state_name} `}\n                                                fieldValue={\n                                                    <>\n                                                        {item?.overrides_amount}{' '}\n                                                        {item?.overrides_type == 'percent'\n                                                            ? '%'\n                                                            : item?.overrides_type}\n                                                    </>\n                                                }\n                                            />\n                                        ) : null}\n                                    </>\n                                ))}\n                        </>\n                    ) : (\n                        <></>\n                    )}\n\n                    {/* Stack Override */}\n                    {isStackModalEnabled && firstPositionDetail?.override?.[3]?.status && (\n                        <CommonTableRow\n                            equalColumn\n                            fieldName={'Office Stack'}\n                            fieldValue={formattedNumberFields(\n                                employeeData?.office_stack_overrides_amount,\n                                '%'\n                            )}\n                        />\n                    )}\n                </div>\n            ) : (\n                <div\n                    className='text-cmGrey700 text-center mt-10'\n                    style={{fontWeight: 600, fontSize: '14px'}}\n                >\n                    No direct / indirect / office / office stack overrides found\n                </div>\n            )}\n\n            {companyOverrideSetting?.allow_manual_override_status &&\n            userType == USER_TYPE.hiredEmployee ? (\n                <CommonTableRow\n                    equalColumn\n                    fieldName={'Manual Overrides'}\n                    fieldValue={\n                        <Link\n                            to={`/user/Network?employeeId=${employeeData?.id}&networkType=manual`}\n                        >\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.link}\n                                buttonLabel='View Manual Overrides'\n                            />\n                        </Link>\n                    }\n                />\n            ) : null}\n        </div>\n    )\n}\nconst ViewAgreementsBlock = ({employeeData, getEmployeeData, userType}) => {\n    const [showEditHireDateModal, setEditHireDateModal] = useState(false)\n    const [hireDate, setHireDate] = useState(employeeData?.hired_date)\n    const [errorMessage, setErrorMessage] = useState('')\n    const {hiringAccess} = useCustomAccessRights()\n    useEffect(() => {\n        setHireDate(employeeData?.hired_date)\n    }, [employeeData?.hired_date])\n\n    const [loading, setLoading] = useState(false)\n    const onUpdateHireDatePress = useCallback(() => {\n        if (!hireDate) return setErrorMessage('Select hire date')\n        setLoading(true)\n        updateHireDateOfEmployeeService(employeeData?.id, getValidDate(hireDate, 'YYYY-MM-DD'))\n            .then(() => {\n                CustomToast.success('Hire date udpdated')\n                getEmployeeData()\n                setEditHireDateModal(false)\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n                setErrorMessage('')\n            })\n    }, [employeeData?.id, getEmployeeData, hireDate])\n\n    return (\n        <div className='pb-5' style={{fontSize: '14px'}}>\n            {showEditHireDateModal ? (\n                <CustomModal\n                    maxWidth={400}\n                    show={showEditHireDateModal}\n                    title={`Edit Hire Date | ${employeeData?.first_name ?? ''} ${\n                        employeeData?.last_name ?? ''\n                    }`}\n                    onHide={() => {\n                        setEditHireDateModal(false)\n                        setErrorMessage('')\n                    }}\n                >\n                    <CustomLoader full visible={loading} />\n                    <CustomDatePicker\n                        value={hireDate}\n                        onChange={(e) => setHireDate(e?.target?.value)}\n                        label={'Hire Date'}\n                        errorMessage={errorMessage}\n                        className={'mb-5'}\n                    />\n                    <CustomButton buttonLabel='Update Hire Date' onClick={onUpdateHireDatePress} />\n                </CustomModal>\n            ) : null}\n            <div className='w-100 '>\n                {userType == USER_TYPE.hiredEmployee ? (\n                    <CommonTableRow\n                        equalColumn\n                        fieldName={'Hire Date'}\n                        fieldValue={getValidDate(employeeData?.hired_date)}\n                        showEditButton={hiringAccess.showEditHireDateButton}\n                        onEditButtonPress={() => setEditHireDateModal(true)}\n                    />\n                ) : null}\n\n                <CommonTableRow\n                    equalColumn\n                    fieldName={'Probation Period'}\n                    fieldValue={\n                        employeeData?.probation_period\n                            ? `${employeeData?.probation_period} Days`\n                            : null\n                    }\n                />\n\n                <CommonTableRow\n                    equalColumn\n                    fieldName={'Offer includes bonus?'}\n                    fieldValue={\n                        getBooleanValue(employeeData?.offer_include_bonus) == 1 ? 'Yes' : 'No'\n                    }\n                />\n\n                {getBooleanValue(employeeData?.offer_include_bonus) == 1 ? (\n                    <>\n                        <CommonTableRow\n                            equalColumn\n                            fieldName={'Hiring Bonus / Resign Bonus'}\n                            fieldValue={formattedNumberFields(\n                                employeeData?.hiring_bonus_amount,\n                                '$'\n                            )}\n                        />\n                        <CommonTableRow\n                            equalColumn\n                            fieldName={'Date to be Paid'}\n                            fieldValue={getValidDate(employeeData?.date_to_be_paid)}\n                        />\n                    </>\n                ) : null}\n\n                <CommonTableRow\n                    equalColumn\n                    fieldName={'Period of Agreement'}\n                    fieldValue={\n                        <>\n                            {getValidDate(employeeData?.period_of_agreement_start_date)}\n                            {employeeData?.end_date ? (\n                                <> - {getValidDate(employeeData?.end_date)}</>\n                            ) : null}\n                        </>\n                    }\n                />\n\n                <CommonTableRow\n                    equalColumn\n                    fieldName={'Offer Expiry Date'}\n                    fieldValue={getValidDate(employeeData?.offer_expiry_date)}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst ViewDeductionsBlock = ({employeeData}) => (\n    <div className='pb-5' style={{fontSize: '14px'}}>\n        <div className='w-100 '>\n            {employeeData?.deduction?.length > 0 ? (\n                employeeData?.deduction?.map((item) => (\n                    <CommonTableRow\n                        equalColumn\n                        fieldName={item?.cost_center_name}\n                        fieldValue={formattedNumberFields(\n                            item?.ammount_par_paycheck,\n                            item.deduction_type\n                        )}\n                    />\n                ))\n            ) : (\n                <CustomNoData label={'No deduction Found'} className={'py-5'} />\n            )}\n        </div>\n    </div>\n)\n\nexport {\n    ViewPersonolDetailBlock,\n    ViewOrganisationBlock,\n    ViewRedlineComissionUpfrontBlock,\n    ViewOverridesBlock,\n    ViewDeductionsBlock,\n    ViewAgreementsBlock,\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n    getCompanyOverrideSettingSelector,\n    getCompanySettingSelector,\n    getPositionsSelector,\n    geyAllStatesWithOfficesSelector,\n} from '../redux/selectors/SettingsSelectors'\nimport {useSelector} from 'react-redux'\nimport _ from 'lodash'\nimport {\n    getAllManagerListService,\n    getOnbordingEmployeebyIdService,\n    getPositionByIdService,\n    getRedlineDataFromLocation,\n    getUserEmploymentPackageDetailService,\n    hireNowStep2Service,\n    hireNowStep3Service,\n    hireNowStep4Service,\n    hireNowStep5Service,\n    updateHireNowStep1Service,\n\n    //   Hired Employee\n    updateUserPersonalDetailService,\n    updateUserOrganizationDetailService,\n    updateUserCompensationDetailService,\n    updateUserOverrideDetailService,\n    updateUserAgreementDetailService,\n    getTeamListService,\n} from '../services/Services'\nimport {\n    getBooleanValue,\n    getErrorMessageFromResponse,\n    getMobileNumberWithoutMask,\n    isInputValueExist,\n} from '../helpers/CommonHelpers'\nimport CustomToast from '../customComponents/customToast/CustomToast'\nimport {\n    getAllStatesWithOfficesAction,\n    getCompanyOverrideSettingAction,\n    getDepartmentWithPositionAction,\n    getPositionsAction,\n} from '../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport UserOrganisationContainer from '../app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserOrganisationContainer'\nimport UserRedlineComissionUpfrontContainer from '../app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserRedlineComissionUpfrontContainer'\nimport UserOverridesContainer from '../app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserOverridesContainer'\nimport UserAgreementsContainer from '../app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserAgreementsContainer'\nimport {\n    DOCUMENT_TO_ATTACH_WHILE_ONBOARD,\n    HIRE_FIELD_KEYS,\n    MAIN_POSITTIONS_ID,\n    getValidDate,\n    SHOW_BASED_ON_HOST,\n} from '../constants/constants'\nimport UserPersonalDetailContainer from '../app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserPersonalDetailContainer'\nimport {POSITIONS_SETUP_FIELDS_KEYS} from '../app/modules/admin/Setting/components/Position/CompensationPlan/CreateCompensationAppModal'\nimport ViewChanges from '../app/modules/standard_manager/management/particularEmployee/compoents/ViewChanges'\nimport UserDeductionsContainer from '../app/modules/standard_manager/hiring/onBoardingEmp/CompensationPlan/steps/UserDeductionsContainer'\nimport ViewUserRedlineChanges from '../app/modules/standard_manager/management/particularEmployee/compoents/ViewUserRedlineChanges'\nimport {EMAIL_VALIDATION} from '../validations/validations'\nimport {\n    ViewPersonolDetailBlock,\n    ViewOrganisationBlock,\n    ViewRedlineComissionUpfrontBlock,\n    ViewOverridesBlock,\n    ViewDeductionsBlock,\n    ViewAgreementsBlock,\n} from './employmentPackage/EmploymentPackageBlocks'\n\nexport const USER_TYPE = {\n    onboardEmployee: 'onboardEmployee',\n    hiredEmployee: 'hiredEmployee',\n}\n\nexport const DEFAULT_EMPLOYEE_DATA = {\n    id: null,\n    first_name: null,\n    last_name: null,\n    email: null,\n    work_email: [],\n    mobile_no: null,\n\n    state_id: null,\n    office_id: null,\n    is_manager: 0,\n    self_gen_accounts: 0,\n    state_name: null,\n    city_name: null,\n    location: null,\n    department_id: null,\n    additional_locations: [],\n    position_id: null,\n    sub_position_id: null,\n    deduction: [],\n    manager_id: null,\n    recruiter_id: null,\n    recruiter_name: null,\n    department_name: null,\n    manager_name: null,\n    team_id: null,\n    position_name: null,\n    additional_recruter: [\n        {\n            recruiter_id: null,\n            recruiter_first_name: null,\n        },\n        {\n            recruiter_id: null,\n            recruiter_first_name: null,\n        },\n    ],\n\n    employee_compensation: [\n        {\n            commission: null,\n            commission_effective_date: null,\n            upfront_pay_amount: null,\n            upfront_effective_date: null,\n            redline_amount_type: 'Shift based on Location',\n            redline: null,\n            redline_type: 'per watt',\n            redline_effective_date: null,\n            withheld_effective_date: null,\n            withheld_amount: null,\n            withheld_type: null,\n        },\n        {\n            commission: null,\n            commission_effective_date: null,\n            upfront_pay_amount: null,\n            upfront_effective_date: null,\n            redline_amount_type: 'Shift based on Location',\n            redline: null,\n            redline_type: 'per watt',\n            redline_effective_date: null,\n            withheld_effective_date: null,\n            withheld_amount: null,\n            withheld_type: null,\n        },\n    ],\n\n    override_effective_date: null,\n    direct_overrides_amount: null,\n    direct_overrides_type: null,\n    indirect_overrides_amount: null,\n    indirect_overrides_type: null,\n    office_overrides_amount: null,\n    office_overrides_type: null,\n    office_stack_overrides_amount: null,\n\n    probation_period: null,\n    offer_include_bonus: 0,\n    hiring_bonus_amount: null,\n    date_to_be_paid: null,\n    period_of_agreement: null,\n    period_of_agreement_start_date: null,\n    end_date: null,\n    offer_expiry_date: null,\n}\n\nconst useUserEmploymentPackage = ({\n    userType = USER_TYPE.onboardEmployee,\n    prefieldData = null,\n    id = null,\n    lead_id = null,\n    callOnLoadApi = true,\n    getTopCardUserProfile = () => {},\n}) => {\n    const dispatch = useDispatch()\n    const [firstPage, setFirstPage] = useState(true)\n    const [employeeData, setEmployeeData] = useState({...DEFAULT_EMPLOYEE_DATA, ...prefieldData})\n    const [loading, setLoading] = useState(false)\n    const [personalDetailLoading, setPersonalDetailLoading] = useState(false)\n    const [organizationLoading, setOrganizationLoading] = useState(false)\n    const [redlineLoading, setRedlineLoading] = useState(false)\n    const [overrideLoading, setOverrideLoading] = useState(false)\n    const [agreementLoading, setAgreementLoading] = useState(false)\n    const [deductionLoading, setDeductionLoading] = useState(false)\n    const [managerLoading, setManagerLoading] = useState(false)\n    const [managerList, setManagerList] = useState([])\n    const [firstPositionDetail, setFirstPositionDetail] = useState(null)\n    const [secondPositionDetail, setSecondPositionDetail] = useState(null)\n    const [minMAxRedline, setMinMAxRedline] = useState(null)\n    const [toggleView, setToggleView] = useState(false)\n    const [auditToggleView, setAuditToggleView] = useState(false)\n    const [selfGenAuditToggleView, setSelfGenAuditToggleView] = useState(false)\n    const [selfGenToggleView, setSelfGenToggleView] = useState(false)\n    const allPositionList = useSelector(getPositionsSelector)\n    const [teamList, setTeamList] = useState([])\n    const companyOverrideSetting = useSelector(getCompanyOverrideSettingSelector)\n    const companySetting = useSelector(getCompanySettingSelector)\n    const [agreementStep, setAgreementStep] = useState(1)\n    const [selectedDocument, setSelectedDocument] = useState(DOCUMENT_TO_ATTACH_WHILE_ONBOARD)\n    const allStatesWithOffices = useSelector(geyAllStatesWithOfficesSelector)\n\n    useEffect(() => {\n        if (callOnLoadApi) {\n            dispatch(getAllStatesWithOfficesAction())\n            dispatch(getPositionsAction())\n            dispatch(getCompanyOverrideSettingAction())\n            dispatch(getDepartmentWithPositionAction())\n        }\n    }, [])\n\n    useEffect(() => {\n        setManagerList([])\n        setTeamList([])\n        if (employeeData?.office_id) {\n            setManagerLoading(true)\n\n            // Get All Manager List\n            getAllManagerListService(employeeData?.office_id)\n                .then((res) => {\n                    setManagerList(res?.data)\n                })\n                .finally(() => {\n                    setManagerLoading(false)\n                })\n\n            // Get Team List\n            getTeamListService(employeeData?.office_id).then((res) => {\n                setTeamList(res?.data)\n            })\n        }\n    }, [employeeData?.office_id])\n\n    const parentPositionData = useMemo(() => {\n        const data = allPositionList?.find((item) => item?.id == employeeData?.sub_position_id)\n        const parentPosition = allPositionList?.find(\n            (item) => item?.id == (data?.parent_id ?? data?.id)\n        )\n        return parentPosition\n    }, [allPositionList, employeeData?.sub_position_id])\n\n    const bothPositionData = useMemo(() => {\n        return {\n            firstPosition: {\n                parentPositionId: parentPositionData?.id,\n                name: parentPositionData?.id == MAIN_POSITTIONS_ID.closer ? 'Closer' : 'Setter',\n                ...firstPositionDetail,\n            },\n            secondPosition: {\n                parentPositionId:\n                    parentPositionData?.id == MAIN_POSITTIONS_ID.closer\n                        ? MAIN_POSITTIONS_ID.setter\n                        : MAIN_POSITTIONS_ID.closer,\n                name: parentPositionData?.id == MAIN_POSITTIONS_ID.closer ? 'Setter' : 'Closer',\n                ...secondPositionDetail,\n            },\n        }\n    }, [firstPositionDetail, parentPositionData?.id, secondPositionDetail])\n\n    const isStackModalEnabled = useMemo(() => {\n        return (\n            bothPositionData?.firstPosition?.parentPositionId == MAIN_POSITTIONS_ID.closer &&\n            getBooleanValue(companyOverrideSetting?.allow_office_stack_override_status) == 1 &&\n            firstPositionDetail?.is_stack == 1\n        )\n    }, [\n        bothPositionData?.firstPosition?.parentPositionId,\n        firstPositionDetail?.is_stack,\n        companyOverrideSetting?.allow_office_stack_override_status,\n    ])\n\n    // useEffect(() => {\n    //     if (employeeData?.id && employeeData?.self_gen_accounts) {\n    //         getPositionData(\n    //             MAIN_POSITTIONS_ID.closer == parentPositionData?.id\n    //                 ? MAIN_POSITTIONS_ID.setter\n    //                 : MAIN_POSITTIONS_ID.closer,\n    //             true\n    //         )\n    //     }\n    // }, [employeeData?.self_gen_accounts])\n\n    useEffect(() => {\n        if (firstPage && employeeData?.sub_position_id) {\n            getPositionData(employeeData?.sub_position_id)\n            setFirstPage(false)\n        }\n    }, [employeeData?.sub_position_id])\n\n    const getPositionDetail = useCallback((id, is_self_gen) => {\n        getPositionByIdService(id).then((res) => {\n            const positionRes = res?.data?.[0]\n            if (is_self_gen) setSecondPositionDetail(positionRes)\n            else {\n                setFirstPositionDetail(positionRes)\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n        if (employeeData?.sub_position_id) {\n            getPositionDetail(employeeData?.sub_position_id)\n        }\n    }, [employeeData?.sub_position_id])\n\n    useEffect(() => {\n        if (employeeData?.self_gen_accounts && bothPositionData?.secondPosition?.parentPositionId) {\n            getPositionDetail(bothPositionData?.secondPosition?.parentPositionId, true)\n        }\n    }, [employeeData?.self_gen_accounts])\n\n    const getPositionData = useCallback(\n        (\n            sub_position_id = employeeData?.sub_position_id,\n            is_self_gen = false,\n            forceUpdate = false\n        ) => {\n            setLoading(true)\n            let empData = _.cloneDeep(employeeData)\n            if (is_self_gen) empData.self_gen_accounts = getBooleanValue(is_self_gen)\n            else empData.sub_position_id = sub_position_id\n\n            getPositionByIdService(sub_position_id)\n                .then((res) => {\n                    const positionRes = res?.data?.[0]\n                    // if (is_self_gen) setSecondPositionDetail(positionRes)\n                    // else {\n                    //     setFirstPositionDetail(positionRes)\n                    // }\n\n                    const positionIndex = is_self_gen ? 1 : 0\n                    if (userType == USER_TYPE.onboardEmployee) {\n                        // Comission\n                        if (\n                            !isInputValueExist(\n                                empData?.[HIRE_FIELD_KEYS.employee_compensation]?.[positionIndex]?.[\n                                    HIRE_FIELD_KEYS.commission\n                                ]\n                            ) ||\n                            forceUpdate\n                        ) {\n                            empData[HIRE_FIELD_KEYS.employee_compensation][positionIndex][\n                                HIRE_FIELD_KEYS.commission\n                            ] = positionRes?.[POSITIONS_SETUP_FIELDS_KEYS.commission_parentage]\n                        }\n\n                        // Upfront Amount\n                        if (\n                            !isInputValueExist(\n                                empData?.[HIRE_FIELD_KEYS.employee_compensation]?.[positionIndex]?.[\n                                    HIRE_FIELD_KEYS.upfront_pay_amount\n                                ]\n                            ) ||\n                            forceUpdate\n                        ) {\n                            empData[HIRE_FIELD_KEYS.employee_compensation][positionIndex][\n                                HIRE_FIELD_KEYS.upfront_pay_amount\n                            ] = positionRes?.upfront_ammount\n                        }\n\n                        // Upfront Calculated By\n                        if (\n                            !isInputValueExist(\n                                empData?.[HIRE_FIELD_KEYS.employee_compensation]?.[positionIndex]?.[\n                                    HIRE_FIELD_KEYS.upfront_sale_type\n                                ]\n                            ) ||\n                            forceUpdate\n                        ) {\n                            empData[HIRE_FIELD_KEYS.employee_compensation][positionIndex][\n                                HIRE_FIELD_KEYS.upfront_sale_type\n                            ] = positionRes?.calculated_by\n                        }\n\n                        // Withheld AmountF\n                        if (\n                            !isInputValueExist(\n                                empData?.[HIRE_FIELD_KEYS.employee_compensation]?.[positionIndex]?.[\n                                    HIRE_FIELD_KEYS.withheld_amount\n                                ]\n                            ) ||\n                            forceUpdate\n                        ) {\n                            empData[HIRE_FIELD_KEYS.employee_compensation][positionIndex][\n                                HIRE_FIELD_KEYS.withheld_amount\n                            ] = positionRes?.commission_withheld\n                        }\n\n                        // Withheld Type\n                        if (\n                            !isInputValueExist(\n                                empData?.[HIRE_FIELD_KEYS.employee_compensation]?.[positionIndex]?.[\n                                    HIRE_FIELD_KEYS.withheld_type\n                                ]\n                            ) ||\n                            forceUpdate\n                        ) {\n                            empData[HIRE_FIELD_KEYS.employee_compensation][positionIndex][\n                                HIRE_FIELD_KEYS.withheld_type\n                            ] = positionRes?.commission_type\n                        }\n\n                        if (!is_self_gen) {\n                            // Direct Override Amount\n                            if (\n                                !isInputValueExist(\n                                    empData[HIRE_FIELD_KEYS.direct_overrides_amount]\n                                ) ||\n                                forceUpdate\n                            ) {\n                                empData[HIRE_FIELD_KEYS.direct_overrides_amount] =\n                                    positionRes?.override?.[0]?.override_ammount\n                            }\n\n                            // Direct Override Type\n                            if (\n                                !isInputValueExist(\n                                    empData[HIRE_FIELD_KEYS.direct_overrides_type]\n                                ) ||\n                                forceUpdate\n                            ) {\n                                empData[HIRE_FIELD_KEYS.direct_overrides_type] =\n                                    positionRes?.override?.[0]?.type\n                            }\n\n                            // InDirect Override Amount\n                            if (\n                                !isInputValueExist(\n                                    empData[HIRE_FIELD_KEYS.indirect_overrides_amount]\n                                ) ||\n                                forceUpdate\n                            ) {\n                                empData[HIRE_FIELD_KEYS.indirect_overrides_amount] =\n                                    positionRes?.override?.[1]?.override_ammount\n                            }\n\n                            // InDirect Override Type\n                            if (\n                                !isInputValueExist(\n                                    empData[HIRE_FIELD_KEYS.indirect_overrides_type]\n                                ) ||\n                                forceUpdate\n                            ) {\n                                empData[HIRE_FIELD_KEYS.indirect_overrides_type] =\n                                    positionRes?.override?.[1]?.type\n                            }\n\n                            // Office Override Amount\n                            if (\n                                !isInputValueExist(\n                                    empData[HIRE_FIELD_KEYS.office_overrides_amount]\n                                ) ||\n                                forceUpdate\n                            ) {\n                                empData[HIRE_FIELD_KEYS.office_overrides_amount] =\n                                    positionRes?.override?.[2]?.override_ammount\n                            }\n\n                            // Office Override Type\n                            if (\n                                positionRes?.override?.[2]?.override_type_locked ||\n                                !isInputValueExist(empData[HIRE_FIELD_KEYS.office_overrides_type])\n                            ) {\n                                empData[HIRE_FIELD_KEYS.office_overrides_type] =\n                                    positionRes?.override?.[2]?.type\n                            }\n\n                            // Office Override Amount\n                            if (\n                                isStackModalEnabled &&\n                                (!isInputValueExist(\n                                    empData[HIRE_FIELD_KEYS.office_stack_overrides_amount]\n                                ) ||\n                                    forceUpdate)\n                            ) {\n                                empData[HIRE_FIELD_KEYS.office_stack_overrides_amount] =\n                                    positionRes?.override?.[3]?.override_ammount\n                            }\n                        }\n\n                        setEmployeeData(empData)\n                    } else {\n                        setEmployeeData(empData)\n                    }\n                })\n                .catch(() => {\n                    setEmployeeData(empData)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        },\n        [employeeData, isStackModalEnabled, userType]\n    )\n\n    useEffect(() => {\n        if (id) getEmployeeData()\n    }, [id])\n\n    const getEmployeeData = useCallback(() => {\n        if (id) {\n            const getFinalRes = (res) => {\n                let empData = _.cloneDeep({...DEFAULT_EMPLOYEE_DATA, ...employeeData, ...res?.data})\n                if (empData?.work_email?.length <= 0) empData.work_email = []\n                // if (userType == USER_TYPE.onboardEmployee) {\n                //     if (!empData?.recruiter_id) {\n                //         empData.recruiter_id = userData?.id\n                //         empData.recruiter_name = `${userData?.first_name} ${userData?.last_name}`\n                //     }\n                // }\n\n                if (empData?.employee_compensation?.length == 0) {\n                    empData.employee_compensation = [\n                        {\n                            position_id: null,\n                            commission: null,\n                            commission_effective_date: null,\n                            upfront_pay_amount: null,\n                            upfront_effective_date: null,\n                            redline_amount_type: 'Shift based on Location',\n                            redline: null,\n                            redline_type: 'per watt',\n                            redline_effective_date: null,\n                            withheld_effective_date: null,\n                            withheld_amount: null,\n                            withheld_type: null,\n                        },\n                        {\n                            position_id: null,\n                            commission: null,\n                            commission_effective_date: null,\n                            upfront_pay_amount: null,\n                            upfront_effective_date: null,\n                            redline_amount_type: 'Shift based on Location',\n                            redline: null,\n                            redline_type: 'per watt',\n                            redline_effective_date: null,\n                            withheld_effective_date: null,\n                            withheld_amount: null,\n                            withheld_type: null,\n                        },\n                    ]\n                } else if (empData?.employee_compensation?.length == 1) {\n                    empData.employee_compensation = [\n                        {\n                            ...empData.employee_compensation?.[0],\n                        },\n                        {\n                            position_id: null,\n                            commission: null,\n                            commission_effective_date: null,\n                            upfront_pay_amount: null,\n                            upfront_effective_date: null,\n                            redline_amount_type: null,\n                            redline: null,\n                            redline_effective_date: null,\n                            withheld_effective_date: null,\n                            withheld_amount: null,\n                            withheld_type: null,\n                        },\n                    ]\n                }\n                return empData\n            }\n            setLoading(true)\n            if (userType == USER_TYPE.onboardEmployee) {\n                getOnbordingEmployeebyIdService(id)\n                    .then((res) => {\n                        const empData = getFinalRes(res)\n                        setEmployeeData(empData)\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            } else if (userType == USER_TYPE.hiredEmployee) {\n                getUserEmploymentPackageDetailService(id)\n                    .then((res) => {\n                        const empData = getFinalRes(res)\n                        setEmployeeData(empData)\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            }\n        }\n    }, [employeeData, id, userType])\n\n    const updateEmployeeData = useCallback((field, value) => {\n        setEmployeeData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }, [])\n\n    const updateMultipleKeysOfEmployeeData = useCallback((data) => {\n        setEmployeeData(data)\n    }, [])\n\n    useEffect(() => {\n        if (employeeData?.state_id && employeeData?.office_id) {\n            const redlineBody = {\n                state_id: employeeData.state_id,\n                office_id: employeeData.office_id,\n            }\n            getRedlineDataFromLocation(redlineBody).then((res) => {\n                setMinMAxRedline(res?.data)\n            })\n        }\n    }, [employeeData?.office_id])\n\n    const positionAndCompanySetting = useMemo(\n        () => ({\n            firstPosition: {\n                upfront: firstPositionDetail?.upfront_status,\n                deduction: firstPositionDetail?.deduction_status,\n                reconciliation:\n                    companySetting?.reconciliation && firstPositionDetail?.reconciliation_status,\n                overrides: {\n                    direct: firstPositionDetail?.override?.[0]?.status,\n                    indirect: firstPositionDetail?.override?.[1]?.status,\n                    office: firstPositionDetail?.override?.[2]?.status,\n                    stack:\n                        getBooleanValue(\n                            companyOverrideSetting?.allow_office_stack_override_status\n                        ) == 1 &&\n                        getBooleanValue(firstPositionDetail?.is_stack) == 1 &&\n                        firstPositionDetail?.override?.[3]?.status,\n                },\n            },\n            secondPosition: {\n                upfront: employeeData?.self_gen_accounts && secondPositionDetail?.upfront_status,\n                deduction:\n                    employeeData?.self_gen_accounts && secondPositionDetail?.deduction_status,\n                reconciliation:\n                    employeeData?.self_gen_accounts &&\n                    companySetting?.reconciliation &&\n                    secondPositionDetail?.reconciliation_status,\n            },\n        }),\n        [\n            companyOverrideSetting?.allow_office_stack_override_status,\n            companySetting?.reconciliation,\n            employeeData?.self_gen_accounts,\n            firstPositionDetail?.deduction_status,\n            firstPositionDetail?.is_stack,\n            firstPositionDetail?.override,\n            firstPositionDetail?.reconciliation_status,\n            firstPositionDetail?.upfront_status,\n            secondPositionDetail?.deduction_status,\n            secondPositionDetail?.reconciliation_status,\n            secondPositionDetail?.upfront_status,\n        ]\n    )\n\n    const userAssociatedOffices = useMemo(() => {\n        let data = []\n        if (employeeData?.additional_locations?.length > 0) {\n            employeeData?.additional_locations?.map((item) => {\n                const stateData = allStatesWithOffices.find((it) => it?.id == item?.state_id)\n                const officeData = stateData\n                    ? stateData.office.find((it) => it?.id == item?.office_id)\n                    : null\n\n                data.push({\n                    ...item,\n                    state_id: item?.state_id,\n                    state_name: stateData?.name,\n                    office_id: item?.office_id,\n                    office_name: officeData?.office_name,\n                })\n            })\n        }\n        return data\n    }, [allStatesWithOffices, employeeData?.additional_locations])\n\n    const selectedPrimaryOffice = useMemo(() => {\n        const stateData = allStatesWithOffices.find((it) => it?.id == employeeData?.state_id)\n        const officeData = stateData\n            ? stateData.office.find((it) => it?.id == employeeData?.office_id)\n            : null\n\n        return {\n            state_id: employeeData?.state_id,\n            state_name: stateData?.name,\n            office_id: employeeData?.office_id,\n            office_name: officeData?.office_name,\n        }\n    }, [allStatesWithOffices, employeeData?.office_id, employeeData?.state_id])\n\n    const saveEmploymentPackage = useMemo(\n        () => ({\n            personalDetailValidation: (forValidationOnly = false) =>\n                new Promise((resolve, reject) => {\n                    if (!employeeData.first_name) return CustomToast.error('Enter first name')\n                    if (!employeeData.last_name) return CustomToast.error('Enter last name')\n                    if (!employeeData.email) return CustomToast.error('Enter email')\n                    if (!EMAIL_VALIDATION(employeeData.email))\n                        return CustomToast.error('Enter valid email')\n                    if (employeeData?.work_email?.length > 0) {\n                        let workEmailArrError = []\n                        employeeData?.work_email?.map((item, index, allList) => {\n                            if (!item?.email)\n                                workEmailArrError.push(\n                                    `Enter work email ${index + 1} OR remove field`\n                                )\n                            if (item?.email && !EMAIL_VALIDATION(item?.email))\n                                workEmailArrError.push(`Enter valid work email ${index + 1}`)\n                            const isExistInList = allList.some(\n                                (emailItem, emailIndex) =>\n                                    emailItem.email &&\n                                    emailIndex < index &&\n                                    emailItem.email == item?.email\n                            )\n\n                            if (isExistInList)\n                                workEmailArrError.push(\n                                    `Work email ${index + 1} is already exist in current list`\n                                )\n                        })\n                        if (workEmailArrError?.length > 0) {\n                            return CustomToast.error(workEmailArrError.join(', '))\n                        }\n                    }\n\n                    if (!employeeData.mobile_no) return CustomToast.error('Enter phone number')\n                    if (!employeeData.state_id) return CustomToast.error('Select state')\n                    if (!employeeData.office_id) return CustomToast.error('Select office')\n\n                    if (forValidationOnly) return resolve('success')\n                    const body = {\n                        employee_deatils: {\n                            first_name: employeeData.first_name ?? '',\n                            last_name: employeeData.last_name ?? '',\n                            email: employeeData.email ?? '',\n                            work_email: employeeData?.work_email?.[0]?.email\n                                ? employeeData?.work_email\n                                : [],\n                            mobile_no: getMobileNumberWithoutMask(employeeData.mobile_no) ?? '',\n                            state_id: employeeData.state_id ?? '',\n                            office_id: employeeData.office_id ?? '',\n                            lead_id: lead_id ?? '',\n                            recruiter_id: employeeData?.recruiter_id ?? '',\n                        },\n                    }\n                    if (employeeData.id) body.user_id = employeeData?.id ?? ''\n                    setPersonalDetailLoading(true)\n                    if (userType == USER_TYPE.onboardEmployee) {\n                        if (employeeData?.id) {\n                            updateHireNowStep1Service(body)\n                                .then((res) => {\n                                    updateEmployeeData(HIRE_FIELD_KEYS.id, res?.data?.id)\n                                    resolve('success')\n                                })\n                                .catch((error) => {\n                                    CustomToast.error(error?.data?.message)\n                                    reject(error)\n                                })\n                                .finally(() => setPersonalDetailLoading(false))\n                        } else {\n                            // hireNowStep1Service(body) # Method change from POST to PUT By Sujjet Ji\n                            updateHireNowStep1Service(body)\n                                .then((res) => {\n                                    updateEmployeeData(HIRE_FIELD_KEYS.id, res?.data?.id)\n                                    resolve('success')\n                                })\n                                .catch((error) => CustomToast.error(error?.data?.message))\n                                .finally(() => setPersonalDetailLoading(false))\n                        }\n                    } else {\n                        updateUserPersonalDetailService(body)\n                            .then((res) => {\n                                updateEmployeeData(HIRE_FIELD_KEYS.id, res?.data?.id)\n                                resolve('success')\n                            })\n                            .catch((error) => CustomToast.error(error?.data?.message))\n                            .finally(() => setPersonalDetailLoading(false))\n                    }\n                }),\n            organisationValidation: (to_be_manager = null, forValidationOnly = false) =>\n                new Promise((resolve, reject) => {\n                    if (!employeeData.state_id) return CustomToast.error('Select state')\n                    if (!employeeData.office_id) return CustomToast.error('Select office')\n                    if (!employeeData.department_id) return CustomToast.error('Select department')\n                    if (!employeeData.sub_position_id) return CustomToast.error('Select position')\n                    if (!employeeData?.is_manager && !employeeData.manager_id)\n                        return CustomToast.error('Select manager')\n                    if (SHOW_BASED_ON_HOST?.teamRequiredForOnboarding && !employeeData?.team_id)\n                        return CustomToast.error('Select team')\n\n                    const selectedPosition = allPositionList?.find(\n                        (item) => item?.id == employeeData?.sub_position_id\n                    )\n                    if (forValidationOnly) return resolve('success')\n\n                    let body = {\n                        user_id: employeeData?.id,\n                        employee_originization: {\n                            state_id: employeeData.state_id ?? '',\n                            office_id: employeeData.office_id ?? '',\n                            department_id: employeeData.department_id ?? '',\n                            position_id: selectedPosition?.parent_id ?? selectedPosition?.id ?? '',\n                            is_manager: getBooleanValue(employeeData?.is_manager) ?? '',\n                            self_gen_accounts: employeeData?.self_gen_accounts ?? '',\n                            sub_position_id: employeeData?.sub_position_id ?? '',\n                            manager_id: employeeData.manager_id ?? '',\n                            team_id: employeeData.team_id ?? '',\n                            recruiter_id: employeeData.recruiter_id ?? '',\n                            additional_recruiter_id: [],\n                            additional_locations:\n                                employeeData?.is_manager &&\n                                employeeData?.additional_locations?.length > 0\n                                    ? employeeData?.additional_locations\n                                    : [],\n                        },\n                    }\n                    if (employeeData.additional_recruter?.[0]?.recruiter_id) {\n                        body.employee_originization.additional_recruiter_id.push(\n                            employeeData.additional_recruter?.[0]?.recruiter_id\n                        )\n                    }\n                    if (employeeData.additional_recruter?.[1]?.recruiter_id) {\n                        body.employee_originization.additional_recruiter_id.push(\n                            employeeData.additional_recruter?.[1]?.recruiter_id\n                        )\n                    }\n\n                    setOrganizationLoading(true)\n                    if (userType == USER_TYPE.onboardEmployee) {\n                        const deductionData = firstPositionDetail?.deduction?.map((item) => ({\n                            cost_center_id: item?.cost_center_id,\n                            deduction_type: item?.deduction_type,\n                            ammount_par_paycheck: item?.ammount_par_paycheck,\n                            cost_center_name: item?.cost_center_name,\n                        }))\n                        body.deduction = deductionData\n                        hireNowStep2Service(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(error?.data?.message)\n                                reject(error)\n                            })\n                            .finally(() => setOrganizationLoading(false))\n                    } else {\n                        updateUserOrganizationDetailService(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(error?.data?.message)\n                                reject(error)\n                            })\n                            .finally(() => setOrganizationLoading(false))\n                    }\n                }),\n            commissionAndRedlineValidation: (forValidationOnly = false) =>\n                new Promise((resolve, reject) => {\n                    let employee_compensation = [\n                        {\n                            position_id: bothPositionData?.firstPosition?.parentPositionId ?? '',\n                            commission: employeeData?.employee_compensation?.[0]?.commission ?? '',\n                            commission_effective_date:\n                                getValidDate(\n                                    employeeData?.employee_compensation?.[0]\n                                        ?.commission_effective_date,\n                                    'YYYY/MM/DD'\n                                ) ?? '',\n\n                            redline_effective_date:\n                                getValidDate(\n                                    employeeData?.employee_compensation?.[0]\n                                        ?.redline_effective_date,\n                                    'YYYY/MM/DD'\n                                ) ?? '',\n                            redline: employeeData?.employee_compensation?.[0]?.redline ?? '',\n                            redline_amount_type:\n                                employeeData?.employee_compensation?.[0]?.redline_amount_type ?? '',\n                            redline_type:\n                                employeeData?.employee_compensation?.[0]?.redline_type ?? '',\n\n                            upfront_effective_date: positionAndCompanySetting.firstPosition.upfront\n                                ? getValidDate(\n                                      employeeData?.employee_compensation?.[0]\n                                          ?.upfront_effective_date,\n                                      'YYYY/MM/DD'\n                                  )\n                                : '',\n                            upfront_pay_amount: positionAndCompanySetting.firstPosition.upfront\n                                ? employeeData?.employee_compensation?.[0]?.upfront_pay_amount\n                                : '',\n                            upfront_sale_type: positionAndCompanySetting.firstPosition.upfront\n                                ? employeeData?.employee_compensation?.[0]?.upfront_sale_type\n                                : '',\n                            withheld_effective_date: positionAndCompanySetting.firstPosition\n                                .reconciliation\n                                ? getValidDate(\n                                      employeeData?.employee_compensation?.[0]\n                                          ?.withheld_effective_date,\n                                      'YYYY/MM/DD'\n                                  )\n                                : '',\n                            withheld_amount: positionAndCompanySetting.firstPosition.reconciliation\n                                ? employeeData?.employee_compensation?.[0]?.withheld_amount\n                                : '',\n                            withheld_type: positionAndCompanySetting.firstPosition.reconciliation\n                                ? employeeData?.employee_compensation?.[0]?.withheld_type\n                                : '',\n                        },\n                    ]\n\n                    if (employeeData?.self_gen_accounts) {\n                        employee_compensation.push({\n                            position_id: bothPositionData?.secondPosition?.parentPositionId,\n                            commission: employeeData?.employee_compensation?.[1]?.commission,\n                            commission_effective_date: getValidDate(\n                                employeeData?.employee_compensation?.[1]?.commission_effective_date,\n                                'YYYY/MM/DD'\n                            ),\n                            redline_effective_date: getValidDate(\n                                employeeData?.employee_compensation?.[1]?.redline_effective_date,\n                                'YYYY/MM/DD'\n                            ),\n                            redline: employeeData?.employee_compensation?.[1]?.redline,\n                            redline_amount_type:\n                                employeeData?.employee_compensation?.[1]?.redline_amount_type,\n                            redline_type: employeeData?.employee_compensation?.[1]?.redline_type,\n                            upfront_effective_date: positionAndCompanySetting.secondPosition.upfront\n                                ? getValidDate(\n                                      employeeData?.employee_compensation?.[1]\n                                          ?.upfront_effective_date,\n                                      'YYYY/MM/DD'\n                                  )\n                                : '',\n                            upfront_pay_amount: positionAndCompanySetting.secondPosition.upfront\n                                ? employeeData?.employee_compensation?.[1]?.upfront_pay_amount\n                                : '',\n                            upfront_sale_type: positionAndCompanySetting.secondPosition.upfront\n                                ? employeeData?.employee_compensation?.[1]?.upfront_sale_type\n                                : '',\n                            withheld_effective_date: positionAndCompanySetting.secondPosition\n                                .reconciliation\n                                ? getValidDate(\n                                      employeeData?.employee_compensation?.[1]\n                                          ?.withheld_effective_date,\n                                      'YYYY/MM/DD'\n                                  )\n                                : '',\n                            withheld_amount: positionAndCompanySetting.secondPosition.reconciliation\n                                ? employeeData?.employee_compensation?.[1]?.withheld_amount\n                                : '',\n                            withheld_type: positionAndCompanySetting.secondPosition.reconciliation\n                                ? employeeData?.employee_compensation?.[1]?.withheld_type\n                                : '',\n                        })\n                    }\n\n                    let positionIndex = 0,\n                        positionName = bothPositionData.firstPosition.name,\n                        positionDetail = positionAndCompanySetting.firstPosition\n\n                    // First Position\n                    if (\n                        !employee_compensation?.[positionIndex]?.commission_effective_date &&\n                        userType == USER_TYPE.hiredEmployee\n                    ) {\n                        return CustomToast.error(`Select ${positionName} Commission Effective Date`)\n                    }\n                    if (!isInputValueExist(employee_compensation?.[positionIndex]?.commission))\n                        return CustomToast.error(`Enter ${positionName} comission`)\n\n                    if (!employee_compensation?.[positionIndex]?.redline_amount_type)\n                        return CustomToast.error(`Select ${positionName} redline type`)\n                    if (\n                        !employee_compensation?.[positionIndex]?.redline_effective_date &&\n                        userType == USER_TYPE.hiredEmployee\n                    )\n                        return CustomToast.error(`Select ${positionName} redline effective date`)\n                    if (!isInputValueExist(employee_compensation?.[positionIndex]?.redline))\n                        return CustomToast.error(`Enter ${positionName} redline amount`)\n                    const redlineAmount = employee_compensation?.[positionIndex]?.redline\n                    // if (userType == USER_TYPE.onboardEmployee) {\n                    if (\n                        minMAxRedline?.redline_min &&\n                        minMAxRedline?.redline_max &&\n                        !(\n                            redlineAmount >= minMAxRedline?.redline_min &&\n                            redlineAmount <= minMAxRedline?.redline_max\n                        )\n                    ) {\n                        return CustomToast.error(\n                            `${positionName} Redline should be between ${minMAxRedline?.redline_min} and ${minMAxRedline?.redline_max}`\n                        )\n                    }\n                    // }\n\n                    if (!employee_compensation?.[positionIndex]?.redline_type)\n                        return CustomToast.error(`Select ${positionName} redline amount type`)\n\n                    if (positionDetail?.upfront) {\n                        if (\n                            !employee_compensation?.[positionIndex]?.upfront_effective_date &&\n                            userType == USER_TYPE.hiredEmployee\n                        ) {\n                            return CustomToast.error(\n                                `Select ${positionName}  Upfront Effective Date`\n                            )\n                        }\n\n                        if (\n                            !isInputValueExist(\n                                employee_compensation?.[positionIndex]?.upfront_pay_amount\n                            )\n                        )\n                            return CustomToast.error(`Enter ${positionName} upfront pay amount`)\n                        if (!employee_compensation?.[positionIndex]?.upfront_sale_type)\n                            return CustomToast.error(`Select ${positionName} upfront sale type`)\n                    }\n\n                    if (positionDetail?.reconciliation) {\n                        if (\n                            !employee_compensation?.[positionIndex]?.withheld_effective_date &&\n                            userType == USER_TYPE.hiredEmployee\n                        ) {\n                            return CustomToast.error(\n                                `Select ${positionName}  Withheld Effective Date`\n                            )\n                        }\n                        if (\n                            !isInputValueExist(\n                                employee_compensation?.[positionIndex]?.withheld_amount\n                            )\n                        )\n                            return CustomToast.error(`Enter ${positionName} withheld amount`)\n                        if (!employee_compensation?.[positionIndex]?.withheld_type)\n                            return CustomToast.error(`Select ${positionName} withheld sale type`)\n                    }\n\n                    // Second Position\n                    if (employeeData?.self_gen_accounts) {\n                        positionIndex = 1\n                        positionName = bothPositionData.secondPosition.name\n                        positionDetail = positionAndCompanySetting.secondPosition\n                        if (\n                            !employee_compensation?.[positionIndex]?.commission_effective_date &&\n                            userType == USER_TYPE.hiredEmployee\n                        ) {\n                            return CustomToast.error(\n                                `Select ${positionName} Commission Effective Date`\n                            )\n                        }\n                        if (!isInputValueExist(employee_compensation?.[positionIndex]?.commission))\n                            return CustomToast.error(`Enter ${positionName} comission`)\n                        if (!employee_compensation?.[positionIndex]?.redline_amount_type)\n                            return CustomToast.error(`Select ${positionName} redline type`)\n                        if (\n                            !employee_compensation?.[positionIndex]?.redline_effective_date &&\n                            userType == USER_TYPE.hiredEmployee\n                        )\n                            return CustomToast.error(\n                                `Select ${positionName} redline effective date`\n                            )\n                        if (!isInputValueExist(employee_compensation?.[positionIndex]?.redline))\n                            return CustomToast.error(`Enter ${positionName} redline amount`)\n\n                        const redlineAmount = employee_compensation?.[positionIndex]?.redline\n                        if (\n                            minMAxRedline?.redline_min &&\n                            minMAxRedline?.redline_max &&\n                            !(\n                                redlineAmount >= minMAxRedline?.redline_min &&\n                                redlineAmount <= minMAxRedline?.redline_max\n                            )\n                        ) {\n                            return CustomToast.error(\n                                `${positionName} Redline should be between ${minMAxRedline?.redline_min} and ${minMAxRedline?.redline_max}`\n                            )\n                        }\n\n                        if (!employee_compensation?.[positionIndex]?.redline_type)\n                            return CustomToast.error(`Select ${positionName} redline amount type`)\n\n                        if (positionDetail?.upfront) {\n                            if (\n                                !employee_compensation?.[positionIndex]?.upfront_effective_date &&\n                                userType == USER_TYPE.hiredEmployee\n                            ) {\n                                return CustomToast.error(\n                                    `Select ${positionName}  Upfront Effective Date`\n                                )\n                            }\n                            if (\n                                !isInputValueExist(\n                                    employee_compensation?.[positionIndex]?.upfront_pay_amount\n                                )\n                            )\n                                return CustomToast.error(`Enter ${positionName} upfront pay amount`)\n                            if (!employee_compensation?.[positionIndex]?.upfront_sale_type)\n                                return CustomToast.error(`Select ${positionName} upfront sale type`)\n                        }\n\n                        if (positionDetail?.reconciliation) {\n                            if (\n                                !employee_compensation?.[positionIndex]?.withheld_effective_date &&\n                                userType == USER_TYPE.hiredEmployee\n                            ) {\n                                return CustomToast.error(\n                                    `Select ${positionName}  Withheld Effective Date`\n                                )\n                            }\n                            if (\n                                !isInputValueExist(\n                                    employee_compensation?.[positionIndex]?.withheld_amount\n                                )\n                            )\n                                return CustomToast.error(`Enter ${positionName} withheld amount`)\n                            if (!employee_compensation?.[positionIndex]?.withheld_type)\n                                return CustomToast.error(\n                                    `Select ${positionName} withheld sale type`\n                                )\n                        }\n\n                        // Self Gen Specific\n                        // if (!isInputValueExist(employeeData?.commission_selfgen))\n                        //     return CustomToast.error('Enter self gen comission')\n                        // if (\n                        //     !employeeData?.commission_selfgen_effective_date &&\n                        //     userType == USER_TYPE.hiredEmployee\n                        // )\n                        //     return CustomToast.error('Select self gen comission effective date')\n                    }\n\n                    if (forValidationOnly) return resolve('success')\n\n                    const body = {\n                        user_id: employeeData.id,\n                        employee_compensation: employee_compensation,\n                        commission_selfgen: employeeData?.self_gen_accounts\n                            ? employeeData?.commission_selfgen\n                            : null,\n                        commission_selfgen_effective_date: employeeData?.self_gen_accounts\n                            ? getValidDate(\n                                  employeeData?.commission_selfgen_effective_date,\n                                  'YYYY-MM-DD'\n                              )\n                            : null,\n                    }\n\n                    setRedlineLoading(true)\n                    if (userType == USER_TYPE.onboardEmployee) {\n                        hireNowStep3Service(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(error?.data?.message)\n                                reject(error)\n                            })\n                            .finally(() => setRedlineLoading(false))\n                    } else {\n                        updateUserCompensationDetailService(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(error?.data?.message)\n                                reject(error)\n                            })\n                            .finally(() => setRedlineLoading(false))\n                    }\n                }),\n            overrideValidation: (forValidationOnly = false) =>\n                new Promise((resolve, reject) => {\n                    if (\n                        !employeeData?.override_effective_date &&\n                        userType == USER_TYPE.hiredEmployee\n                    ) {\n                        return CustomToast.error('Select Override Effective Date')\n                    }\n                    if (\n                        positionAndCompanySetting.firstPosition.overrides.direct &&\n                        !isInputValueExist(employeeData.direct_overrides_amount)\n                    )\n                        return CustomToast.error('Enter direct override amount')\n                    if (\n                        positionAndCompanySetting.firstPosition.overrides.direct &&\n                        !employeeData.direct_overrides_type\n                    )\n                        return CustomToast.error('Select override type')\n\n                    if (\n                        positionAndCompanySetting.firstPosition.overrides.indirect &&\n                        !isInputValueExist(employeeData.indirect_overrides_amount)\n                    )\n                        return CustomToast.error('Enter indirect amount')\n                    if (\n                        positionAndCompanySetting.firstPosition.overrides.indirect &&\n                        !isInputValueExist(employeeData.indirect_overrides_type)\n                    )\n                        return CustomToast.error('Select indirect type')\n\n                    if (\n                        positionAndCompanySetting.firstPosition.overrides.office &&\n                        !isInputValueExist(employeeData.office_overrides_amount)\n                    )\n                        return CustomToast.error('Enter office override amount')\n                    if (\n                        positionAndCompanySetting.firstPosition.overrides.office &&\n                        !isInputValueExist(employeeData.office_overrides_type)\n                    )\n                        return CustomToast.error('Select office override type')\n\n                    if (\n                        SHOW_BASED_ON_HOST.additionalOfficeOverrides &&\n                        employeeData?.is_manager &&\n                        userAssociatedOffices?.length > 0 &&\n                        positionAndCompanySetting.firstPosition.overrides.office\n                    ) {\n                        const additionalOverrideErros = []\n                        userAssociatedOffices?.map((item, index) => {\n                            if (\n                                !isInputValueExist(\n                                    employeeData?.additional_locations?.[index]?.overrides_amount\n                                ) ||\n                                !employeeData?.additional_locations?.[index]?.overrides_type\n                            )\n                                additionalOverrideErros.push(\n                                    `${item?.office_name}, ${item?.state_name}`\n                                )\n                        })\n                        if (additionalOverrideErros?.length > 0) {\n                            return CustomToast.error(\n                                `Fill Override data of Office: ${additionalOverrideErros?.join(\n                                    ' and '\n                                )}`\n                            )\n                        }\n                    } else {\n                    }\n\n                    if (\n                        positionAndCompanySetting.firstPosition.overrides.stack &&\n                        !isInputValueExist(employeeData?.office_stack_overrides_amount)\n                    )\n                        return CustomToast.error('Enter office stack override amount')\n\n                    if (forValidationOnly) return resolve('success')\n\n                    const additional_office_override = employeeData?.additional_locations?.map(\n                        (item) => ({\n                            state_id: item?.state_id,\n                            office_id: item?.office_id,\n                            overrides_amount: item?.overrides_amount,\n                            overrides_type: item?.overrides_type,\n                        })\n                    )\n                    const body = {\n                        user_id: employeeData.id,\n                        employee_override: {\n                            override_effective_date: getValidDate(\n                                employeeData?.override_effective_date,\n                                'YYYY/MM/DD'\n                            ),\n                            direct_overrides_amount: positionAndCompanySetting.firstPosition\n                                .overrides.direct\n                                ? employeeData?.direct_overrides_amount\n                                : '',\n                            direct_overrides_type: positionAndCompanySetting.firstPosition.overrides\n                                .direct\n                                ? employeeData?.direct_overrides_type\n                                : '',\n                            indirect_overrides_amount: positionAndCompanySetting.firstPosition\n                                .overrides.indirect\n                                ? employeeData?.indirect_overrides_amount\n                                : '',\n                            indirect_overrides_type: positionAndCompanySetting.firstPosition\n                                .overrides.indirect\n                                ? employeeData?.indirect_overrides_type\n                                : '',\n                            office_overrides_amount: positionAndCompanySetting.firstPosition\n                                .overrides.office\n                                ? employeeData?.office_overrides_amount\n                                : '',\n                            office_overrides_type: positionAndCompanySetting.firstPosition.overrides\n                                .office\n                                ? employeeData?.office_overrides_type\n                                : '',\n                            office_stack_overrides_amount: positionAndCompanySetting.firstPosition\n                                .overrides.stack\n                                ? employeeData?.office_stack_overrides_amount\n                                : '',\n                        },\n                        additional_office_override:\n                            SHOW_BASED_ON_HOST.additionalOfficeOverrides &&\n                            positionAndCompanySetting.firstPosition.overrides.office &&\n                            userAssociatedOffices?.length > 0 &&\n                            employeeData?.is_manager\n                                ? additional_office_override\n                                : [],\n                    }\n\n                    setOverrideLoading(true)\n                    if (userType == USER_TYPE.onboardEmployee) {\n                        hireNowStep4Service(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(error?.data?.message)\n                                reject(error)\n                            })\n                            .finally(() => setOverrideLoading(false))\n                    } else {\n                        updateUserOverrideDetailService(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(error?.data?.message)\n                                reject(error)\n                            })\n                            .finally(() => setOverrideLoading(false))\n                    }\n                }),\n            agreementValidation: () =>\n                new Promise((resolve, reject) => {\n                    if (Number(employeeData?.offer_include_bonus) == 1) {\n                        if (!isInputValueExist(employeeData.hiring_bonus_amount))\n                            return CustomToast.error('Enter hiring bonus amount')\n                        if (!employeeData.date_to_be_paid)\n                            return CustomToast.error('Select date to be paid')\n                    }\n                    if (!employeeData.period_of_agreement_start_date)\n                        return CustomToast.error('Select agreement start date')\n                    if (!employeeData.offer_expiry_date)\n                        return CustomToast.error('Select offer expiry date')\n\n                    const body = {\n                        user_id: employeeData?.id,\n                        employee_agreement: {\n                            probation_period: employeeData.probation_period,\n                            offer_include_bonus: employeeData.offer_include_bonus,\n                            hiring_bonus_amount: employeeData.hiring_bonus_amount,\n                            date_to_be_paid: getValidDate(\n                                employeeData.date_to_be_paid,\n                                'YYYY/MM/DD'\n                            ),\n                            period_of_agreement: getValidDate(\n                                employeeData.period_of_agreement_start_date,\n                                'YYYY/MM/DD'\n                            ),\n                            end_date: getValidDate(employeeData.end_date, 'YYYY/MM/DD'),\n                            offer_expiry_date: getValidDate(\n                                employeeData.offer_expiry_date,\n                                'YYYY/MM/DD'\n                            ),\n                        },\n                    }\n                    setAgreementLoading(true)\n                    if (userType == USER_TYPE.onboardEmployee) {\n                        hireNowStep5Service(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(error?.data?.message)\n                                reject(error)\n                            })\n                            .finally(() => setAgreementLoading(false))\n                    } else {\n                        updateUserAgreementDetailService(body)\n                            .then(() => {\n                                resolve('success')\n                            })\n                            .catch((error) => {\n                                CustomToast.error(getErrorMessageFromResponse(error))\n                                reject(error)\n                            })\n                            .finally(() => setAgreementLoading(false))\n                    }\n                }),\n            deductionsValidation: () =>\n                new Promise((resolve, reject) => {\n                    setDeductionLoading(true)\n                    const body = {\n                        user_id: employeeData?.id,\n                        position_id: employeeData?.sub_position_id,\n                        deductions: employeeData?.deduction,\n                    }\n                    updateUserOverrideDetailService(body)\n                        .then(() => {\n                            resolve('success')\n                        })\n                        .catch((e) => {\n                            CustomToast.error(getErrorMessageFromResponse(e))\n                            reject(e)\n                        })\n                        .finally(() => {\n                            setDeductionLoading(false)\n                        })\n                }),\n        }),\n\n        [\n            employeeData.first_name,\n            employeeData.last_name,\n            employeeData.email,\n            employeeData?.work_email,\n            employeeData.mobile_no,\n            employeeData.state_id,\n            employeeData.office_id,\n            employeeData.recruiter_id,\n            employeeData.id,\n            employeeData.department_id,\n            employeeData.sub_position_id,\n            employeeData?.is_manager,\n            employeeData.manager_id,\n            employeeData.team_id,\n            employeeData?.self_gen_accounts,\n            employeeData?.additional_locations,\n            employeeData.additional_recruter,\n            employeeData?.employee_compensation,\n            employeeData?.commission_selfgen,\n            employeeData?.commission_selfgen_effective_date,\n            employeeData?.override_effective_date,\n            employeeData.direct_overrides_amount,\n            employeeData.direct_overrides_type,\n            employeeData.indirect_overrides_amount,\n            employeeData.indirect_overrides_type,\n            employeeData.office_overrides_amount,\n            employeeData.office_overrides_type,\n            employeeData?.office_stack_overrides_amount,\n            employeeData.offer_include_bonus,\n            employeeData.period_of_agreement_start_date,\n            employeeData.offer_expiry_date,\n            employeeData.probation_period,\n            employeeData.hiring_bonus_amount,\n            employeeData.date_to_be_paid,\n            employeeData.end_date,\n            employeeData?.deduction,\n            lead_id,\n            userType,\n            updateEmployeeData,\n            allPositionList,\n            firstPositionDetail?.deduction,\n            bothPositionData.firstPosition?.parentPositionId,\n            bothPositionData.firstPosition.name,\n            bothPositionData.secondPosition?.parentPositionId,\n            bothPositionData.secondPosition.name,\n            positionAndCompanySetting.firstPosition,\n            positionAndCompanySetting.secondPosition,\n            minMAxRedline?.redline_min,\n            minMAxRedline?.redline_max,\n            userAssociatedOffices,\n        ]\n    )\n\n    const EditPersonalDetailSection = useMemo(() => {\n        return (\n            <UserPersonalDetailContainer\n                updateMultipleKeysOfEmployeeData={updateMultipleKeysOfEmployeeData}\n                updateEmployeeData={updateEmployeeData}\n                employeeData={employeeData}\n            />\n        )\n    }, [employeeData, updateEmployeeData, updateMultipleKeysOfEmployeeData])\n\n    const ViewPersonalDetailSection = useMemo(\n        () => <ViewPersonolDetailBlock employeeData={employeeData} />,\n        [employeeData]\n    )\n\n    const EditOrganisationSection = useMemo(() => {\n        return (\n            <UserOrganisationContainer\n                userType={userType}\n                teamList={teamList}\n                managerList={managerList}\n                updateMultipleKeysOfEmployeeData={updateMultipleKeysOfEmployeeData}\n                managerLoading={managerLoading}\n                updateEmployeeData={updateEmployeeData}\n                employeeData={employeeData}\n                parentPositionData={parentPositionData}\n                getPositionData={getPositionData}\n                getEmployeeData={getEmployeeData}\n                getTopCardUserProfile={getTopCardUserProfile}\n                saveEmploymentPackage={saveEmploymentPackage.organisationValidation}\n            />\n        )\n    }, [\n        userType,\n        teamList,\n        managerList,\n        updateMultipleKeysOfEmployeeData,\n        managerLoading,\n        updateEmployeeData,\n        employeeData,\n        parentPositionData,\n        getPositionData,\n        getEmployeeData,\n        getTopCardUserProfile,\n        saveEmploymentPackage.organisationValidation,\n    ])\n    const ViewOrganisationSection = useMemo(\n        () => <ViewOrganisationBlock employeeData={employeeData} type={userType} />,\n        [employeeData, userType]\n    )\n\n    const EditRedlineComissionUpfrontSection = useMemo(() => {\n        return (\n            <>\n                <UserRedlineComissionUpfrontContainer\n                    userType={userType}\n                    firstPositionDetail={firstPositionDetail}\n                    secondPositionDetail={secondPositionDetail}\n                    updateEmployeeData={updateEmployeeData}\n                    employeeData={employeeData}\n                    parentPositionData={parentPositionData}\n                    setAuditToggleView={() => setAuditToggleView(true)}\n                    setSelfGenAuditToggleView={() => setSelfGenAuditToggleView(true)}\n                    isStackModalEnabled={isStackModalEnabled}\n                    bothPositionData={bothPositionData}\n                />\n                {auditToggleView ? (\n                    <ViewUserRedlineChanges\n                        redlineData={employeeData}\n                        toggleView={auditToggleView}\n                        closeToggle={() => {\n                            setAuditToggleView(false)\n                        }}\n                    />\n                ) : null}\n                {selfGenAuditToggleView ? (\n                    <ViewUserRedlineChanges\n                        redlineData={employeeData}\n                        toggleView={selfGenAuditToggleView}\n                        closeToggle={() => {\n                            setSelfGenAuditToggleView(false)\n                        }}\n                        self_gen={true}\n                    />\n                ) : null}\n            </>\n        )\n    }, [\n        userType,\n        firstPositionDetail,\n        secondPositionDetail,\n        updateEmployeeData,\n        employeeData,\n        parentPositionData,\n        isStackModalEnabled,\n        bothPositionData,\n        auditToggleView,\n        selfGenAuditToggleView,\n    ])\n\n    const ViewRedlineComissionUpfrontSection = useMemo(\n        () => (\n            <>\n                <ViewRedlineComissionUpfrontBlock\n                    employeeData={employeeData}\n                    userType={userType}\n                    setToggleView={setToggleView}\n                    setSelfGenToggleView={setSelfGenToggleView}\n                    parentPositionData={parentPositionData}\n                    toggleView={toggleView}\n                    key={employeeData?.id}\n                    firstPositionDetail={firstPositionDetail}\n                    secondPositionDetail={secondPositionDetail}\n                    bothPositionData={bothPositionData}\n                    isStackModalEnabled={isStackModalEnabled}\n                    companySetting={companySetting}\n                />\n                {toggleView ? (\n                    <ViewChanges\n                        toggleView={toggleView}\n                        closeToggle={() => {\n                            setToggleView(false)\n                        }}\n                        id={employeeData?.id}\n                    />\n                ) : null}\n                {selfGenToggleView ? (\n                    <ViewChanges\n                        toggleView={selfGenToggleView}\n                        closeToggle={() => {\n                            setSelfGenToggleView(false)\n                        }}\n                        id={employeeData?.id}\n                    />\n                ) : null}\n            </>\n        ),\n        [\n            employeeData,\n            userType,\n            parentPositionData,\n            toggleView,\n            firstPositionDetail,\n            secondPositionDetail,\n            bothPositionData,\n            isStackModalEnabled,\n            companySetting,\n            selfGenToggleView,\n        ]\n    )\n\n    const EditOverridesSection = useMemo(() => {\n        return (\n            <UserOverridesContainer\n                selectedPrimaryOffice={selectedPrimaryOffice}\n                userAssociatedOffices={userAssociatedOffices}\n                userType={userType}\n                firstPositionDetail={firstPositionDetail}\n                secondPositionDetail={secondPositionDetail}\n                updateEmployeeData={updateEmployeeData}\n                employeeData={employeeData}\n                isStackModalEnabled={isStackModalEnabled}\n            />\n        )\n    }, [\n        selectedPrimaryOffice,\n        userAssociatedOffices,\n        userType,\n        firstPositionDetail,\n        secondPositionDetail,\n        updateEmployeeData,\n        employeeData,\n        isStackModalEnabled,\n    ])\n\n    const ViewOverridesSection = useMemo(\n        () => (\n            <ViewOverridesBlock\n                selectedPrimaryOffice={selectedPrimaryOffice}\n                userAssociatedOffices={userAssociatedOffices}\n                employeeData={employeeData}\n                firstPositionDetail={firstPositionDetail}\n                secondPositionDetail={secondPositionDetail}\n                isStackModalEnabled={isStackModalEnabled}\n                userType={userType}\n                positionAndCompanySetting={positionAndCompanySetting}\n            />\n        ),\n        [\n            selectedPrimaryOffice,\n            userAssociatedOffices,\n            employeeData,\n            firstPositionDetail,\n            secondPositionDetail,\n            isStackModalEnabled,\n            userType,\n            positionAndCompanySetting,\n        ]\n    )\n\n    const EditAgreementsSection = useMemo(() => {\n        return (\n            <UserAgreementsContainer\n                updateMultipleKeysOfEmployeeData={updateMultipleKeysOfEmployeeData}\n                selectedDocument={selectedDocument}\n                setSelectedDocument={setSelectedDocument}\n                agreementStep={agreementStep}\n                updateEmployeeData={updateEmployeeData}\n                employeeData={employeeData}\n            />\n        )\n    }, [\n        agreementStep,\n        employeeData,\n        selectedDocument,\n        updateEmployeeData,\n        updateMultipleKeysOfEmployeeData,\n    ])\n\n    const ViewAgreementsSection = useMemo(\n        () => (\n            <ViewAgreementsBlock\n                employeeData={employeeData}\n                getEmployeeData={getEmployeeData}\n                userType={userType}\n            />\n        ),\n        [employeeData, getEmployeeData, userType]\n    )\n\n    const ViewDeductionsSection = useMemo(\n        () => <ViewDeductionsBlock employeeData={employeeData} />,\n        [employeeData]\n    )\n\n    const EditDeductionsSection = useMemo(() => {\n        return (\n            <UserDeductionsContainer\n                updateEmployeeData={updateEmployeeData}\n                employeeData={employeeData}\n            />\n        )\n    }, [employeeData, updateEmployeeData])\n\n    return {\n        employeeData,\n        setEmployeeData,\n        getEmployeeData,\n        loading,\n        personalDetailLoading,\n        organizationLoading,\n        parentPositionData,\n        redlineLoading,\n        overrideLoading,\n        agreementLoading,\n        deductionLoading,\n        saveEmploymentPackage,\n        bothPositionData,\n        selectedDocument,\n        agreementStep,\n        setAgreementStep,\n        userAssociatedOffices,\n        getPositionData,\n        isStackModalEnabled,\n        firstPositionDetail,\n        secondPositionDetail,\n        getTopCardUserProfile,\n        selectedPrimaryOffice,\n\n        // Edit Section\n        EditPersonalDetailSection,\n        EditOrganisationSection,\n        EditRedlineComissionUpfrontSection,\n        EditOverridesSection,\n        EditAgreementsSection,\n        EditDeductionsSection,\n\n        // View Section\n        ViewPersonalDetailSection,\n        ViewOrganisationSection,\n        ViewRedlineComissionUpfrontSection,\n        ViewOverridesSection,\n        ViewAgreementsSection,\n        ViewDeductionsSection,\n    }\n}\n\nexport default useUserEmploymentPackage\n"],"names":["_ref","employeeData","selectedDocument","onModalClose","page","hireDirect","onBackPress","useSelector","getUserDataSelector","loading","setLoading","useState","name","setName","allowPermission","setAllowPermission","onHireDirectly","id","body","employee_id","hireEmployeeDirectlyService","then","CustomToast","sendFormToEmail","catch","e","getErrorMessageFromResponse","finally","useCallback","DIGISIGNER_CONFIG","selectedData","filter","item","isSelected","map","digiSignerSignatureRequestService","document_id","_jsxs","_Fragment","children","_jsx","CustomLoader","visible","full","className","style","marginBottom","fontFamily","fontSize","fontWeight","CustomCheckbox","checked","onChange","val","color","CustomInput","label","placeholder","value","_e$target","target","type","onClick","background","sendEmailbyIdService","modalsRoot","document","getElementById","_stepper$current4","show","recruiter_id","lead_id","handleClose","getonbording","setLoader","prefieldData","stepperRef","useRef","stepper","setPage","companySetting","getCompanySettingSelector","setEmployeeData","personalDetailLoading","organizationLoading","redlineLoading","overrideLoading","agreementLoading","saveEmploymentPackage","EditPersonalDetailSection","EditOrganisationSection","EditRedlineComissionUpfrontSection","EditOverridesSection","EditAgreementsSection","agreementStep","setAgreementStep","useUserEmploymentPackage","DEFAULT_EMPLOYEE_DATA","prevStep","current","includes","currentStepIndex","goPrev","updateInitialData","organisation","empData","sub_position_id","HIRE_FIELD_KEYS","MAIN_POSITTIONS_ID","department_id","MAIN_DEPARTMENT_ID","agreements","Date","moment","add","toDate","useEffect","_stepper$current","_stepper$current2","_stepper$current3","overrides","footer","createPortal","Dialog","tabIndex","onHide","onShow","loadStepper","StepperComponent","backdrop","header","ref","concat","DOCUMENT_TO_ATTACH_WHILE_ONBOARD","marginTop","position","size","noValidate","UserOnboardFinalStepContainer","justifyContent","marginLeft","submit","window","location","reload","nextStep","personalDetailValidation","goNext","organisationValidation","commissionAndRedlineValidation","overrideValidation","agreementValidation","LockedView","_ref2","userType","USER_TYPE","alt","src","images","MODAL_NAME","Organization","Overrides","Redline","Upfront","Commission","Withheld","_historyData$current","_historyData$current2","_getValidDate","_historyData$current3","_historyData$current4","_getValidDate2","_historyData$current5","_historyData$current6","_historyData$current7","_historyData$current8","_getValidDate3","_historyData$current9","_historyData$current10","_historyData$current11","_historyData$current12","_historyData$current13","_historyData$current14","_positionData$overrid","_positionData$overrid2","_historyData$current15","_historyData$current16","_historyData$current17","_historyData$current18","_positionData$overrid3","_positionData$overrid4","_historyData$current19","_historyData$current20","_historyData$current21","_historyData$current22","_positionData$overrid5","_positionData$overrid6","_historyData$current23","_historyData$current24","_historyData$current25","_historyData$current26","_positionData$overrid7","_positionData$overrid8","_historyData$current27","_historyData$current28","_historyData$current29","_historyData$current30","_historyData$history","_historyData$history2","_historyData$history3","_historyData$history4","_historyData$history5","_historyData$history6","_historyData$history7","_historyData$history8","_historyData$history9","_historyData$history10","_historyData$history11","_historyData$history12","title","modalName","userId","PositionId","positionData","historyData","setHistoryData","isAscending","setIsAscending","sortValue","setSortValue","sortingOrder","setSortingOrder","getHistoryData","user_id","position_id","sort","sort_val","getEmploymentPackageHistoryService","res","data","deleteHistoryData","CustomDialog","deleteEmploymentPackageHistoryService","percantageChange","oldVal","newVal","percentageChange","Math","min","handleSortClick","_sorted$history","sorted","history","a","b","dateA","effective_date","dateB","CustomModal","maxWidth","fontsFamily","borderRadius","lineHeight","formattedNumberFields","redline","redline_type","getValidDate","commission","commission_effective_date","upfront_pay_amount","upfront_sale_type","upfront_effective_date","state_name","office_name","manager_name","sub_position_name","override","status","direct_amount","direct_type","indirect_amount","indirect_type","office_amount","office_type","office_stack_overrides_amount","withheld_amount","withheld_type","withheld_effective_date","length","_item$Redline","_item$Redline2","_item$Redline3","_item$Redline4","isFutureDate","isInputValueExist","old_redline","old_redline_type","_val$old_redline_amou","old_redline_amount_type","_val$redline_type","_val$redline_amount_t","redline_amount_type","updated_on","CustomImage","updater_by","colSpan","CustomNoData","Pagination","_item$Commission","_item$Commission$","_item$Commission2","_item$Commission2$","_item$Commission3","_item$Commission4","old_commission","_item$Upfront","_item$Upfront$","_item$Upfront2","_item$Upfront2$","_item$Upfront3","_item$Upfront4","old_upfront_pay_amount","old_upfront_sale_type","_val$upfront_sale_typ","CustomSortSvg","_getValidDate4","_item$old_state_name","_item$state_name","_item$old_office_name","_item$office_name","_item$old_manager_nam","_item$manager_name","_item$updater_by","old_state_name","old_office_name","old_manager_name","_item$overrides","_item$overrides2","_item$overrides3","_item$updater_by2","_item$updater_by3","_item$updater_by4","amount","amountIndex","_positionData$overrid9","_positionData$overrid10","FirstCapital","_positionData$overrid11","_positionData$overrid12","isOldOverridePercent","old_type","old_amount","_positionData$overrid13","_positionData$overrid14","isNewOverridePercent","new_type","new_amount","image","first_name","last_name","_item$Withheld","_item$Withheld$","_item$Withheld2","_item$Withheld2$","_item$Withheld3","_item$Withheld4","_item$updater_by5","old_withheld_amount","old_withheld_type","charAt","toUpperCase","slice","onSuccess","managerList","setManagerList","usersList","setUsersList","managerLoading","setManagerLoading","userLoading","setUserLoading","office_id","getAllManagerListService","_res$data","getUsersByManagerIdService","_res$data2","user","onReassign","some","manager_id","old_manager_id","users","reAssignManagerService","icons","finalUList","managerItem","height","index","_e$target2","changedManagerOfUser","userIndex","managerId","uList","ChangePositionModal","_employeeData$departm","_employeeData$sub_pos","_firstPositionDetail$","_firstPositionDetail$2","_firstPositionDetail$3","_firstPositionDetail$4","_firstPositionDetail$5","_firstPositionDetail$6","_firstPositionDetail$7","_firstPositionDetail$8","_firstPositionDetail$9","_firstPositionDetail$10","_firstPositionDetail$11","_firstPositionDetail$12","_firstPositionDetail$13","_firstPositionDetail$14","_firstPositionDetail$15","_firstPositionDetail$16","_employeeData$direct_","_firstPositionDetail$17","_firstPositionDetail$18","_firstPositionDetail$19","_firstPositionDetail$20","_firstPositionDetail$21","_firstPositionDetail$22","_firstPositionDetail$23","_firstPositionDetail$24","_firstPositionDetail$25","_firstPositionDetail$26","_employeeData$indirec","_firstPositionDetail$27","_firstPositionDetail$28","_firstPositionDetail$29","_firstPositionDetail$30","_firstPositionDetail$31","_firstPositionDetail$32","_firstPositionDetail$33","_firstPositionDetail$34","_firstPositionDetail$35","_firstPositionDetail$36","_employeeData$office_","_firstPositionDetail$37","_firstPositionDetail$38","_firstPositionDetail$39","_firstPositionDetail$40","_firstPositionDetail$41","_firstPositionDetail$42","_firstPositionDetail$43","_firstPositionDetail$44","_firstPositionDetail$45","_firstPositionDetail$46","showChangePositionModal","onCloseChangePositionModal","effectiveDate","setEffectiveDate","getPositionData","isStackModalEnabled","bothPositionData","userAssociatedOffices","firstPositionDetail","secondPositionDetail","selectedPrimaryOffice","parentPositionData","hiredEmployee","callOnLoadApi","updateEmployeeData","field","updateMultipleKeysOfEmployeeData","departmentWithPositionList","getDepartmentWithPositionSelector","departmentList","useMemo","_item$position","positionList","_departmentList$find","find","onChangeCompensationData","employee_compensation","employeeCompensationData","_","redline_effective_date","onUpdatePositionPress","onChangeInputData","_e$target3","_e$target4","onChangeInputDataWithLimit","percentageLimitCheck","onChangeOverridesType","isOverrideTypeIsPercent","updateAdditionalOfficeOverrideData","additionalOfficeIndex","key","additional_locations","CustomDropdown","required","options","valueKey","_e$target5","_e$target6","displayKey","getBooleanValue","self_gen_accounts","CustomDatePicker","_e$target7","positionIndex","_bothPositionData","_employeeData$employe","_employeeData$employe2","_employeeData$employe3","_employeeData$employe4","_employeeData$employe5","_employeeData$employe6","_employeeData$employe7","_employeeData$employe8","_employeeData$employe9","_employeeData$employe10","_employeeData$employe11","_employeeData$employe12","_employeeData$employe13","_employeeData$employe14","_employeeData$employe15","_employeeData$employe16","positionDetail","positionName","textDecoration","suffixText","disabled","onboardEmployee","commission_parentag_hiring_locked","searching","prefixText","INPUT_TYPE","UNIT_TYPE2","upfront_status","upfront_ammount_locked","hideLabel","calculated_locked","UNIT_TYPE1","reconciliation_status","reconciliation","commission_withheld_locked","commission_type_locked","direct_overrides_type","override_ammount_locked","direct_overrides_amount","override_type_locked","OVERRIDE_TYPE","indirect_overrides_type","indirect_overrides_amount","office_overrides_type","office_overrides_amount","SHOW_BASED_ON_HOST","officeItem","officeIndex","overrides_type","_e$target8","_e$target9","overrides_amount","_e$target10","updateAdditionalOfficeOverrideType","CustomButton","buttonLabel","memo","_employeeData$additio","_employeeData$additio2","_employeeData$additio3","_employeeData$additio4","_employeeData$state_i","_allStatesWithOffices2","_employeeData$manager","_employeeData$team_id","_employeeData$additio15","_employeeData$additio16","_employeeData$additio17","_employeeData$additio18","_employeeData$additio19","_employeeData$additio20","_employeeData$additio21","_employeeData$additio22","_employeeData$additio23","_employeeData$additio24","_employeeData$additio25","_employeeData$additio26","_employeeData$additio27","_employeeData$additio28","_employeeData$additio29","_employeeData$additio30","_employeeData$additio31","_employeeData$additio32","teamList","getEmployeeData","getTopCardUserProfile","recruiterDataRef","recruiter","additional_recruiter1","additional_recruter","additional_recruiter2","showAssignedManagerDialog","setShowAssignedManagerDialog","showDialog","setShowDialog","setShowChangePositionModal","_employeeData$additio5","_employeeData$additio6","_employeeData$additio7","_employeeData$additio8","handleAssignedManagerDialog","reassignManager","is_manager","total_employee","allStatesWithOffices","geyAllStatesWithOfficesSelector","onSeachRecruiter","searchText","Promise","resolve","getRecuiterFilterService","finalData","_recruiterDataRef$cur","_recruiterDataRef$cur2","_recruiterDataRef$cur3","_recruiterDataRef$cur4","_recruiterDataRef$cur5","_recruiterDataRef$cur6","onSuccessAssignManager","managerNames","filteredData","officeList","_employeeData$additio9","_employeeData$additio10","_employeeData$additio11","_employeeData$additio12","_allStatesWithOffices","finalOfficeArr","Number","ind","stateOfficeList","state_id","_employeeData$additio13","_employeeData$additio14","office","onChangePositionPress","employeeDataWithTodayEffectiveDate","override_effective_date","showClear","showLink","linkLabel","onLinkPress","disable","team_id","_item$office_id","temp","alignSelf","finalTemp","im","width","padding","CustomSearchInput","zIndex","onSearch","text","onSelectValue","selectedValue","recruiter_name","recruiter_first_name","recruiter_last_name","AssignManagerModal","ViewUserRedlineChanges","_pastUpcomingRedline$","_pastUpcomingRedline$2","_pastUpcomingRedline$3","_pastUpcomingRedline$4","_pastUpcomingRedline$5","toggleView","closeToggle","redlineData","self_gen","pastUpcomingRedline","getEmployeeRedlineHelper","Sidebar","showCloseIcon","redline_amount","start_date","TabView","TabPanel","CommonRedlineTable","past","upcoming","onSavePress","redline_data","setRedlineData","auditToggleView","setAuditToggleView","edit","onEditPress","onEditSavePress","onDeletePress","handleSave","currentRedline","_getEmployeeRedlineHe","CustomLink","buttonType","BUTTON_TYPE","changeRedline","_item$redline_type","new","format","minDate","maxDate","setDate","getDate","icon","push","UserRedlineComissionUpfrontContainer","editRedline","setEditRedline","editSelfGenRedline","setEditSelfGenRedline","closeRedlinePopup","onSaveOtherRedlinePress","_employeeData$employe17","_employeeData$employe18","_employeeData$employe19","_employeeData$employe20","_employeeData$employe21","_employeeData$employe22","_employeeData$employe23","_employeeData$employe24","opacity","EditUserRedlineModel","self_gen_redline_data","_employeeData$probati","setSelectedDocument","probation_period","offer_include_bonus","offer_expiry_date","hiring_bonus_amount","date_to_be_paid","inputClassName","period_of_agreement_start_date","end_date","setTimeout","onCheckAttachDocumentPress","_employeeData$work_em","_employeeData$work_em2","onChangeWorkEmail","empWorkEmailData","work_email","email","onCancelWorkEmailPress","updatedData","emailItem","emailIndex","onAddWorkEmailPress","rejex","subLabel","CommonLabel","class","mobile_no","ViewChanges","getUserRedlineService","overflow","updater_name","textAlign","_employeeData$deducti","_employeeData$deducti2","deduction","cost_center_name","deduction_type","ammount_par_paycheck","CommonTableRow","fieldName","fieldValue","showViewChangesButton","showEditButton","onEditButtonPress","onViewChangesPress","equalColumn","CustomEditIcon","ViewPersonolDetailBlock","_employeeData$office","_employeeData$office2","_employeeData$office3","i","join","formattedPhoneNumber","state","ViewOrganisationBlock","_ref3","_employeeData$office4","_employeeData$office5","_employeeData$office6","_employeeData$recruit","department_name","team_name","ViewRedlineComissionUpfrontBlock","_ref4","_ref5","selectedPositionIndex","setSelectedPositionIndex","modalType","setModalType","showModal","setShowModal","CustomViewChnagesEmployementPackageModal","handleHistoryModalClose","parentPositionId","_bothPositionData$sec","firstPosition","secondPosition","ViewOverridesBlock","_ref6","_positionAndCompanySe","_positionAndCompanySe2","positionAndCompanySetting","companyOverrideSetting","getCompanyOverrideSettingSelector","allow_manual_override_status","Link","to","ViewAgreementsBlock","_ref7","_employeeData$first_n","_employeeData$last_na","showEditHireDateModal","setEditHireDateModal","hireDate","setHireDate","hired_date","errorMessage","setErrorMessage","hiringAccess","useCustomAccessRights","onUpdateHireDatePress","updateHireDateOfEmployeeService","showEditHireDateButton","ViewDeductionsBlock","_ref8","city_name","position_name","period_of_agreement","_bothPositionData$fir2","_bothPositionData$fir5","_bothPositionData$sec4","dispatch","useDispatch","firstPage","setFirstPage","setPersonalDetailLoading","setOrganizationLoading","setRedlineLoading","setOverrideLoading","setAgreementLoading","deductionLoading","setDeductionLoading","setFirstPositionDetail","setSecondPositionDetail","minMAxRedline","setMinMAxRedline","setToggleView","selfGenAuditToggleView","setSelfGenAuditToggleView","selfGenToggleView","setSelfGenToggleView","allPositionList","getPositionsSelector","setTeamList","getAllStatesWithOfficesAction","getPositionsAction","getCompanyOverrideSettingAction","getDepartmentWithPositionAction","getTeamListService","_data$parent_id","parent_id","_bothPositionData$fir","allow_office_stack_override_status","is_stack","getPositionDetail","is_self_gen","getPositionByIdService","positionRes","_bothPositionData$sec2","arguments","undefined","forceUpdate","_empData$HIRE_FIELD_K","_empData$HIRE_FIELD_K2","_empData$HIRE_FIELD_K3","_empData$HIRE_FIELD_K4","_empData$HIRE_FIELD_K5","_empData$HIRE_FIELD_K6","_empData$HIRE_FIELD_K7","_empData$HIRE_FIELD_K8","_empData$HIRE_FIELD_K9","_empData$HIRE_FIELD_K10","POSITIONS_SETUP_FIELDS_KEYS","upfront_ammount","calculated_by","commission_withheld","commission_type","_positionRes$override11","_positionRes$override12","_positionRes$override","_positionRes$override2","_positionRes$override3","_positionRes$override4","_positionRes$override5","_positionRes$override6","_positionRes$override7","_positionRes$override8","_positionRes$override9","_positionRes$override10","_positionRes$override13","_positionRes$override14","_positionRes$override15","_positionRes$override16","override_ammount","getFinalRes","_empData$work_email","_empData$employee_com","_empData$employee_com2","_empData$employee_com3","getOnbordingEmployeebyIdService","getUserEmploymentPackageDetailService","redlineBody","getRedlineDataFromLocation","upfront","deduction_status","direct","indirect","stack","stateData","it","officeData","forValidationOnly","reject","_employeeData$email","_employeeData$work_em3","_employeeData$work_em4","_getMobileNumberWitho","_employeeData$id","EMAIL_VALIDATION","workEmailArrError","allList","employee_deatils","getMobileNumberWithoutMask","updateHireNowStep1Service","_res$data3","error","_error$data","message","_res$data4","_error$data2","updateUserPersonalDetailService","_res$data5","_error$data3","_employeeData$state_i2","_employeeData$office_2","_selectedPosition$par","_getBooleanValue","_employeeData$self_ge","_employeeData$recruit2","selectedPosition","employee_originization","additional_recruiter_id","deductionData","cost_center_id","hireNowStep2Service","_error$data4","updateUserOrganizationDetailService","_error$data5","_bothPositionData$fir3","_bothPositionData$fir4","_employeeData$employe25","_employeeData$employe26","_employeeData$employe27","_employeeData$employe28","_employee_compensatio","_employee_compensatio2","_employee_compensatio3","_employee_compensatio4","_employee_compensatio5","_employee_compensatio6","_employee_compensatio7","_positionDetail","_positionDetail2","_bothPositionData$sec3","_employeeData$employe29","_employeeData$employe30","_employeeData$employe31","_employeeData$employe32","_employeeData$employe33","_employeeData$employe34","_employeeData$employe35","_employeeData$employe36","_employeeData$employe37","_employeeData$employe38","_employeeData$employe39","_employeeData$employe40","_employeeData$employe41","_employeeData$employe42","_employeeData$employe43","_employeeData$employe44","_employeeData$employe45","_employeeData$employe46","_employeeData$employe47","_employeeData$employe48","_employeeData$employe49","_employeeData$employe50","_employeeData$employe51","_employeeData$employe52","redlineAmount","redline_min","redline_max","_employee_compensatio8","_employee_compensatio9","_employee_compensatio10","_employee_compensatio11","_employee_compensatio12","_employee_compensatio13","_employee_compensatio14","_employee_compensatio15","_employee_compensatio16","_employee_compensatio17","_employee_compensatio18","_employee_compensatio19","_employee_compensatio20","_positionDetail3","_positionDetail4","_employee_compensatio21","_employee_compensatio22","_employee_compensatio23","_employee_compensatio24","_employee_compensatio25","_employee_compensatio26","commission_selfgen","commission_selfgen_effective_date","hireNowStep3Service","_error$data6","updateUserCompensationDetailService","_error$data7","additionalOverrideErros","additional_office_override","employee_override","hireNowStep4Service","_error$data8","updateUserOverrideDetailService","_error$data9","employee_agreement","hireNowStep5Service","_error$data10","updateUserAgreementDetailService","deductionsValidation","deductions","UserPersonalDetailContainer","ViewPersonalDetailSection","UserOrganisationContainer","ViewOrganisationSection","ViewRedlineComissionUpfrontSection","UserOverridesContainer","ViewOverridesSection","UserAgreementsContainer","ViewAgreementsSection","ViewDeductionsSection","EditDeductionsSection","UserDeductionsContainer"],"sourceRoot":""}