{"version":3,"file":"static/js/2652.6df0785e.chunk.js","mappings":"sTAwBA,MAydA,EAzdqBA,IAAgE,IAA/D,gBAACC,EAAe,aAAEC,EAAY,UAAEC,EAAS,cAAEC,GAAcJ,EAC3E,MAAMK,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,KAC7BC,EAAqBC,IAA0BC,EAAAA,EAAAA,UAAS,KACxDC,EAAuBC,IAA4BF,EAAAA,EAAAA,UAAS,KAC5DG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAEhCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAsB,OAAbN,QAAa,IAAbA,OAAa,EAAbA,EAAea,aACnDC,EAA4BC,IAAiCT,EAAAA,EAAAA,UAASL,IAE7Ee,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACZ,IAAIC,EAAcC,IAAAA,UAAYL,IACb,OAAbd,QAAa,IAAbA,GAAmB,QAANiB,EAAbjB,EAAeoB,YAAI,IAAAH,OAAN,EAAbA,EAAqBI,QAAS,IACjB,OAAbrB,QAAa,IAAbA,GAAAA,EAAeoB,KAAKE,KAAKC,IAAc,IAADC,EAClC,MAAMC,GACS,OAAXP,QAAW,IAAXA,OAAW,EAAXA,EAAaG,QAAS,EAChBH,EAAYQ,WAAWC,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,MAAc,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,OACrD,EAC+C,IAADC,EAArDJ,GAAa,IAAa,OAARF,QAAQ,IAARA,GAAqB,QAAbC,EAARD,EAAUO,mBAAW,IAAAN,OAAb,EAARA,EAAuBH,QAAS,IAC1C,OAARE,QAAQ,IAARA,GAAqB,QAAbM,EAARN,EAAUO,mBAAW,IAAAD,GAArBA,EAAuBP,KAAKS,IAAgB,IAADC,EAAAC,EACvC,MAAMC,EAAyB,OAAXhB,QAAW,IAAXA,GAAwB,QAAbc,EAAXd,EAAcO,UAAU,IAAAO,OAAb,EAAXA,EAA0BG,YAAYT,WACrDC,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,MAAgB,OAAVG,QAAU,IAAVA,OAAU,EAAVA,EAAYH,MAEsB,IAADQ,EAAvDF,GAAe,IAAe,OAAVH,QAAU,IAAVA,GAAqB,QAAXE,EAAVF,EAAYM,iBAAS,IAAAJ,OAAX,EAAVA,EAAuBZ,QAAS,IAC1C,OAAVU,QAAU,IAAVA,GAAqB,QAAXK,EAAVL,EAAYM,iBAAS,IAAAD,GAArBA,EAAuBd,KAAKgB,IAAmB,IAADC,EAC1C,MAAMC,EAAiBtB,EAAYO,GAAWU,YAC1CD,GACFO,UAAUf,WAAWC,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,MAAmB,OAAbU,QAAa,IAAbA,OAAa,EAAbA,EAAeV,MACO,IAADc,EAA7DF,GAAkB,IAAkB,OAAbF,QAAa,IAAbA,GAAwB,QAAXC,EAAbD,EAAeK,iBAAS,IAAAJ,OAAX,EAAbA,EAA0BlB,QAAS,IAC7C,OAAbiB,QAAa,IAAbA,GAAwB,QAAXI,EAAbJ,EAAeK,iBAAS,IAAAD,GAAxBA,EAA0BpB,KAAKsB,IAAoB,IAADC,EAC9C,MAAMC,EAEgC,QAFjBD,EAAG3B,EAAYO,GAAWU,YAC3CD,GACFO,UAAUD,GAAgBO,kBAAU,IAAAF,OAAA,EAFdA,EAEgBnB,WACnCC,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,MAAoB,OAAdgB,QAAc,IAAdA,OAAc,EAAdA,EAAgBhB,MAEpCoB,EAAkBF,GAAmB,EAE3C5B,EAAYO,GAAWU,YAAYD,GAAaO,UAC5CD,GACFO,WAAWD,GAAiBG,QAAUD,CAAe,IAE/D,IAER,IAER,IAEJjC,EAA8B,IAAIG,IACtC,GACD,CAAc,OAAblB,QAAa,IAAbA,OAAa,EAAbA,EAAeoB,OAEnB,MAgHM8B,GAAmBC,EAAAA,EAAAA,cACrB,CAACC,EAAW3B,KAAe,IAAD4B,EAAAC,EACtBC,OAAOC,OAAO1C,GACd,IAAI2C,EAAWtC,IAAAA,UAAYL,GACD,OAA1BA,QAA0B,IAA1BA,GAAuC,QAAbuC,EAA1BvC,EAA6BW,UAAU,IAAA4B,GAAa,QAAbC,EAAvCD,EAAyClB,mBAAW,IAAAmB,GAApDA,EAAsDhC,KAAI,CAACS,EAAYG,KAAiB,IAADwB,EACzE,OAAV3B,QAAU,IAAVA,GAAqB,QAAX2B,EAAV3B,EAAYU,iBAAS,IAAAiB,GAArBA,EAAuBpC,KAAI,CAACgB,EAAeE,KAAoB,IAADmB,EAC7C,OAAbrB,QAAa,IAAbA,GAAyB,QAAZqB,EAAbrB,EAAeS,kBAAU,IAAAY,GAAzBA,EAA2BrC,KAAI,CAACsB,EAAgBE,KAC5CW,EAAShC,GAAWU,YAAYD,GAAaO,UACzCD,GACFO,WAAWD,GAAiBG,SAAWG,CAAS,GACpD,GACJ,IAENrC,EAA8B,IAAI0C,GAAU,GAEhD,CAAC3C,IAsEC8C,GAAmBT,EAAAA,EAAAA,cAAa5B,IAAc,IAADsC,EAC/C,MAAMzC,EAAO,GAab,OAZQ,OAARG,QAAQ,IAARA,GAAqB,QAAbsC,EAARtC,EAAUY,mBAAW,IAAA0B,OAAb,EAARA,EAAuBxC,QAAS,GAC5BE,EAASY,YAAYb,KAChBS,IAAU,IAAA+B,EAAA,OACa,QAApBA,EAAA/B,EAAWU,iBAAS,IAAAqB,OAAA,EAApBA,EAAsBzC,QAAS,GAC/BU,EAAWU,UAAUnB,KAChBgB,IAAa,IAAAyB,EAAA,OACG,OAAbzB,QAAa,IAAbA,GAAyB,QAAZyB,EAAbzB,EAAeS,kBAAU,IAAAgB,OAAZ,EAAbA,EAA2B1C,QAAS,GACpCiB,EAAcS,WAAWzB,KAAKsB,IAAc,IAAAoB,EAAA,OACxC5C,EAAK6C,KAA4B,QAAxBD,EAAe,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgBK,eAAO,IAAAe,GAAAA,EAAU,GAC9C,GACR,IAEF,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,OAAOvC,GAASA,GAAK,GACnC,IACGwC,GAAwBhB,EAAAA,EAAAA,cAAab,IAAmB,IAAD8B,EACzD,MAAMhD,EAAO,GAKb,OAJa,OAAbkB,QAAa,IAAbA,GAAyB,QAAZ8B,EAAb9B,EAAeS,kBAAU,IAAAqB,OAAZ,EAAbA,EAA2B/C,QAAS,GAChCiB,EAAcS,WAAWzB,KAAKsB,IAAc,IAAAyB,EAAA,OACxCjD,EAAK6C,KAA4B,QAAxBI,EAAe,OAAdzB,QAAc,IAAdA,OAAc,EAAdA,EAAgBK,eAAO,IAAAoB,GAAAA,EAAU,IAExC,OAAJjD,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,OAAOvC,GAASA,GAAK,GACnC,IAEH,OACI2C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAQC,MAAO,CAACC,WAAY,UAAWC,SAAU,OAAQC,WAAY,OAAOC,SAAA,EACvFC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACC,QAAStE,EAASuE,MAAI,KAEpCV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEK,SAAA,EAC5EN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAiBC,MAAO,CAACE,SAAU,QAASD,WAAY,WAAWG,SAAA,CAC7E7E,EAAU,aAGfuE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCK,SAAA,EAC7CC,EAAAA,EAAAA,KAACI,EAAAA,GAAY,CACTC,WAAYC,EAAAA,GAAAA,MACZC,YAAY,SACZC,QAASA,IAAMxF,GAAiBC,MAEpC+E,EAAAA,EAAAA,KAACI,EAAAA,GAAY,CACTC,WAAYC,EAAAA,GAAAA,QACZC,YAAY,OACZC,QAtGAC,KAAO,IAADC,EACtB,IAAIC,EAAgB,GACpB,MAAM/B,EAAW3C,EAA2BQ,KAAI,CAACC,EAAUE,KAChD,CACHgE,QAASlE,EAASK,GAClB8D,aAAcnE,EAASY,YAAYb,KAAI,CAACqE,EAAYzD,KACzC,CACH0D,UAAqB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAY/D,GACvBiE,YAAaF,EAAWlD,UAAUnB,KAAKwE,IAAmB,IAADC,EAAAC,EACrD,MAAMC,EAA+B,OAAbH,QAAa,IAAbA,GAAyB,QAAZC,EAAbD,EAAe/C,kBAAU,IAAAgD,GACQ,QADRC,EAAzBD,EAClBG,QAAQtD,GAAiC,OAAdA,QAAc,IAAdA,OAAc,EAAdA,EAAgBK,iBAAQ,IAAA+C,OADpB,EAAbA,EAElB1E,KAAKsB,GAAiC,OAAdA,QAAc,IAAdA,OAAc,EAAdA,EAAgBhB,KAE9C,OADA4D,EAAgB,IAAIA,KAAkBS,GAC/B,CACHE,cAA4B,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAelE,GAC9BwE,cAAeH,EAClB,YAMrB,IAAII,EAAO,CACPxF,WAAYF,EACZ2F,WAAY7C,GAGhB,OAAK9C,GACY,QAAb4E,EAAAC,SAAa,IAAAD,OAAA,EAAbA,EAAelE,SAAU,EAAUkF,EAAAA,EAAAA,MAAkB,gCAEzD7F,GAAW,QACM,OAAbV,QAAa,IAAbA,GAAAA,EAAewG,UACfH,EAAKG,SAAwB,OAAbxG,QAAa,IAAbA,OAAa,EAAbA,EAAewG,UAC/BC,EAAAA,EAAAA,KAAkCJ,GAC7BK,MAAK,KACF7G,GAAiBC,GACjByG,EAAAA,EAAAA,QAAoB,gBAAgB,IAEvCI,OAAOC,IACJL,EAAAA,EAAAA,OAAkBM,EAAAA,EAAAA,IAA4BD,GAAG,IAEpDE,SAAQ,KACLpG,GAAW,EAAM,MAGzBqG,EAAAA,EAAAA,KAA+BV,GAC1BK,MAAK,KACF7G,GAAiBC,GACjByG,EAAAA,EAAAA,QAAoB,gBAAgB,IAEvCI,OAAOK,IACJT,EAAAA,EAAAA,OAAkBM,EAAAA,EAAAA,IAA4BG,GAAO,IAExDF,SAAQ,KACLpG,GAAW,EAAM,MA3BN6F,EAAAA,EAAAA,MAAkB,mBA6BzC,WAmDI1B,EAAAA,EAAAA,KAAA,OAAKN,UAAU,6BAEfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaK,SAAA,EAExBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCK,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SACIN,UAAU,qCACVC,MAAO,CAACG,WAAY,OAAOC,SAC9B,gBAGDC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACoC,EAAAA,GAAW,CACRC,YAAY,GACZC,MAAOxG,EACPyG,SAAWR,GAAMhG,EAAagG,EAAES,OAAOF,OACvCG,MAAO,sBAKnBzC,EAAAA,EAAAA,KAAA,OACIN,UAAU,uBACVC,MAAO,CAACE,SAAU,OAAQD,WAAY,UAAWE,WAAY,OAAOC,SACvE,cAGDC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,6BAEY,OAA1BzD,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BO,QAAS,IACR,OAA1BP,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BQ,KAAI,CAACC,EAAUE,KAAe,IAAD8F,EACrD,MAAMC,EAAgB5D,EAAiBrC,GACvC,OACI+C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOK,SAAA,EAClBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCK,SAAA,EACjDN,EAAAA,EAAAA,MAAA,OACIC,UAAU,eACVC,MAAO,CACHG,WAAY,IACZD,SAAU,OACVD,WAAY,WACdG,SAAA,CAEO,OAARrD,QAAQ,IAARA,OAAQ,EAARA,EAAUkG,WAAW,gBAE1B5C,EAAAA,EAAAA,KAAA,OAAKN,UAAU,gDAA+CK,UAC1DC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAc,CACXzE,QAASuE,EACTJ,SAAUA,KACNlE,EAAiBsE,EAAe/F,EAAU,OAKtDoD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAW,CACRtC,QAASA,KAAMuC,OA1KzBC,EA0KkD,OAARtG,QAAQ,IAARA,OAAQ,EAARA,EAAUK,QAzK1EvB,EAAuBwH,GAAUzH,EAAsB,GAAKyH,GADtCA,KA0KwD,EAC9CC,eACI1H,IAA+B,OAARmB,QAAQ,IAARA,OAAQ,EAARA,EAAUK,IAC3BmG,EAAAA,EAAAA,GACAA,EAAAA,EAAAA,WAIT,OAARxG,QAAQ,IAARA,OAAQ,EAARA,EAAUK,KAAMxB,IACL,OAARmB,QAAQ,IAARA,GAAqB,QAAbgG,EAARhG,EAAUY,mBAAW,IAAAoF,OAAb,EAARA,EAAuBjG,KAAI,CAACS,EAAYG,KAAiB,IAAD8F,EACpD,OACI1D,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BK,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OACIN,UAAU,4BACVC,MAAO,CACHG,WAAY,IACZD,SAAU,OACVD,WAAY,WACdG,SAES,OAAV7C,QAAU,IAAVA,OAAU,EAAVA,EAAYkG,YAGjBpD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAW,CACRG,eACIvH,IAAmC,OAAVwB,QAAU,IAAVA,OAAU,EAAVA,EAAYH,IAC/BmG,EAAAA,EAAAA,GACAA,EAAAA,EAAAA,KAEV1C,QAASA,KACL6C,OArM5BC,EAqMyD,OAAVpG,QAAU,IAAVA,OAAU,EAAVA,EAAYH,QApMnFpB,EAAyB2H,GAAY5H,EAAwB,GAAK4H,GAD1CA,KAsMyB,QAGE,OAAVpG,QAAU,IAAVA,OAAU,EAAVA,EAAYH,KAAMrB,IACL,OAAVwB,QAAU,IAAVA,GAAqB,QAAXiG,EAAVjG,EAAYU,iBAAS,IAAAuF,OAAX,EAAVA,EAAuB1G,KACnB,CAACgB,EAAeE,KAAoB,IAAD4F,EAC/B,MAAMC,EACFlE,EAAsB7B,GAC1B,OACIgC,EAAAA,EAAAA,MAAA,OACIC,UAAU,GAAEK,SAAA,EAGZN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMK,SAAA,EAEjBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CK,SAAA,EAC1DC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAc,CACXN,SAAUA,MA/PxD,WAKxB,IAADkB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAJDvF,EAASwF,UAAAvH,OAAA,QAAAwH,IAAAD,UAAA,IAAAA,UAAA,GACTE,EAAUF,UAAAvH,OAAA,EAAAuH,UAAA,QAAAC,EACVE,EAAYH,UAAAvH,OAAA,EAAAuH,UAAA,QAAAC,EACZG,EAAgBJ,UAAAvH,OAAA,EAAAuH,UAAA,QAAAC,EAEhBtF,OAAOC,OAAO1C,GACd,IAAI2C,EAAWtC,IAAAA,UAAYL,GACD,OAA1BA,QAA0B,IAA1BA,GAAwC,QAAdwH,EAA1BxH,EAA6BgI,UAAW,IAAAR,GAAa,QAAbC,EAAxCD,EAA0CnG,mBAAW,IAAAoG,GAAgB,QAAhBC,EAArDD,EAAwDQ,UAAa,IAAAP,GAAW,QAAXC,EAArED,EAAuE/F,iBAAS,IAAAgG,GAE/E,QAF+EC,EAAhFD,EACIO,UACH,IAAAN,GAAY,QAAZC,EAFDD,EAEG3F,kBAAU,IAAA4F,GAFbA,EAEerH,KAAI,CAACsB,EAAgBE,KAChCW,EAASqF,GAAY3G,YAAY4G,GAActG,UAAUuG,GAAkBjG,WACvED,GACFG,SAAWG,CAAS,IAE1BrC,EAA8B0C,EAClC,CAgPgFwF,CACIZ,EACA5G,EACAS,EACAM,EACH,EAELS,QACIoF,KAGRxD,EAAAA,EAAAA,KAAA,SAAON,UAAU,kCAAiCK,SAC7CtC,EAAc4G,WAIvBrE,EAAAA,EAAAA,KAAA,OAAKN,UAAU,0DAAyDK,SACtD,OAAbtC,QAAa,IAAbA,GAAyB,QAAZ8F,EAAb9F,EAAeS,kBAAU,IAAAqF,OAAZ,EAAbA,EAA2B9G,KACxB,CACIyB,EACAD,KAGIwB,EAAAA,EAAAA,MAAA,OAIIC,UAAU,gDAA+CK,SAAA,EAEzDC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAc,CACXzE,QACc,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYE,QAEhBmE,SACIR,IAhYvEuC,EAACL,EAAYC,EAAcC,EAAkBI,KAAsB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACvFnH,OAAOC,OAAO1C,GACd,IAAI2C,EAAWtC,IAAAA,UAAYL,GACvBqG,EAE6C,QAFxCkC,EACG,OAAR5F,QAAQ,IAARA,GAAsB,QAAd6F,EAAR7F,EAAWqF,UAAW,IAAAQ,GAAa,QAAbC,EAAtBD,EAAwBnH,mBAAW,IAAAoH,GAAgB,QAAhBC,EAAnCD,EAAsCR,UAAa,IAAAS,GAAW,QAAXC,EAAnDD,EAAqD/G,iBAAS,IAAAgH,GAAoB,QAApBC,EAA9DD,EAAiET,UAAiB,IAAAU,GAClE,QADkEC,EAAlFD,EACM3G,kBAAU,IAAA4G,GAAoB,QAApBC,EADhBD,EACmBP,UAAiB,IAAAQ,OAD5B,EAARA,EACsC3G,eAAO,IAAAoG,GAAAA,EAE7CsB,EAAY,KACZC,EAAc,KACdC,EAAY,KACZC,EAAW,KAEP,OAARrH,QAAQ,IAARA,GAAsB,QAAdoG,EAARpG,EAAWqF,UAAW,IAAAe,GAAa,QAAbC,EAAtBD,EAAwB1H,mBAAW,IAAA2H,GAAgB,QAAhBC,EAAnCD,EAAsCf,UAAa,IAAAgB,GAAW,QAAXC,EAAnDD,EAAqDtH,iBAAS,IAAAuH,GAE7D,QAF6DC,EAA9DD,EACIhB,UACH,IAAAiB,GAAY,QAAZC,EAFDD,EAEGlH,kBAAU,IAAAmH,GAFbA,EAEe5I,KAAI,CAACK,EAAMoJ,KAAW,IAADC,EAAAC,EAAAC,EAAAC,GACxB,OAAJxJ,QAAI,IAAJA,GAAgB,QAAZqJ,EAAJrJ,EAAM8F,kBAAU,IAAAuD,OAAZ,EAAJA,EAAkBI,gBAAiBC,EAAAA,GAAAA,OAAsBV,EAAYI,IACjE,OAAJpJ,QAAI,IAAJA,GAAgB,QAAZsJ,EAAJtJ,EAAM8F,kBAAU,IAAAwD,OAAZ,EAAJA,EAAkBG,gBAAiBC,EAAAA,GAAAA,OAAsBR,EAAYE,IACjE,OAAJpJ,QAAI,IAAJA,GAAgB,QAAZuJ,EAAJvJ,EAAM8F,kBAAU,IAAAyD,OAAZ,EAAJA,EAAkBE,gBAAiBC,EAAAA,GAAAA,SAAwBT,EAAcG,IACrE,OAAJpJ,QAAI,IAAJA,GAAgB,QAAZwJ,EAAJxJ,EAAM8F,kBAAU,IAAA0D,OAAZ,EAAJA,EAAkBC,gBAAiBC,EAAAA,GAAAA,MAAqBP,EAAWC,EAAK,IAGhF,MAAMtD,EACM,OAARhE,QAAQ,IAARA,GAAsB,QAAd0G,EAAR1G,EAAWqF,UAAW,IAAAqB,GAAa,QAAbC,EAAtBD,EAAwBhI,mBAAW,IAAAiI,GAAgB,QAAhBC,EAAnCD,EAAsCrB,UAAa,IAAAsB,GAAW,QAAXC,EAAnDD,EAAqD5H,iBAAS,IAAA6H,GAE7D,QAF6DC,EAA9DD,EACItB,UACH,IAAAuB,GAAY,QAAZC,EAFDD,EAEGxH,kBAAU,IAAAyH,GAAoB,QAApBC,EAFbD,EAEgBpB,UAAiB,IAAAqB,GAAY,QAAZC,EAFjCD,EAEmChD,kBAAU,IAAAiD,OAFrC,EAARA,EAE+CU,cAE/CN,GAAY,GAAKrD,GAAc4D,EAAAA,GAAAA,MAC/B5H,EAASqF,GAAY3G,YAAY4G,GAActG,UAAUuG,GAAkBjG,WACvE+H,GACF7H,SAAUkE,EACRwD,GAAa,IAAMxD,IACnB1D,EAASqF,GAAY3G,YAAY4G,GAActG,UAC3CuG,GACFjG,WAAW4H,GAAW1H,SAAU,IAGtC4H,GAAa,GAAKpD,GAAc4D,EAAAA,GAAAA,OAChC5H,EAASqF,GAAY3G,YAAY4G,GAActG,UAAUuG,GAAkBjG,WACvE8H,GACF5H,SAAUkE,EACRwD,GAAa,IAAMxD,IACnB1D,EAASqF,GAAY3G,YAAY4G,GAActG,UAC3CuG,GACFjG,WAAW4H,GAAW1H,SAAU,IAGtC2H,GAAe,GAAKnD,GAAc4D,EAAAA,GAAAA,SAClC5H,EAASqF,GAAY3G,YAAY4G,GAActG,UAAUuG,GAAkBjG,WACvE6H,GACF3H,SAAUkE,EACRwD,GAAa,IAAMxD,IACnB1D,EAASqF,GAAY3G,YAAY4G,GAActG,UAC3CuG,GACFjG,WAAW4H,GAAW1H,SAAU,IAGtC0H,GAAa,GAAKlD,GAAc4D,EAAAA,GAAAA,OAC5BlE,IACI2D,GAAY,IACZrH,EAASqF,GAAY3G,YAAY4G,GAActG,UAC3CuG,GACFjG,WAAW+H,GAAU7H,SAAU,GAEjC4H,GAAa,IACbpH,EAASqF,GAAY3G,YAAY4G,GAActG,UAC3CuG,GACFjG,WAAW8H,GAAW5H,SAAU,GAElC2H,GAAe,IACfnH,EAASqF,GAAY3G,YAAY4G,GAActG,UAC3CuG,GACFjG,WAAW6H,GAAa3H,SAAU,IAG5CQ,EAASqF,GAAY3G,YAAY4G,GAActG,UAAUuG,GAAkBjG,WACvE4H,GACF1H,SAAUkE,GAIX,CACGkE,EAAAA,GAAAA,IACAA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,OACAA,EAAAA,GAAAA,MACFC,SAAS7D,KAEXhE,EAASqF,GAAY3G,YAAY4G,GAActG,UAAUuG,GAAkBjG,WACvEqG,GACFnG,SAAUkE,GAEhBpG,EAA8B0C,EAAS,EAuSqD0F,CACI1H,EACAS,EACAM,EACAM,EACH,KAGT+B,EAAAA,EAAAA,KAAA,SAAON,UAAU,kCAAiCK,SAEhC,OAAV7B,QAAU,IAAVA,OAAU,EAAVA,EAAY0E,eArBhB3E,WA+B5B+B,EAAAA,EAAAA,KAAA,OAAKN,UAAU,8BA/DV/B,EAiEH,OAjGhBN,EAqGJ,OAtIMT,EAyItB,UAIpB,E,mECped,MAuKA,EAvK8B7B,IAMvB,IANwB,aAC3BE,EAAY,gBACZD,EAAe,oBACf0L,EAAmB,iBACnBC,EAAgB,iBAChBC,GACH7L,EACG,MAAM8L,GAAWC,EAAAA,EAAAA,MAEjB,OACI9G,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,OAAKN,UAAS,cAAiBC,MAAO,CAACoH,SAAU,WAAYlH,SAAU,QAAQE,UAE3EC,EAAAA,EAAAA,KAAA,OAAKN,UAAU,iBAAgBK,UAC3BC,EAAAA,EAAAA,KAAA,OAAKjD,GAAG,OAAO2C,UAAU,iCAAgCK,UACrDN,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOK,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAON,UAAWsH,EAAAA,GAAajH,UAC3BN,EAAAA,EAAAA,MAAA,MACIC,UAAU,+BACVC,MAAO,CACHE,SAAU,OACVC,WAAY,MACZF,WAAY,WACdG,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAIN,UAAU,2BAA0BK,SAAC,gBACzCC,EAAAA,EAAAA,KAAA,MAAIN,UAAU,cAAaK,SAAC,cAC5BC,EAAAA,EAAAA,KAAA,MAAIN,UAAU,cAAaK,SAAC,aAC5BC,EAAAA,EAAAA,KAAA,MAAIN,UAAU,sBAGtBM,EAAAA,EAAAA,KAAA,SAAON,UAAWsH,EAAAA,GAAajH,UACP,OAAnB2G,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBlK,QAAS,GAC3BwD,EAAAA,EAAAA,KAAAiH,EAAAA,SAAA,CAAAlH,SACwB,OAAnB2G,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBjK,KAAI,CAACK,EAAMoJ,KAAK,IAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAClClI,EAAAA,EAAAA,MAAA,MAEIC,UAAS,YACTC,MAAO,CACHE,SAAU,OACVD,WAAY,UACZE,WAAY,OACdC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAIN,UAAU,qBAAoBK,SACzB,OAAJjD,QAAI,IAAJA,OAAI,EAAJA,EAAMd,cAGXgE,EAAAA,EAAAA,KAAA,MAAIN,UAAU,sBAAqBK,UAC/BN,EAAAA,EAAAA,MAAA,QAAMC,UAAU,GAAEK,SAAA,EACT,OAAJjD,QAAI,IAAJA,GAAc,QAAVoK,EAAJpK,EAAMsG,gBAAQ,IAAA8D,GAAe,QAAfC,EAAdD,EAAgBU,qBAAa,IAAAT,OAAzB,EAAJA,EAA+B3K,QAC5B,IACAiD,EAAAA,EAAAA,MAAAwH,EAAAA,SAAA,CAAAlH,SAAA,EACIC,EAAAA,EAAAA,KAAA,QAAML,MAAO,CAACkI,MAAO,SAAS9H,SAAC,mBAEvB,IACH,OAAJjD,QAAI,IAAJA,GAAc,QAAVsK,EAAJtK,EAAMsG,gBAAQ,IAAAgE,GAAe,QAAfC,EAAdD,EAAgBQ,qBAAa,IAAAP,OAAzB,EAAJA,EACK5K,KACGqL,IAAK,IAAAC,EAAA,OACG,OAALD,QAAK,IAALA,GAAsB,QAAjBC,EAALD,EAAOE,uBAAe,IAAAD,OAAjB,EAALA,EACM3E,QAAQ,IAErB6E,KAAK,UAGb,OAAJnL,QAAI,IAAJA,GAAc,QAAVwK,EAAJxK,EAAMsG,gBAAQ,IAAAkE,GAAU,QAAVC,EAAdD,EAAgBY,gBAAQ,IAAAX,OAApB,EAAJA,EAA0B/K,QAAS,IAChCiD,EAAAA,EAAAA,MAAAwH,EAAAA,SAAA,CAAAlH,SAAA,EACS,OAAJjD,QAAI,IAAJA,GAAc,QAAV0K,EAAJ1K,EAAMsG,gBAAQ,IAAAoE,GAAe,QAAfC,EAAdD,EAAgBI,qBAAa,IAAAH,OAAzB,EAAJA,EACKjL,QAAS,GACXwD,EAAAA,EAAAA,KAAA,SACA,MACJA,EAAAA,EAAAA,KAAA,QAAML,MAAO,CAACkI,MAAO,SAAS9H,SAAC,cAEvB,IACH,OAAJjD,QAAI,IAAJA,GAAc,QAAV4K,EAAJ5K,EAAMsG,gBAAQ,IAAAsE,GAAU,QAAVC,EAAdD,EAAgBQ,gBAAQ,IAAAP,OAApB,EAAJA,EACKlL,KACGqL,IAAK,IAAAK,EAAA,OACG,OAALL,QAAK,IAALA,GAAsB,QAAjBK,EAALL,EAAOE,uBAAe,IAAAG,OAAjB,EAALA,EACM/E,QAAQ,IAErB6E,KAAK,eAM1BjI,EAAAA,EAAAA,KAAA,MAAIN,UAAU,iCAAgCK,UAC1CC,EAAAA,EAAAA,KAAA,OACIN,UAAU,uEACVc,QAASA,IACLqG,EAAS,4BAA6B,CAClCuB,MAAO,CACHrL,GAAQ,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM6E,SACV0G,KAAU,OAAJvL,QAAI,IAAJA,OAAI,EAAJA,EAAMd,cAGvB+D,SAEI,OAAJjD,QAAI,IAAJA,OAAI,EAAJA,EAAMwL,mBAIftI,EAAAA,EAAAA,KAAA,MAAIN,UAAU,MAAKK,UACfN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCK,SAAA,EAC5CC,EAAAA,EAAAA,KAACuI,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,cAAAA,YAAAA,MAAAA,KAEH1I,UAEDC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAc,CACXlI,QAASA,IACLoG,EACQ,OAAJ9J,QAAI,IAAJA,OAAI,EAAJA,EAAM6E,SACF,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAMd,iBAKjB,OAAJc,QAAI,IAAJA,OAAI,EAAJA,EAAMwL,gBAAiB,GACpBtI,EAAAA,EAAAA,KAACuI,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,cAAAA,YAAAA,MAAAA,OAGH1I,UAEDC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAY,CACTnI,QAAUuB,IACN4E,EACQ,OAAJ7J,QAAI,IAAJA,OAAI,EAAJA,EAAM6E,SACT,MAIb,YAnGPuE,EAsGJ,OAIblG,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MACI4I,QAAS,EACTjJ,MAAO,CACHkJ,UAAW,SACXjJ,WAAY,UACZE,WAAY,MACZD,SAAU,GACViJ,WAAY,GACZC,cAAe,IACjBhJ,SACL,mBAXG,uBAqB9B,E,8CC7Id,MAgLA,EAhL6BiJ,KACzB,MAAMC,GAAWC,EAAAA,EAAAA,OACVjO,EAAcD,IAAmBS,EAAAA,EAAAA,WAAS,GAC3C0N,GAAyB9N,EAAAA,EAAAA,IAAY+N,EAAAA,KACpC1C,EAAqB2C,IAA0B5N,EAAAA,EAAAA,UAAS0N,IACxDG,EAAaC,IAAkB9N,EAAAA,EAAAA,UAAS,KAE/CU,EAAAA,EAAAA,YAAU,KACNkN,EAAuBF,EAAuB,GAC/C,CAACA,IAEJ,MAAOhO,EAAeqO,IAAoB/N,EAAAA,EAAAA,UAAS,KAC5CP,EAAWuO,IAAgBhO,EAAAA,EAAAA,UAAS,QACpCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCiO,EAAaC,IAAkBlO,EAAAA,EAAAA,WAAS,IAE/CU,EAAAA,EAAAA,YAAU,KACDlB,IACDuO,EAAiB,MACjBI,IACJ,GACD,CAAC3O,IAEJ,MAAM2O,GAAoBtL,EAAAA,EAAAA,cAAY,KAC9BoI,EAAqB7K,GAAW,GAC/B8N,GAAe,GACpBV,GAASY,EAAAA,EAAAA,OAAgC5H,SAAQ,KACzCyE,EAAqB7K,GAAW,GAC/B8N,GAAe,EAAM,GAC5B,GACH,CAACV,KAEJ9M,EAAAA,EAAAA,YAAU,KACN8M,GAASa,EAAAA,EAAAA,MAAqC,GAC/C,IAEH,MAoCMC,GAAgBzL,EAAAA,EAAAA,aAClB0L,KAAUC,IACN,IAAIC,GAAaC,EAAAA,EAAAA,IAAoBzD,EAAqB,CAAC,cAAeuD,GAEtEZ,EADAY,EACuBC,GAAcA,EAEdxD,EAC3B,GACD,KACH,IAGJ,OACIjH,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAACoH,SAAU,YAAYhH,SAAA,EAC/BC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACC,QAASwJ,EAAavJ,MAAI,KACxCV,EAAAA,EAAAA,MAAA,OACIC,UAAU,YACVC,MAAO,CACHE,SAAU,OACVD,WAAY,UACZwK,aAAc,qBACdC,UACI,gFACNtK,SAAA,EAEA9E,IACEwE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEK,SAAA,EACnFC,EAAAA,EAAAA,KAAA,OACIL,MAAO,CAACyK,aAAc,QACtB1K,UAAU,GACV3C,GAAG,0BAAyBgD,UAE5BC,EAAAA,EAAAA,KAAA,QACIN,UAAU,oBACVC,MAAO,CAACyK,aAAc,QACtBE,aAAa,MAAKvK,UAGlBC,EAAAA,EAAAA,KAACoC,EAAAA,GAAW,CACRmI,KAAMC,EAAAA,GAAAA,OACNnC,KAAK,SACL9F,SA7CJR,IACxBgI,EAAchI,EAAES,OAAOF,OACvBiH,EAAexH,EAAES,OAAOF,MAAM,EA4CFA,MAAkB,OAAXgH,QAAW,IAAXA,EAAAA,EAAe,UAkBlC7J,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CK,SAAA,EACtDC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACC,QAAStE,EAAS6O,KAAM,MACtCzK,EAAAA,EAAAA,KAACuI,EAAAA,GAAY,CACTC,gBACIC,EAAAA,EAAAA,cAAAA,YAAAA,MAAAA,IACH1I,UAEDC,EAAAA,EAAAA,KAACI,EAAAA,GAAY,CACTmK,KAAK,SACLlK,WAAYC,EAAAA,GAAAA,QACZC,YAAY,aACZC,QAASA,KACLxF,GAAiBC,GACjBwO,EAAa,MAAM,aAO3ChK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMK,SAAA,EACf9E,IACE+E,EAAAA,EAAAA,KAAC0K,EAAqB,CAClBzP,aAAcA,EACdD,gBAAiBA,EACjB0L,oBAAqBA,EACrBC,iBA1HE5J,IACtB4N,EAAAA,EAAAA,KAAkB,qCAAqC,KACnDhB,GAAe,IACfiB,EAAAA,EAAAA,KAAwB7N,GACnB8E,MAAK,KACF+H,IACAlI,EAAAA,EAAAA,QAAoB,gBAAgB,IAEvCO,SAAQ,KACL0H,GAAe,EAAM,GACvB,GACR,EAgHkB/C,iBAAkBA,CAAC7J,EAAIjB,IA9GtB8K,EAAC7J,EAAIjB,KAC1B2N,EAAa,UACbE,GAAe,GACf3O,GAAiBC,GACjBuO,EAAiB,CACbxN,WAAYF,EACZ6F,SAAU5E,KAEd8N,EAAAA,EAAAA,IAAqB9N,GAChB8E,MAAMiJ,IACHtB,GAAkBS,IAAG,IACdA,EACH1N,KAAS,OAAHuO,QAAG,IAAHA,OAAG,EAAHA,EAAKvO,QACZ,IAEN0F,SAAQ,KACL0H,GAAe,EAAM,GACvB,EA6FmD/C,CAAiB7J,EAAIjB,KAGjEb,IACG+E,EAAAA,EAAAA,KAAC+K,EAAY,CACT9P,aAAcA,EACdD,gBAAiBA,EACjBE,UAAWA,EACXC,cAAeA,YAK7B,C,2FC9LP,MAAM0O,EAA+BA,IAAOZ,GAC/C,IAAI+B,SAAQ,CAACC,EAASC,MAClBC,EAAAA,EAAAA,OACKtJ,MAAMiJ,KACHM,EAAAA,EAAAA,IAAkBnC,EAAUoC,EAAAA,GAA8B,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKvO,MAC5D0O,EAAW,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKvO,KAAK,IAErBuF,MAAMoJ,EAAO,IAIbI,EAAkCA,IAAOrC,GAClD,IAAI+B,SAAQ,CAACC,EAASC,MAClBK,EAAAA,EAAAA,OACK1J,MAAMiJ,KACHM,EAAAA,EAAAA,IAAkBnC,EAAUuC,EAAAA,GAAiC,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAKvO,MAC/D0O,EAAW,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKvO,KAAK,IAErBuF,MAAMoJ,EAAO,IAIbpB,EAAqCA,IAAOb,GACrD,IAAI+B,SAAQ,CAACC,EAASC,MAClBO,EAAAA,EAAAA,OACK5J,MAAMiJ,KACHM,EAAAA,EAAAA,IAAkBnC,EAAUyC,EAAAA,GAAqC,OAAHZ,QAAG,IAAHA,OAAG,EAAHA,EAAKvO,MACnE0O,EAAQH,EAAI,IAEfhJ,MAAMoJ,EAAO,G,sDC1CnB,MAAM9B,EAAmChB,IAAK,IAAAuD,EAAA,OAAU,OAALvD,QAAK,IAALA,GAAkB,QAAbuD,EAALvD,EAAOwD,mBAAW,IAAAD,OAAb,EAALA,EAAoBjF,mBAAmB,EACpFmF,EAAsCzD,IAAK,IAAA0D,EAAA,OAC/C,OAAL1D,QAAK,IAALA,GAAkB,QAAb0D,EAAL1D,EAAOwD,mBAAW,IAAAE,OAAb,EAALA,EAAoBC,sBAAsB,EACjCzQ,EAAyC8M,IAAK,IAAA4D,EAAA,OAClD,OAAL5D,QAAK,IAALA,GAAkB,QAAb4D,EAAL5D,EAAOwD,mBAAW,IAAAI,OAAb,EAALA,EAAoBC,yBAAyB,C","sources":["app/modules/admin/permissions/tabs/permissionsGroup/ManageGroups.js","app/modules/admin/permissions/tabs/permissionsGroup/PermissionsGroupTable.js","app/modules/admin/permissions/tabs/permissionsGroup/PermissionsGroupPage.js","redux/actions/PermissionsActions.js","redux/selectors/PermissionsSelectors.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport {\n    addAdminGroupPermissionService,\n    updateAdminGroupPermissionService,\n} from '../../../../../../services/Services'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {useSelector} from 'react-redux'\nimport {getPermissionsGroupPolicyListSelector} from '../../../../../../redux/selectors/PermissionsSelectors'\nimport _ from 'lodash'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../customComponents/customIcons/CustomIcons'\nimport {PERMISSION_TYPE} from '../../../../../../accessRights/AccessRightsConstants'\n\nconst ManageGroups = ({setManageGroups, manageGroups, addUpdate, selectedGroup}) => {\n    const groupPolicyList = useSelector(getPermissionsGroupPolicyListSelector)\n    const [currentSelectedRole, setCurrentSelectedRole] = useState('')\n    const [currentSelectedModule, setCurrentSelectedModule] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const [groupName, setGroupName] = useState(selectedGroup?.group_name)\n    const [permissionsGroupPolicyList, setPermissionsGroupPolicyList] = useState(groupPolicyList)\n\n    useEffect(() => {\n        let gPolicyList = _.cloneDeep(permissionsGroupPolicyList)\n        if (selectedGroup?.data?.length > 0) {\n            selectedGroup?.data.map((roleItem) => {\n                const roleIndex =\n                    gPolicyList?.length > 0\n                        ? gPolicyList.findIndex((item) => item?.id == roleItem?.id)\n                        : -1\n                if (roleIndex > -1 && roleItem?.groupPolicy?.length > 0) {\n                    roleItem?.groupPolicy?.map((moduleItem) => {\n                        const moduleIndex = gPolicyList?.[roleIndex]?.grouppolicy.findIndex(\n                            (item) => item?.id == moduleItem?.id\n                        )\n                        if (moduleIndex > -1 && moduleItem?.policyTab?.length > 0) {\n                            moduleItem?.policyTab?.map((subModuleItem) => {\n                                const subModuleIndex = gPolicyList[roleIndex].grouppolicy[\n                                    moduleIndex\n                                ].policytab.findIndex((item) => item?.id == subModuleItem?.id)\n                                if (subModuleIndex > -1 && subModuleItem?.submodule?.length > 0) {\n                                    subModuleItem?.submodule?.map((permissionItem) => {\n                                        const permissionIndex = gPolicyList[roleIndex].grouppolicy[\n                                            moduleIndex\n                                        ].policytab[subModuleIndex].permission?.findIndex(\n                                            (item) => item?.id == permissionItem?.id\n                                        )\n                                        const permissionValue = permissionIndex > -1 ? true : false\n\n                                        gPolicyList[roleIndex].grouppolicy[moduleIndex].policytab[\n                                            subModuleIndex\n                                        ].permission[permissionIndex].checked = permissionValue\n                                    })\n                                }\n                            })\n                        }\n                    })\n                }\n            })\n            setPermissionsGroupPolicyList([...gPolicyList])\n        }\n    }, [selectedGroup?.data])\n\n    const updatePolicyList = (role_index, module_index, sub_module_index, permission_index) => {\n        Object.freeze(permissionsGroupPolicyList)\n        let tempData = _.cloneDeep(permissionsGroupPolicyList)\n        let value =\n            tempData?.[role_index]?.grouppolicy?.[module_index]?.policytab?.[sub_module_index]\n                ?.permission?.[permission_index]?.checked ?? false\n\n        let viewIndex = null,\n            deleteIndex = null,\n            editIndex = null,\n            addIndex = null\n\n        tempData?.[role_index]?.grouppolicy?.[module_index]?.policytab?.[\n            sub_module_index\n        ]?.permission?.map((item, index) => {\n            if (item?.guard_name?.toLowerCase() == PERMISSION_TYPE.view) viewIndex = index\n            if (item?.guard_name?.toLowerCase() == PERMISSION_TYPE.edit) editIndex = index\n            if (item?.guard_name?.toLowerCase() == PERMISSION_TYPE.delete) deleteIndex = index\n            if (item?.guard_name?.toLowerCase() == PERMISSION_TYPE.add) addIndex = index\n        })\n\n        const guard_name =\n            tempData?.[role_index]?.grouppolicy?.[module_index]?.policytab?.[\n                sub_module_index\n            ]?.permission?.[permission_index]?.guard_name?.toLowerCase()\n\n        if (addIndex >= 0 && guard_name == PERMISSION_TYPE.add) {\n            tempData[role_index].grouppolicy[module_index].policytab[sub_module_index].permission[\n                addIndex\n            ].checked = value ? false : true\n            if (viewIndex >= 0 && !value) {\n                tempData[role_index].grouppolicy[module_index].policytab[\n                    sub_module_index\n                ].permission[viewIndex].checked = true\n            }\n        }\n        if (editIndex >= 0 && guard_name == PERMISSION_TYPE.edit) {\n            tempData[role_index].grouppolicy[module_index].policytab[sub_module_index].permission[\n                editIndex\n            ].checked = value ? false : true\n            if (viewIndex >= 0 && !value) {\n                tempData[role_index].grouppolicy[module_index].policytab[\n                    sub_module_index\n                ].permission[viewIndex].checked = true\n            }\n        }\n        if (deleteIndex >= 0 && guard_name == PERMISSION_TYPE.delete) {\n            tempData[role_index].grouppolicy[module_index].policytab[sub_module_index].permission[\n                deleteIndex\n            ].checked = value ? false : true\n            if (viewIndex >= 0 && !value) {\n                tempData[role_index].grouppolicy[module_index].policytab[\n                    sub_module_index\n                ].permission[viewIndex].checked = true\n            }\n        }\n        if (viewIndex >= 0 && guard_name == PERMISSION_TYPE.view) {\n            if (value) {\n                if (addIndex >= 0) {\n                    tempData[role_index].grouppolicy[module_index].policytab[\n                        sub_module_index\n                    ].permission[addIndex].checked = false\n                }\n                if (editIndex >= 0) {\n                    tempData[role_index].grouppolicy[module_index].policytab[\n                        sub_module_index\n                    ].permission[editIndex].checked = false\n                }\n                if (deleteIndex >= 0) {\n                    tempData[role_index].grouppolicy[module_index].policytab[\n                        sub_module_index\n                    ].permission[deleteIndex].checked = false\n                }\n            }\n            tempData[role_index].grouppolicy[module_index].policytab[sub_module_index].permission[\n                viewIndex\n            ].checked = value ? false : true\n        }\n\n        if (\n            ![\n                PERMISSION_TYPE.add,\n                PERMISSION_TYPE.view,\n                PERMISSION_TYPE.delete,\n                PERMISSION_TYPE.edit,\n            ].includes(guard_name)\n        ) {\n            tempData[role_index].grouppolicy[module_index].policytab[sub_module_index].permission[\n                permission_index\n            ].checked = value ? false : true\n        }\n        setPermissionsGroupPolicyList(tempData)\n    }\n\n    const updateSubModuleToggle = (\n        isChecked = false,\n        role_index,\n        module_index,\n        sub_module_index\n    ) => {\n        Object.freeze(permissionsGroupPolicyList)\n        let tempData = _.cloneDeep(permissionsGroupPolicyList)\n        permissionsGroupPolicyList?.[role_index]?.grouppolicy?.[module_index]?.policytab?.[\n            sub_module_index\n        ]?.permission?.map((permissionItem, permissionIndex) => {\n            tempData[role_index].grouppolicy[module_index].policytab[sub_module_index].permission[\n                permissionIndex\n            ].checked = !isChecked\n        })\n        setPermissionsGroupPolicyList(tempData)\n    }\n\n    const updateRoleToggle = useCallback(\n        (isChecked, roleIndex) => {\n            Object.freeze(permissionsGroupPolicyList)\n            let tempData = _.cloneDeep(permissionsGroupPolicyList)\n            permissionsGroupPolicyList?.[roleIndex]?.grouppolicy?.map((moduleItem, moduleIndex) => {\n                moduleItem?.policytab?.map((subModuleItem, subModuleIndex) => {\n                    subModuleItem?.permission?.map((permissionItem, permissionIndex) => {\n                        tempData[roleIndex].grouppolicy[moduleIndex].policytab[\n                            subModuleIndex\n                        ].permission[permissionIndex].checked = !isChecked\n                    })\n                })\n            })\n            setPermissionsGroupPolicyList([...tempData])\n        },\n        [permissionsGroupPolicyList]\n    )\n\n    const handleRoleToggle = (roleId) => {\n        setCurrentSelectedRole(roleId == currentSelectedRole ? '' : roleId)\n    }\n\n    const handleModuleToggle = (moduleId) => {\n        setCurrentSelectedModule(moduleId == currentSelectedModule ? '' : moduleId)\n    }\n\n    const onSavePress = () => {\n        let allPermission = []\n        const tempData = permissionsGroupPolicyList.map((roleItem, roleIndex) => {\n            return {\n                role_id: roleItem.id,\n                group_policy: roleItem.grouppolicy.map((policyItem, moduleIndex) => {\n                    return {\n                        policy_id: policyItem?.id,\n                        policy_tabs: policyItem.policytab.map((policyTabItem) => {\n                            const foundPermission = policyTabItem?.permission\n                                ?.filter((permissionItem) => permissionItem?.checked)\n                                ?.map((permissionItem) => permissionItem?.id)\n                            allPermission = [...allPermission, ...foundPermission]\n                            return {\n                                policy_tab_id: policyTabItem?.id,\n                                permission_id: foundPermission,\n                            }\n                        }),\n                    }\n                }),\n            }\n        })\n        let body = {\n            group_name: groupName,\n            group_data: tempData,\n        }\n\n        if (!groupName) return CustomToast.error('Enter Group Name')\n        if (allPermission?.length <= 0) return CustomToast.error('Select atleast 1 permission')\n\n        setLoading(true)\n        if (selectedGroup?.group_id) {\n            body.group_id = selectedGroup?.group_id\n            updateAdminGroupPermissionService(body)\n                .then(() => {\n                    setManageGroups(!manageGroups)\n                    CustomToast.success('Group updated')\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        } else {\n            addAdminGroupPermissionService(body)\n                .then(() => {\n                    setManageGroups(!manageGroups)\n                    CustomToast.success('Group created')\n                })\n                .catch((error) => {\n                    CustomToast.error(getErrorMessageFromResponse(error))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n\n    const getIsRoleChecked = useCallback((roleItem) => {\n        const data = []\n        roleItem?.grouppolicy?.length > 0 &&\n            roleItem.grouppolicy.map(\n                (moduleItem) =>\n                    moduleItem.policytab?.length > 0 &&\n                    moduleItem.policytab.map(\n                        (subModuleItem) =>\n                            subModuleItem?.permission?.length > 0 &&\n                            subModuleItem.permission.map((permissionItem) =>\n                                data.push(permissionItem?.checked ?? false)\n                            )\n                    )\n            )\n        return data?.every((item) => item)\n    }, [])\n    const getIsSubModuleChecked = useCallback((subModuleItem) => {\n        const data = []\n        subModuleItem?.permission?.length > 0 &&\n            subModuleItem.permission.map((permissionItem) =>\n                data.push(permissionItem?.checked ?? false)\n            )\n        return data?.every((item) => item)\n    }, [])\n\n    return (\n        <div className='card ' style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}>\n            <CustomLoader visible={loading} full />\n            {/* header */}\n            <div className='p-5 d-flex justify-content-between align-items-center flex-wrap'>\n                <div className='text-cmGrey900' style={{fontSize: ' 17px', fontFamily: 'Manrope'}}>\n                    {addUpdate} Group\n                </div>\n                {/* Buttons */}\n                <div className='d-flex align-items-center gap-10'>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.error}\n                        buttonLabel='Cancel'\n                        onClick={() => setManageGroups(!manageGroups)}\n                    />\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel='Save'\n                        onClick={onSavePress}\n                    />\n                </div>\n            </div>\n            {/* Line */}\n            <div className='border border-cmGrey300'></div>\n            {/* Body Starts */}\n            <div className='p-sm-10 p-5'>\n                {/* Group name */}\n                <div className='mb-10 d-flex align-items-center gap-5'>\n                    <label\n                        className='form-label text-cmGrey900 required'\n                        style={{fontWeight: '700'}}\n                    >\n                        Group Name\n                    </label>\n                    <div>\n                        <CustomInput\n                            placeholder=''\n                            value={groupName}\n                            onChange={(e) => setGroupName(e.target.value)}\n                            rejex={/^[\\w\\-\\s]+$/}\n                        />\n                    </div>\n                </div>\n\n                <div\n                    className='text-cmGrey900 mb-10'\n                    style={{fontSize: '18px', fontFamily: 'Manrope', fontWeight: '600'}}\n                >\n                    Policies\n                </div>\n                <div className='border border-cmGrey300'></div>\n                {/* Administrator Policies */}\n                {permissionsGroupPolicyList?.length > 0 &&\n                    permissionsGroupPolicyList?.map((roleItem, roleIndex) => {\n                        const isRoleChecked = getIsRoleChecked(roleItem)\n                        return (\n                            <div className='py-10' key={roleIndex}>\n                                <div className='d-flex gap-3 align-items-center mb-5'>\n                                    <div\n                                        className='text-cmBlack'\n                                        style={{\n                                            fontWeight: 600,\n                                            fontSize: '16px',\n                                            fontFamily: 'Manrope',\n                                        }}\n                                    >\n                                        {roleItem?.guard_name} Policies\n                                    </div>\n                                    <div className='form-check form-check-custom form-check-solid'>\n                                        <CustomCheckbox\n                                            checked={isRoleChecked}\n                                            onChange={() => {\n                                                updateRoleToggle(isRoleChecked, roleIndex)\n                                            }}\n                                        />\n                                    </div>\n\n                                    <CustomArrow\n                                        onClick={() => handleRoleToggle(roleItem?.id)}\n                                        arrowDirection={\n                                            currentSelectedRole == roleItem?.id\n                                                ? ARROW_DIRECTION.up\n                                                : ARROW_DIRECTION.down\n                                        }\n                                    />\n                                </div>\n                                {roleItem?.id == currentSelectedRole &&\n                                    roleItem?.grouppolicy?.map((moduleItem, moduleIndex) => {\n                                        return (\n                                            <div key={moduleIndex}>\n                                                <div className='d-flex align-items-center'>\n                                                    <div\n                                                        className='text-cmBlack w-sm-25 mb-2'\n                                                        style={{\n                                                            fontWeight: 600,\n                                                            fontSize: '16px',\n                                                            fontFamily: 'Manrope',\n                                                        }}\n                                                    >\n                                                        {moduleItem?.policies}\n                                                    </div>\n\n                                                    <CustomArrow\n                                                        arrowDirection={\n                                                            currentSelectedModule == moduleItem?.id\n                                                                ? ARROW_DIRECTION.up\n                                                                : ARROW_DIRECTION.down\n                                                        }\n                                                        onClick={() =>\n                                                            handleModuleToggle(moduleItem?.id)\n                                                        }\n                                                    />\n                                                </div>\n                                                {moduleItem?.id == currentSelectedModule &&\n                                                    moduleItem?.policytab?.map(\n                                                        (subModuleItem, subModuleIndex) => {\n                                                            const isSubModuleChecked =\n                                                                getIsSubModuleChecked(subModuleItem)\n                                                            return (\n                                                                <div\n                                                                    className=''\n                                                                    key={subModuleIndex}\n                                                                >\n                                                                    <div className='my-5'>\n                                                                        {/* Setup */}\n                                                                        <div className='form-check form-check-custom form-check-solid'>\n                                                                            <CustomCheckbox\n                                                                                onChange={() => {\n                                                                                    updateSubModuleToggle(\n                                                                                        isSubModuleChecked,\n                                                                                        roleIndex,\n                                                                                        moduleIndex,\n                                                                                        subModuleIndex\n                                                                                    )\n                                                                                }}\n                                                                                checked={\n                                                                                    isSubModuleChecked\n                                                                                }\n                                                                            />\n                                                                            <label className='form-check-label text-cmGrey900'>\n                                                                                {subModuleItem.tabs}\n                                                                            </label>\n                                                                        </div>\n\n                                                                        <div className='ps-sm-20 ps-10 d-sm-flex align-items-center gap-20 mt-5'>\n                                                                            {subModuleItem?.permission?.map(\n                                                                                (\n                                                                                    permission,\n                                                                                    permissionIndex\n                                                                                ) => {\n                                                                                    return (\n                                                                                        <div\n                                                                                            key={\n                                                                                                permissionIndex\n                                                                                            }\n                                                                                            className='form-check form-check-custom form-check-solid'\n                                                                                        >\n                                                                                            <CustomCheckbox\n                                                                                                checked={\n                                                                                                    permission?.checked\n                                                                                                }\n                                                                                                onChange={(\n                                                                                                    e\n                                                                                                ) => {\n                                                                                                    updatePolicyList(\n                                                                                                        roleIndex,\n                                                                                                        moduleIndex,\n                                                                                                        subModuleIndex,\n                                                                                                        permissionIndex\n                                                                                                    )\n                                                                                                }}\n                                                                                            />\n                                                                                            <label className='form-check-label text-cmGrey700'>\n                                                                                                {\n                                                                                                    permission?.guard_name\n                                                                                                }\n                                                                                            </label>\n                                                                                        </div>\n                                                                                    )\n                                                                                }\n                                                                            )}\n                                                                        </div>\n                                                                    </div>\n                                                                    {/* Line */}\n                                                                    <div className='border border-cmGrey300'></div>\n                                                                    {/* Settings */}\n                                                                </div>\n                                                            )\n                                                        }\n                                                    )}\n                                            </div>\n                                        )\n                                    })}\n                            </div>\n                        )\n                    })}\n            </div>\n        </div>\n    )\n}\n\nexport default ManageGroups\n","import React from 'react'\nimport Edit from '../../../sequidocs/Icon/edit.png'\nimport AccessRights from '../../../../../../accessRights/AccessRights'\nimport {useNavigate} from 'react-router-dom'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport {TABLE_BORDER} from '../../../../../../helpers/CommonHelpers'\n\nconst PermissionsGroupTable = ({\n    manageGroups,\n    setManageGroups,\n    permissionGroupList,\n    deletePermission,\n    updatePermission,\n}) => {\n    const naviagte = useNavigate()\n\n    return (\n        <div>\n            <div className={` bg-cmwhite`} style={{position: 'relative', fontSize: '14px'}}>\n                {/* <CustomLoader visible={loading} full /> */}\n                <div className='py-0 px-0 mx-0'>\n                    <div id='get1' className='table-responsive overflow-auto'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className=' bg-cmGrey300 text-cmGrey900'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='w-200px p-5 text-nowrap '>Group Name</th>\n                                    <th className='w-auto p-5 '>Policies</th>\n                                    <th className='w-auto p-5 '>Members</th>\n                                    <th className='w-auto p-5 '></th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {permissionGroupList?.length > 0 ? (\n                                    <>\n                                        {permissionGroupList?.map((item, index) => (\n                                            <tr\n                                                key={index}\n                                                className={`stripRow `}\n                                                style={{\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '600',\n                                                }}\n                                            >\n                                                <td className='p-5 text-cmGrey800'>\n                                                    {item?.group_name}\n                                                </td>\n\n                                                <td className='p-5 text-cmGrey600 '>\n                                                    <span className=''>\n                                                        {item?.policies?.administrator?.length >\n                                                            0 && (\n                                                            <>\n                                                                <span style={{color: 'black'}}>\n                                                                    Administrator:\n                                                                </span>{' '}\n                                                                {item?.policies?.administrator\n                                                                    ?.map(\n                                                                        (item1) =>\n                                                                            item1?.grouppolicydata\n                                                                                ?.policies\n                                                                    )\n                                                                    .join(', ')}\n                                                            </>\n                                                        )}\n                                                        {item?.policies?.standard?.length > 0 && (\n                                                            <>\n                                                                {item?.policies?.administrator\n                                                                    ?.length > 0 ? (\n                                                                    <br />\n                                                                ) : null}\n                                                                <span style={{color: 'black'}}>\n                                                                    Standard:\n                                                                </span>{' '}\n                                                                {item?.policies?.standard\n                                                                    ?.map(\n                                                                        (item1) =>\n                                                                            item1?.grouppolicydata\n                                                                                ?.policies\n                                                                    )\n                                                                    .join(', ')}\n                                                            </>\n                                                        )}\n                                                    </span>\n                                                </td>\n\n                                                <td className='p-4 text-cmGrey600 text-center'>\n                                                    <div\n                                                        className='p-2 rounded bg-cmSuccess bg-opacity-10 text-cmSuccess cursor-pointer'\n                                                        onClick={() =>\n                                                            naviagte('/permissions/usersOfGroup', {\n                                                                state: {\n                                                                    id: item?.group_id,\n                                                                    name: item?.group_name,\n                                                                },\n                                                            })\n                                                        }\n                                                    >\n                                                        {item?.members_count}\n                                                    </div>\n                                                </td>\n\n                                                <td className='p-5'>\n                                                    <div className='d-flex align-items-center gap-5'>\n                                                        <AccessRights\n                                                            customCondition={\n                                                                allPermissionsAccess.administrator\n                                                                    .permissions.group.edit\n                                                            }\n                                                        >\n                                                            <CustomEditIcon\n                                                                onClick={() =>\n                                                                    updatePermission(\n                                                                        item?.group_id,\n                                                                        item?.group_name\n                                                                    )\n                                                                }\n                                                            />\n                                                        </AccessRights>\n                                                        {item?.members_count <= 0 ? (\n                                                            <AccessRights\n                                                                customCondition={\n                                                                    allPermissionsAccess\n                                                                        .administrator.permissions\n                                                                        .group.delete\n                                                                }\n                                                            >\n                                                                <CustomDelete\n                                                                    onClick={(e) => {\n                                                                        deletePermission(\n                                                                            item?.group_id\n                                                                        )\n                                                                    }}\n                                                                />\n                                                            </AccessRights>\n                                                        ) : null}\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr key='no-data'>\n                                        <td\n                                            colSpan={4}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PermissionsGroupTable\n","import React, {useState, useEffect, useCallback} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport ManageGroups from './ManageGroups'\nimport PermissionsGroupTable from './PermissionsGroupTable'\nimport {deletePermissionService, getPermissionService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {useDispatch} from 'react-redux'\nimport {\n    getPermissionGroupListAction,\n    getPermissionGroupPolicyListAction,\n} from '../../../../../../redux/actions/PermissionsActions'\nimport {useSelector} from 'react-redux'\nimport {getPermissionsGroupListSelector} from '../../../../../../redux/selectors/PermissionsSelectors'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../../accessRights/AccessRights'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport debounce from 'lodash.debounce'\nimport {getGlobalSearchData} from '../../../../../../helpers/CommonHelpers'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\n\nconst PermissionsGroupPage = () => {\n    const dispatch = useDispatch()\n    const [manageGroups, setManageGroups] = useState(false)\n    const allPermissionGroupList = useSelector(getPermissionsGroupListSelector)\n    const [permissionGroupList, setPermissionGroupList] = useState(allPermissionGroupList)\n    const [searchValue, setSearchValue] = useState('')\n\n    useEffect(() => {\n        setPermissionGroupList(allPermissionGroupList)\n    }, [allPermissionGroupList])\n\n    const [selectedGroup, setSelectedGroup] = useState([])\n    const [addUpdate, setAddUpdate] = useState('Add')\n    const [loading, setLoading] = useState(false)\n    const [fullLoading, setFullLoading] = useState(false)\n\n    useEffect(() => {\n        if (!manageGroups) {\n            setSelectedGroup(null)\n            getAdminGroupList()\n        }\n    }, [manageGroups])\n\n    const getAdminGroupList = useCallback(() => {\n        if (permissionGroupList) setLoading(true)\n        else setFullLoading(true)\n        dispatch(getPermissionGroupListAction()).finally(() => {\n            if (permissionGroupList) setLoading(false)\n            else setFullLoading(false)\n        })\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(getPermissionGroupPolicyListAction())\n    }, [])\n\n    const deletePermission = (id) => {\n        CustomDialog.warn('Are you sure you want to delete ?', () => {\n            setFullLoading(true)\n            deletePermissionService(id)\n                .then(() => {\n                    getAdminGroupList()\n                    CustomToast.success('Group Deleted')\n                })\n                .finally(() => {\n                    setFullLoading(false)\n                })\n        })\n    }\n    const updatePermission = (id, groupName) => {\n        setAddUpdate('Update')\n        setFullLoading(true)\n        setManageGroups(!manageGroups)\n        setSelectedGroup({\n            group_name: groupName,\n            group_id: id,\n        })\n        getPermissionService(id)\n            .then((res) => {\n                setSelectedGroup((val) => ({\n                    ...val,\n                    data: res?.data,\n                }))\n            })\n            .finally(() => {\n                setFullLoading(false)\n            })\n    }\n    const handleSearchChange = (e) => {\n        delaySaveToDb(e.target.value)\n        setSearchValue(e.target.value)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            let filterData = getGlobalSearchData(permissionGroupList, ['group_name'], val)\n            if (val) {\n                setPermissionGroupList(filterData && filterData)\n            } else {\n                setPermissionGroupList(permissionGroupList)\n            }\n        }, 500),\n        []\n    )\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader visible={fullLoading} full />\n            <div\n                className='bg-white '\n                style={{\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    borderRadius: '0px 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                {!manageGroups && (\n                    <div className='w-100 px-5 py-5 d-flex gap-5 mx-auto flex-wrap justify-content-between'>\n                        <div\n                            style={{borderRadius: '20px'}}\n                            className=''\n                            id='kt_chat_contacts_header'\n                        >\n                            <form\n                                className='position-relative'\n                                style={{borderRadius: '90px'}}\n                                autoComplete='off'\n                            >\n                                {/* Permissions Group Table Search Input */}\n                                <CustomInput\n                                    type={INPUT_TYPE.search}\n                                    name='search'\n                                    onChange={handleSearchChange}\n                                    value={searchValue ?? ''}\n                                />\n                                {/* <KTSVG\n                                    path='/media/icons/duotune/general/gen021.svg'\n                                    className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                                />\n\n                                <input\n                                    style={{borderRadius: '10px'}}\n                                    type='text'\n                                    className='form-control form-control-solid px-18 bg-cmGrey100'\n                                    placeholder='Search...'\n                                    name='search'\n                                    onChange={handleSearchChange}\n                                /> */}\n                            </form>\n                        </div>\n\n                        <div className='mx-auto mx-sm-0 d-flex flex-direction-row'>\n                            <CustomLoader visible={loading} size={50} />\n                            <AccessRights\n                                customCondition={\n                                    allPermissionsAccess.administrator.permissions.group.add\n                                }\n                            >\n                                <CustomButton\n                                    type='submit'\n                                    buttonType={BUTTON_TYPE.primary}\n                                    buttonLabel=' New Group'\n                                    onClick={() => {\n                                        setManageGroups(!manageGroups)\n                                        setAddUpdate('Add')\n                                    }}\n                                />\n                            </AccessRights>\n                        </div>\n                    </div>\n                )}\n                <div className='mb-5'>\n                    {!manageGroups && (\n                        <PermissionsGroupTable\n                            manageGroups={manageGroups}\n                            setManageGroups={setManageGroups}\n                            permissionGroupList={permissionGroupList}\n                            deletePermission={deletePermission}\n                            updatePermission={(id, groupName) => updatePermission(id, groupName)}\n                        />\n                    )}\n                    {manageGroups && (\n                        <ManageGroups\n                            manageGroups={manageGroups}\n                            setManageGroups={setManageGroups}\n                            addUpdate={addUpdate}\n                            selectedGroup={selectedGroup}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PermissionsGroupPage\n","import {sendDataToReducer} from '../../helpers/CommonHelpers'\nimport {\n    getPermissionGroupListService,\n    getPermissionPoliciesListService,\n    groupGroupPolicyListService,\n} from '../../services/Services'\nimport {\n    SET_PERMISSION_GROUP_LIST,\n    SET_PERMISSION_GROUP_POLICY_LIST,\n    SET_PERMISSION_POLICIES_LIST,\n} from '../reducers/PermissionsReducer'\n\n// Get Group List\nexport const getPermissionGroupListAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        getPermissionGroupListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_PERMISSION_GROUP_LIST, res?.data)\n                resolve(res?.data)\n            })\n            .catch(reject)\n    })\n\n// Get Policies List\nexport const getPermissionPoliciesListAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        getPermissionPoliciesListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_PERMISSION_POLICIES_LIST, res?.data)\n                resolve(res?.data)\n            })\n            .catch(reject)\n    })\n\n// Get PermissionPolicies List\nexport const getPermissionGroupPolicyListAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        groupGroupPolicyListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_PERMISSION_GROUP_POLICY_LIST, res?.data)\n                resolve(res)\n            })\n            .catch(reject)\n    })\n","export const getPermissionsGroupListSelector = (state) => state?.permissions?.permissionGroupList\nexport const getPermissionsPoliciesListSelector = (state) =>\n    state?.permissions?.permissionPoliciesList\nexport const getPermissionsGroupPolicyListSelector = (state) =>\n    state?.permissions?.permissionGroupPolicyList\n"],"names":["_ref","setManageGroups","manageGroups","addUpdate","selectedGroup","groupPolicyList","useSelector","getPermissionsGroupPolicyListSelector","currentSelectedRole","setCurrentSelectedRole","useState","currentSelectedModule","setCurrentSelectedModule","loading","setLoading","groupName","setGroupName","group_name","permissionsGroupPolicyList","setPermissionsGroupPolicyList","useEffect","_selectedGroup$data","gPolicyList","_","data","length","map","roleItem","_roleItem$groupPolicy","roleIndex","findIndex","item","id","_roleItem$groupPolicy2","groupPolicy","moduleItem","_gPolicyList$roleInde","_moduleItem$policyTab","moduleIndex","grouppolicy","_moduleItem$policyTab2","policyTab","subModuleItem","_subModuleItem$submod","subModuleIndex","policytab","_subModuleItem$submod2","submodule","permissionItem","_gPolicyList$roleInde2","permissionIndex","permission","permissionValue","checked","updateRoleToggle","useCallback","isChecked","_permissionsGroupPoli7","_permissionsGroupPoli8","Object","freeze","tempData","_moduleItem$policytab","_subModuleItem$permis","getIsRoleChecked","_roleItem$grouppolicy","_moduleItem$policytab2","_subModuleItem$permis2","_permissionItem$check","push","every","getIsSubModuleChecked","_subModuleItem$permis3","_permissionItem$check2","_jsxs","className","style","fontFamily","fontSize","fontWeight","children","_jsx","CustomLoader","visible","full","CustomButton","buttonType","BUTTON_TYPE","buttonLabel","onClick","onSavePress","_allPermission","allPermission","role_id","group_policy","policyItem","policy_id","policy_tabs","policyTabItem","_policyTabItem$permis","_policyTabItem$permis2","foundPermission","filter","policy_tab_id","permission_id","body","group_data","CustomToast","group_id","updateAdminGroupPermissionService","then","catch","e","getErrorMessageFromResponse","finally","addAdminGroupPermissionService","error","CustomInput","placeholder","value","onChange","target","rejex","_roleItem$grouppolicy2","isRoleChecked","guard_name","CustomCheckbox","CustomArrow","handleRoleToggle","roleId","arrowDirection","ARROW_DIRECTION","_moduleItem$policytab3","policies","handleModuleToggle","moduleId","_subModuleItem$permis4","isSubModuleChecked","_permissionsGroupPoli","_permissionsGroupPoli2","_permissionsGroupPoli3","_permissionsGroupPoli4","_permissionsGroupPoli5","_permissionsGroupPoli6","arguments","undefined","role_index","module_index","sub_module_index","updateSubModuleToggle","tabs","updatePolicyList","permission_index","_tempData$role_index$","_tempData$role_index","_tempData$role_index$2","_tempData$role_index$3","_tempData$role_index$4","_tempData$role_index$5","_tempData$role_index$6","_tempData$role_index$7","_tempData$role_index2","_tempData$role_index3","_tempData$role_index4","_tempData$role_index5","_tempData$role_index6","_tempData$role_index7","_tempData$role_index8","_tempData$role_index9","_tempData$role_index10","_tempData$role_index11","_tempData$role_index12","_tempData$role_index13","_tempData$role_index14","_tempData$role_index15","viewIndex","deleteIndex","editIndex","addIndex","index","_item$guard_name","_item$guard_name2","_item$guard_name3","_item$guard_name4","toLowerCase","PERMISSION_TYPE","includes","permissionGroupList","deletePermission","updatePermission","naviagte","useNavigate","position","TABLE_BORDER","_Fragment","_item$policies","_item$policies$admini","_item$policies2","_item$policies2$admin","_item$policies3","_item$policies3$stand","_item$policies4","_item$policies4$admin","_item$policies5","_item$policies5$stand","administrator","color","item1","_item1$grouppolicydat","grouppolicydata","join","standard","_item1$grouppolicydat2","state","name","members_count","AccessRights","customCondition","allPermissionsAccess","CustomEditIcon","CustomDelete","colSpan","textAlign","paddingTop","paddingBottom","PermissionsGroupPage","dispatch","useDispatch","allPermissionGroupList","getPermissionsGroupListSelector","setPermissionGroupList","searchValue","setSearchValue","setSelectedGroup","setAddUpdate","fullLoading","setFullLoading","getAdminGroupList","getPermissionGroupListAction","getPermissionGroupPolicyListAction","delaySaveToDb","debounce","val","filterData","getGlobalSearchData","borderRadius","boxShadow","autoComplete","type","INPUT_TYPE","size","PermissionsGroupTable","CustomDialog","deletePermissionService","getPermissionService","res","ManageGroups","Promise","resolve","reject","getPermissionGroupListService","sendDataToReducer","SET_PERMISSION_GROUP_LIST","getPermissionPoliciesListAction","getPermissionPoliciesListService","SET_PERMISSION_POLICIES_LIST","groupGroupPolicyListService","SET_PERMISSION_GROUP_POLICY_LIST","_state$permissions","permissions","getPermissionsPoliciesListSelector","_state$permissions2","permissionPoliciesList","_state$permissions3","permissionGroupPolicyList"],"sourceRoot":""}