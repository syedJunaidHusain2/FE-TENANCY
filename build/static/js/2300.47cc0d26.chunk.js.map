{"version":3,"file":"static/js/2300.47cc0d26.chunk.js","mappings":"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","sources":["app/modules/admin/Setting/components/AlertPage/AlertsEmail.js","app/modules/admin/Setting/components/SetupCard/backendCard/useBackendCard.js","app/modules/admin/Setting/components/SetupCard/backendCard/ReconciliationTableview.js","app/modules/admin/Setting/components/SetupCard/backendCard/ReconciliationTableEdit.js","app/modules/admin/Setting/components/SetupCard/backendCard/BackendCard.js","app/modules/admin/Setting/components/SetupCard/companyMargin/CompanyMarginCard.js","app/modules/admin/Setting/components/SetupCard/OverridesCard.js","app/modules/admin/Setting/components/SetupCard/setupPayFrequencyComponents/editComponents/WeeklyEdit.js","app/modules/admin/Setting/components/SetupCard/setupPayFrequencyComponents/editComponents/MonthlyEdit.js","app/modules/admin/Setting/components/SetupCard/setupPayFrequencyComponents/SetupPayFrequency.js","app/modules/admin/Setting/components/companySetup/CompanySetup.js","app/modules/admin/Setting/components/AlertPage/IncompleteAccount.js","app/modules/admin/Setting/components/Alert.js","app/modules/admin/Setting/ProfileHeader.js","app/modules/admin/Setting/components/Location/LocationTabel.js","app/modules/admin/filters/LocationFilter.js","app/modules/admin/Setting/components/Location/LocationCard.js","app/modules/admin/Setting/components/Location.js","app/modules/admin/Setting/components/CostCenter/EditCostModal.js","app/modules/admin/Setting/components/CostCenter/CostCenterTabel.js","app/modules/admin/Setting/components/CostCenter/CreateCostModal.js","app/modules/admin/Setting/components/CostCenter/CostCenterCard.js","app/modules/admin/Setting/components/CostCenter.js","app/modules/admin/Setting/components/Department/CreateDeparmentModal.js","app/modules/admin/Setting/components/Department/EditDeparmentModal.js","app/modules/admin/Setting/components/Department/DepartmentTabel.js","app/modules/admin/Setting/components/Department/DeparmentCard.js","app/modules/admin/Setting/components/Department.js","app/modules/admin/Setting/components/Position/ViewPositionSidebar.js","app/modules/admin/Setting/components/Position/PositionTabel.js","app/modules/admin/Setting/components/Position/ManagePosition.js","app/modules/admin/Setting/components/Position/PositionOrgChart.js","app/modules/admin/filters/PositionFilter.js","app/modules/admin/Setting/components/Position/PositionCard.js","app/modules/admin/Setting/components/Position.js","app/modules/admin/Setting/components/Location/LocationEdit.js","_metronic/partials/widgets/statistics/StatisticsWidget5.tsx","_metronic/partials/widgets/tables/CompensationTabel.tsx","_metronic/partials/widgets/_new/cards/CardsWidget7.tsx","app/modules/admin/Setting/components/Permission/Permission.js","app/modules/admin/Setting/components/Permission.tsx","app/modules/admin/Setting/components/Compensation/CompensationCard.js","app/modules/admin/Setting/components/Compensation.tsx","app/modules/admin/Setting/components/ManualAddressPopup.js","app/modules/admin/Setting/EditProfileModal.js","app/modules/admin/Setting/components/SettingsEditProfile.js","app/modules/admin/Setting/components/setupPaperwork/SetupPaperwork.js","app/modules/admin/Setting/components/setupBankAcc/SetupBankAcc.js","app/modules/admin/Setting/components/Position/PositionPeople.js","app/modules/admin/Setting/components/hiringConfiguration/components/EmployeeIdSettings.js","app/modules/admin/Setting/components/hiringConfiguration/components/SingleConfigurationAttributeRow.js","app/modules/admin/Setting/components/hiringConfiguration/components/PersonalDetails.js","app/modules/admin/Setting/components/hiringConfiguration/components/AdditionalInfo.js","app/modules/admin/Setting/components/hiringConfiguration/components/DocumentToUpload.js","app/modules/admin/Setting/components/hiringConfiguration/SettingHiringPage.js","app/modules/admin/Setting/components/hiringConfiguration/HiringConfiguration.js","app/modules/admin/Setting/SettingHeader.js","customComponents/customOverlayPanel/CustomOverlayPanel.js","customComponents/customRadioButton/CustomRadioButton.js","hooks/useFilterButton.js","redux/actions/PermissionsActions.js","redux/selectors/PermissionsSelectors.js"],"sourcesContent":["import React, {useState, useEffect, useRef, useCallback, useMemo} from 'react'\nimport {\n    addDomainSettingService,\n    deleteDomainSettingService,\n    getDomainSettingService,\n    getEmailNotificationSettingService,\n    updateDomainSettingService,\n    updateEmailNotificationSettingService,\n    getPositionByDeparmentService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {confirmDialog} from 'primereact/confirmdialog'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport {getBooleanValue, getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\n\nconst AlertsEmail = () => {\n    const [toggle, setToggle] = useState(false)\n    const [domainToggle, setDomainToggle] = useState(false)\n    const [domainData, setDomainData] = useState(null)\n    const [domainName, setDomainName] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [domainError, setDomainError] = useState('')\n    const [isAllDomainAllowed, setIsAllDomainAllowed] = useState(false)\n    const [confirmPop, setConfirmPop] = useState(false)\n\n    useEffect(() => {\n        getEmailSeting()\n    }, [])\n    const getEmailSeting = () => {\n        setLoading(true)\n        getEmailNotificationSettingService().then((res) => {\n            setToggle(res?.data[0]?.status == 1 ? true : false)\n            // setEmaildata(res?.data)\n            getDomain()\n        })\n    }\n    const getDomain = () => {\n        getDomainSettingService()\n            .then((res) => {\n                setIsAllDomainAllowed(res?.email_setting_type)\n                setDomainData(res.data)\n            })\n            .finally(() => setLoading(false))\n    }\n    const updateEmailSetting = (status) => {\n        setToggle(!toggle)\n        setLoading(true)\n        const body = {\n            company_id: '1',\n            status: status == false ? 0 : 1,\n        }\n        updateEmailNotificationSettingService(body)\n            .then((res) => getEmailSeting())\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n    const addDomain = () => {\n        const body = {\n            domain_setting: [\n                {\n                    domain_name: domainName,\n                    status: '1',\n                },\n            ],\n        }\n        if (!body.domain_setting[0]?.domain_name) return setDomainError('Enter domain name')\n        setLoading(true)\n        addDomainSettingService(body)\n            .then(() => {\n                setDomainName('')\n                getDomain()\n                CustomToast.success('Domain created successfully')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                setLoading(false)\n\n                setDomainError('')\n            })\n    }\n    const updateDomainSetting = (status, name, id) => {\n        let data = domainData?.map((res) => {\n            if (res?.id == id) {\n                return {...res, status: status == 1 ? 0 : 1}\n            } else {\n                return res\n            }\n        })\n        setDomainData(data)\n\n        setLoading(true)\n        const body = {\n            domain_name: name,\n            status: status == 1 ? 0 : 1,\n            id: id,\n        }\n        updateDomainSettingService(body)\n            .then((res) => getDomain())\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => CustomToast.success('Domain updated successfully'))\n    }\n    const deleteDomain = (id) => {\n        setConfirmPop(true)\n        setLoading(true)\n        deleteDomainSettingService(id)\n            .then(() => getDomain())\n            .finally(() => CustomToast.success('Domain deleted successfully'))\n    }\n\n    const onEnableDisableAllPress = useCallback(() => {\n        setLoading(true)\n        const body = {\n            email_setting_type: isAllDomainAllowed == 1 ? 0 : 1,\n        }\n        updateDomainSettingService(body)\n            .then((res) => getDomain())\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() =>\n                CustomToast.success(\n                    isAllDomainAllowed == 1\n                        ? 'Domain settings updated successfully. Please review custom domains'\n                        : 'Domain settings updated successfully'\n                )\n            )\n    }, [isAllDomainAllowed])\n\n    return (\n        <div\n            className='bg-cmwhite w-100 shadow-sm '\n            style={{fontWeight: '600', borderRadius: '10px', position: 'relative'}}\n        >\n            <CustomLoader full visible={loading} />\n\n            {/* begins */}\n            <div className='d-flex flex-row justify-content-between'>\n                <div className='d-flex align-items-center gap-10 px-10 py-5'>\n                    <div\n                        className='text-cmBlack'\n                        style={{\n                            fontWeight: '700',\n                            fontSize: '16px',\n                            fontFamily: fontsFamily.manrope,\n                            lineHeight: '21.86px',\n                        }}\n                    >\n                        Email\n                    </div>\n\n                    <div className=' form-switch form-check-custom form-check-solid my-auto'>\n                        <input\n                            className='cursor-pointer form-check-input h-20px w-35px '\n                            type='checkbox'\n                            value=''\n                            id='flexSwitchDefault'\n                            checked={toggle}\n                            onChange={() => updateEmailSetting(!toggle)}\n                        />\n                    </div>\n                </div>\n                {toggle ? (\n                    <div className='d-flex justify-content-between align-items-center gap-5 me-5'>\n                        <CustomCheckbox\n                            checked={getBooleanValue(isAllDomainAllowed) == 1}\n                            onChange={onEnableDisableAllPress}\n                        />\n                        <div\n                            className='text-cmGrey900'\n                            style={{\n                                fontWeight: 600,\n                                fontSize: '14px',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            Allow all domains\n                        </div>\n                    </div>\n                ) : null}\n            </div>\n            <hr className='m-0 p-0 text-cmGrey500' />\n            {/* body */}\n            {toggle && (\n                <div className=''>\n                    {/* emails */}\n                    {domainData?.length > 0 ? (\n                        domainData?.map((item) => (\n                            <div className='py-3 px-10 stripRow' key={item?.id}>\n                                {/* Seqifi.com starts */}\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <div className='d-flex justify-content-between align-items-center gap-5'>\n                                        <div className=' form-switch form-check-custom form-check-solid my-auto'>\n                                            <input\n                                                className='cursor-pointer form-check-input h-20px w-35px '\n                                                type='checkbox'\n                                                value={''}\n                                                checked={item?.status == 1 ? true : false}\n                                                id='flexSwitchDefault'\n                                                onChange={() =>\n                                                    updateDomainSetting(\n                                                        item?.status,\n                                                        item?.domain_name,\n                                                        item?.id\n                                                    )\n                                                }\n                                            />\n                                        </div>\n                                        <div\n                                            className='text-cmGrey900'\n                                            style={{\n                                                fontWeight: 600,\n                                                fontSize: '14px',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            {item?.domain_name}\n                                        </div>\n                                    </div>\n\n                                    <CustomDelete\n                                        onClick={() => {\n                                            CustomDialog.warn(\n                                                'Are you sure you want to delete ?',\n                                                () => {\n                                                    deleteDomain(item?.id)\n                                                }\n                                            )\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        ))\n                    ) : (\n                        <></>\n                    )}\n\n                    <div className='d-flex gap-sm-20 gap-5 align-items-center px-10 py-10 '>\n                        <CustomInput\n                            type={INPUT_TYPE.email}\n                            errorMessage={domainError}\n                            placeholder='Domain'\n                            value={domainName}\n                            onChange={(e) => setDomainName(e.target.value)}\n                        />\n\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel='Add'\n                            padding={'px-10'}\n                            onClick={addDomain}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default AlertsEmail\n","import {useState, useEffect, useCallback, useMemo} from 'react'\nimport {\n    checkReconciliationSettingService,\n    updateCompanyReconcilationService,\n} from '../../../../../../../services/Services'\nimport {useDispatch, useSelector} from 'react-redux'\nimport _ from 'lodash'\nimport {\n    getCompanyReconciliationAction,\n    getCompanySettingAction,\n    updateCompanySettingAction,\n} from '../../../../../../../redux/actions/SettingActions'\nimport {\n    getCompanySettingSelector,\n    getReconciliationScheduleSelector,\n} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport {getValidDate} from '../../../../../../../constants/constants'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport moment from 'moment'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\n\nconst useBackendCard = () => {\n    const dispatch = useDispatch()\n    const reconciliationList = useSelector(getReconciliationScheduleSelector)\n    const [more, setMore] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [reconciliation, setReconciliation] = useState([])\n    const [noOfReconcilationSchedule, setNoOfReconcilationSchedule] = useState(null)\n    const companySetting = useSelector(getCompanySettingSelector)\n\n    useEffect(() => {\n        dispatch(getCompanySettingAction())\n        getReconliation()\n    }, [])\n\n    useEffect(() => {\n        if (reconciliationList?.length > 0) setMore(true)\n        setReconciliation(reconciliationList)\n    }, [reconciliationList])\n\n    const getReconliation = useCallback(\n        () =>\n            new Promise((resolve) => {\n                setLoading(true)\n                dispatch(getCompanyReconciliationAction())\n                    .then((res) => {\n                        setNoOfReconcilationSchedule(res.length)\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                        resolve(true)\n                    })\n            }),\n        [dispatch]\n    )\n\n    const toggleMorePress = useCallback((value) => {\n        setMore(value)\n        if (!value) setEdit(false)\n    }, [])\n\n    const onEditButtonPress = useCallback(() => {\n        setEdit(true)\n    }, [])\n    const handleReconciliation = useCallback(() => {\n        if (companySetting?.reconciliation) {\n            dispatch(updateCompanySettingAction('reconciliation'))\n            return\n            setLoading(true)\n            // const body = {\n            //     group_id: companySetting?.group_id,\n            // }\n            checkReconciliationSettingService()\n                .then((res) => {\n                    if (res?.checkStatus)\n                        return CustomToast.error(\n                            \"If an employee's reconciliation is in payroll, you can't turn reconciliation off\"\n                        )\n                    setMore(false)\n                    setEdit(false)\n                    dispatch(updateCompanySettingAction('reconciliation'))\n                })\n                .finally(() => setLoading(false))\n        } else {\n            if (reconciliation?.length > 0) {\n                dispatch(updateCompanySettingAction('reconciliation'))\n            } else {\n                CustomToast.info('First you need to add atleast 1 reconciliation period')\n                setEdit(true)\n                setMore(true)\n            }\n        }\n    }, [companySetting?.reconciliation, dispatch, reconciliation?.length])\n\n    const onSavePress = useCallback(() => {\n        const isFilledData = reconciliation.map((item) =>\n            item?.period_from && item?.period_to && item?.period_from <= item?.period_to\n                ? true\n                : false\n        )\n        if (isFilledData.includes(false)) {\n            CustomToast.error(\n                'Please add remaining / valid schedule period from and period to dates'\n            )\n        } else {\n            setLoading(true)\n            const Schedule = reconciliation?.map((item) => ({\n                period_from: getValidDate(item?.period_from, 'YYYY-MM-DD'),\n                period_to: getValidDate(item?.period_to, 'YYYY-MM-DD'),\n            }))\n\n            updateCompanyReconcilationService({Schedule})\n                .then((r) => {\n                    getReconliation()\n                    setMore(true)\n                    setEdit(false)\n                    CustomToast.success('Reconcilation updated')\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [getReconliation, reconciliation])\n\n    const handleFromPeriod = useCallback(\n        (date, index, field) => {\n            // Object.freeze(reconciliation)\n            let reconData = _.cloneDeep(reconciliation)\n            let reconDataFinal = [...reconciliation]\n\n            let formatedDate = getValidDate(date, 'YYYY-MM-DD')\n            reconData = reconData?.filter((item, i) => i == index)\n            reconData[0][field] = formatedDate\n            reconDataFinal[index] = reconData[0]\n            if (\n                field == 'period_from' &&\n                reconDataFinal[index].period_to &&\n                reconDataFinal[index].period_from > reconDataFinal[index].period_to\n            ) {\n                reconDataFinal[index].period_to = ''\n            }\n            // reconData[index][field] = formatedDate\n            // if (\n            //   field == 'period_from' &&\n            //   reconData[index].period_to &&\n            //   reconData[index].period_from > reconData[index].period_to\n            // ) {\n            //   reconData[index].period_to = ''\n            // }\n            setReconciliation(reconDataFinal)\n        },\n        [reconciliation]\n    )\n\n    const onChangeNoOfReconcilationSchedule = useCallback(\n        (e) => {\n            setNoOfReconcilationSchedule(e?.target?.value)\n            Object.freeze(reconciliation)\n            let reconData = _.cloneDeep(reconciliation)\n            if (Number(reconData?.length) > Number(e?.target?.value)) {\n                const length = Number(reconData?.length) - Number(e?.target?.value)\n                reconData?.splice(reconData?.length - length, length)\n            } else {\n                const length = Number(e?.target?.value) - Number(reconData?.length)\n                if (length > 0) {\n                    const newArr = new Array(length).fill({\n                        id: null,\n                        period_from: '',\n                        period_to: '',\n                        day_date: '',\n                        backend_setting_id: null,\n                    })\n\n                    reconData = [...reconData, ...newArr]\n                }\n            }\n            setReconciliation(reconData)\n        },\n        [reconciliation]\n    )\n\n    const reconDisableDates = useMemo(() => {\n        let dates = []\n        reconciliation.map((reconItem, reconIndex) => {\n            dates[reconIndex] = []\n            reconciliation.map((item, index) => {\n                if (reconIndex != index && item.period_from && item.period_to) {\n                    let currDate = moment(item?.period_from).startOf('day')\n                    let lastDate = moment(item?.period_to).startOf('day')\n                    dates[reconIndex].push(currDate.clone().toDate())\n                    while (currDate.add(1, 'days').diff(lastDate) <= 0) {\n                        dates[reconIndex].push(currDate.clone().toDate())\n                    }\n                }\n            })\n        })\n        return dates\n    }, [reconciliation])\n\n    return {\n        reconDisableDates,\n        toggleMorePress,\n        more,\n        edit,\n        setEdit,\n        onEditButtonPress,\n        onSavePress,\n        reconciliation,\n        setReconciliation,\n        handleReconciliation,\n        handleFromPeriod,\n        loading,\n        setLoading,\n        noOfReconcilationSchedule,\n        onChangeNoOfReconcilationSchedule,\n        companySetting,\n        getReconliation,\n    }\n}\n\nexport default useBackendCard\n","import CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {getValidDate} from '../../../../../../../constants/constants'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomNoData from '../../../../../../../customComponents/customNoData/CustomNoData'\n\nconst ReconciliationTableview = ({reconciliation}) => {\n    const [selectedYear, setSelectedYear] = useState(getValidDate(new Date(), 'yyyy'))\n\n    const onYearChange = useCallback((e) => {\n        const year = getValidDate(e?.target?.value, 'yyyy')\n        setSelectedYear(year)\n    }, [])\n\n    const getReconciliationDataAsPerSelectedYear = useCallback(\n        (item) => {\n            const startDateYear = getValidDate(item?.period_from, 'yyyy')\n            const endDateYear = getValidDate(item?.period_from, 'yyyy')\n            return startDateYear == selectedYear && endDateYear == selectedYear\n        },\n        [selectedYear]\n    )\n\n    const totalRecords = useMemo(() => {\n        return reconciliation.filter((item) => getReconciliationDataAsPerSelectedYear(item))?.length\n    }, [getReconciliationDataAsPerSelectedYear, reconciliation])\n\n    return (\n        <div style={{fontFamily: fontsFamily.manrope}}>\n            <div className='table-responsive'>\n                <table className='table' style={{tableLayout: 'fixed', width: '100%'}}>\n                    <thead>\n                        <tr className=''>\n                            <th className='' style={{width: '150px'}}></th>\n                            <th className='' style={{width: '120px'}}></th>\n                            <th className=' '></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className='stripRow' style={{verticalAlign: 'baseline'}}>\n                            <td colSpan={2}>\n                                <div\n                                    className='text-end text-cmGrey800'\n                                    style={{fontSize: 14, fontWeight: 700}}\n                                >\n                                    Year\n                                </div>\n                            </td>\n                            <td>\n                                <div className='d-flex'>\n                                    <CustomDatePicker\n                                        value={selectedYear}\n                                        onChange={onYearChange}\n                                        dateFormat='yy'\n                                        placeholder='YYYY'\n                                        viewMode='year'\n                                    />\n                                </div>\n                            </td>\n                        </tr>\n                        {(() => {\n                            let reconIndex = 0\n                            return reconciliation?.length > 0 ? (\n                                <>\n                                    {totalRecords > 0 ? (\n                                        reconciliation?.map((item, index) => {\n                                            const isDataAsPerSelectedYear =\n                                                getReconciliationDataAsPerSelectedYear(item)\n                                            if (isDataAsPerSelectedYear) reconIndex = reconIndex + 1\n                                            return isDataAsPerSelectedYear ? (\n                                                <tr\n                                                    className='stripRow'\n                                                    style={{\n                                                        lineHeight: '19.12px',\n                                                        fontSize: 14,\n                                                        fontWeight: 600,\n                                                    }}\n                                                >\n                                                    <td className='p-5' width={'150px'}>\n                                                        {Number(item?.count) > 0 ? (\n                                                            <div\n                                                                className='badge  bg-cmOrange text-cmOrange bg-opacity-10 rounded-pill d-flex flex-center'\n                                                                style={{\n                                                                    height: 23,\n                                                                    width: 103,\n\n                                                                    fontWeight: 600,\n                                                                    fontSize: 14,\n                                                                }}\n                                                            >\n                                                                {item?.count} entries\n                                                            </div>\n                                                        ) : null}\n                                                    </td>\n                                                    <td className='text-cmGrey500 p-5'>\n                                                        Recon {reconIndex}\n                                                    </td>\n                                                    <td className='text-cmGrey800 p-5'>\n                                                        {getValidDate(item?.period_from)} -{' '}\n                                                        {getValidDate(item?.period_to)}\n                                                    </td>\n                                                </tr>\n                                            ) : null\n                                        })\n                                    ) : (\n                                        <tr>\n                                            <td colSpan={3}>\n                                                <CustomNoData\n                                                    label={'No Recon Periods'}\n                                                    className={'text-center'}\n                                                />\n                                            </td>\n                                        </tr>\n                                    )}\n                                </>\n                            ) : null\n                        })()}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ReconciliationTableview\n","import {useCallback, useMemo, useState} from 'react'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport CustomDatePicker from '../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomDelete from '../../../../../../../customComponents/customIcons/CustomDelete'\nimport CustomLink from '../../../../../../../customComponents/customButtton/CustomLink'\nimport {getValidDate} from '../../../../../../../constants/constants'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomNoData from '../../../../../../../customComponents/customNoData/CustomNoData'\nimport {deleteReconciliationPeriodService} from '../../../../../../../services/Services'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\n\nconst ReconciliationTableEdit = ({\n    reconciliation = [],\n    setLoading = null,\n    getReconliation = null,\n    setReconciliation,\n    handlePeriod,\n    handleToPeriod,\n    reconDisableDates,\n}) => {\n    const [selectedYear, setSelectedYear] = useState(getValidDate(new Date(), 'yyyy'))\n\n    const yearStartDate = useMemo(() => {\n        return moment('1/1/' + selectedYear, 'DD/MM/YYYY').toDate()\n    }, [selectedYear])\n\n    const yearEndDate = useMemo(() => {\n        return moment('31/12/' + selectedYear, 'DD/MM/YYYY').toDate()\n    }, [selectedYear])\n\n    const addNewRow = () => {\n        const newArray = _.cloneDeep(reconciliation)\n        newArray.push({id: null, period_from: null, period_to: null, year: selectedYear})\n        setReconciliation(newArray)\n    }\n    const deleteRow = useCallback(\n        (item, index) => {\n            let data = _.cloneDeep(reconciliation)\n            if (!item?.id) {\n                data = reconciliation?.filter((i, ind) => ind != index)\n                setReconciliation(data)\n            } else {\n                setLoading(true)\n                deleteReconciliationPeriodService({\n                    period_from: item?.period_from,\n                    period_to: item?.period_to,\n                    id: item?.id,\n                })\n                    .then(() => {\n                        getReconliation().then(() => setLoading(false))\n                    })\n                    .catch((e) => {\n                        CustomToast.error(getErrorMessageFromResponse(e))\n                        setLoading(false)\n                    })\n            }\n        },\n        [getReconliation, reconciliation, setLoading, setReconciliation]\n    )\n\n    const getReconciliationDataAsPerSelectedYear = useCallback(\n        (item) => {\n            const startDateYear = getValidDate(item?.period_from, 'yyyy')\n            const endDateYear = getValidDate(item?.period_from, 'yyyy')\n            return (\n                (startDateYear == selectedYear && endDateYear == selectedYear) ||\n                item?.year == selectedYear\n            )\n        },\n        [selectedYear]\n    )\n\n    const isYearCanBeChange = useMemo(() => {\n        return reconciliation?.length > 0\n            ? reconciliation\n                  ?.filter((item) => {\n                      return (\n                          getReconciliationDataAsPerSelectedYear(item) || item?.year == selectedYear\n                      )\n                  })\n                  ?.every((item) => {\n                      return item?.period_from && item?.period_to\n                  })\n            : true\n    }, [getReconciliationDataAsPerSelectedYear, reconciliation, selectedYear])\n\n    const onYearChange = useCallback(\n        (e) => {\n            const allReconciliationDataFromSelectedYearAdded = isYearCanBeChange\n            if (!allReconciliationDataFromSelectedYearAdded) {\n                return CustomToast.error(`Select remaining dates for ${selectedYear}`)\n            }\n\n            const year = getValidDate(e?.target?.value, 'yyyy')\n            setSelectedYear(year)\n        },\n        [isYearCanBeChange, selectedYear]\n    )\n\n    const totalRecords = useMemo(() => {\n        return reconciliation.filter((item) => getReconciliationDataAsPerSelectedYear(item))?.length\n    }, [getReconciliationDataAsPerSelectedYear, reconciliation])\n\n    const isPayPeriodHasEntries = useCallback((item) => {\n        return Number(item?.count) > 0\n    }, [])\n\n    return (\n        <div style={{fontFamily: fontsFamily.manrope}}>\n            <div className='table-responsive'>\n                <table\n                    className='table table align-middle'\n                    style={{tableLayout: 'fixed', width: '100%'}}\n                >\n                    <thead>\n                        <th style={{width: '150px'}}></th>\n                        <th style={{width: '100px'}}></th>\n                        <th style={{width: '375px'}}></th>\n                        <th></th>\n                    </thead>\n                    <tbody>\n                        <tr className=''>\n                            <td className='' colSpan={2}>\n                                <div className='d-flex gap-5 align-items-center justify-content-end'>\n                                    <div\n                                        className='text-cmGrey800'\n                                        style={{fontSize: 14, fontWeight: 700}}\n                                    >\n                                        Year\n                                    </div>\n                                </div>\n                            </td>\n                            <td>\n                                <div className='d-flex align-items-center'>\n                                    <CustomDatePicker\n                                        disabled={!isYearCanBeChange}\n                                        value={selectedYear}\n                                        showTodayAndClearButton={false}\n                                        onChange={onYearChange}\n                                        dateFormat='yy'\n                                        placeholder='YYYY'\n                                        viewMode='year'\n                                    />\n                                    {!isYearCanBeChange ? (\n                                        <div>\n                                            <span\n                                                className='p-error ms-5'\n                                                style={{fontWeight: '600'}}\n                                            >\n                                                Fill all dates\n                                                {/* for {selectedYear} */}\n                                            </span>\n                                        </div>\n                                    ) : null}\n                                </div>\n                            </td>\n                        </tr>\n                        {(() => {\n                            let reconIndex = 0\n                            return totalRecords > 0 ? (\n                                reconciliation.map((item, index) => {\n                                    const isDataAsPerSelectedYear =\n                                        getReconciliationDataAsPerSelectedYear(item)\n                                    if (isDataAsPerSelectedYear) reconIndex = reconIndex + 1\n                                    return (\n                                        <>\n                                            {isDataAsPerSelectedYear ||\n                                            (!item?.id && item?.year == selectedYear) ? (\n                                                <tr\n                                                    className='stripRow'\n                                                    style={{\n                                                        lineHeight: '19.12px',\n                                                        fontSize: 14,\n                                                        fontWeight: 600,\n                                                    }}\n                                                    key={index}\n                                                >\n                                                    <td className='p-5' width={'150px'}>\n                                                        {Number(item?.count) > 0 ? (\n                                                            <div\n                                                                className='badge  bg-cmOrange text-cmOrange bg-opacity-10 rounded-pill d-flex flex-center'\n                                                                style={{\n                                                                    height: 23,\n                                                                    width: 103,\n\n                                                                    fontWeight: 600,\n                                                                    fontSize: 14,\n                                                                }}\n                                                            >\n                                                                {item?.count} entries\n                                                            </div>\n                                                        ) : null}\n                                                    </td>\n\n                                                    <td\n                                                        className='text-cmGrey500 p-5'\n                                                        width={'100px'}\n                                                    >\n                                                        Recon {reconIndex}\n                                                    </td>\n\n                                                    <td\n                                                        className='text-cmGrey800 p-5 d-flex flex-center gap-5'\n                                                        width={'375px'}\n                                                    >\n                                                        {isPayPeriodHasEntries(item) ? (\n                                                            <>\n                                                                {getValidDate(item?.period_from)} -{' '}\n                                                                {getValidDate(item?.period_to)}\n                                                            </>\n                                                        ) : (\n                                                            <>\n                                                                <span>\n                                                                    <CustomDatePicker\n                                                                        disabled={isPayPeriodHasEntries(\n                                                                            item\n                                                                        )}\n                                                                        showTodayAndClearButton={\n                                                                            false\n                                                                        }\n                                                                        readOnlyInput\n                                                                        minDate={yearStartDate}\n                                                                        maxDate={yearEndDate}\n                                                                        disabledDates={\n                                                                            reconDisableDates[index]\n                                                                        }\n                                                                        value={\n                                                                            item?.period_from\n                                                                                ? new Date(\n                                                                                      item?.period_from\n                                                                                  )\n                                                                                : null\n                                                                        }\n                                                                        onChange={(event) => {\n                                                                            handlePeriod(\n                                                                                event.target.value,\n                                                                                index,\n                                                                                'period_from'\n                                                                            )\n                                                                        }}\n                                                                    />\n                                                                </span>{' '}\n                                                                -{' '}\n                                                                <span>\n                                                                    <CustomDatePicker\n                                                                        showTodayAndClearButton={\n                                                                            false\n                                                                        }\n                                                                        disabled={isPayPeriodHasEntries(\n                                                                            item\n                                                                        )}\n                                                                        readOnlyInput\n                                                                        minDate={yearStartDate}\n                                                                        maxDate={yearEndDate}\n                                                                        disabledDates={\n                                                                            reconDisableDates[index]\n                                                                        }\n                                                                        value={\n                                                                            item?.period_to\n                                                                                ? new Date(\n                                                                                      item?.period_to\n                                                                                  )\n                                                                                : null\n                                                                        }\n                                                                        onChange={(event) => {\n                                                                            handlePeriod(\n                                                                                event.target.value,\n                                                                                index,\n                                                                                'period_to'\n                                                                            )\n                                                                        }}\n                                                                    />\n                                                                </span>\n                                                            </>\n                                                        )}\n                                                    </td>\n\n                                                    <td>\n                                                        {!isPayPeriodHasEntries(item) ? (\n                                                            <CustomDelete\n                                                                onClick={() =>\n                                                                    deleteRow(item, index)\n                                                                }\n                                                            />\n                                                        ) : null}\n                                                    </td>\n                                                </tr>\n                                            ) : null}\n                                        </>\n                                    )\n                                })\n                            ) : (\n                                <tr>\n                                    <td colSpan={3}>\n                                        <CustomNoData\n                                            label={'No Recon Periods'}\n                                            className={'text-center'}\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })()}\n                        <tr>\n                            <td></td>\n                            <td colSpan={3}>\n                                <CustomLink\n                                    onClick={addNewRow}\n                                    icon='fa-regular fa-square-plus fs-4'\n                                    label={'Add Another'}\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ReconciliationTableEdit\n","import React from 'react'\nimport useBackendCard from './useBackendCard'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    isPermittedForAccess,\n    PERMISSION_TYPE,\n    PERMISSIONS_GROUP,\n} from '../../../../../../../accessRights/AccessRights'\nimport CustomDialog from '../../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport ReconciliationTableview from './ReconciliationTableview'\nimport ReconciliationTableEdit from './ReconciliationTableEdit'\n\nexport default function SetupCard1() {\n    const {\n        toggleMorePress,\n        more,\n        edit,\n        setEdit,\n        onEditButtonPress,\n        onSavePress,\n        getReconliation,\n        reconciliation,\n        setReconciliation,\n        handleReconciliation,\n        handleFromPeriod,\n        loading,\n        setLoading,\n        companySetting,\n        reconDisableDates,\n    } = useBackendCard()\n\n    return (\n        <div\n            className='card shadow-sm bg-cmwhite'\n            style={{position: 'relative', borderRadius: '10px'}}\n        >\n            <CustomLoader full visible={loading} />\n\n            <div className='my-3 mt-5 d-flex flex-wrap align-items-center justify-content-between'>\n                <div className='ms-sm-11 ms-5 form-switch form-switch-sm form-check-custom form-check-solid '>\n                    <div\n                        className='text-cmBlack m-0'\n                        style={{\n                            fontSize: '16px',\n                            fontFamily: fontsFamily.manrope,\n                            fontWeight: '700',\n                            lineHeight: '21.86px',\n                        }}\n                    >\n                        Reconciliations\n                        {/* Backend */}\n                    </div>\n                    {isPermittedForAccess({\n                        permission: PERMISSIONS_GROUP.administrator.setting.setup,\n                        type: PERMISSION_TYPE.edit,\n                    }) && (\n                        <input\n                            style={{marginLeft: '15px'}}\n                            className='form-check-input'\n                            type='checkbox'\n                            checked={companySetting?.reconciliation}\n                            name='notifications'\n                            onClick={handleReconciliation}\n                        />\n                    )}\n                    <label\n                        className='mx-2 text-cmGrey600'\n                        style={{fontFamily: 'Manrope', fontSize: '12px', fontWeight: '500'}}\n                    >\n                        {companySetting?.reconciliation ? 'Enabled' : 'Disabled'}\n                    </label>\n                    {companySetting?.reconciliation ? (\n                        <CustomArrow\n                            arrowDirection={!more ? ARROW_DIRECTION.right : ARROW_DIRECTION.down}\n                            onClick={() => {\n                                toggleMorePress(!more ? true : false)\n                            }}\n                        />\n                    ) : null}\n                </div>\n                {isPermittedForAccess({\n                    permission: PERMISSIONS_GROUP.administrator.setting.setup,\n                    type: PERMISSION_TYPE.edit,\n                }) && (\n                    <div className='mx-sm-0 mx-auto'>\n                        {edit ? (\n                            <div className='d-flex justify-content-end me-8 gap-3'>\n                                <CustomButton\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonLabel='Cancel'\n                                    buttonType={BUTTON_TYPE.greyText}\n                                    onClick={() => {\n                                        setEdit(!edit)\n                                        getReconliation()\n                                    }}\n                                />\n\n                                <CustomButton\n                                    buttonLabel='Save'\n                                    buttonSize={BUTTON_SIZE.small}\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    onClick={() => {\n                                        CustomDialog.warn(\n                                            'These changes will affect the entire software. Do you wish to save these changes?',\n                                            () => {\n                                                onSavePress()\n                                            },\n                                            () => {\n                                                setEdit(!edit)\n                                                getReconliation()\n                                            }\n                                        )\n                                    }}\n                                />\n                            </div>\n                        ) : (\n                            <div className='d-flex justify-content-end me-8 '>\n                                <CustomEditIcon onClick={onEditButtonPress} />\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {/* </div> */}\n            </div>\n            {more && (\n                <>\n                    {!edit ? (\n                        <>\n                            {more ? (\n                                <>\n                                    <div className='mb-6'>\n                                        <div\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '500',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                            className='ms-sm-11 mx-5 text-cmGrey600 mb-5'\n                                        >\n                                            Do you withhold any amount from comissions to be\n                                            reconcilliated later ?\n                                        </div>\n                                        <div className=''>\n                                            <ReconciliationTableview\n                                                reconciliation={reconciliation}\n                                            />\n                                        </div>\n                                    </div>\n                                </>\n                            ) : (\n                                <b></b>\n                            )}\n                        </>\n                    ) : (\n                        <>\n                            <div>\n                                <div\n                                    style={{\n                                        fontSize: '14px',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                    className='ms-11 text-cmGrey600'\n                                >\n                                    Do you with hold any amount from comissions to be reconcilliated\n                                    later ?\n                                </div>\n                            </div>\n                            <div>\n                                <ReconciliationTableEdit\n                                    loading={loading}\n                                    setLoading={setLoading}\n                                    getReconliation={getReconliation}\n                                    reconciliation={reconciliation}\n                                    setReconciliation={setReconciliation}\n                                    handlePeriod={handleFromPeriod}\n                                    reconDisableDates={reconDisableDates}\n                                />\n                            </div>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {\n    getCompanyMarginService,\n    updateCompanyMarginService,\n} from '../../../../../../../services/Services'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {percentageLimitCheck} from '../../../../../../../helpers/CommonHelpers'\n\nconst CompanyMarginCard = () => {\n    const [editMode, setEditMode] = useState(false)\n    const [companyMargin, setCompanyMargin] = useState(null)\n    const [loading, setloading] = useState(true)\n    const [companyMarginInputEror, setCompanyMarginInputEror] = useState(null)\n    const handleEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    useEffect(() => {\n        getCompanyMarginData()\n    }, [])\n\n    const getCompanyMarginData = () => {\n        getCompanyMarginService()\n            .then((res) => {\n                setCompanyMargin(res?.data?.company_margin)\n            })\n            .finally(() => setloading(false))\n    }\n\n    const handleChangeCompanyMargin = (e) => {\n        let {value, max, name} = e.target\n\n        if (percentageLimitCheck(max, value)) setCompanyMargin(e.target.value)\n    }\n\n    const handleEditCancel = () => {\n        setloading(true)\n        handleEditMode()\n        getCompanyMarginData()\n    }\n\n    const UpdateCompanyMarginData = () => {\n        const body = {company_margin: companyMargin, id: 1}\n        if (!body.company_margin) return setCompanyMarginInputEror('Please enter a value')\n        setloading(true)\n        updateCompanyMarginService(body)\n            .then((res) => {\n                CustomToast.success('Company Margin updated successfully')\n                getCompanyMarginData()\n                handleEditMode()\n            })\n            .catch((err) => CustomToast.error(err))\n            .finally(() => {\n                setloading(false)\n                setCompanyMarginInputEror(null)\n            })\n    }\n\n    return (\n        <div\n            className='shadow-sm bg-cmwhite'\n            style={{borderRadius: '10px', fontFamily: fontsFamily.manrope}}\n        >\n            <div\n                className='ps-10 py-5'\n                style={{\n                    fontSize: '16px',\n                    fontFamily: 'Manrope',\n                    color: '#9E9E9E',\n                    fontWeight: '600',\n                }}\n            >\n                System Modules\n            </div>\n            {/* <div className='modal-header mb-2'></div> */}\n            <hr className='m-0 text-cmGrey400' />\n            <div className='py-5 ps-10 pe-8'>\n                <div\n                    className='text-cmBlack'\n                    style={{fontSize: 16, fontWeight: 700, lineHeight: '21.86px'}}\n                >\n                    Company Margin\n                </div>\n                <div style={{position: 'relative'}}>\n                    <CustomLoader full visible={loading} />\n\n                    <div className='d-flex align-items-center flex-wrap justify-content-between'>\n                        <div className='d-flex align-items-center gap-5'>\n                            <div\n                                className='text-cmGrey600'\n                                style={{fontSize: 14, fontWeight: 500, lineHeight: '21px'}}\n                            >\n                                Percentage of the sale value that is withheld for company costs\n                                prior to any commission calculations are made\n                            </div>\n                            {!editMode ? (\n                                <div\n                                    className='text-cmGrey900'\n                                    style={{fontSize: 16, fontWeight: 600, lineHeight: '32px'}}\n                                >\n                                    {companyMargin} %\n                                </div>\n                            ) : (\n                                <div className='w-100px'>\n                                    <CustomInput\n                                        type={INPUT_TYPE.number}\n                                        suffixText='%'\n                                        value={companyMargin}\n                                        errorMessage={companyMarginInputEror}\n                                        max={100}\n                                        onChange={(e) => handleChangeCompanyMargin(e)}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                        {!editMode ? (\n                            <div>\n                                <CustomEditIcon onClick={handleEditMode} />\n                            </div>\n                        ) : (\n                            <div className='d-flex align-items-center gap-3'>\n                                <CustomButton\n                                    buttonLabel='Cancel'\n                                    buttonType={BUTTON_TYPE.greyText}\n                                    buttonSize={BUTTON_SIZE.small}\n                                    onClick={handleEditCancel}\n                                />\n                                <CustomButton\n                                    buttonLabel='Save'\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonSize={BUTTON_SIZE.small}\n                                    onClick={UpdateCompanyMarginData}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CompanyMarginCard\n","import React, {useState, useEffect, useCallback} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n    getCompanyOverrideSettingSelector,\n    getCompanySettingSelector,\n} from '../../../../../../redux/selectors/SettingsSelectors'\nimport {\n    getCompanyOverrideSettingAction,\n    getCompanySettingAction,\n    updateCompanySettingAction,\n} from '../../../../../../redux/actions/SettingActions'\nimport {\n    isPermittedForAccess,\n    PERMISSION_TYPE,\n    PERMISSIONS_GROUP,\n} from '../../../../../../accessRights/AccessRights'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport {updateOverridesOnTwoAccountStatusService} from '../../../../../../services/Services'\nimport {getBooleanValue, getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../customComponents/customIcons/CustomIcons'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\n\nexport default function SetupCard1() {\n    const dispatch = useDispatch()\n    const companySetting = useSelector(getCompanySettingSelector)\n    const [edit, setEdit] = useState(false)\n    const companyOverrideSetting = useSelector(getCompanyOverrideSettingSelector)\n    const [overrideSetting, setOverrideSetting] = useState(companyOverrideSetting)\n    const [removeExistingManualOverrides, setRemoveExistingManualOverrides] = useState(false)\n    const [showMore, setshowMore] = useState(false)\n\n    useEffect(() => {\n        dispatch(getCompanySettingAction())\n        dispatch(getCompanyOverrideSettingAction())\n    }, [])\n\n    useEffect(() => {\n        setOverrideSetting(companyOverrideSetting)\n    }, [companyOverrideSetting])\n\n    const handleOverrides = useCallback(() => {\n        if (companySetting?.overrides) {\n            setEdit(false)\n            dispatch(updateCompanySettingAction('overrides'))\n            updateOverridesOnTwoAccountStatusService({\n                allow_manual_override_status: 0,\n                allow_office_stack_override_status: 0,\n                pay_type: null,\n            }).then(() => {\n                setEdit(false)\n                dispatch(getCompanyOverrideSettingAction())\n            })\n        } else {\n            dispatch(updateCompanySettingAction('overrides'))\n        }\n    }, [companySetting?.overrides, dispatch])\n\n    const handleEdit = () => {\n        setEdit(!edit)\n    }\n\n    const handleSave = useCallback(() => {\n        if (removeExistingManualOverrides) {\n            setRemoveExistingManualOverrides(0)\n        }\n        updateOverridesOnTwoAccountStatusService({\n            allow_manual_override_status: overrideSetting?.allow_manual_override_status,\n            allow_office_stack_override_status: overrideSetting?.allow_office_stack_override_status,\n            pay_type: overrideSetting?.pay_type,\n            remove_existing_manual_override: removeExistingManualOverrides,\n        })\n            .then(() => {\n                setEdit(false)\n                dispatch(getCompanyOverrideSettingAction())\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }, [\n        dispatch,\n        overrideSetting?.allow_manual_override_status,\n        overrideSetting?.allow_office_stack_override_status,\n        overrideSetting?.pay_type,\n        removeExistingManualOverrides,\n    ])\n\n    return (\n        <div\n            style={{fontSize: '14px', fontFamily: fontsFamily.manrope}}\n            className='card bg-white shadow-sm  mb-10'\n        >\n            <div>\n                <div className='w-100'>\n                    <div className='d-flex align-items-center justify-content-between px-10 py-5'>\n                        <div className='d-flex align-items-center gap-5'>\n                            <label\n                                className='text-cmBlack'\n                                style={{\n                                    fontWeight: '700',\n                                    fontSize: '16px',\n                                    fontFamily: fontsFamily.manrope,\n                                    lineHeight: '21.86px',\n                                }}\n                            >\n                                Overrides\n                            </label>\n\n                            {isPermittedForAccess({\n                                permission: PERMISSIONS_GROUP.administrator.setting.setup,\n                                type: PERMISSION_TYPE.edit,\n                                forManager: true,\n                            }) ? (\n                                <div className=' form-switch form-check-custom form-check-solid my-auto'>\n                                    <input\n                                        className='cursor-pointer form-check-input h-20px w-35px '\n                                        type='checkbox'\n                                        value=''\n                                        id='flexSwitchDefault'\n                                        checked={companySetting?.overrides}\n                                        onChange={() => {\n                                            CustomDialog.warn(\n                                                `This will ${\n                                                    companySetting?.overrides ? 'disable' : 'enable'\n                                                } Override payments for employees Do you wish to save these changes?`,\n                                                () => {\n                                                    handleOverrides()\n                                                }\n                                            )\n                                        }}\n                                    />\n                                </div>\n                            ) : null}\n\n                            <label\n                                className=''\n                                style={{\n                                    color: '#757575',\n                                    fontFamily: 'Manrope',\n                                    fontSize: '12px',\n                                }}\n                            >\n                                {companySetting?.overrides ? 'Enabled' : 'Disabled'}\n                            </label>\n                            <div className='d-flex flex-center'>\n                                <CustomArrow\n                                    arrowDirection={\n                                        showMore ? ARROW_DIRECTION.right : ARROW_DIRECTION.down\n                                    }\n                                    onClick={() => setshowMore(!showMore)}\n                                />\n                            </div>\n                        </div>\n                        {companySetting?.overrides ? (\n                            <>\n                                {!showMore ? (\n                                    <>\n                                        {edit ? (\n                                            <div className='d-flex flex-center gap-3'>\n                                                <CustomButton\n                                                    buttonType={BUTTON_TYPE.greyText}\n                                                    buttonSize={BUTTON_SIZE.small}\n                                                    onClick={() => {\n                                                        setEdit(false)\n                                                        dispatch(getCompanyOverrideSettingAction())\n                                                    }}\n                                                    buttonLabel='Cancel'\n                                                />\n                                                <CustomButton\n                                                    buttonType={BUTTON_TYPE.secondary}\n                                                    buttonSize={BUTTON_SIZE.small}\n                                                    onClick={handleSave}\n                                                    buttonLabel='Save'\n                                                />\n                                            </div>\n                                        ) : (\n                                            <div>\n                                                <CustomEditIcon onClick={handleEdit} />\n                                            </div>\n                                        )}\n                                    </>\n                                ) : null}\n                            </>\n                        ) : null}\n                    </div>\n                    {companySetting?.overrides ? (\n                        <>\n                            {!showMore ? (\n                                <>\n                                    <hr className='m-0 p-0' />\n                                    {edit ? (\n                                        <div>\n                                            <div className='d-flex align-items-center gap-3 py-4 text-cmGrey800 stripRow'>\n                                                <div className=' px-10'>\n                                                    <CustomCheckbox\n                                                        checked={\n                                                            getBooleanValue(\n                                                                Number(\n                                                                    overrideSetting?.allow_office_stack_override_status\n                                                                )\n                                                            )\n                                                                ? true\n                                                                : false\n                                                        }\n                                                        onChange={() => {\n                                                            // setOverrideSetting((val) => ({\n                                                            //     ...val,\n                                                            //     allow_office_stack_override_status:\n                                                            //         getBooleanValue(\n                                                            //             overrideSetting?.allow_office_stack_override_status\n                                                            //         ) == 1\n                                                            //             ? 0\n                                                            //             : 1,\n                                                            // }))\n                                                            if (\n                                                                getBooleanValue(\n                                                                    overrideSetting?.allow_office_stack_override_status\n                                                                ) == 1\n                                                            ) {\n                                                                CustomDialog.confirm(\n                                                                    'Turning off Stack Overrides will stop all current Stack overrides. Are you sure you wish to proceed?',\n                                                                    () => {\n                                                                        setOverrideSetting(\n                                                                            (val) => ({\n                                                                                ...val,\n                                                                                allow_office_stack_override_status: 0,\n                                                                            })\n                                                                        )\n                                                                    },\n                                                                    () => {\n                                                                        setOverrideSetting(\n                                                                            (val) => ({\n                                                                                ...val,\n                                                                                allow_office_stack_override_status: 1,\n                                                                            })\n                                                                        )\n                                                                    }\n                                                                )\n                                                            } else {\n                                                                setOverrideSetting((val) => ({\n                                                                    ...val,\n                                                                    allow_office_stack_override_status: 1,\n                                                                }))\n                                                            }\n                                                        }}\n                                                        value={getBooleanValue(\n                                                            Number(\n                                                                overrideSetting?.allow_office_stack_override_status\n                                                            )\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div style={{fontWeight: 700}}>\n                                                    Allow Office Stack overrides\n                                                </div>\n                                            </div>\n                                            <div className='d-flex align-items-center gap-3 py-4 text-cmGrey800 stripRow'>\n                                                <div className=' px-10'>\n                                                    <CustomCheckbox\n                                                        checked={\n                                                            getBooleanValue(\n                                                                Number(\n                                                                    overrideSetting?.allow_manual_override_status\n                                                                )\n                                                            )\n                                                                ? true\n                                                                : false\n                                                        }\n                                                        onChange={() => {\n                                                            if (\n                                                                getBooleanValue(\n                                                                    overrideSetting?.allow_manual_override_status\n                                                                ) == 1\n                                                            ) {\n                                                                CustomDialog.confirm(\n                                                                    // 'It will not allow to add manual overrides. Do you want to remove existing manual overrides ?',\n                                                                    'Turning off Manual Overrides will disable all current manual overrides.Are you sure you wish to proceed ?',\n                                                                    () => {\n                                                                        setRemoveExistingManualOverrides(\n                                                                            1\n                                                                        )\n                                                                        setOverrideSetting(\n                                                                            (val) => ({\n                                                                                ...val,\n                                                                                allow_manual_override_status: 0,\n                                                                            })\n                                                                        )\n                                                                    },\n                                                                    () => {\n                                                                        setRemoveExistingManualOverrides(\n                                                                            0\n                                                                        )\n                                                                        setOverrideSetting(\n                                                                            (val) => ({\n                                                                                ...val,\n                                                                                allow_manual_override_status: 1,\n                                                                            })\n                                                                        )\n                                                                    }\n                                                                )\n                                                            } else {\n                                                                setRemoveExistingManualOverrides(0)\n                                                                setOverrideSetting((val) => ({\n                                                                    ...val,\n                                                                    allow_manual_override_status: 1,\n                                                                }))\n                                                            }\n                                                        }}\n                                                        value={getBooleanValue(\n                                                            Number(\n                                                                overrideSetting?.allow_manual_override_status\n                                                            )\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div style={{fontWeight: 700}}>\n                                                    Allow Manual overrides\n                                                </div>\n                                            </div>\n                                            <div className='py-4  px-10 stripRow'>\n                                                <div style={{fontWeight: 600}}>\n                                                    When an individual receives multiple Direct,\n                                                    Indirect and Manual overrides on a sale\n                                                </div>\n                                                <div\n                                                    className='d-flex align-items-center gap-3 py-3 mt-2'\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    <div>Pay</div>\n                                                    <div>\n                                                        <CustomDropdown\n                                                            placeholder='Select override with the highest value'\n                                                            value={overrideSetting?.pay_type}\n                                                            searching={false}\n                                                            options={[\n                                                                {\n                                                                    name: 'Pay all overrides',\n                                                                    value: 'pay all overrides',\n                                                                },\n                                                                {\n                                                                    name: 'Pay override with the highest value',\n                                                                    value: 'pay override with the highest value',\n                                                                },\n                                                            ]}\n                                                            onChange={(e) => {\n                                                                setOverrideSetting((val) => ({\n                                                                    ...val,\n                                                                    pay_type: e?.target?.value,\n                                                                }))\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ) : (\n                                        <div className='text-cmGrey800' style={{fontWeight: 700}}>\n                                            <div\n                                                style={{fontWeight: 600}}\n                                                className='py-4 stripRow px-10'\n                                            >\n                                                Allow Office Stack overrides:{' '}\n                                                <span style={{fontWeight: 500}}>\n                                                    {getBooleanValue(\n                                                        Number(\n                                                            overrideSetting?.allow_office_stack_override_status\n                                                        )\n                                                    )\n                                                        ? 'Yes'\n                                                        : 'No'}\n                                                </span>\n                                            </div>\n                                            <div\n                                                style={{fontWeight: 600}}\n                                                className='py-4 stripRow px-10'\n                                            >\n                                                Allowed Manual overrides:{' '}\n                                                <span style={{fontWeight: 500}}>\n                                                    {getBooleanValue(\n                                                        Number(\n                                                            overrideSetting?.allow_manual_override_status\n                                                        )\n                                                    )\n                                                        ? 'Yes'\n                                                        : 'No'}\n                                                </span>\n                                            </div>\n                                            <div className='py-4 stripRow px-10'>\n                                                When an individual receives multiple Direct,\n                                                Indirect and Manual overrides on a sale:\n                                                <br />\n                                                <span style={{fontWeight: 500}}>\n                                                    {overrideSetting?.pay_type ?? '-'}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    )}{' '}\n                                </>\n                            ) : null}\n                        </>\n                    ) : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useCallback, useMemo} from 'react'\nimport moment from 'moment'\nimport CustomDatePicker from '../../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {WEEK_DAYS, getValidDate} from '../../../../../../../../constants/constants'\nimport {getDeadlinetoFinalizePayroll} from '../../../../../../../../helpers/CommonHelpers'\nimport CustomDropdown from '../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nconst FIRST_PAY_DATE_MONTHS = 6\n\nconst WeeklyEdit = ({\n    payFrequencyIndex,\n    payFrequencyData,\n    updatePayfrequencySetting,\n    updateMultiplePayFrequencySetting,\n}) => {\n    const firstPayDateList = useMemo(() => {\n        if (payFrequencyData?.day_of_week) {\n            const data = [],\n                afterMonth = moment().add(FIRST_PAY_DATE_MONTHS, 'M')\n            const currentDate = moment()\n                .startOf('month')\n                .day(payFrequencyData?.day_of_week?.toLowerCase())\n            if (currentDate.date() > 7) currentDate.add(7, 'd')\n            while (currentDate.toDate() <= afterMonth.toDate()) {\n                if (currentDate.toDate() >= new Date()) {\n                    const dt = getValidDate(currentDate.toDate())\n                    data.push({\n                        name: dt,\n                        value: dt,\n                        date: currentDate.toDate(),\n                    })\n                }\n                currentDate.add(7, 'd')\n            }\n            return data\n        }\n        return []\n    }, [payFrequencyData?.day_of_week])\n\n    const onFrequencyToggle = (e) => {\n        updateMultiplePayFrequencySetting(payFrequencyIndex, {\n            status: e.target.checked == true ? 1 : 0,\n            day_of_week: null,\n            first_day: null,\n            pay_period: null,\n        })\n    }\n\n    const deadlineToFinalizePayroll = useMemo(() => {\n        return getDeadlinetoFinalizePayroll(\n            payFrequencyData?.first_day,\n            payFrequencyData?.pay_period\n        )\n    }, [payFrequencyData?.first_day, payFrequencyData?.pay_period])\n\n    const selectedPayPeriod = useMemo(() => {\n        if (payFrequencyData?.pay_period) {\n            const startPayPeriod = payFrequencyData?.pay_period?.split(' - ')?.[0] ?? null\n            const endPayPeriod = payFrequencyData?.pay_period?.split(' - ')?.[1] ?? null\n            return {\n                startPayPeriod: startPayPeriod\n                    ? moment(startPayPeriod, 'MM/DD/YYYY').toDate()\n                    : null,\n                endPayPeriod: endPayPeriod ? moment(endPayPeriod, 'MM/DD/YYYY').toDate() : null,\n            }\n        }\n    }, [payFrequencyData?.pay_period])\n\n    const onChangePayPeriodFrom = useCallback(\n        (e) => {\n            const fromDate = moment(e?.target?.value).toDate()\n            const toDate = moment(fromDate).add(6, 'd').toDate()\n            const dates = `${getValidDate(fromDate)} - ${getValidDate(toDate)}`\n            updatePayfrequencySetting(payFrequencyIndex, dates, e?.target?.name)\n        },\n        [payFrequencyIndex, updatePayfrequencySetting]\n    )\n\n    const payPeriodMinMaxDate = useMemo(() => {\n        const dayToCount = 6\n        return {\n            payPeiodFrom: {\n                minDate: null,\n                maxDate: moment(payFrequencyData?.first_day, 'MM/DD/YYYY').toDate(),\n            },\n            payPeiodTo: {\n                minDate: selectedPayPeriod?.startPayPeriod\n                    ? selectedPayPeriod?.startPayPeriod\n                    : null,\n                maxDate:\n                    moment(payFrequencyData?.first_day, 'MM/DD/YYYY').toDate() <\n                    moment(selectedPayPeriod?.startPayPeriod).add(dayToCount, 'd').toDate()\n                        ? moment(payFrequencyData?.first_day, 'MM/DD/YYYY').toDate()\n                        : selectedPayPeriod?.startPayPeriod\n                        ? moment(selectedPayPeriod?.startPayPeriod).add(dayToCount, 'd').toDate()\n                        : null,\n            },\n        }\n    }, [payFrequencyData?.first_day, selectedPayPeriod?.startPayPeriod])\n\n    const disableDays = useMemo(() => {\n        const foundDay = WEEK_DAYS.find((item) => item?.name == payFrequencyData?.day_of_week)\n        return [0, 1, 2, 3, 4, 5, 6].filter((item) => item != foundDay?.dayNumber)\n    }, [payFrequencyData?.day_of_week])\n\n    return (\n        <div className='' style={{fontSize: '14px', fontWeight: '600'}}>\n            <div className='table-responsive shadow-none'>\n                <table className='table  text-cmGrey900 '>\n                    <tr className='stripRow'>\n                        <td className='ps-sm-10 ps-5  mt-5 w-sm-25' style={{fontWeight: '700'}}>\n                            <div className='d-flex gap-3 flex-wrap'>\n                                <CustomCheckbox\n                                    checked={payFrequencyData?.status ? true : false}\n                                    onChange={onFrequencyToggle}\n                                />\n                                <span> Weekly</span>\n                            </div>\n                        </td>\n                        <td className=' row gap-5 align-items-center py-3 w-100 mx-auto'>\n                            <div className='text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-sm-end'>\n                                Day of the week:\n                            </div>\n                            <div className='col-6 col-md-4 p-0 w-sm-200px w-100'>\n                                <CustomDropdown\n                                    searching={false}\n                                    name={'day_of_week'}\n                                    value={payFrequencyData?.day_of_week}\n                                    onChange={(e) => {\n                                        updateMultiplePayFrequencySetting(payFrequencyIndex, {\n                                            day_of_week: e?.target?.value,\n                                            first_day: null,\n                                            pay_period: null,\n                                        })\n                                    }}\n                                    options={WEEK_DAYS}\n                                />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr className='stripRow'>\n                        <td className='py-3'></td>\n                        <td className='row gap-5 py-3 g-0 align-items-center w-100 mx-auto'>\n                            <div className=' text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-sm-end'>\n                                First Check Date:\n                            </div>\n                            <div className='col-6 col-md-4 p-0 w-sm-200px w-100'>\n                                <CustomDatePicker\n                                    name={'first_day'}\n                                    disabledDays={disableDays}\n                                    onChange={(e) => {\n                                        updateMultiplePayFrequencySetting(payFrequencyIndex, {\n                                            first_day: getValidDate(e.target.value),\n                                            pay_period: null,\n                                        })\n                                    }}\n                                    value={\n                                        payFrequencyData?.first_day\n                                            ? moment(\n                                                  payFrequencyData?.first_day,\n                                                  'MM/DD/YYYY'\n                                              ).toDate()\n                                            : null\n                                    }\n                                />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr className='stripRow'>\n                        <td className=''></td>\n                        <td className='row gap-5 g-0 align-items-center py-3 w-100 mx-auto'>\n                            <div className='text-nowrap text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-sm-end'>\n                                Pay Period:\n                            </div>\n                            <div className='d-sm-flex text-center flex col p-0 align-items-center gap-5 flex-wrap pe-5'>\n                                <div className='w-sm-200px w-100'>\n                                    <CustomDatePicker\n                                        name='pay_period'\n                                        value={selectedPayPeriod?.startPayPeriod}\n                                        readOnlyInput={true}\n                                        onChange={onChangePayPeriodFrom}\n                                        maxDate={payPeriodMinMaxDate.payPeiodFrom.maxDate}\n                                    />\n                                </div>\n                                <div> to </div>\n                                <div className='w-sm-200px w-100'>\n                                    <CustomDatePicker\n                                        disabled\n                                        name='pay_period'\n                                        value={selectedPayPeriod?.endPayPeriod}\n                                        readOnlyInput={true}\n                                        minDate={payPeriodMinMaxDate.payPeiodTo.minDate}\n                                        maxDate={payPeriodMinMaxDate.payPeiodTo.maxDate}\n                                    />\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr className='stripRow'>\n                        <td className=''></td>\n                        <td className='row  gap-5 align-items-center py-3 w-100 mx-auto'>\n                            <div className='col-md-8 w-sm-25 w-100 p-0 text-sm-end'>\n                                Deadline to finalize payroll:\n                            </div>\n                            <div\n                                className='col-md-4 p-0'\n                                style={{\n                                    fontWeight: 800,\n                                }}\n                            >\n                                {deadlineToFinalizePayroll}\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default WeeklyEdit\n","import React, {useCallback, useMemo, useState} from 'react'\nimport moment from 'moment'\n\nimport {getValidDate} from '../../../../../../../../constants/constants'\nimport CustomDropdown from '../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {\n    getDeadlinetoFinalizePayroll,\n    isInputValueExist,\n} from '../../../../../../../../helpers/CommonHelpers'\nimport CustomDatePicker from '../../../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomCheckbox from '../../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomToast from '../../../../../../../../customComponents/customToast/CustomToast'\nconst FIRST_PAY_DATE_MONTHS = 6\n\nconst MonthlyEdit = ({\n    payFrequencyData,\n    payFrequencyIndex,\n    updatePayfrequencySetting,\n    updateMultiplePayFrequencySetting,\n}) => {\n    const [disabledDates, setDisabledDates] = useState(null)\n    const firstPayDayOfMonthList = useMemo(() => {\n        return new Array(31).fill(1).map((item, index) => ({\n            name: index + 1,\n            value: index + 1,\n        }))\n    }, [])\n\n    const firstPayDateList = useMemo(() => {\n        if (isInputValueExist(payFrequencyData?.first_day_pay_of_manths)) {\n            const data = []\n            const afterMonth = moment().add(FIRST_PAY_DATE_MONTHS, 'M').startOf('month')\n            const currentDate = moment().subtract(5, 'M').startOf('month')\n            while (\n                currentDate.month() != afterMonth.month() &&\n                currentDate.year() != afterMonth.year()\n            ) {\n                if (\n                    Number(payFrequencyData?.first_day_pay_of_manths) <=\n                    moment(currentDate).daysInMonth()\n                ) {\n                    const middleDate = moment(currentDate).date(\n                        Number(payFrequencyData?.first_day_pay_of_manths)\n                    )\n                    if (middleDate.toDate() >= currentDate?.toDate()) {\n                        data.push({\n                            name: getValidDate(middleDate.toDate()),\n                            value: getValidDate(middleDate.toDate()),\n                            date: middleDate.toDate(),\n                        })\n                    }\n                }\n                currentDate.add(1, 'month')\n            }\n            return data\n        }\n        return []\n    }, [payFrequencyData?.first_day_pay_of_manths])\n\n    const onFrequencyToggle = (e) => {\n        updateMultiplePayFrequencySetting(payFrequencyIndex, {\n            status: payFrequencyData?.status ? 0 : 0,\n            first_day_pay_of_manths: null,\n            first_day: null,\n            pay_period: null,\n        })\n    }\n\n    const selectedPayPeriod = useMemo(() => {\n        if (payFrequencyData?.pay_period) {\n            const startPayPeriod = payFrequencyData?.pay_period?.split(' - ')?.[0] ?? null\n            const endPayPeriod = payFrequencyData?.pay_period?.split(' - ')?.[1] ?? null\n            return {\n                startPayPeriod: startPayPeriod\n                    ? moment(startPayPeriod, 'MM/DD/YYYY').toDate()\n                    : null,\n                endPayPeriod: endPayPeriod ? moment(endPayPeriod, 'MM/DD/YYYY').toDate() : null,\n            }\n        }\n    }, [payFrequencyData?.pay_period])\n\n    const onChangePayPeriodFrom = useCallback(\n        (e) => {\n            const date = moment(e?.target?.value).date()\n            if ([29, 30, 31].includes(date))\n                return CustomToast.error(\"You can't select 29, 30 , 31\")\n            const nextMonthDate = moment(e?.target?.value).add(1, 'M').subtract(1, 'd').toDate()\n            const dates = `${getValidDate(e?.target?.value)} - ${getValidDate(nextMonthDate)}`\n            updatePayfrequencySetting(payFrequencyIndex, dates, e?.target?.name)\n\n            return false\n        },\n        [payFrequencyIndex, updatePayfrequencySetting]\n    )\n\n    const onChangePayPeriodTo = useCallback(\n        (e) => {\n            const dates = `${getValidDate(selectedPayPeriod?.startPayPeriod)} - ${getValidDate(\n                e?.target?.value\n            )}`\n            updatePayfrequencySetting(payFrequencyIndex, dates, e?.target?.name)\n        },\n        [payFrequencyIndex, selectedPayPeriod?.startPayPeriod, updatePayfrequencySetting]\n    )\n\n    const payPeriodMinMaxDate = useMemo(() => {\n        const dayToCount = 30\n        return {\n            payPeiodFrom: {\n                minDate: null,\n                maxDate: moment(payFrequencyData?.first_day, 'MM/DD/YYYY').toDate(),\n            },\n            payPeiodTo: {\n                minDate: selectedPayPeriod?.startPayPeriod\n                    ? selectedPayPeriod?.startPayPeriod\n                    : null,\n                maxDate:\n                    moment(payFrequencyData?.first_day, 'MM/DD/YYYY').toDate() <\n                    moment(selectedPayPeriod?.startPayPeriod).add(dayToCount, 'd').toDate()\n                        ? moment(payFrequencyData?.first_day, 'MM/DD/YYYY').toDate()\n                        : selectedPayPeriod?.startPayPeriod\n                        ? moment(selectedPayPeriod?.startPayPeriod).add(dayToCount, 'd').toDate()\n                        : null,\n            },\n        }\n    }, [payFrequencyData?.first_day, selectedPayPeriod?.startPayPeriod])\n\n    const deadlineToFinalizePayroll = useMemo(() => {\n        return getDeadlinetoFinalizePayroll(\n            payFrequencyData?.first_day,\n            payFrequencyData?.pay_period\n        )\n    }, [payFrequencyData?.first_day, payFrequencyData?.pay_period])\n\n    return (\n        <div style={{fontSize: '14px', fontWeight: '600'}}>\n            <div className='table-responsive shadow-none '>\n                <table className='table  text-cmGrey900'>\n                    <tr className='stripRow'>\n                        <td className='ps-sm-10 ps-5 w-sm-25' style={{fontWeight: '700'}}>\n                            <div className='d-flex gap-3 flex-wrap'>\n                                <span>\n                                    <CustomCheckbox\n                                        checked={payFrequencyData?.status ? true : false}\n                                        onChange={onFrequencyToggle}\n                                    />\n                                </span>\n                                <span>Monthly</span>\n                            </div>\n                        </td>\n\n                        <td className='row gap-5 align-items-center py-3 w-100 mx-auto'>\n                            <div className='col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                First Pay Day of Month:\n                            </div>\n                            <div className='col-6 col-md-4 p-0 w-sm-200px w-100'>\n                                <CustomDropdown\n                                    options={firstPayDayOfMonthList}\n                                    name={'first_day_pay_of_manths'}\n                                    value={payFrequencyData?.first_day_pay_of_manths}\n                                    onChange={(e) => {\n                                        updateMultiplePayFrequencySetting(payFrequencyIndex, {\n                                            first_day_pay_of_manths: e?.target?.value,\n                                            first_day: null,\n                                            pay_period: null,\n                                        })\n                                    }}\n                                />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr className='stripRow'>\n                        <td className=''></td>\n                        <td className=' row gap-5 align-items-center py-3 w-100 mx-auto'>\n                            <div className='text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                First Check Date:\n                            </div>\n                            <div className='col-6 col-md-4 p-0 w-sm-200px w-100'>\n                                <CustomDropdown\n                                    options={firstPayDateList}\n                                    className='w-auto'\n                                    name={'first_day'}\n                                    value={payFrequencyData?.first_day}\n                                    onChange={(e) => {\n                                        updateMultiplePayFrequencySetting(payFrequencyIndex, {\n                                            first_day: e.target.value,\n                                            pay_period: null,\n                                        })\n                                    }}\n                                />\n                            </div>\n                        </td>\n                    </tr>\n                    <tr className='stripRow'>\n                        <td className=''></td>\n                        <td className='row gap-5 align-items-center py-3 w-100 mx-auto'>\n                            <div className='text-nowrap text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                Pay Period:\n                            </div>\n                            <div className='d-sm-flex text-center flex col p-0 align-items-center gap-5 flex-wrap pe-5'>\n                                <div className='w-sm-200px w-100'>\n                                    <CustomDatePicker\n                                        name='pay_period'\n                                        disabledDates={disabledDates}\n                                        value={selectedPayPeriod?.startPayPeriod}\n                                        readOnlyInput={true}\n                                        onChange={onChangePayPeriodFrom}\n                                        maxDate={payPeriodMinMaxDate.payPeiodFrom.maxDate}\n                                    />\n                                </div>\n                                <div> to </div>\n                                <div className='w-sm-200px w-100'>\n                                    <CustomDatePicker\n                                        name='pay_period'\n                                        value={selectedPayPeriod?.endPayPeriod}\n                                        disabled\n                                        readOnlyInput={true}\n                                        onChange={onChangePayPeriodTo}\n                                        minDate={payPeriodMinMaxDate.payPeiodTo.minDate}\n                                        maxDate={payPeriodMinMaxDate.payPeiodTo.maxDate}\n                                    />\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr className='stripRow'>\n                        <td className=''></td>\n                        <td className='row gap-5 align-items-center py-3 w-100 mx-auto'>\n                            <div className=' col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                Deadline to finalize payroll:\n                            </div>\n                            <div\n                                className='col-md-4 p-0'\n                                style={{\n                                    fontWeight: 800,\n                                }}\n                            >\n                                {deadlineToFinalizePayroll}\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    )\n}\nexport default MonthlyEdit\n","import React, {useState, useEffect, useMemo, useCallback} from 'react'\nimport More1 from '../../Path1.png'\nimport More from '../../Path.png'\nimport WeeklyEdit from './editComponents/WeeklyEdit'\nimport SemiMonthlyEdit from './editComponents/SemiMonthlyEdit'\nimport BiWeeklyEdit from './editComponents/BiWeeklyEdit'\nimport {\n    addPayFrequencySettingService,\n    getPayFrequencySettingService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    getPayFrequencySettingAction,\n    getPayFrequencyTypeAction,\n} from '../../../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {getPayFrequencyTypeSelector} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport CustomDialog from '../../../../../../../customComponents/customDialog/CustomDialog'\nimport MonthlyEdit from './editComponents/MonthlyEdit'\nimport {useSelector} from 'react-redux'\nimport {\n    getDeadlinetoFinalizePayroll,\n    getDeadlinetoFinalizePayrollDate,\n    getErrorMessageFromResponse,\n} from '../../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../../constants/constants'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\n\nexport let PAY_FREQUENCY_TYPES_ID = {\n    weekly: 2,\n    monthly: 5,\n}\nlet INITIAL_FREQUENCY = [\n    {\n        day_of_months: '',\n        day_of_week: '',\n        deadline_to_run_payroll: '',\n        first_day: '',\n        first_day_pay_of_manths: '',\n        first_months: '',\n        first_pay_period_ends_on: '',\n        frequency_type_id: 2,\n        frequency_type_name: 'Weekly',\n        monthly_pay_type: 'Other',\n        monthly_per_days: '',\n        pay_period: '',\n        second_pay_day_of_month: '',\n        status: 0,\n    },\n    {\n        day_of_months: '',\n        day_of_week: '',\n        deadline_to_run_payroll: '',\n        first_day: '',\n        first_day_pay_of_manths: '',\n        first_months: '',\n        first_pay_period_ends_on: '',\n        frequency_type_id: 5,\n        frequency_type_name: 'Monthly',\n        monthly_pay_type: 'Other',\n        monthly_per_days: '',\n        pay_period: '',\n        second_pay_day_of_month: '',\n        status: 0,\n    },\n    // {\n    //     day_of_months: '',\n    //     day_of_week: '',\n    //     deadline_to_run_payroll: '',\n    //     first_day: '',\n    //     first_day_pay_of_manths: '',\n    //     first_months: '',\n    //     first_pay_period_ends_on: '',\n    //     frequency_type_id: 1,\n    //     frequency_type_name: 'Daily',\n    //     monthly_pay_type: 'Other',\n    //     monthly_per_days: '',\n    //     pay_period: '',\n    //     second_pay_day_of_month: '',\n    //     status: 0,\n    // },\n    // {\n    //     day_of_months: '',\n    //     day_of_week: '',\n    //     deadline_to_run_payroll: '',\n    //     first_day: '',\n    //     first_day_pay_of_manths: '',\n    //     first_months: '',\n    //     first_pay_period_ends_on: '',\n    //     frequency_type_id: 3,\n    //     frequency_type_name: 'Biweekly',\n    //     monthly_pay_type: 'Other',\n    //     monthly_per_days: '',\n    //     pay_period: '',\n    //     second_pay_day_of_month: '',\n    //     status: 0,\n    // },\n    // {\n    //     day_of_months: '',\n    //     day_of_week: '',\n    //     deadline_to_run_payroll: '',\n    //     first_day: '',\n    //     first_day_pay_of_manths: '',\n    //     first_months: '',\n    //     first_pay_period_ends_on: '',\n    //     frequency_type_id: 4,\n    //     frequency_type_name: 'Semimonthly',\n    //     monthly_pay_type: 'Other',\n    //     monthly_per_days: '',\n    //     pay_period: '',\n    //     second_pay_day_of_month: '',\n    //     status: 0,\n    // },\n]\nconst SetupPayFrequency = () => {\n    const [toggleMorePress, setToggleMorePress] = useState(false)\n    const [toggleAddNew, setToggleAddNew] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [isEdit, setIsEdit] = useState(false)\n    const [payFrequencyData, setPayFrequencyData] = useState(INITIAL_FREQUENCY)\n    const [payFrequencyDropDownValue, setPayFrequencyDropDownValue] = useState([])\n    const payrollFrequencyTypes = useSelector(getPayFrequencyTypeSelector)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getPayFrequencySetting()\n        dispatch(getPayFrequencySettingAction())\n        dispatch(getPayFrequencyTypeAction())\n    }, [])\n\n    const getPayFrequencySetting = () => {\n        setLoading(true)\n        getPayFrequencySettingService()\n            .then((res) => {\n                const data = res?.frequency\n                const isThereActivePayFrequency = data?.some((item) => item?.status)\n                const dailyFrequency = data?.find((item) => item.frequency_type_id == 1)\n                const weeklyFrequency = data?.find((item) => item.frequency_type_id == 2)\n                const biWeeklyFrequency = data?.find((item) => item.frequency_type_id == 3)\n                const semiMonthlyFrequency = data?.find((item) => item.frequency_type_id == 4)\n                const monthlyFrequency = data?.find((item) => item.frequency_type_id == 5)\n                const finalData = [\n                    weeklyFrequency ?? INITIAL_FREQUENCY?.[0],\n                    monthlyFrequency ?? INITIAL_FREQUENCY?.[1],\n                    // dailyFrequency ?? INITIAL_FREQUENCY[0],\n                    // biWeeklyFrequency ?? INITIAL_FREQUENCY[2],\n                    // semiMonthlyFrequency ?? INITIAL_FREQUENCY[3],\n                ]\n                setToggleMorePress(isThereActivePayFrequency)\n                setPayFrequencyData(finalData)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    useEffect(() => {\n        let data = payFrequencyData\n        data = data?.filter((item) => !item?.status)\n\n        setPayFrequencyDropDownValue(data)\n    }, [payFrequencyData])\n\n    const updatePayfrequencySetting = (index, value, name) => {\n        let data = [...payFrequencyData]\n        data[index][name] = value\n        setPayFrequencyData(data)\n    }\n\n    const updateMultiplePayFrequencySetting = (index, payPeriodsData) => {\n        let data = [...payFrequencyData]\n        data[index] = {\n            ...data[index],\n            ...payPeriodsData,\n        }\n        setPayFrequencyData(data)\n    }\n\n    const handleSaveSettings = () => {\n        const finalPayFrequencyData = payFrequencyData?.map((item) => ({\n            ...item,\n            deadline_to_run_payroll:\n                item?.first_day && item?.pay_period\n                    ? getDeadlinetoFinalizePayrollDate(item?.first_day)\n                    : '',\n        }))\n        const activePayFrequency = finalPayFrequencyData?.filter((item) => item?.status)\n        const errorData = {\n            weekly: [],\n            monthly: [],\n        }\n        activePayFrequency?.map((item) => {\n            if (item?.frequency_type_id == PAY_FREQUENCY_TYPES_ID.weekly) {\n                if (!item?.day_of_week) errorData.weekly.push('Day of week')\n                if (!item?.first_day) errorData.weekly.push('First check date')\n                if (!item?.pay_period) errorData.weekly.push('Pay period')\n            }\n            if (item?.frequency_type_id == PAY_FREQUENCY_TYPES_ID.monthly) {\n                if (!item?.first_day_pay_of_manths) errorData.monthly.push('First pay day of month')\n                if (!item?.first_day) errorData.monthly.push('First check date')\n                if (!item?.pay_period) errorData.monthly.push('Pay period')\n            }\n        })\n\n        if (errorData.weekly?.length > 0)\n            return CustomToast.error(`Fill Weekly pay frequency: ${errorData?.weekly?.join(', ')}`)\n        if (errorData.monthly?.length > 0)\n            return CustomToast.error(\n                `Fill Monthly pay frequency: ${errorData?.monthly?.join(', ')}`\n            )\n        setLoading(true)\n        const body = {\n            frequency: finalPayFrequencyData,\n        }\n\n        addPayFrequencySettingService(body)\n            .then(() => {\n                setIsEdit(!isEdit)\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => getPayFrequencySetting())\n    }\n\n    const onHandleFrequencyChange = (e) => {\n        let indexOf = payFrequencyData?.findIndex(\n            (item) => item?.frequency_type_name == e.target.value\n        )\n        if (e.target.value) updatePayfrequencySetting(indexOf, true, 'status')\n    }\n\n    const remainingPayFrequencyTypes = useMemo(() => {\n        const rawTypes = [...payrollFrequencyTypes]\n        const activeTypes = payFrequencyData\n            ?.filter((item) => item?.status)\n            ?.map((item) => item?.frequency_type_id)\n        const remainingTypes = rawTypes.filter((item) => !activeTypes.includes(item?.value))\n        return remainingTypes\n    }, [payrollFrequencyTypes, payFrequencyData])\n\n    const deadlineToFinalizePayroll = useCallback((dt, pp) => {\n        return getDeadlinetoFinalizePayroll(dt, pp)\n    }, [])\n\n    const frequencyData = useMemo(() => {\n        return {\n            weekly: {\n                data: payFrequencyData?.find((item) => item?.frequency_type_id == 2),\n                index: payFrequencyData?.findIndex((item) => item?.frequency_type_id == 2),\n            },\n            monthly: {\n                data: payFrequencyData?.find((item) => item?.frequency_type_id == 5),\n                index: payFrequencyData?.findIndex((item) => item?.frequency_type_id == 5),\n            },\n        }\n    }, [payFrequencyData])\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader visible={loading} full />\n            <div\n                className='bg-cmwhite shadow-sm mb-10'\n                style={{fontFamily: 'Manrope', fontSize: '14px', borderRadius: '10px'}}\n            >\n                <div className=' px-10'>\n                    <div className='py-5 d-flex flex-wrap align-items-center justify-content-between'>\n                        <div className='d-flex align-items-center gap-5'>\n                            <div\n                                className='text-cmBlack'\n                                style={{\n                                    fontWeight: '700',\n                                    fontSize: '16px',\n                                    fontFamily: fontsFamily.manrope,\n                                    lineHeight: '21.86px',\n                                }}\n                            >\n                                Pay Frequency\n                            </div>\n                            <div className='d-flex flex-center'>\n                                <CustomArrow\n                                    arrowDirection={\n                                        !toggleMorePress\n                                            ? ARROW_DIRECTION.right\n                                            : ARROW_DIRECTION.down\n                                    }\n                                    onClick={() => setToggleMorePress(!toggleMorePress)}\n                                />\n                            </div>\n                        </div>\n                        {toggleMorePress && (\n                            <>\n                                {' '}\n                                {isEdit ? (\n                                    <div className='d-flex gap-3'>\n                                        <CustomButton\n                                            buttonLabel='Cancel'\n                                            buttonSize={BUTTON_SIZE.small}\n                                            buttonType={BUTTON_TYPE.greyText}\n                                            onClick={() => {\n                                                setIsEdit(!isEdit)\n                                                getPayFrequencySetting()\n                                            }}\n                                        />\n\n                                        <CustomButton\n                                            buttonLabel='Save'\n                                            buttonType={BUTTON_TYPE.secondary}\n                                            buttonSize={BUTTON_SIZE.small}\n                                            onClick={() => {\n                                                CustomDialog.warn(\n                                                    'These changes will affect the entire software. Do you wish to save these changes?',\n                                                    () => {\n                                                        handleSaveSettings()\n                                                    },\n                                                    () => {\n                                                        setIsEdit(!isEdit)\n                                                        getPayFrequencySetting()\n                                                    }\n                                                )\n                                            }}\n                                        />\n                                    </div>\n                                ) : (\n                                    <CustomEditIcon onClick={() => setIsEdit(!isEdit)} />\n                                )}{' '}\n                            </>\n                        )}\n                    </div>\n                    <hr className='border rounded border-cmGrey300 m-0 p-0' />\n                </div>\n                {toggleMorePress && (\n                    <>\n                        {!isEdit && (\n                            <div className='' style={{fontSize: '14px', fontWeight: '600'}}>\n                                {payFrequencyData?.map((item) =>\n                                    item?.status && ![1, 4].includes(item?.frequency_type_id) ? (\n                                        <div\n                                            className='table-responsive '\n                                            key={item?.frequency_type_id}\n                                        >\n                                            <table className='table  text-cmGrey900 w-100'>\n                                                <tbody>\n                                                    <tr\n                                                        className='stripRow'\n                                                        key={item?.frequency_type_id}\n                                                    >\n                                                        <td\n                                                            colSpan={2}\n                                                            className='ps-sm-10 ps-9 py-2 pt-2'\n                                                            style={{fontWeight: '700'}}\n                                                        >\n                                                            {item?.frequency_type_name}\n                                                        </td>\n                                                    </tr>\n\n                                                    <tr className='stripRow'>\n                                                        <td\n                                                            className='ps-sm-10 ps-5 w-sm-25'\n                                                            style={{fontWeight: '700'}}\n                                                        ></td>\n                                                        {item?.frequency_type_id != 5 ? (\n                                                            <td className='row gap-10 align-items-center py-3 w-100 mx-auto'>\n                                                                <div className='text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                                                    Day of the week:\n                                                                </div>\n                                                                <div className='text-cmGrey800 col-6 col-md-4 p-0'>\n                                                                    {item?.day_of_week}\n                                                                </div>\n                                                            </td>\n                                                        ) : null}\n                                                    </tr>\n\n                                                    <tr className='stripRow'>\n                                                        <td className=''></td>\n                                                        <td className=' row gap-10 align-items-center py-3 w-100 mx-auto'>\n                                                            <div className='text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                                                First Check Date:\n                                                            </div>\n                                                            <div\n                                                                className='text-cmGrey800 col-6 col-md-4 p-0'\n                                                                style={{fontWeight: '700'}}\n                                                            >\n                                                                {item?.first_day}\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    <tr className='px-sm-10 px-5 stripRow '>\n                                                        <td className=''></td>\n                                                        <td className=' row gap-10 align-items-center py-3 w-100 mx-auto '>\n                                                            <div className='text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                                                Pay Period:\n                                                            </div>\n                                                            <div\n                                                                className='text-cmGrey800 col-6 col-md-4 p-0'\n                                                                style={{fontWeight: '700'}}\n                                                            >\n                                                                {item?.pay_period}\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    <tr className='px-sm-10 px-5 stripRow'>\n                                                        <td className=''></td>\n                                                        <td className=' row gap-10 align-items-center py-3 w-100 mx-auto '>\n                                                            <div className=' col-sm-6 col-md-8 w-sm-25 w-100 p-0 text-end'>\n                                                                Deadline to run payroll:\n                                                            </div>\n                                                            <div\n                                                                className='text-cmGrey800 col-6 col-md-4 p-0'\n                                                                style={{fontWeight: '700'}}\n                                                            >\n                                                                {deadlineToFinalizePayroll(\n                                                                    item?.first_day,\n                                                                    item?.pay_period\n                                                                )}\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    ) : null\n                                )}\n                                {/* {payFrequencyData && payFrequencyData[3]?.status ? (\n                                    <div className='table-responsive shadow-none overflow-auto'>\n                                        <table className='table  text-cmGrey900'>\n                                            <tr className='stripRow'>\n                                                <td\n                                                    className='ps-sm-10 ps-5 w-sm-25 w-100 text-nowrap px-sm-0 px-10'\n                                                    style={{fontWeight: '700'}}\n                                                >\n                                                    Semi monthly\n                                                </td>\n                                                <td className='row align-items-center py-3'>\n                                                    <div className='col-sm-6 d-flex align-items-center gap-10'>\n                                                        <div className='text-nowrap'>\n                                                            First Pay Date of Month:\n                                                        </div>\n                                                        <div>\n                                                            {\n                                                                payFrequencyData?.[3]\n                                                                    ?.first_day_pay_of_manths\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    <div className='col-sm-4  p-0 d-flex align-items-center gap-10'>\n                                                        <div className='text-nowrap'>\n                                                            Second Pay Date of Month:\n                                                        </div>\n                                                        <div>\n                                                            {payFrequencyData &&\n                                                                payFrequencyData[3]\n                                                                    ?.second_pay_day_of_month}\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr className='stripRow'>\n                                                <td className=''></td>\n                                                <td className=' row align-items-center py-3  '>\n                                                    <div className=' text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0'>\n                                                        First Check Date:\n                                                    </div>\n                                                    <div\n                                                        className='col-6 col-md-4 p-0'\n                                                        style={{fontWeight: '700'}}\n                                                    >\n                                                        {payFrequencyData &&\n                                                            payFrequencyData[3]?.first_day}\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr className='stripRow'>\n                                                <td className=''></td>\n                                                <td className=' row align-items-center py-3 '>\n                                                    <div className='text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0'>\n                                                        Pay Period:\n                                                    </div>\n                                                    <div\n                                                        className='col-6 col-md-4 p-0'\n                                                        style={{fontWeight: '700'}}\n                                                    >\n                                                        {payFrequencyData &&\n                                                            payFrequencyData[3]?.pay_period}\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr className='px-sm-10 px-5 stripRow'>\n                                                <td className=''></td>\n                                                <td className=' row align-items-center py-3  '>\n                                                    <div className='text-nowrap col-sm-6 col-md-8 w-sm-25 w-100 p-0'>\n                                                        Deadline to run payroll:\n                                                    </div>\n                                                    <div\n                                                        className='text-cmGrey800 col-6 col-md-4 p-0'\n                                                        style={{fontWeight: '700'}}\n                                                    >\n                                                        {deadlineToFinalizePayroll(\n                                                            payFrequencyData?.[3]?.first_day,\n                                                            payFrequencyData?.[3]?.pay_period\n                                                        )}\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                ) : null} */}\n                            </div>\n                        )}\n                        {isEdit && (\n                            <div className='overflow-auto'>\n                                {payFrequencyData[frequencyData?.weekly?.index]?.status ? (\n                                    <div>\n                                        <WeeklyEdit\n                                            payFrequencyIndex={frequencyData?.weekly?.index}\n                                            payFrequencyData={\n                                                payFrequencyData?.[frequencyData?.weekly?.index]\n                                            }\n                                            updatePayfrequencySetting={updatePayfrequencySetting}\n                                            updateMultiplePayFrequencySetting={\n                                                updateMultiplePayFrequencySetting\n                                            }\n                                        />\n                                    </div>\n                                ) : null}\n                                {/* {payFrequencyData[2]?.status ? (\n                                    <div>\n                                        <BiWeeklyEdit\n                                            payFrequencyData={payFrequencyData?.[2]}\n                                            updateMultiplePayFrequencySetting={\n                                                updateMultiplePayFrequencySetting\n                                            }\n                                            updatePayfrequencySetting={updatePayfrequencySetting}\n                                        />\n                                    </div>\n                                ) : null} */}\n                                {/* {payFrequencyData[3]?.status ? (\n                                    <div>\n                                        <SemiMonthlyEdit\n                                            payFrequencyData={payFrequencyData?.[3]}\n                                            updateMultiplePayFrequencySetting={\n                                                updateMultiplePayFrequencySetting\n                                            }\n                                            updatePayfrequencySetting={updatePayfrequencySetting}\n                                        />\n                                    </div>\n                                ) : null} */}\n                                {payFrequencyData[frequencyData?.monthly?.index]?.status ? (\n                                    <div>\n                                        <MonthlyEdit\n                                            updateMultiplePayFrequencySetting={\n                                                updateMultiplePayFrequencySetting\n                                            }\n                                            payFrequencyIndex={frequencyData?.monthly?.index}\n                                            payFrequencyData={\n                                                payFrequencyData?.[frequencyData?.monthly?.index]\n                                            }\n                                            updatePayfrequencySetting={updatePayfrequencySetting}\n                                        />\n                                    </div>\n                                ) : null}\n                                {!toggleAddNew && payFrequencyDropDownValue?.length > 0 ? (\n                                    <div className='d-flex justify-content-start ps-10 text-cmBlue-Crayola my-5'>\n                                        <div\n                                            className='d-flex align-items-center gap-2 cursor-pointer'\n                                            onClick={() => setToggleAddNew(true)}\n                                        >\n                                            <span className='bi bi-plus-square  fs-5'></span>{' '}\n                                            <span className='fw-bold text-decoration-underline'>\n                                                {' '}\n                                                Add Another\n                                            </span>\n                                        </div>\n                                    </div>\n                                ) : payFrequencyDropDownValue?.length > 0 ? (\n                                    <div\n                                        className='d-flex align-items-center gap-2 text-cmGrey900 m-5 ps-10'\n                                        style={{fontWeight: '600'}}\n                                    >\n                                        <div className=''>Pay Frequency :</div>\n                                        <div>\n                                            <CustomDropdown\n                                                placeholder='Select frequency'\n                                                options={remainingPayFrequencyTypes}\n                                                valueKey='name'\n                                                searching={false}\n                                                onChange={onHandleFrequencyChange}\n                                                value={payFrequencyData}\n                                            />\n                                        </div>\n\n                                        <div\n                                            className='bi bi-x text-cmError fs-3 bg-cmError bg-opacity-10 px-1 rounded cursor-pointer'\n                                            style={{\n                                                fontSize: '10px',\n                                            }}\n                                            onClick={() => setToggleAddNew(false)}\n                                        ></div>\n                                    </div>\n                                ) : null}\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default SetupPayFrequency\n","import AccessRights, {\n    PERMISSION_TYPE,\n    PERMISSIONS_GROUP,\n} from '../../../../../../accessRights/AccessRights'\nimport AlertsEmail from '../AlertPage/AlertsEmail'\nimport BackendCard from '../SetupCard/backendCard/BackendCard'\nimport CompanyMarginCard from '../SetupCard/companyMargin/CompanyMarginCard'\nimport OverridesCard from '../SetupCard/OverridesCard'\nimport SetupPayFrequency from '../SetupCard/setupPayFrequencyComponents/SetupPayFrequency'\nimport TierDurationCard from '../SetupCard/TierDurationCard/TierDurationCard'\n\nconst CompanySetup = () => {\n    return (\n        <div>\n            <div className='mb-10'>\n                <CompanyMarginCard />\n            </div>\n            <div>\n                <BackendCard />\n            </div>\n\n            <div className='mt-10'>\n                <SetupPayFrequency />\n            </div>\n\n            <OverridesCard />\n            {/* <TierDurationCard /> */}\n            {/* <MarkettingDealsCard /> */}\n            {/* <MarginOfDiffrenceCard /> */}\n            <div>\n                <AlertsEmail />\n            </div>\n        </div>\n    )\n}\n\nexport default CompanySetup\n","import React, {useState, useEffect, useCallback} from 'react'\nimport More1 from '../Path1.png'\nimport More from '../Path.png'\nimport Select from '../../Icon/select.png'\nimport {\n    createIncompleteAccountAlertService,\n    getDepartmentDropdownService,\n    getIncompleteAccountAlertService,\n    getPositionByDeparmentService,\n    getPositionDropdownService,\n    postMarketingDealService,\n    putToggleAlertsService,\n} from '../../../../../../services/Services'\nimport {Item1} from '../../../../../../_metronic/partials/content/activity/Item1'\nimport Edit from '../../../sequidocs/Icon/edit.png'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../../accessRights/AccessRights'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {getBooleanValue, getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport {getDepartmentWithPositionAction} from '../../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {useSelector} from 'react-redux'\nimport {getDepartmentWithPositionSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\n\nexport default function SetupCard1() {\n    const [more, setMore] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [data, setData] = useState([])\n    // const [deparmentDropdown, setDeparmentDropdown] = useState([])\n    // const [positionDropdown, setpositionDropdown] = useState([])\n    const [loader, setLoader] = useState(true)\n    const [showAlerts, setShowAlerts] = useState(false)\n    const dispatch = useDispatch()\n    const deparmentDropdown = useSelector(getDepartmentWithPositionSelector)\n\n    useEffect(() => {\n        getInCompleteAccountAlertData(true)\n        // getDepartmentDropdownService().then((res) => setDeparmentDropdown(res?.data))\n        // getPositionDropdownService().then((res) => setpositionDropdown(res?.data))\n        // getPositionByDeparmentService().then((res) => setDeparmentDropdown(res?.data))\n        dispatch(getDepartmentWithPositionAction())\n    }, [])\n\n    // const handleShowAlerts = () => {\n    //   setShowAlerts((val) => !val)\n    //   const body = {\n    //     id: data.id,\n    //     status: showAlerts == true ? 1 : 0,\n    //   }\n    //   putToggleAlertsService(body).then((res) => getInCompleteAccountAlertData())\n    // }\n\n    const handleShowAlerts = useCallback(() => {\n        let body = {\n            id: data.id ?? 2,\n            status: !showAlerts,\n        }\n        putToggleAlertsService(body).then((res) => {\n            getInCompleteAccountAlertData()\n        })\n        setShowAlerts(!showAlerts)\n    }, [data.id, showAlerts])\n\n    const setMarketingData = (field_name, index, value) => {\n        const data1 = {...data}\n        data1.details[index][field_name] = value\n        // data1.details[index].alert_type = value?.name\n        setData(data1)\n    }\n\n    const SubmitMarketingDealEdit = () => {\n        const request = {\n            id: 2,\n            data: data.details.map((item) => ({\n                alert_type: item?.alert_type,\n                department_id: item?.department_id,\n                position_id: item?.position_id,\n                number: item?.number,\n                type: item?.type,\n                status: item?.status,\n            })),\n        }\n        const isAnyPropertiesAreEmpty = data?.details?.every(\n            (item) =>\n                !(\n                    item?.alert_type &&\n                    item?.department_id &&\n                    data?.position_id &&\n                    data?.number &&\n                    data?.type\n                )\n        )\n\n        if (!isAnyPropertiesAreEmpty) return CustomToast.error('Fill all incoming alerts data')\n        setLoader(true)\n        createIncompleteAccountAlertService(request)\n            .then((res) => {\n                getInCompleteAccountAlertData()\n                setEdit(false)\n                CustomToast.success('Incoming alerts updated')\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => setLoader(false))\n    }\n\n    const getInCompleteAccountAlertData = (first_time = false) => {\n        getIncompleteAccountAlertService()\n            .then((res) => {\n                setData(res?.data?.[0])\n                setShowAlerts(res?.data?.[0]?.status)\n                setLoader(false)\n            })\n            .catch((err) => setLoader(false))\n    }\n\n    const dumbData = {...data}\n    const handleAddAnother = () => {\n        dumbData.details.push({\n            id: null,\n            alert_id: null,\n            alert_type: null,\n            type: 'day',\n            department_id: null,\n            department_name: null,\n            position_id: null,\n            position_name: null,\n            amount: null,\n        })\n        setData(dumbData)\n    }\n\n    const onDeleteAlertPress = useCallback(\n        (itemIndex) => {\n            const tempData = {...data}\n            tempData.details = data.details.filter((item, index) => index != itemIndex)\n            setData(tempData)\n        },\n        [data]\n    )\n\n    const onToggleStatus = (valueIndex) => {\n        let request = {\n            id: 2,\n            data: data.details.map((item) => ({\n                alert_type: item?.alert_type,\n                department_id: item?.department_id,\n                position_id: item?.position_id,\n                number: item?.number,\n                type: item?.type,\n                status: item?.status,\n            })),\n        }\n\n        request.data[valueIndex].status = getBooleanValue(!request.data[valueIndex].status)\n\n        setLoader(true)\n        createIncompleteAccountAlertService(request)\n            .then((res) => {\n                getInCompleteAccountAlertData()\n                setEdit(false)\n                CustomToast.success('Incoming alert status updated')\n            })\n            .catch((err) => {\n                setLoader(false)\n            })\n    }\n\n    return (\n        <div className='card bg-white h-auto mt-6 shadow'>\n            <CustomLoader full visible={loader} />\n            <div className='mt-6 mb-3 '>\n                <div className='d-flex flex-wrap align-items-center justify-content-between px-10 w-100 mx-sm-0'>\n                    <div className='form-check  d-flex flex-wrap align-items-center form-switch form-switch-sm form-check-custom form-check-solid'>\n                        <label\n                            style={{\n                                fontSize: '16px',\n                                fontFamily: 'Manrope',\n                                fontWeight: 600,\n                            }}\n                            className='form-label text-cmGrey800'\n                        >\n                            Incomplete account alert\n                        </label>\n                        {!loader && !edit ? (\n                            <input\n                                style={{marginLeft: '15px', marginTop: '-3px'}}\n                                className='form-check-input ml-8m custom-control-input cursor-pointer'\n                                type='checkbox'\n                                id='customCheck1'\n                                name='notifications'\n                                onChange={handleShowAlerts}\n                                checked={showAlerts}\n                            />\n                        ) : null}\n\n                        {showAlerts ? (\n                            <>\n                                {!more ? (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            marginTop: '-3px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => {\n                                            setMore(true)\n                                        }}\n                                        src={More1}\n                                    ></img>\n                                ) : (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            marginTop: '-3px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => {\n                                            setMore(false)\n                                            setEdit(false)\n                                        }}\n                                        src={More}\n                                    ></img>\n                                )}\n                            </>\n                        ) : null}\n                    </div>\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.alerts.edit}\n                    >\n                        <div>\n                            {' '}\n                            {more && showAlerts && !edit ? (\n                                <div\n                                    className='d-flex justify-content-end '\n                                    // style={{marginTop: '-34px', paddingRight: '23px'}}\n                                >\n                                    <button\n                                        className=' btn btn-sm btn-icon  btn-bg-light btn-active-color-primary'\n                                        data-kt-menu-trigger='click'\n                                        data-kt-menu-placement='bottom-end'\n                                        data-kt-menu-flip='top-end'\n                                        onClick={() => {\n                                            setEdit(true)\n                                        }}\n                                    >\n                                        <img src={Edit} alt='' style={{width: '34px'}} />\n                                    </button>\n                                </div>\n                            ) : (\n                                <>\n                                    {edit && showAlerts ? (\n                                        <div className='d-flex justify-content-end gap-5 align-items-center'>\n                                            <CustomButton\n                                                buttonType={BUTTON_TYPE.error}\n                                                buttonLabel='Cancel'\n                                                onClick={() => {\n                                                    setLoader(true)\n                                                    getInCompleteAccountAlertData()\n                                                    setEdit(false)\n                                                }}\n                                            />\n                                            {/* <div\n                                                className='btn text-cmGrey700 p-1'\n                                                onClick={() => {\n                                                    setLoader(true)\n                                                    getInCompleteAccountAlertData()\n                                                    setEdit(false)\n                                                }}\n                                            >\n                                                Cancel\n                                            </div> */}\n                                            <CustomButton\n                                                buttonType={BUTTON_TYPE.secondary}\n                                                buttonLabel='Save'\n                                                onClick={SubmitMarketingDealEdit}\n                                            />\n                                            {/* <button\n                                                className='btn btn-sm btn-icon text-cmBlue-Crayola bg-cmBlue-Crayola bg-opacity-10 btn-active-color-primary '\n                                                data-kt-menu-trigger='click'\n                                                style={{width: '60px'}}\n                                                data-kt-menu-placement='bottom-end'\n                                                data-kt-menu-flip='top-end'\n                                                onClick={() => {\n                                                    SubmitMarketingDealEdit()\n                                                }}\n                                            >\n                                                Save\n                                            </button> */}\n                                        </div>\n                                    ) : (\n                                        <b></b>\n                                    )}\n                                </>\n                            )}{' '}\n                        </div>\n                    </AccessRights>\n                </div>\n                {more ? (\n                    <>\n                        {!edit ? (\n                            <>\n                                {' '}\n                                <div className='modal-header mb-2 mt-2 ms-8 me-10'></div>\n                                <div style={{fontSize: '14px'}}>\n                                    {showAlerts ? (\n                                        <div className='py-5 mx-sm-10 mx-5 overflow-auto'>\n                                            <table className='w-sm-700px w-100'>\n                                                <tbody>\n                                                    {data?.details?.length > 0\n                                                        ? data?.details?.map((item) => (\n                                                              <tr className='' key={item?.id}>\n                                                                  <td\n                                                                      className='text-cmGrey900 w-auto py-2 px-5 text-nowrap'\n                                                                      style={{\n                                                                          fontWeight: 600,\n                                                                          fontSize: '14px',\n                                                                          fontFamily: 'Manrope',\n                                                                      }}\n                                                                  >\n                                                                      {item?.alert_type}\n                                                                  </td>\n                                                                  <td\n                                                                      className='text-cmGrey900 w-auto py-2 px-5'\n                                                                      style={{\n                                                                          fontWeight: 700,\n                                                                          fontSize: '16px',\n                                                                          fontFamily: 'Manrope',\n                                                                      }}\n                                                                  >\n                                                                      {item?.number}\n                                                                  </td>\n                                                                  <td\n                                                                      className='text-cmGrey800  w-auto py-2 px-5'\n                                                                      style={{\n                                                                          fontWeight: 600,\n                                                                          fontSize: '14px',\n                                                                          fontFamily: 'Manrope',\n                                                                      }}\n                                                                  >\n                                                                      {item?.type}\n                                                                  </td>\n                                                                  <td\n                                                                      className='text-cmGrey700  w-auto py-2 px-5'\n                                                                      style={{\n                                                                          fontWeight: 500,\n                                                                          fontSize: '14px',\n                                                                          fontFamily: 'Manrope',\n                                                                      }}\n                                                                  >\n                                                                      {' '}\n                                                                      {item?.department_name}\n                                                                  </td>\n                                                                  <td\n                                                                      className='text-cmGrey700  w-auto py-2 px-5'\n                                                                      style={{\n                                                                          fontWeight: 500,\n                                                                          fontSize: '14px',\n                                                                          fontFamily: 'Manrope',\n                                                                      }}\n                                                                  >\n                                                                      {item?.position_name}\n                                                                  </td>\n                                                              </tr>\n                                                          ))\n                                                        : null}\n                                                </tbody>\n                                            </table>\n                                            {!data?.details?.length ? (\n                                                <div className='ms-10' style={{color: '#212121'}}>\n                                                    No data found\n                                                </div>\n                                            ) : null}\n                                        </div>\n                                    ) : null}\n\n                                    {/* <SettingTables /> */}\n                                </div>\n                            </>\n                        ) : (\n                            <div style={{fontSize: '14px'}}>\n                                <div className='modal-header mb-2 mt-2 ms-8 me-8'></div>\n                                {data?.details?.map((value_i, index) => (\n                                    <div\n                                        className='mb-10 d-md-flex mt-6 m-sm-12 overflow-auto '\n                                        key={index}\n                                    >\n                                        <div className='d-md-flex align-items-center flex-start-md flex-sm mb-3'>\n                                            <div className='d-flex align-items-center mb-sm-0 mb-5'>\n                                                <CustomDropdown\n                                                    name='status'\n                                                    searching={false}\n                                                    placeholder='Select Type'\n                                                    onChange={(e) =>\n                                                        setMarketingData(\n                                                            'alert_type',\n                                                            index,\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    value={value_i?.alert_type ?? 'Alert type'}\n                                                    options={[\n                                                        {\n                                                            name: 'M1 complete but unpaid',\n                                                            value: 'M1 complete but unpaid',\n                                                        },\n                                                        {\n                                                            name: 'M1 paid, M2 incomplete',\n                                                            value: 'M1 paid, M2 incomplete',\n                                                        },\n                                                        {\n                                                            name: 'M2 Complete but unpaid',\n                                                            value: 'M2 Complete but unpaid',\n                                                        },\n                                                        {\n                                                            name: 'M2 Complete but PTO Pending',\n                                                            value: 'M2 Complete but PTO Pending',\n                                                        },\n                                                    ]}\n                                                />\n                                            </div>\n\n                                            <div className='ms-sm-6 mb-sm-0 mb-5'>\n                                                <CustomInput\n                                                    placeholder='Number of'\n                                                    type={INPUT_TYPE.number}\n                                                    onChange={(e) =>\n                                                        setMarketingData(\n                                                            'number',\n                                                            index,\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    value={value_i?.number ?? 'number'}\n                                                />\n                                            </div>\n                                            <div className=' ms-sm-3 mb-sm-0 mb-5'>\n                                                <CustomDropdown\n                                                    searching={false}\n                                                    name='status'\n                                                    onChange={(e) =>\n                                                        setMarketingData(\n                                                            'type',\n                                                            index,\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    value={value_i?.type ?? 'type'}\n                                                    options={[\n                                                        {\n                                                            name: ' Day(s)',\n                                                            value: 'day',\n                                                        },\n                                                        {\n                                                            name: 'Week(s)',\n                                                            value: 'week',\n                                                        },\n                                                        {\n                                                            name: 'Month(s)',\n                                                            value: 'months',\n                                                        },\n                                                    ]}\n                                                />\n                                            </div>\n\n                                            <div className=' ms-sm-4 mb-sm-0 mb-5'>\n                                                <CustomDropdown\n                                                    name='status'\n                                                    options={deparmentDropdown}\n                                                    placeholder='Select Department'\n                                                    onChange={(e) =>\n                                                        setMarketingData(\n                                                            'department_id',\n                                                            index,\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    valueKey='id'\n                                                    value={value_i?.department_id ?? ''}\n                                                />\n                                            </div>\n\n                                            <div className='ms-sm-5 mb-sm-0 mb-5'>\n                                                <CustomDropdown\n                                                    name='status'\n                                                    placeholder='Select Position'\n                                                    displayKey='position_name'\n                                                    options={\n                                                        data?.details?.[index]?.department_id &&\n                                                        deparmentDropdown?.length > 0\n                                                            ? deparmentDropdown?.find(\n                                                                  (item) =>\n                                                                      item?.id ==\n                                                                      data?.details?.[index]\n                                                                          ?.department_id\n                                                              ).position\n                                                            : null\n                                                    }\n                                                    onChange={(e) =>\n                                                        setMarketingData(\n                                                            'position_id',\n                                                            index,\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    valueKey='id'\n                                                    value={value_i?.position_id ?? ''}\n                                                />\n                                            </div>\n\n                                            <div className='d-flex align-items-center justify-content-center mx-5'>\n                                                <AccessRights\n                                                    customCondition={\n                                                        allPermissionsAccess.administrator.setting\n                                                            .alerts.delete\n                                                    }\n                                                >\n                                                    <CustomDelete\n                                                        onClick={() => {\n                                                            CustomDialog.warn(\n                                                                'Are you sure you want to delete ?',\n                                                                () => {\n                                                                    onDeleteAlertPress(index)\n                                                                }\n                                                            )\n                                                        }}\n                                                    />\n                                                </AccessRights>\n                                                <AccessRights\n                                                    customCondition={\n                                                        allPermissionsAccess.administrator.setting\n                                                            .alerts.edit\n                                                    }\n                                                >\n                                                    <div className='p-2'>\n                                                        <CustomButton\n                                                            type='submit'\n                                                            buttonType={\n                                                                value_i?.status\n                                                                    ? BUTTON_TYPE.secondaryBorder\n                                                                    : BUTTON_TYPE.successBorder\n                                                            }\n                                                            buttonLabel={\n                                                                value_i?.status\n                                                                    ? 'Disable'\n                                                                    : 'Enable'\n                                                            }\n                                                            onClick={() => {\n                                                                onToggleStatus(index)\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </AccessRights>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                                <div className='d-flex mt-0 pt-0 mb-3'>\n                                    <ul\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            fontSize: '14px',\n                                        }}\n                                        className='nav nav-stretch  nav-line-tabs nav-line-tabs-2x border-transparent  flex-nowrap text-cmBlue-Crayola cursor-pointer'\n                                    >\n                                        {dumbData?.details?.length < 3 ? (\n                                            <div className='nav-item d-flex ms-12'>\n                                                <div\n                                                    style={{\n                                                        width: '15px',\n                                                        height: '15px',\n                                                        // border: '1px solid blue',\n                                                    }}\n                                                    className='d-flex text-center align-item-center justify-content-center border border-cmBlue-Crayola border-2'\n                                                >\n                                                    <b style={{marginTop: '-5px'}}>+</b>\n                                                </div>\n                                                <div\n                                                    className='ms-2 text-cmBlue-Crayola'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        textDecoration: 'underline',\n                                                        padding: '0px',\n                                                        marginTop: '-3px',\n                                                        fontWeight: 600,\n                                                    }}\n                                                    onClick={handleAddAnother}\n                                                >\n                                                    Add Another\n                                                </div>\n                                            </div>\n                                        ) : null}\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </>\n                ) : (\n                    <></>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport IncompleteAccount from './AlertPage/IncompleteAccount'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../accessRights/AccessRights'\nimport AlertsEmail from './AlertPage/AlertsEmail'\nexport default function Alert() {\n    return (\n        <>\n            {/* <MarketingDeals /> */}\n            <div className='mb-5'>\n                <IncompleteAccount />\n            </div>\n            {/* <div>\n                <AlertsEmail />\n            </div> */}\n        </>\n    )\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useCallback, useEffect, useMemo} from 'react'\nimport {Link, useNavigate} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getCompanyProfileSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport {getCompanyProfileAction} from '../../../../redux/actions/SettingActions'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {IMAGE_TYPE, formattedPhoneNumber, getServerImage} from '../../../../helpers/CommonHelpers'\nimport CustomImage from '../../../../customComponents/customImage/CustomImage'\nimport CustomButton, {BUTTON_SIZE} from '../../../../customComponents/customButtton/CustomButton'\nimport useCustomAccessRights, {\n    allPermissionsAccess,\n} from '../../../../accessRights/useCustomAccessRights'\n\nconst ProfileHeader = () => {\n    const location = useLocation()\n    const Navigate = useNavigate()\n    const dispatch = useDispatch()\n    const companyProfile = useSelector(getCompanyProfileSelector)\n\n    const {hiringAccess} = useCustomAccessRights()\n\n    useEffect(function () {\n        dispatch(getCompanyProfileAction())\n    }, [])\n\n    const showEditProfileButton = useMemo(\n        () => !location.pathname.includes('edit-profile'),\n        [location.pathname]\n    )\n\n    return (\n        <div\n            className='card mb-13  shadow-sm overflow-hidden bg-cmwhite'\n            style={{marginTop: '-20px', borderRadius: '12px'}}\n        >\n            <div className='card-body pt-5 pe-5 pb-0'>\n                <div className='d-flex flex-wrap flex-sm-nowrap mb-3'>\n                    <div className='me-sm-7 mb-4 mx-auto'>\n                        <div className='symbol symbol-100px ms-6 symbol-lg-160px symbol-fixed position-relative'>\n                            <CustomImage\n                                // style={{width: '130px', height: '130px'}}\n                                style={{width: '130px', height: '112px'}}\n                                // src={companyProfile?.logo}\n                                type={IMAGE_TYPE.companyLogo}\n                                customSrc={getServerImage(\n                                    companyProfile?.logo,\n                                    IMAGE_TYPE.companyLogo\n                                )}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='flex-grow-1'>\n                        <div className='d-flex justify-content-between align-items-start flex-wrap'>\n                            <div className='d-flex flex-column mx-sm-0 mx-auto '>\n                                <div className='d-flex align-items-center mb-3'>\n                                    <span\n                                        style={{\n                                            fontSize: '18px',\n                                            color: '#3F4254',\n                                            fontFamily: 'Manrope',\n                                            fontWeight: '600',\n                                        }}\n                                        className=' text-hover-primary me-1'\n                                    >\n                                        {companyProfile?.business_name}\n                                    </span>\n                                    <div\n                                        className='ms-1'\n                                        style={{\n                                            background: 'rgba(0, 194, 71, 0.1)',\n                                            width: '70px',\n                                            height: '20px',\n                                            color: '#00C247',\n                                            borderRadius: '12px',\n                                            fontFamily: 'Manrope',\n                                            display: 'flex',\n                                            fontWeight: '600',\n                                            justifyContent: 'center',\n                                            alignItems: 'center',\n                                            fontSize: '12px',\n                                        }}\n                                    >\n                                        {companyProfile?.company_type}\n                                    </div>\n                                </div>\n\n                                <div\n                                    style={{fontFamily: 'Manrope', fontWeight: '500', fontSize: 14}}\n                                    className='d-flex-col flex-wrap col pe-2 mb-sm-0 mb-5'\n                                >\n                                    <span\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            color: '#757575                    ',\n                                        }}\n                                        className='d-flex align-items-center  text-hover-primary me-5 mb-2 '\n                                    >\n                                        <i\n                                            style={{\n                                                color: '#757575',\n                                                width: '10.94px',\n                                                // height: '12.55px'\n                                            }}\n                                            className='bi bi-geo-alt me-3 mt-1'\n                                        ></i>\n                                        {companyProfile?.business_address ?? '-'}\n                                    </span>\n                                    <span\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            color: '#757575                    ',\n                                        }}\n                                        className='d-flex align-items-center  text-hover-primary me-5 mb-2'\n                                    >\n                                        <i\n                                            style={{\n                                                color: '#757575',\n                                                width: '12.52px',\n                                                // height: '12.54px'\n                                            }}\n                                            className='bi bi-telephone me-2 mt-0'\n                                        ></i>\n\n                                        {formattedPhoneNumber(companyProfile?.phone_number)}\n                                    </span>\n                                    <span\n                                        style={{\n                                            fontFamily: 'Manrope',\n                                            color: '#757575                    ',\n                                        }}\n                                        className='d-flex align-items-center text-hover-primary mb-2'\n                                    >\n                                        <i\n                                            style={{\n                                                color: '#757575',\n                                                width: '12.54px',\n                                                // height: '10.79px'\n                                            }}\n                                            className='bi bi-envelope me-3 mt-0'\n                                        ></i>\n                                        {companyProfile?.company_email}\n                                    </span>\n                                </div>\n                            </div>\n\n                            {showEditProfileButton && (\n                                <AccessRights forSuperAdmin>\n                                    <div className='d-flex mx-auto mx-sm-0'>\n                                        <CustomButton\n                                            buttonLabel='Edit Profile'\n                                            onClick={() => Navigate('/setting/edit-profile')}\n                                            buttonSize={BUTTON_SIZE.small}\n                                        />\n                                    </div>\n                                </AccessRights>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <hr className='text-cmGrey400 py-0 my-0' />\n                <ul\n                    style={{\n                        fontFamily: 'Manrope',\n                        fontSize: '16px',\n                        fontWeight: 800,\n                        color: '#9E9E9E',\n                        overflowX: 'auto',\n                        overflowY: 'hidden',\n                    }}\n                    className=' w-100 px-5 nav nav-stretch gap-5 nav-line-tabs nav-line-tabs-8x border-transparent flex-nowrap'\n                >\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.setup.view}\n                    >\n                        <li className='nav-item my-0 py-0'>\n                            <Link\n                                className={\n                                    `nav-link text-nowrap ` +\n                                    (location.pathname === '/setting/setup' && 'active')\n                                }\n                                to='/setting/setup'\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/setup' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                            >\n                                Setup\n                            </Link>\n                        </li>\n                    </AccessRights>\n                    <AccessRights customCondition={hiringAccess.showConfigurationButtonAccess}>\n                        <li className='nav-item my-0 py-0'>\n                            <Link\n                                className={\n                                    `nav-link text-nowrap ` +\n                                    (location.pathname === '/setting/hiring' && 'active')\n                                }\n                                to='/setting/hiring'\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/hiring' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                            >\n                                Hiring\n                            </Link>\n                        </li>\n                    </AccessRights>\n\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.locations.view}\n                    >\n                        <li className='nav-item text-nowrap my-0 py-0'>\n                            <Link\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/location' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                                className={\n                                    `nav-link  ` +\n                                    (location.pathname === '/setting/location' && 'active')\n                                }\n                                to='/setting/location'\n                            >\n                                Locations\n                            </Link>\n                        </li>\n                    </AccessRights>\n\n                    <AccessRights\n                        customCondition={\n                            allPermissionsAccess.administrator.setting.costTracking.view\n                        }\n                    >\n                        <li className='nav-item my-0 py-0 text-nowrap'>\n                            <Link\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/cost-center' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                                className={\n                                    `nav-link ` +\n                                    (location.pathname === '/setting/cost-center' && 'active')\n                                }\n                                to='/setting/cost-center'\n                            >\n                                Cost Centers\n                            </Link>\n                        </li>\n                    </AccessRights>\n\n                    <li className='nav-item my-0 py-0 text-nowrap'>\n                        <AccessRights\n                            customCondition={\n                                allPermissionsAccess.administrator.setting.departments.view\n                            }\n                        >\n                            <Link\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/department' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                                className={\n                                    `nav-link  ` +\n                                    (location.pathname === '/setting/department' && 'active')\n                                }\n                                to='/setting/department'\n                            >\n                                Departments\n                            </Link>\n                        </AccessRights>\n                    </li>\n\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.positions.view}\n                    >\n                        <li className='nav-item my-0 py-0 text-nowrap'>\n                            <Link\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/position' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                                className={\n                                    `nav-link ` +\n                                    (location.pathname === '/setting/position' && 'active')\n                                }\n                                to='/setting/position'\n                            >\n                                Positions\n                            </Link>\n                        </li>\n                    </AccessRights>\n\n                    {/* Alerts */}\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.alerts.view}\n                    >\n                        <li className='nav-item my-0 py-0 text-nowrap'>\n                            <Link\n                                className={\n                                    `nav-link  ` +\n                                    (location.pathname === '/setting/alert' && 'active')\n                                }\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/alert' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                                to='/setting/alert'\n                            >\n                                Alerts\n                            </Link>\n                        </li>\n                    </AccessRights>\n                    <AccessRights\n                        customCondition={\n                            allPermissionsAccess.administrator.setting.bankAccounts.view\n                        }\n                    >\n                        <li className='nav-item my-0 py-0 text-nowrap '>\n                            <Link\n                                className={\n                                    `nav-link ` +\n                                    (location.pathname === '/setting/bank-account' && 'active')\n                                }\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/bank-account' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                                to='/setting/bank-account'\n                            >\n                                Bank Account\n                            </Link>\n                        </li>\n                    </AccessRights>\n                    {/* Access_remaning */}\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.paperWork.view}\n                    >\n                        <li className='nav-item my-0 py-0 text-nowrap'>\n                            <Link\n                                className={\n                                    `nav-link  ` +\n                                    (location.pathname === '/setting/paperwork' && 'active')\n                                }\n                                style={{\n                                    color:\n                                        location.pathname === '/setting/paperwork' && 'active'\n                                            ? '#6078EC'\n                                            : '#9E9E9E',\n                                }}\n                                to='/setting/paperwork'\n                            >\n                                Paperwork\n                            </Link>\n                        </li>\n                    </AccessRights>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileHeader\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport NoDataImg from '../../../customImages/NoDataImg.png'\nimport Menu from '../../Icon/shape.png'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport AccessRights from '../../../../../../accessRights/AccessRights'\nimport {\n    TABLE_BORDER,\n    formattedNumberFields,\n    formattedNumberFieldsWithoutDecimal,\n    getLocationRedlineHelper,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {deleteLocationService} from '../../../../../../services/Services'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport {CustomSortSvg} from '../../../../../../_metronic/helpers/components/CustomSortSVG'\n\nconst LocationTabel = ({\n    className,\n    locationsData,\n    setLocationData,\n    loader,\n    onEditLocation,\n    ifThereIsNoLocation,\n    setLoader,\n    getlocation,\n    handleClose1,\n    totalData,\n    page,\n    setPage,\n    sortValue,\n    sortingOrder,\n    onPress,\n}) => {\n    const deleteLocation = (id) => {\n        let tempData = [...locationsData]\n        tempData = tempData?.filter((item) => item?.id !== id)\n\n        setLocationData(tempData)\n        CustomToast.success('Location Deleted Successfully')\n\n        // setLoader(true)\n        deleteLocationService(id).finally((res) => {\n            // getlocation()\n        })\n    }\n\n    const headerStyle = {}\n\n    return (\n        <div className={`m-0 p-0`}>\n            <div className='table-responsive'>\n                <table className='table'>\n                    <thead className={TABLE_BORDER}>\n                        <tr\n                            className='text-cmGrey900 bg-cmGrey300 '\n                            style={{\n                                fontSize: '14px',\n                                fontWeight: '700',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            {/* <th className=''></th> */}\n                            <th className='p-5 text-nowrap'>\n                                <div className='d-flex'>\n                                    State\n                                    <CustomSortSvg\n                                        sortingOrder={sortValue === 'state' ? sortingOrder : null}\n                                        onClick={() => onPress('state')}\n                                    />\n                                </div>\n                            </th>\n                            <th className='p-5 text-nowrap'>General Code</th>\n                            <th className=' p-5 text-nowrap'>Office Name </th>\n                            <th className=' p-5 text-nowrap'>Work Site ID </th>\n                            <th className=' p-5 text-nowrap'>Installer</th>\n                            <th className=' p-5 text-nowrap'>\n                                <div className='d-flex'>\n                                    Standard Redline\n                                    <CustomSortSvg\n                                        sortingOrder={sortValue === 'redline' ? sortingOrder : null}\n                                        onClick={() => onPress('redline')}\n                                    />\n                                </div>\n                            </th>\n                            <th className=' p-5 text-nowrap'>\n                                <div className='d-flex'>\n                                    People\n                                    <CustomSortSvg\n                                        sortingOrder={sortValue === 'people' ? sortingOrder : null}\n                                        onClick={() => onPress('people')}\n                                    />\n                                </div>\n                            </th>\n                            <AccessRights\n                                customCondition={\n                                    allPermissionsAccess.administrator.setting.locations.edit\n                                }\n                            >\n                                <th className='p-5'></th>\n                            </AccessRights>\n                        </tr>\n                    </thead>\n\n                    <tbody className={TABLE_BORDER}>\n                        {locationsData?.length > 0 ? (\n                            locationsData?.map((item, index) => (\n                                <tr\n                                    className='stripRow '\n                                    key={index}\n                                    style={{verticalAlign: 'baseline'}}\n                                >\n                                    {/* <td className=''></td> */}\n                                    <td\n                                        className='text-cmGrey800 p-5'\n                                        style={{fontWeight: 500, fontSize: '14px'}}\n                                    >\n                                        {item?.state}\n                                    </td>\n\n                                    <td\n                                        className=' text-cmGrey800 p-5'\n                                        style={{fontWeight: 500, fontSize: '14px'}}\n                                    >\n                                        {item?.general_code ?? ''}\n                                        {/* {item.type == 'Office' ? (\n                                                    <b\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontWeight: '400',\n                                                        }}\n                                                        className='ms-3 badge bg-cmGrey200  text-cmPurple'\n                                                    >\n                                                        Office\n                                                    </b>\n                                                ) : null} */}\n                                    </td>\n                                    <td className='p-5'>{item?.office_name ?? '-'}</td>\n\n                                    <td className='p-5'>\n                                        {item?.work_site_id && <span className='bi bi-geo-alt' />}{' '}\n                                        {item?.work_site_id ?? '-'}\n                                    </td>\n\n                                    <td className='p-5 text-cmGrey800' style={{fontWeight: 500}}>\n                                        {item.installation_partner}\n                                    </td>\n                                    <td className=' text-cmGrey800 p-5' style={{fontWeight: 500}}>\n                                        {formattedNumberFields(\n                                            getLocationRedlineHelper(item)?.current\n                                                ?.redline_standard,\n                                            ''\n                                        )}\n                                    </td>\n                                    <td className='p-5'>\n                                        {item?.type == 'Office' && (\n                                            <div className=' d-flex align-items-center '>\n                                                <img className='w-10px h-6' src={Menu} alt='icon' />\n                                                <b\n                                                    className='ms-4 text-cmGrey500'\n                                                    style={{\n                                                        fontSize: '14px',\n                                                        marginLeft: '5px',\n                                                        fontWeight: '500',\n                                                    }}\n                                                >\n                                                    {formattedNumberFieldsWithoutDecimal(\n                                                        item?.user_count,\n                                                        ''\n                                                    )}\n                                                </b>\n                                            </div>\n                                        )}\n                                    </td>\n\n                                    <AccessRights\n                                        customCondition={\n                                            allPermissionsAccess.administrator.setting.locations\n                                                .edit\n                                        }\n                                    >\n                                        <td className='p-5'>\n                                            <div className='d-flex align-items-center gap-2'>\n                                                <div className=''>\n                                                    <CustomEditIcon\n                                                        onClick={() => {\n                                                            onEditLocation(item)\n                                                        }}\n                                                    />\n                                                </div>\n                                                <div className=''>\n                                                    {Number(item?.user_count ?? 0) <= 0 &&\n                                                    Number(item?.redline_sales_count ?? 0) <= 0 ? (\n                                                        <CustomDelete\n                                                            onClick={() => {\n                                                                CustomDialog.warn(\n                                                                    'Are you sure you want to delete ?',\n                                                                    () => {\n                                                                        deleteLocation(item?.id)\n                                                                    }\n                                                                )\n                                                            }}\n                                                        />\n                                                    ) : null}\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </AccessRights>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr key='no-data'>\n                                <td\n                                    colSpan={6}\n                                    style={{\n                                        textAlign: 'center',\n                                        fontFamily: 'Manrope',\n                                        fontWeight: '500',\n                                        fontSize: 14,\n                                        paddingTop: 20,\n                                        paddingBottom: 20,\n                                    }}\n                                >\n                                    {ifThereIsNoLocation ? (\n                                        <div className='text-center m-20'>\n                                            <img src={NoDataImg} alt='' width={136} />\n                                            <br />\n                                            <br />\n                                            <div\n                                                className='text-cmGrey500'\n                                                style={{\n                                                    fontWeight: '600',\n                                                    fontSize: '14px',\n                                                }}\n                                            >\n                                                Locations with Redlines and Installation Partner\n                                                information are displayed on this page. <br /> To\n                                                add a new location, simply press the{' '}\n                                                <b className='text-cmGrey600'>\"Add New\"</b> button.\n                                            </div>\n                                        </div>\n                                    ) : (\n                                        <div\n                                            className='text-cmGrey500'\n                                            style={{fontWeight: '600', fontSize: '14px'}}\n                                        >\n                                            No location found\n                                        </div>\n                                    )}\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n\n            {locationsData?.length ? (\n                <Pagination setPage={setPage} page={page} totalPages={totalData} />\n            ) : null}\n        </div>\n    )\n}\n\nexport {LocationTabel}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport CustomInput from '../../../../customComponents/customInputs/customInput/CustomInput'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {getAllStatesAndCitiesSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport {useSelector} from 'react-redux'\nimport {displayfilterCounts} from '../../../../helpers/CommonHelpers'\n\nconst FILTER_KEYS = {\n    location: 'location',\n    state: 'state',\n}\n\nconst LocationFilter = ({initialFilter = null, onApplyFilter = null, resetFilter = null}) => {\n    const [filterProps, filterData, setFilterData] = useFilterButton(initialFilter, onApplyFilter)\n    const allStateCity = useSelector(getAllStatesAndCitiesSelector)\n\n    const locationOptions = [\n        {\n            name: 'With Work Site Id',\n            value: 'withWorkSiteId',\n        },\n        {\n            name: 'With Installer',\n            value: 'withInstallers',\n        },\n        {\n            name: 'With Only Redline',\n            value: 'withOnlyStandard',\n        },\n    ]\n    const stateOptions = useMemo(() => {\n        return allStateCity?.map((item) => ({name: item?.name, value: item?.state_code}))\n    }, [allStateCity])\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n\n    const resetFilterData = useCallback(() => {\n        setFilterData(initialFilter)\n        resetFilter()\n    }, [initialFilter, resetFilter, setFilterData])\n\n    return (\n        <CustomFilterButton {...filterProps} onResetClick={resetFilterData} filterData={filterData}>\n            <div className='mb-10'>\n                <CustomDropdown\n                    label={'Show Location'}\n                    options={locationOptions}\n                    name={FILTER_KEYS.location}\n                    value={filterData?.[FILTER_KEYS.location]}\n                    onChange={onChangeInputData}\n                />\n            </div>\n            <div className='mb-10'>\n                <CustomDropdown\n                    label='State'\n                    options={stateOptions}\n                    name={FILTER_KEYS.state}\n                    value={filterData?.[FILTER_KEYS.state]}\n                    onChange={onChangeInputData}\n                    // valueKey='name'\n                />\n            </div>\n        </CustomFilterButton>\n    )\n}\n\nexport default LocationFilter\n","import {useState, useEffect, useCallback, useMemo} from 'react'\nimport {LocationTabel} from './LocationTabel'\nimport GoogleMapReact from 'google-map-react'\nimport ManageLocation from './ManageLocation'\nimport debounce from 'lodash.debounce'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {GOOGLE_MAPS_KEY} from '../../../../../../constants/constants'\nimport AccessRights from '../../../../../../accessRights/AccessRights'\nimport {\n    exportLocationDataService,\n    getLocationsListService,\n} from '../../../../../../services/Services'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport LocationFilter from '../../../filters/LocationFilter'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport moment from 'moment'\nimport {downloadAnyFileHelper} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\n\nconst AnyReactComponent = ({text}) => (\n    <div\n        style={{\n            color: 'black',\n            fontWeight: '800',\n            padding: '15px 10px',\n            display: 'inline-flex',\n            textAlign: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: '100%',\n            transform: 'translate(-50%, -50%)',\n        }}\n        className='fs-6'\n    >\n        <div className='bi bi-geo-alt-fill fs-1 text-danger w-25 h-100 pe-5' />\n        {text}\n    </div>\n)\nconst initialFilter = {\n    location: '',\n    state: '',\n}\nexport default function LocationCard() {\n    const [map, setMap] = useState(false)\n    const [selectedLocation, setSelectedLocation] = useState(null)\n    const [page, setPage] = useState(1)\n    const [filterData, setFilterData] = useState(initialFilter)\n    const [totalData, setTotalData] = useState(null)\n    const [showCreateAppModal, setShowCreateAppModal] = useState(false)\n    const [ifThereIsNoLocation, setIfThereIsNoLocation] = useState(false)\n    const handleClose = () => {\n        getlocation()\n        setShowCreateAppModal(false)\n        setSelectedLocation(null)\n    }\n    const [locationsData, setLocationData] = useState(null)\n    const [loader, setLoader] = useState(true)\n    const [firstTimeApiCalled, setFirstTimeApiCalled] = useState(false)\n    const [locationType, setLocationType] = useState('')\n    const [searchText, setSearchText] = useState(null)\n    const [searchVal, setSearchVal] = useState(null)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    // const [saleSearchParam, setSaleSearchParam] = useQueryString()\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        getlocation()\n    }, [page, locationType, sortValue, sortingOrder, searchVal, filterData])\n\n    const getlocation = () => {\n        setLoader(true)\n        const body = {\n            filter: filterData?.location,\n            state: filterData?.state,\n            search: searchVal,\n            type: locationType,\n            page: page,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        }\n        getLocationsListService(body)\n            .then((res) => {\n                if (!firstTimeApiCalled) setIfThereIsNoLocation(res?.locations?.data?.length == 0)\n                setFirstTimeApiCalled(true)\n                setTotalData(res?.locations?.last_page)\n                setLocationData(res?.locations?.data)\n            })\n            .finally(() => {\n                setLoader(false)\n            })\n    }\n    const onEditLocation = useCallback((item) => {\n        setSelectedLocation(item)\n        setShowCreateAppModal(true)\n    }, [])\n\n    const mapData = useMemo(() => {\n        const finalData =\n            locationsData?.length > 0\n                ? locationsData\n                      ?.filter((item) => item?.lat && item?.long)\n                      ?.map((item) => ({\n                          ...item,\n                          stateCityName: item?.general_code\n                              ? `${item?.state} (${item?.general_code})`\n                              : item?.state,\n                      }))\n                : []\n\n        const arrayUniqueByKey = [\n            ...new Map(finalData.map((item) => [item['stateCityName'], item])).values(),\n        ]\n        return arrayUniqueByKey\n    }, [locationsData])\n\n    const MapProps = {\n        center: {\n            lat: mapData && mapData[0]?.lat,\n            lng: mapData && mapData[0]?.long,\n        },\n        zoom: 0,\n    }\n    const onApplyFilter = (filters) => {\n        setPage(1)\n        setSearchText('')\n        setSearchVal('')\n        setFilterData(filters)\n    }\n    const handleSearchChange = (e) => {\n        // setFilterData(initialFilter)\n        delaySave(e?.target?.value)\n        setSearchText(e?.target?.value)\n    }\n    const delaySave = useCallback(\n        debounce((val) => {\n            setSearchVal(val)\n            setLoading(true)\n        }, 500),\n        [searchVal]\n    )\n\n    const onResetFilter = () => {\n        setSearchVal('')\n        setSearchText('')\n        setPage(1)\n        setFilterData(initialFilter)\n        // getlocation()\n    }\n    const onExportLocationData = useCallback(() => {\n        exportLocationDataService().then((res) => {\n            const fileName = `Location List - ${moment(new Date()).format('DD MMM YY hh:mm')}.csv`\n            downloadAnyFileHelper(res, fileName)\n            CustomToast.success('File Downloaded Successfully')\n        })\n    }, [])\n\n    return (\n        <>\n            <div\n                className=' h-auto shadow-sm'\n                style={{fontSize: '14px', borderRadius: 10, fontFamily: 'Manrope'}}\n            >\n                <div className='w-100 gap-2 p-5  d-flex flex-wrap justify-content-between align-itmes-center mx-auto'>\n                    <div\n                        className='text-cmGrey600'\n                        style={{\n                            fontSize: '16px',\n                            fontFamily: 'Manrope',\n                            fontWeight: 600,\n                            alignSelf: 'center',\n                        }}\n                    >\n                        Add Branch Locations and State Redlines\n                    </div>\n                    <div className='' style={{alignSelf: 'center'}}>\n                        <CustomInput\n                            type={INPUT_TYPE.search}\n                            onChange={handleSearchChange}\n                            value={searchText}\n                        />\n                    </div>\n                    <div className='d-flex align-items-center flex-wrap gap-3'>\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.secondary}\n                            buttonSize={BUTTON_SIZE.small}\n                            buttonLabel={map === true ? 'List' : 'Map'}\n                            onClick={() => {\n                                if (map === true) {\n                                    setMap(false)\n                                } else {\n                                    setMap(true)\n                                }\n                            }}\n                            icon={map ? 'bi bi-list fw-bolder' : 'bi bi-map fw-bolder  '}\n                        />\n\n                        <LocationFilter\n                            initialFilter={initialFilter}\n                            onApplyFilter={(updatedFilter) => onApplyFilter(updatedFilter)}\n                            resetFilter={onResetFilter}\n                        />\n\n                        <AccessRights\n                            customCondition={\n                                allPermissionsAccess.administrator.setting.locations.add\n                            }\n                        >\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.primary}\n                                buttonLabel='Add New'\n                                buttonSize={BUTTON_SIZE.small}\n                                onClick={() => setShowCreateAppModal(true)}\n                            />\n                        </AccessRights>\n                        <div className=''>\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.disabled}\n                                buttonLabel='Export'\n                                onClick={onExportLocationData}\n                                buttonSize={BUTTON_SIZE.small}\n                                icon={'pi pi-file-export'}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {map === false ? (\n                    <LocationTabel\n                        page={page}\n                        setPage={setPage}\n                        // className='mx-0 px-0'\n                        locationsData={locationsData}\n                        ifThereIsNoLocation={ifThereIsNoLocation}\n                        setLocationData={setLocationData}\n                        loader={loader}\n                        setLoader={setLoader}\n                        getlocation={getlocation}\n                        handleClose={handleClose}\n                        totalData={totalData}\n                        onEditLocation={onEditLocation}\n                        onPress={(item) => {\n                            setSortValue(item)\n                            setSortingOrder(\n                                sortValue !== item ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                            )\n                            setPage(1)\n                        }}\n                        sortingOrder={sortingOrder}\n                        sortValue={sortValue}\n                    />\n                ) : (\n                    <div style={{height: '536px', width: '100%'}}>\n                        <GoogleMapReact\n                            bootstrapURLKeys={{key: GOOGLE_MAPS_KEY}}\n                            defaultCenter={MapProps.center}\n                            defaultZoom={MapProps.zoom}\n                        >\n                            {mapData?.length > 0\n                                ? mapData?.map((mark, index) => {\n                                      return (\n                                          <AnyReactComponent\n                                              lat={mark.lat}\n                                              lng={mark.long}\n                                              text={mark?.stateCityName}\n                                          />\n                                      )\n                                  })\n                                : null}\n                        </GoogleMapReact>\n                    </div>\n                )}\n                <CustomLoader full visible={loader}></CustomLoader>\n            </div>\n            {showCreateAppModal && (\n                <ManageLocation\n                    selectedLocation={selectedLocation}\n                    show={showCreateAppModal}\n                    handleClose={handleClose}\n                    setLoader={setLoader}\n                />\n            )}\n        </>\n    )\n}\n","import LocattionCard from './Location/LocationCard'\nexport default function Location() {\n    return (\n        <>\n            <LocattionCard />\n        </>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useEffect} from 'react'\nimport {\n    disableCostCenterService,\n    getCostCenterDropdownService,\n    updateCostCenterService,\n} from '../../../../../../services/Services'\nimport {useSelector} from 'react-redux'\nimport {getParentCostCenterSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst EditCostModal = ({show, handleClose, data, setLoader, getcostcenter}) => {\n    const [loading, setLoading] = useState(false)\n    useEffect(function () {\n        getCostCenterDropdownService().then((res) => {})\n    }, [])\n    useEffect(\n        function () {\n            if (data === '') {\n            } else {\n                setCode(data.code)\n                setName(data.name)\n                setDescription(data.description)\n                setCostHead(data.parent_id)\n            }\n        },\n        [data]\n    )\n    const costcenter = useSelector(getParentCostCenterSelector)\n\n    const desablecostcenter = () => {\n        if (data?.chields?.length) {\n            CustomDialog.warn(\n                'Disabling this Parent will disable all sub-centers. Are you sure, You wish to continue ?',\n                () => {\n                    var body = {id: data.id, status: 0}\n                    setLoading(true)\n                    disableCostCenterService(body)\n                        .then((res) => {\n                            setLoader(true)\n                            handleClose()\n                            CustomToast.success('Cost Centers Disabled')\n                            getcostcenter()\n                        })\n                        .finally(() => {\n                            setLoading(false)\n                        })\n                }\n            )\n        } else {\n            CustomDialog.warn(\n                'Deleting this department will affect the entire software. Do you wish to continue?',\n                () => {\n                    var body = {id: data.id, status: 0}\n                    setLoading(true)\n                    disableCostCenterService(body)\n                        .then((res) => {\n                            setLoader(true)\n                            handleClose()\n                            CustomToast.success('Cost Centers Disabled')\n                            getcostcenter()\n                        })\n                        .finally(() => {\n                            setLoading(false)\n                        })\n                }\n            )\n        }\n    }\n    const activecostcenter = () => {\n        var body = {id: data.id, status: 1}\n        setLoading(true)\n        disableCostCenterService(body)\n            .then((res) => {\n                setLoader(true)\n                handleClose()\n                CustomToast.success('Cost Centers Actived')\n                getcostcenter()\n            })\n            .catch((error) => {\n                CustomToast.error(getErrorMessageFromResponse(error))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    const [costhead, setCostHead] = useState()\n    const [name, setName] = useState()\n    const [code, setCode] = useState()\n    const [description, setDescription] = useState()\n    const AddCostCenter = () => {\n        var id = data.id\n        var body = {\n            name: name,\n            code: code,\n            description: description,\n            parent_id: costhead,\n            status: data.status,\n        }\n        if (!name) return CustomToast.error('Select Cost Head Name')\n        if (!code) return CustomToast.error('Select Code')\n        setLoading(true)\n        updateCostCenterService(id, body)\n            .then((res) => {\n                setLoader(true)\n                handleClose()\n                CustomToast.success('Updated Successfully')\n                getcostcenter()\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    return (\n        <CustomModal show={show} onHide={handleClose} title={'Edit Cost Head'} maxWidth='600'>\n            <CustomLoader visible={loading} full />\n\n            {/* <div className='modal-header '></div> */}\n            <div className=''>\n                <div className='px-lg-10'>\n                    {data?.parent_id ? (\n                        <div className='row w-100  mb-5 '>\n                            <CustomDropdown\n                                label={'Parent Cost Head'}\n                                options={costcenter}\n                                onChange={(event) => setCostHead(event.target.value)}\n                                value={costhead}\n                                valueKey='id'\n                            />\n                        </div>\n                    ) : null}\n\n                    <div className='row justify-content-between w-100 mb-5 text-cmGrey700 '>\n                        <div className='col'>\n                            <CustomInput\n                                label={'Cost Head Name'}\n                                required\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                                placeholder='Enter Name'\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                        <div className='col text-cmGrey700'>\n                            <CustomInput\n                                label={'Code'}\n                                required\n                                value={code}\n                                onChange={(e) => setCode(e.target.value)}\n                            />\n                        </div>\n                    </div>\n                    <div className='w-100'>\n                        <CustomInput\n                            label={'Description'}\n                            type={INPUT_TYPE.textarea}\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className='d-flex justify-content-center my-10 gap-5'>\n                <CustomButton\n                    buttonType={data.status === 0 ? BUTTON_TYPE.secondary : BUTTON_TYPE.error}\n                    buttonLabel={data.status === 0 ? <>Activate</> : <>Deactivate</>}\n                    onClick={data.status === 0 ? activecostcenter : desablecostcenter}\n                />\n                <CustomButton\n                    buttonType={BUTTON_TYPE.primary}\n                    buttonLabel='Save'\n                    onClick={AddCostCenter}\n                />\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {EditCostModal}\n","import {useState} from 'react'\nimport {EditCostModal} from './EditCostModal'\n\nimport NoCostimg from '../../../customImages/NoCostimg.png'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../../accessRights/AccessRights'\nimport CustomEllipsis from '../../../../../../customComponents/customEllipsis/CustomEllipsis'\nimport {\n    TABLE_BORDER,\n    formattedNumberFieldsWithoutDecimal,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\n\nexport const CommonRowForCostCenter = ({\n    item,\n    setShowChild = () => {},\n    showChild = false,\n    onEditPress = () => {},\n    Showbutton,\n    setData,\n    isChild = false,\n    index,\n}) => (\n    <tr className={` stripRow ${TABLE_BORDER}`} key={item?.id}>\n        <td className='ps-10 text-start text-cmGrey800' style={{fontSize: '14px', fontWeight: 600}}>\n            {isChild ? '-' : ''} {item?.name}{' '}\n            {Showbutton && (\n                <>\n                    {item.chields.length > 0 ? (\n                        <i\n                            style={{fontWeight: 'bold', fontSize: '18px', marginTop: '1px'}}\n                            onClick={() => setShowChild(!showChild)}\n                            className={`\n                ml-5 text-cmBlack ${\n                    !showChild\n                        ? 'bi bi-caret-right-fill fs-5 cursor-pointer ms-1 text-cmGrey800'\n                        : 'bi bi-caret-down-fill fs-5 cursor-pointer ms-1 text-cmGrey800'\n                }\n              `}\n                        ></i>\n                    ) : (\n                        <b></b>\n                    )}\n                </>\n            )}\n        </td>\n\n        <td\n            className='p-5 text-cmGrey500 '\n            style={{\n                fontWeight: '500',\n                fontSize: '14px',\n            }}\n        >\n            {formattedNumberFieldsWithoutDecimal(item?.chields?.length)}\n        </td>\n        <td className='text-nowrap p-5 text-cmGrey700' style={{fontWeight: 600, fontSize: '14px'}}>\n            {' '}\n            {item?.code}\n        </td>\n        <td className='p-5' style={{}}>\n            <CustomEllipsis\n                style={{\n                    fontFamily: 'Manrope',\n                    color: '#757575',\n                    whiteSpace: 'nowrap',\n                    fontSize: '12px',\n                    width: '150px',\n                }}\n                text={item?.description}\n            >\n                {item?.description}\n            </CustomEllipsis>\n        </td>\n\n        {item?.status == null && (\n            <td className='text-cmGrey800 p-5' style={{fontWeight: 500, fontSize: '14px'}}>\n                --\n            </td>\n        )}\n        {item?.status == 1 && (\n            <td className='text-cmGrey800 p-5' style={{fontWeight: 800, fontSize: '14px'}}>\n                Active\n            </td>\n        )}\n        {item?.status == 0 && (\n            <td className='text-cmGrey800 p-5' style={{fontWeight: 800, fontSize: '14px'}}>\n                Inactive\n            </td>\n        )}\n\n        <AccessRights\n            permission={PERMISSIONS_GROUP.administrator.setting.costTracking}\n            type={PERMISSION_TYPE.edit}\n        >\n            <td className='px-5 text-center'>\n                <CustomEditIcon\n                    onClick={() => {\n                        onEditPress()\n                        setData(item)\n                    }}\n                />\n            </td>\n        </AccessRights>\n    </tr>\n)\n\nexport const CostCenterTableRow = ({item, onEditPress, setData, index}) => {\n    const [showChild, setShowChild] = useState(false)\n\n    return (\n        <>\n            <CommonRowForCostCenter\n                key={item?.id}\n                item={item}\n                index={index}\n                showChild={showChild}\n                setShowChild={setShowChild}\n                onEditPress={onEditPress}\n                Showbutton={true}\n                setData={setData}\n            />\n            {/* {childLoading && childCostCenterData.id && (\n        <div className='m-15'>\n          <span className='spinner-border text-dark'></span>\n        </div>\n      )} */}\n            {showChild && item?.chields.length > 0 ? (\n                <>\n                    {item?.chields?.map((ite) => (\n                        <CommonRowForCostCenter\n                            key={ite?.id}\n                            item={ite}\n                            isChild={true}\n                            showChild={showChild}\n                            setShowChild={setShowChild}\n                            onEditPress={onEditPress}\n                            Showbutton={false}\n                            setData={setData}\n                        />\n                    ))}\n                </>\n            ) : null}\n        </>\n    )\n}\n\nconst CostCenterTabel = ({\n    className,\n    costTrackingData,\n    data,\n    setData,\n    open,\n    setOpen,\n    handleClose,\n    setLoader,\n    getcostcenter,\n}) => {\n    return (\n        <>\n            <div className={`card  ${className}`}>\n                {/* begin::Header */}\n                <div className='card-body py-0 px-0 mx-0' style={{marginTop: '-5px'}}>\n                    {/* begin::Table container */}\n                    {\n                        <div className='table-responsive'>\n                            {/* begin::Table */}\n\n                            <table className='table'>\n                                {/* begin::Table head */}\n                                <thead className={TABLE_BORDER}>\n                                    <tr\n                                        className={`${TABLE_BORDER} text-cmGrey900 bg-cmGrey300`}\n                                        style={{\n                                            fontSize: '14px',\n                                            fontWeight: '700',\n                                            fontFamily: fontsFamily.manrope,\n                                        }}\n                                    >\n                                        {/* <th className='min-w-150px'>Order Id</th> */}\n                                        <th className='w-auto p-5 ps-10 text-nowrap'>Name</th>\n                                        <th className='w-auto p-5 text-nowrap'>Sub Heads</th>\n                                        <th className='w-auto p-5 text-nowrap'>Code</th>\n                                        <th className='w-auto p-5 text-nowrap'>Description</th>\n                                        <th className='w-auto p-5 text-nowrap'>Status</th>\n                                        {/* <th className='min-w-100px' style={{color: '#212121'}}>\n                  \n                </th> */}\n                                        <AccessRights\n                                            customCondition={\n                                                allPermissionsAccess.administrator.setting\n                                                    .costTracking.edit\n                                            }\n                                        >\n                                            <th className='w-auto'></th>\n                                        </AccessRights>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {costTrackingData?.data?.length > 0 ? (\n                                        costTrackingData?.data?.map((item, index) => (\n                                            <CostCenterTableRow\n                                                key={index}\n                                                item={item}\n                                                index={index}\n                                                onEditPress={() => setOpen(true)}\n                                                setData={setData}\n                                            />\n                                        ))\n                                    ) : (\n                                        <tr key='no-data'>\n                                            <td\n                                                colSpan={6}\n                                                style={{\n                                                    textAlign: 'center',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '500',\n                                                    fontSize: 14,\n                                                    paddingTop: 20,\n                                                    paddingBottom: 20,\n                                                }}\n                                            >\n                                                No data found\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n\n                                {/* end::Table body */}\n                            </table>\n                            {/* end::Table */}\n                        </div>\n                    }\n                    {costTrackingData?.length === 0 ? (\n                        <div className='text-center m-20'>\n                            <img src={NoCostimg} alt='' width={136} />\n                            <br />\n                            <br />\n                            <div\n                                className='text-cmGrey500'\n                                style={{fontWeight: '600', fontSize: '14px'}}\n                            >\n                                Keep track of your expenses using our cost tracking feature by\n                                creating cost heads. <br /> To start a new one, simply press the\n                                <b className='text-cmGrey600'>\"Create New\"</b> button.\n                            </div>\n                        </div>\n                    ) : null}\n                    {/* end::Table container */}\n                </div>\n                {/* begin::Body */}\n            </div>\n            {open ? (\n                <EditCostModal\n                    show={open}\n                    handleClose={handleClose}\n                    data={data}\n                    setLoader={setLoader}\n                    getcostcenter={getcostcenter}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default CostCenterTabel\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useRef, useEffect} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\n\nimport {\n    addCostCenterService,\n    getCostCenterDropdownService,\n} from '../../../../../../services/Services'\nimport {useSelector} from 'react-redux'\nimport {getParentCostCenterSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {\n    ADD_COST_HEAD_VALIDATION_FIELD,\n    newCostHeadValidation,\n} from '../../../../../../validations/validations'\nimport {\n    getErrorMessageFromResponse,\n    isEmptyObjectValue,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst CreateCostModal = ({show, handleClose, getcostcenter, setLoader, loader}) => {\n    const costcenter = useSelector(getParentCostCenterSelector)\n    const [costhead, setCostHead] = useState(null)\n    const [name, setName] = useState()\n    const [code, setCode] = useState()\n    const [description, setDescription] = useState()\n    const [addHeadError, setAddHeadError] = useState(ADD_COST_HEAD_VALIDATION_FIELD)\n    const [loading, setloading] = useState(false)\n\n    const AddCostCenter = (e) => {\n        e.preventDefault()\n        var body = {name: name, code: code, description: description, parent_id: costhead}\n        const validationErrors = newCostHeadValidation(body)\n        setAddHeadError(validationErrors)\n        if (isEmptyObjectValue(validationErrors)) {\n            setLoader(true)\n            setloading(true)\n            addCostCenterService(body)\n                .then((res) => {\n                    CustomToast.success('Cost Added Successfully')\n                    handleClose()\n                    getcostcenter()\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally((e) => {\n                    setloading(false)\n                })\n        }\n    }\n\n    return (\n        <CustomModal show={show} onHide={handleClose} title={'Add Cost Head'} maxWidth='600'>\n            <form onSubmit={AddCostCenter}>\n                <div className=''>\n                    <div className='mb-5'>\n                        <div className='d-flex justify-content-center mb-5'>\n                            <div className='row d-flex w-500px justify-content-center'>\n                                <div className='col text-cmGrey700'>\n                                    <CustomDropdown\n                                        label={'Parent Cost Head'}\n                                        options={costcenter}\n                                        onChange={(e) => {\n                                            setCostHead(e.target.value)\n                                        }}\n                                        value={costhead}\n                                        valueKey='id'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=' d-flex justify-content-center mb-5'>\n                            <div className='row w-500px'>\n                                <div className='col text-cmGrey700 '>\n                                    <CustomInput\n                                        label={'Cost Head Name'}\n                                        required\n                                        placeholder='Enter Name'\n                                        onChange={(e) => {\n                                            setName(e.target.value)\n                                        }}\n                                        errorMessage={addHeadError?.codeHeadName}\n                                        value={name}\n                                        rejex={/^[\\w\\-\\s]+$/}\n                                    />\n                                </div>\n                                <div className='col'>\n                                    <CustomInput\n                                        label={'Code'}\n                                        required\n                                        placeholder='xxx-xxx'\n                                        onChange={(e) => {\n                                            setCode(e.target.value)\n                                        }}\n                                        errorMessage={addHeadError?.costHeadCode}\n                                        value={code}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='px-lg-10 d-flex justify-content-center mb-5'>\n                            <div className='row d-flex w-500px justify-content-center'>\n                                <div className='col'>\n                                    <CustomInput\n                                        label={'Description'}\n                                        type={INPUT_TYPE.textarea}\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        style={{\n                                            borderRadius: '6px',\n                                        }}\n                                        placeholder='Enter Description'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='d-flex justify-content-center mb-5'>\n                    <CustomButton\n                        loading={loading}\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel='Create'\n                        onClick={AddCostCenter}\n                        type='submit'\n                        buttonSize={BUTTON_SIZE.normal}\n                    />\n                </div>\n            </form>\n        </CustomModal>\n    )\n}\n\nexport {CreateCostModal}\n","import {useState, useEffect, useCallback} from 'react'\nimport CostCenterTabel from './CostCenterTabel'\nimport {CreateCostModal} from './CreateCostModal'\nimport {getCostCenterListService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport {useDispatch} from 'react-redux'\nimport {getParentCostCenterListAction} from '../../../../../../redux/actions/SettingActions'\nimport AccessRights from '../../../../../../accessRights/AccessRights'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport debounce from 'lodash.debounce'\n\nexport default function CostCenterCard() {\n    const dispatch = useDispatch()\n    const [open, setOpen] = useState(false)\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const [open1, setOpen1] = useState(false)\n    const [costTrackingData, setCostTrackingData] = useState(null)\n    const [page, setPage] = useState(1)\n    const [loader, setLoader] = useState(true)\n    const [data, setData] = useState('')\n    const [statusFilter, setstatusFilter] = useState('')\n    const handleClose1 = () => {\n        setOpen1(false)\n    }\n    const [search, setSearch] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n\n    useEffect(() => {\n        getcostcenter()\n    }, [page, statusFilter, search])\n\n    const getcostcenter = () => {\n        setLoader(true)\n        dispatch(getParentCostCenterListAction())\n        const body = {\n            page: page,\n            filter: statusFilter,\n            search: search,\n        }\n        getCostCenterListService(body)\n            .then((res) => {\n                setCostTrackingData(res?.costCenters)\n            })\n            .finally(() => {\n                setLoader(false)\n            })\n    }\n\n    const handleSearchChange = (e) => {\n        setPage(1)\n        setSearchVal(e.target.value)\n        delaySaveToDb(e.target.value)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setSearch(val)\n        }, 500),\n        []\n    )\n\n    return (\n        <>\n            <div\n                className='card bg-cmwhite h-auto shadow'\n                style={{fontSize: '14px', borderRadius: 10, fontFamily: 'Manrope'}}\n            >\n                <div className='w-100 p-7 d-sm-flex  justify-content-between'>\n                    <div\n                        // className='mt-2 ms-2 mb-sm-0 mb-5 b text-cmGrey600'\n                        // style={{ fontSize: '16px', fontFamily: 'Manrope', fontWeight: 600 }}\n                        className='mt-2 ms-2 text-cmGrey600 mb-5'\n                        style={{fontSize: '16px', fontFamily: 'Manrope', fontWeight: '600'}}\n                    >\n                        Create cost centers and sub-centers to ensure costs are tracked accurately.\n                    </div>\n                    <div>\n                        <CustomInput\n                            type={INPUT_TYPE.search}\n                            onChange={handleSearchChange}\n                            value={searchVal}\n                        />\n                    </div>\n                    <div className='d-flex align-items-center flex-wrap gap-5 justify-content-center'>\n                        <div className='d-flex align-items-center gap-3'>\n                            <div className='text-cmGrey800' style={{fontWeight: '600'}}>\n                                Status:\n                            </div>\n\n                            <CustomDropdown\n                                searching={false}\n                                options={[\n                                    {name: 'All', value: ''},\n                                    {name: 'Active', value: 'active'},\n                                    {name: 'Inactive', value: 'inactive'},\n                                ]}\n                                onChange={(e) => {\n                                    setstatusFilter(e.value)\n                                    setPage(1)\n                                }}\n                                value={statusFilter}\n                            />\n                        </div>\n\n                        <AccessRights\n                            customCondition={\n                                allPermissionsAccess.administrator.setting.costTracking.add\n                            }\n                        >\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.primary}\n                                buttonLabel='Create New'\n                                onClick={() => setOpen(true)}\n                            />\n                        </AccessRights>\n                    </div>\n                </div>\n                <div>\n                    <CostCenterTabel\n                        page={page}\n                        setPage={setPage}\n                        className='mx-0 px-0'\n                        costTrackingData={costTrackingData}\n                        data={data}\n                        setData={setData}\n                        open={open1}\n                        setOpen={setOpen1}\n                        handleClose={handleClose1}\n                        setLoader={setLoader}\n                        getcostcenter={getcostcenter}\n                    />\n                </div>\n                {open && (\n                    <CreateCostModal\n                        show={open}\n                        handleClose={handleClose}\n                        getcostcenter={getcostcenter}\n                        setLoader={setLoader}\n                        loader={loader}\n                    />\n                )}\n                <CustomLoader full visible={loader} />\n            </div>\n            {costTrackingData?.data?.length > 0 ? (\n                <div className='mt-5'>\n                    <Pagination\n                        setPage={setPage}\n                        page={page}\n                        totalPages={costTrackingData?.last_page}\n                        totalRecords={costTrackingData?.total}\n                    />\n                </div>\n            ) : null}\n        </>\n    )\n}\n","import CostCenterCard from './CostCenter/CostCenterCard'\n\nexport default function CostCenter() {\n    return (\n        <>\n            <CostCenterCard />\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport {\n    AddDepartmentService,\n    getDepartmentDropdownService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomInput from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst CreateDepartmentModal = ({show, handleClose, setLoader, getdepartment}) => {\n    const [departmentlist, setDepartmentList] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [department, setDepartment] = useState()\n    const [name, setName] = useState()\n    const adddepartment = (e) => {\n        e.preventDefault()\n        var body = {\n            name: name,\n            parent_id: department,\n        }\n        if (!name) return CustomToast.error('Enter name')\n        setLoading(true)\n        AddDepartmentService(body)\n            .then((res) => {\n                setLoader(true)\n                handleClose()\n                CustomToast.success('Deparment Added Successfully')\n                getdepartment()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => setLoading(false))\n    }\n    useEffect(function () {\n        getDepartmentDropdownService().then((res) => {\n            setDepartmentList(res.data?.filter((item) => !item?.parent_id))\n        })\n    }, [])\n\n    return (\n        <CustomModal show={show} onHide={handleClose} maxWidth='550' title={'New Department'}>\n            <CustomLoader visible={loading} full />\n\n            {/* <div className='modal-header '></div> */}\n            <form onSubmit={adddepartment} className='w-75 mx-auto'>\n                <div className='mb-10'>\n                    <div className='  '>\n                        <div className='mb-5 mb-sm-0 d-flex justify-content-center'>\n                            <div className='mb-sm-10 mb-5 row d-flex w-500px justify-content-center'>\n                                <div className='col text-cmGrey700'>\n                                    <CustomDropdown\n                                        label={'Parent Department'}\n                                        options={departmentlist}\n                                        onChange={(e) => setDepartment(e.target.value)}\n                                        name='status'\n                                        value={department}\n                                        valueKey='id'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='  d-flex justify-content-center'>\n                            <div className='row d-flex w-500px justify-content-center'>\n                                <div className='col '>\n                                    <CustomInput\n                                        label={'Department Name'}\n                                        required\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        placeholder='Enter Department Name'\n                                        rejex={/^[\\w\\-\\s]+$/}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='d-flex justify-content-center mb-5 '>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel='Create'\n                        padding={'px-20'}\n                        onClick={adddepartment}\n                    />\n                </div>\n            </form>\n        </CustomModal>\n    )\n}\n\nexport {CreateDepartmentModal}\n","import {useState, useEffect} from 'react'\nimport {deletDepartmentService, updateDepartmentService} from '../../../../../../services/Services'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomInput from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst EditDepartmentModal = ({\n    show,\n    handleClose,\n    data,\n    departmentlist,\n    setLoader,\n    getdepartment,\n}) => {\n    const [department, setDepartment] = useState(parseInt(data.parent_id))\n    const [name, setName] = useState()\n    const [parent, setParent] = useState()\n    const updatedepartment = () => {\n        var body = {\n            id: data.id,\n            name: name,\n            parent_id: department,\n        }\n        if (!name) return CustomToast.error('Select Department Name')\n        updateDepartmentService(body)\n            .then((res) => {\n                setLoader(true)\n                handleClose()\n                getdepartment()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n    const deletedepartment = () => {\n        var body = {\n            id: data.id,\n            parent_id: data.parent_id,\n        }\n        deletDepartmentService(body).then((res) => {\n            setLoader(true)\n            handleClose()\n            CustomToast.success('Department Deleted Successfully')\n            getdepartment()\n        })\n    }\n    useEffect(\n        function () {\n            setName(data.name)\n            setParent(data.parent_id)\n        },\n        [data]\n    )\n\n    return (\n        <CustomModal show={show} onHide={handleClose} title={'Edit Department'} maxWidth='650'>\n            <div className=''>\n                <div className='px-lg-10'>\n                    {data?.parent_id ? (\n                        <div className=' px-lg-10 d-flex justify-content-center my-5'>\n                            <div className='w-100'>\n                                <div className=''>\n                                    <CustomDropdown\n                                        label={'Parent Department'}\n                                        options={departmentlist}\n                                        value={department}\n                                        onChange={(e) => {\n                                            setDepartment(e.target.value)\n                                        }}\n                                        name='status'\n                                        valueKey='id'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ) : null}\n\n                    <div className=' px-lg-10 d-flex justify-content-center my-5'>\n                        <div className='w-100'>\n                            <CustomInput\n                                label={'Department Name'}\n                                required\n                                onChange={(e) => setName(e.target.value)}\n                                placeholder='Enter'\n                                value={name}\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='d-flex justify-content-center my-5 gap-3'>\n                {data?.people_count == 0 ? (\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.error}\n                        buttonLabel=' Delete'\n                        onClick={() => {\n                            CustomDialog.warn(\n                                'Deleting this department will affect the entire software. Do you wish to continue?',\n                                () => {\n                                    deletedepartment()\n                                }\n                                // () => {}\n                            )\n                        }}\n                    />\n                ) : // <button\n                //     type='button'\n                //     className='btn py-2'\n                //     style={{\n                //         background: 'rgba(255, 51, 51, 0.1) ',\n                //         color: '#FF3333',\n                //         borderRadius: '6px',\n                //         fontSize: '16px',\n                //         borderWidth: 0,\n                //     }}\n                //     onClick={() => {\n                //         CustomDialog.warn(\n                //             'Deleting this department will affect the entire software. Do you wish to continue?',\n                //             () => {\n                //                 deletedepartment()\n                //             }\n                //             // () => {}\n                //         )\n                //     }}\n                // >\n                //     Delete\n                // </button>\n                null}\n\n                <CustomButton\n                    buttonType={BUTTON_TYPE.primary}\n                    buttonLabel='Save'\n                    onClick={updatedepartment}\n                />\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default EditDepartmentModal\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useRef, useState} from 'react'\nimport {CreateDepartmentModal} from './CreateDeparmentModal'\nimport EditDepartmentModal from './EditDeparmentModal'\nimport Edit from '../../../sequidocs/Icon/edit.png'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../../accessRights/AccessRights'\nimport {\n    TABLE_BORDER,\n    formattedNumberFieldsWithoutDecimal,\n} from '../../../../../../helpers/CommonHelpers'\nimport {TieredMenu} from 'primereact/tieredmenu'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport {deletDepartmentService} from '../../../../../../services/Services'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport CustomOverlayPanel from '../../../../../../customComponents/customOverlayPanel/CustomOverlayPanel'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\n\nexport const CommanDepartmentTable = ({\n    isChild = false,\n    item,\n    index,\n    setShowChild = () => {},\n    showChild = false,\n    onEditPress = () => {},\n    setData,\n    getdepartment,\n}) => {\n    const menu = useRef(null)\n    // const positionN = item?.positions_name?.map((item) => {\n    //     return {label: item}\n    // })\n    const deletedepartment = (id) => {\n        var body = {\n            id: id,\n            // parent_id: data.parent_id,\n        }\n        deletDepartmentService(body).then((res) => {\n            getdepartment()\n            CustomToast.success('Department Deleted Successfully')\n        })\n    }\n    const positionTemplate = (\n        <div className='bg-cmInfo text-dark'>\n            {item?.positions_name?.map((item) => (\n                <>\n                    <div>\n                        <ul>\n                            <li\n                                className='text-cmGrey700'\n                                style={{\n                                    fontFamily: fontsFamily.manrope,\n                                    fontSize: '14px',\n                                    fontWeight: '700',\n                                    listStyle: 'none',\n                                }}\n                            >\n                                {item}\n                            </li>\n                        </ul>\n                    </div>\n                </>\n            ))}\n        </div>\n    )\n\n    return (\n        <tr className='stripRow'>\n            <td\n                className='p-5 ps-10 d-flex align-items-center text-cmGrey800'\n                style={{\n                    fontSize: '14px',\n                    fontFamily: 'Manrope',\n                    fontWeight: 600,\n                }}\n            >\n                {isChild ? '- ' : ''}\n                {item?.name}\n                {item?.subdepartments?.length > 0 && (\n                    <i\n                        onClick={() => setShowChild(!showChild)}\n                        className={\n                            !showChild\n                                ? 'bi bi-caret-right-fill fs-5 cursor-pointer ms-1 text-cmGrey800'\n                                : 'bi bi-caret-down-fill fs-5 cursor-pointer ms-1 text-cmGrey800'\n                        }\n                        style={{\n                            fontSize: '18px',\n                            fontWeight: 'bold',\n                        }}\n                    ></i>\n                )}\n                {/* <i className='fa-solid fa-greater-than ms-4 '></i>{' '} */}\n            </td>\n            <td\n                className='p-5 text-cmGrey700'\n                style={{\n                    fontWeight: '500',\n                    fontSize: '14px',\n                    fontStyle: 'Medium',\n                }}\n            >\n                {formattedNumberFieldsWithoutDecimal(item?.subdepartments?.length)}\n            </td>\n            <td\n                style={{\n                    fontWeight: '500',\n                    fontSize: '14px',\n                    fontStyle: 'Medium',\n                }}\n                className='p-5 text-cmGrey700'\n            >\n                {item?.position_count != 0 && (\n                    <div className='d-flex align-items-center gap-2'>\n                        <CustomOverlayPanel\n                            showIcon={false}\n                            templateData={positionTemplate}\n                            hovertemplate={\n                                <div\n                                    className='text-decoration-underline cursor-pointer text-hover-primary'\n                                    onClick={(e) => menu.current.toggle(e)}\n                                    style={{fontWeight: '600'}}\n                                >\n                                    {formattedNumberFieldsWithoutDecimal(item?.position_count)}\n                                </div>\n                            }\n                        />\n\n                        {/* <div\n              className='bi bi-info-circle-fill cursor-pointer text-cminfo'\n              data-bs-toggle='tooltip'\n              data-bs-trigger='hover'\n              title={positionN}\n            ></div> */}\n                    </div>\n                )}\n            </td>\n            <td\n                style={{\n                    fontWeight: '500',\n                    fontSize: '14px',\n                    fontStyle: 'Medium',\n                }}\n                className='p-5 text-cmGrey500'\n            >\n                <i className='bi bi-person me-1'></i>\n                {formattedNumberFieldsWithoutDecimal(item?.people_count)}\n            </td>\n            <AccessRights\n                customCondition={allPermissionsAccess.administrator.setting.departments.add}\n            >\n                <td>\n                    {item.parent_id !== '' && (\n                        <div className='d-flex flex-center gap-5'>\n                            <CustomEditIcon\n                                onClick={() => {\n                                    if (item.parent_id === '') {\n                                        setData('')\n                                        onEditPress()\n                                    } else {\n                                        onEditPress()\n                                        setData(item)\n                                    }\n                                }}\n                            />\n                            {item?.subdepartments?.length <= 0 &&\n                            item?.people_count <= 0 &&\n                            ![1, 2]?.includes(item?.id) ? (\n                                <CustomDelete\n                                    onClick={() => {\n                                        CustomDialog.warn(\n                                            'Are you sure you want to delete ?',\n                                            () => {\n                                                deletedepartment(item?.id)\n                                            }\n                                        )\n                                    }}\n                                />\n                            ) : null}\n                        </div>\n                    )}\n                </td>\n            </AccessRights>\n        </tr>\n    )\n}\n\nexport const DepartmentTableRow = ({item, onEditPress, setData, index, getdepartment}) => {\n    const [showChild, setShowChild] = useState(false)\n    const childData = item?.subdepartments\n\n    return (\n        <>\n            <CommanDepartmentTable\n                item={item}\n                index={index}\n                showChild={showChild}\n                setShowChild={setShowChild}\n                onEditPress={onEditPress}\n                setData={setData}\n                getdepartment={getdepartment}\n            />\n            {showChild &&\n                (childData ? (\n                    childData.map((i) => (\n                        <CommanDepartmentTable\n                            key={i?.id}\n                            isChild={true}\n                            item={i}\n                            index={index}\n                            showChild={showChild}\n                            setShowChild={setShowChild}\n                            onEditPress={onEditPress}\n                            setData={setData}\n                            getdepartment={getdepartment}\n                        />\n                    ))\n                ) : (\n                    <p>Not found</p>\n                ))}\n        </>\n    )\n}\n\nconst DepartmentTabel = ({\n    className,\n    open,\n    setOpen,\n    departmentsData,\n    setLoader,\n    getdepartment,\n    handleClose,\n    setData,\n    data,\n    departmentlist,\n    activePage,\n    setActivePage,\n}) => {\n    return (\n        <>\n            <div className={`card  ${className}`}>\n                {/* begin::Header */}\n                <div className='card-body py-0 px-0 mx-0' style={{marginTop: '-5px'}}>\n                    {/* begin::Table container */}\n                    <div className='table-responsive'>\n                        {/* begin::Table */}\n                        <table className='table table-row-bordered table-row-gray-100 gs-0 gy-3'>\n                            {/* begin::Table head */}\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='bg-cmGrey300 stripRow text-cmGrey800'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '600',\n                                        fontFamily: 'Manrope ',\n                                    }}\n                                >\n                                    <th className='ps-10  p-5 text-nowrap'>Departments</th>\n                                    <th className='min-w-120px p-5 text-nowrap'>Sub Dept.</th>\n                                    <th className='min-w-120px p-5 text-nowrap'>Positions</th>\n                                    <th className='min-w-120px p-5 text-nowrap'>People </th>\n                                    <AccessRights\n                                        customCondition={\n                                            allPermissionsAccess.administrator.setting.departments\n                                                .edit\n                                        }\n                                    >\n                                        <th className='min-w-120px'></th>\n                                        {/* <th className='min-w-140px'></th> */}\n                                    </AccessRights>\n                                </tr>\n                            </thead>\n                            {/* end::Table head */}\n                            {/* begin::Table body */}\n                            <tbody className={TABLE_BORDER}>\n                                {departmentsData?.data?.length > 0 ? (\n                                    departmentsData?.data?.map((item, index) => (\n                                        <DepartmentTableRow\n                                            key={item?.id}\n                                            item={item}\n                                            index={index}\n                                            onEditPress={() => setOpen(true)}\n                                            setData={setData}\n                                            getdepartment={getdepartment}\n                                        />\n                                    ))\n                                ) : (\n                                    <tr className='no-data'>\n                                        <td\n                                            colSpan={6}\n                                            className='text-center fw-bold py-10'\n                                            style={{\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination\n                        page={activePage}\n                        totalPages={departmentsData?.last_page}\n                        setPage={(changedPage) => setActivePage(changedPage)}\n                    />\n                </div>\n                {data === '' ? (\n                    <>\n                        {open ? (\n                            <CreateDepartmentModal\n                                show={open}\n                                handleClose={handleClose}\n                                setLoader={setLoader}\n                                getdepartment={getdepartment}\n                            />\n                        ) : null}\n                    </>\n                ) : (\n                    <>\n                        {open ? (\n                            <EditDepartmentModal\n                                show={open}\n                                handleClose={handleClose}\n                                data={data}\n                                departmentlist={departmentlist}\n                                setLoader={setLoader}\n                                getdepartment={getdepartment}\n                            />\n                        ) : null}\n                    </>\n                )}\n            </div>\n        </>\n    )\n}\n\nexport {DepartmentTabel}\n","import React, {useState, useEffect, useMemo, useCallback} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport {DepartmentTabel} from './DepartmentTabel'\nimport {Dropdown1} from '../../../../../../_metronic/partials'\nimport clsx from 'clsx'\nimport {CreateDepartmentModal} from './CreateDeparmentModal'\nimport {\n    getDepartmentDropdownService,\n    getDepartmentListService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport {getDepartmentsAction} from '../../../../../../redux/actions/SettingActions'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getDepartmentsSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport AccessRights from '../../../../../../accessRights/AccessRights'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {getGlobalSearchData} from '../../../../../../helpers/CommonHelpers'\nimport debounce from 'lodash.debounce'\n\nexport default function DepartmentCard() {\n    const dispatch = useDispatch()\n    const [open, setOpen] = useState(false)\n    const [open1, setOpen1] = useState(false)\n    const departmentsData = useSelector(getDepartmentsSelector)\n    const [loader, setLoader] = useState(true)\n    const [searchText, setSearchText] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [data, setData] = useState('')\n    const [activePage, setActivePage] = useState(1)\n\n    const [departmentlist, setDepartmentList] = useState([])\n    const [departmentData, setDepartmentData] = useState([])\n\n    useEffect(() => {\n        getdepartment()\n        getDepartmentDropdownService().then((res) => {\n            setDepartmentList(res.data)\n        })\n    }, [searchVal, activePage])\n    const getdepartment = () => {\n        const body = {\n            page: activePage,\n            search: searchVal,\n        }\n        getDepartmentListService(body)\n            .then((res) => {\n                setDepartmentData(res?.data)\n            })\n            .finally(() => setLoader(false))\n\n        // dispatch(getDepartmentsAction()).finally((res) => {\n        //     setLoader(false)\n        // })\n    }\n    const handleClose1 = () => {\n        setOpen1(false)\n    }\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const onSearchDeparment = (e) => {\n        // setFilterData(initialFilter)\n        setActivePage(1)\n        setSearchText(e?.target?.value)\n        delaySave(e?.target?.value)\n    }\n    const delaySave = useCallback(\n        debounce((val) => {\n            setSearchVal(val)\n            setLoader(true)\n        }, 500),\n        [searchVal]\n    )\n\n    return (\n        <>\n            <div\n                className='card mb-15 bg-white h-auto shadow'\n                style={{fontSize: '14px', fontFamily: 'Manrope'}}\n            >\n                <div className='w-100 p-7 d-sm-flex flex-wrap justify-content-between'>\n                    <div\n                        className=' ms-2 mb-sm-0 mb-5 text-cmGrey600'\n                        style={{\n                            fontSize: '16px',\n                            fontFamily: 'Manrope',\n                            fontWeight: 600,\n                            alignSelf: 'center',\n                        }}\n                    >\n                        Organize employees by department with unique compensation plans and\n                        permissions.\n                    </div>\n                    <div className='' style={{alignSelf: 'center'}}>\n                        <CustomInput\n                            type={INPUT_TYPE.search}\n                            value={searchText ?? ''}\n                            onChange={onSearchDeparment}\n                        />\n                    </div>\n                    <div className=''>\n                        <AccessRights\n                            customCondition={\n                                allPermissionsAccess.administrator.setting.departments.add\n                            }\n                        >\n                            <CustomButton\n                                buttonType={BUTTON_TYPE.primary}\n                                buttonLabel='Create New'\n                                onClick={() => setOpen(true)}\n                            />\n                        </AccessRights>\n                    </div>\n                </div>\n                <div>\n                    <DepartmentTabel\n                        className='mx-0 px-0'\n                        open={open1}\n                        setOpen={setOpen1}\n                        departmentsData={departmentData}\n                        setLoader={setLoader}\n                        getdepartment={getdepartment}\n                        handleClose={handleClose1}\n                        setData={setData}\n                        data={data}\n                        departmentlist={departmentlist}\n                        activePage={activePage}\n                        setActivePage={setActivePage}\n                    />\n                </div>\n\n                <CustomLoader full visible={loader}></CustomLoader>\n                {open && (\n                    <CreateDepartmentModal\n                        show={open}\n                        handleClose={handleClose}\n                        setLoader={setLoader}\n                        getdepartment={getdepartment}\n                    />\n                )}\n            </div>\n        </>\n    )\n}\n","import DeparmentCard from './Department/DeparmentCard'\nexport default function Department() {\n    return (\n        <>\n            <DeparmentCard />\n        </>\n    )\n}\n","import {Sidebar} from 'primereact/sidebar'\nimport {useEffect, useState} from 'react'\nimport {updateCommissionService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport {formattedNumberFieldsWithoutDecimal} from '../../../../../../helpers/CommonHelpers'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\n\nconst ViewPositionSidebar = ({\n    open,\n    close,\n    data,\n    setupLoader,\n    setData,\n    editposition,\n    setEditPosition,\n    list,\n    getPositionid,\n    position,\n    setPosition,\n    edit,\n    setEdit,\n    override,\n    setOverrides,\n    deductions,\n    setDeduction,\n    setLoader,\n}) => {\n    const companySetting = useSelector(getCompanySettingSelector)\n    useEffect(\n        function () {\n            setEdit(editposition)\n            setPosition(data)\n            setDeduction(data?.deducation)\n            setOverrides(data?.override)\n        },\n\n        [data, editposition, list]\n    )\n    const handleSave = () => {\n        const data = deductions\n        data?.map((item) => {\n            delete item.costcenter\n            // delete item.deduction_type\n            delete item.limit\n            delete item.limit_ammount\n            delete item.limit_type\n            delete item.position_id\n            delete item.deduction_setting_id\n            delete item.id\n        })\n        var data1 = override\n        data1.map((item) => {\n            delete item.override_ammount_locked\n            delete item.override_id\n            delete item.id\n            // delete item.override_id\n            delete item.overrides_type\n            delete item.override_type_locked\n            delete item.overrides_detail\n            delete item.overridessattlement\n            delete item.position_id\n            delete item.settlement_id\n            // delete item.override_type_id\n            delete item.status\n        })\n        var body = {\n            commission_parentage: position.commission,\n            commission_structure_type: position.commission_structure,\n            upfront_ammount: position.upfront,\n            calculated_by: position.upfront_calculated_by,\n            upfront_system: position.upfront_system,\n            upfront_limit: position.limit_par_period,\n            limit_ammount: position.limit_ammount,\n            limit_type: position.limit,\n            sliding_scale: position.sliding_scale,\n            deduction: data,\n            override: data1,\n        }\n        updateCommissionService(position.id, body).then((res) => {\n            getPositionid(position?.id)\n        })\n    }\n\n    const titleStyle = {fontWeight: 600, fontSize: 16, lineHeight: '21px', color: '#616161'}\n    const discriptionStyle = {fontWeight: 600, fontSize: 16, lineHeight: '21px', color: '#212121'}\n    const HeadingStyle = {fontWeight: 600, fontSize: 16, lineHeight: '21px', color: '#212121'}\n\n    return (\n        <div>\n            <Sidebar\n                visible={open}\n                data-pr-classname='w-100'\n                position='right'\n                p-sidebar-content='m-0'\n                onHide={close}\n                showCloseIcon={false}\n                style={{\n                    fontFamily: fontsFamily.manrope,\n                    margin: '0px',\n                    padding: '0px',\n                    width: '100%',\n                }}\n                className={'w-sm-30 w-100 m-0 p-0 d-flex '}\n                icons={() => (\n                    <div className='d-flex align-items-center ms-sm-10 justify-content-between  w-100 '>\n                        <div className='' style={HeadingStyle}>\n                            {data?.position_name} &nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp; Commission\n                            Structure\n                        </div>\n\n                        <div\n                            className={`bi bi-x-circle text-cmGrey800 fs-1 cursor-pointer text-hover-danger`}\n                            onClick={close}\n                        />\n                    </div>\n                )}\n            >\n                <CustomLoader full visible={setupLoader} />\n                <div className='mb-7 w-100 m-0 p-0 ' style={{margin: 0, padding: 0, width: 100}}>\n                    <div className='row py-5 w-100'>\n                        <div className='col-1'></div>\n                        <div className='col-5' style={titleStyle}>\n                            Commission\n                        </div>\n                        <div className='col-5' style={discriptionStyle}>\n                            {data?.commission_parentag_hiring_locked ? (\n                                <span className='bi bi-lock-fill text-cmGrey700 me-2' />\n                            ) : null}\n                            <span> {data?.commission_parentage}%</span>\n                        </div>\n                        <div className='col-1'></div>\n                    </div>\n                    {/* line 2 */}\n                    <div className='row py-5 bg-strip'>\n                        <div className='col-1'></div>\n                        <div className='col-5' style={titleStyle}>\n                            Comission Structure:\n                        </div>\n                        <div className='col-5' style={discriptionStyle}>\n                            {data?.commission_parentag_type_hiring_locked ? (\n                                <span className='bi bi-lock-fill text-cmGrey700 me-2' />\n                            ) : null}\n                            <span>{data?.commission_structure_type}</span>\n                        </div>\n                        <div className='col-1'></div>\n                    </div>\n                    <div className='h-50px' />\n                    {/* Line 3 */}\n                    {data?.upfront_status ? (\n                        <>\n                            <div className='row py-5 bg-strip'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    Upfront:\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {data?.upfront_ammount_locked ? (\n                                        <span className='bi bi-lock-fill text-cmGrey700 me-2' />\n                                    ) : null}\n                                    <span>\n                                        {formattedNumberFields(data?.upfront_ammount)}{' '}\n                                        {data?.calculated_by}\n                                    </span>\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n\n                            <div className='row py-5'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    {' '}\n                                    Upfront System:\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {data?.upfront_system_locked ? (\n                                        <span className='bi bi-lock-fill text-cmGrey700 me-2' />\n                                    ) : null}\n                                    <span>{data?.upfront_system}</span>\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n                            <div className='row py-5 bg-strip'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    Limit (Per period):\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {formattedNumberFieldsWithoutDecimal(data?.upfront_limit, '$')}\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n                        </>\n                    ) : null}\n                    <div className='h-50px' />\n                    {data?.deduction_status ? (\n                        <div>\n                            <div style={HeadingStyle} className='py-2 row'>\n                                <div className='col-1'></div>\n                                <div className='d-flex gap-2 align-items-center col'>\n                                    {data?.deduction_locked ? (\n                                        <span className='bi bi-lock-fill text-cmGrey700' />\n                                    ) : null}\n                                    <div>Deductions</div>\n                                </div>\n                            </div>\n\n                            {data?.deduction?.map((item, index) => (\n                                <div\n                                    className='row py-5'\n                                    key={index}\n                                    style={{\n                                        background: index % 2 == 0 ? '#F9F9F9' : '',\n                                    }}\n                                >\n                                    <div className='col-1'></div>\n                                    <div className='col-5' style={titleStyle}>\n                                        {item?.cost_center_name}:\n                                    </div>\n                                    <div className='col-5' style={discriptionStyle}>\n                                        {item?.deduction_type} {item?.ammount_par_paycheck}\n                                    </div>\n                                    <div className='col-1'></div>\n                                </div>\n                            ))}\n                            <div className='row py-5'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    Limit:\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {data?.limit_type} {data?.limit_ammount ?? '0'}{' '}\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n                        </div>\n                    ) : null}\n                    <div className='h-50px' />\n\n                    <div>\n                        <div style={HeadingStyle} className='py-2 row'>\n                            <div className='col-1'></div>\n                            <div className='col'>Overrides</div>\n                        </div>\n                        {data?.override?.length > 0 &&\n                            data?.override?.map((item2, index) =>\n                                item2?.status ? (\n                                    <div\n                                        className='row py-5'\n                                        style={{\n                                            background: index % 2 == 0 ? '#F9F9F9' : '',\n                                        }}\n                                        key={index}\n                                    >\n                                        <div className='col-1'></div>\n                                        <div className='col-5' style={titleStyle}>\n                                            {item2?.overrides_type ?? '-'}:\n                                        </div>\n                                        <div className='col-5' style={discriptionStyle}>\n                                            {data?.override_ammount_locked ? (\n                                                <span className='bi bi-lock-fill text-cmGrey700 me-2' />\n                                            ) : null}\n                                            <span>\n                                                {item2.override_type_id == 4\n                                                    ? formattedNumberFieldsWithoutDecimal(\n                                                          item2?.override_ammount,\n                                                          '%'\n                                                      )\n                                                    : formattedNumberFieldsWithoutDecimal(\n                                                          item2?.override_ammount,\n                                                          item2?.type == 'percent' ? '' : '$'\n                                                      )}{' '}\n                                                {item2?.type == 'percent' ? '%' : item2?.type}\n                                            </span>\n                                        </div>\n                                        <div className='col-1'></div>\n                                    </div>\n                                ) : null\n                            )}\n                    </div>\n\n                    <div className='h-50px' />\n\n                    {data?.reconciliation_status && companySetting?.reconciliation ? (\n                        <>\n                            <div style={HeadingStyle} className='py-2 row'>\n                                <div className='col-1'></div>\n                                <div className='col'>Settlements:</div>\n                            </div>\n                            <div className='row py-5 bg-strip'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    {' '}\n                                    Withhold Commission:\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {formattedNumberFieldsWithoutDecimal(\n                                        data?.commission_withheld,\n                                        '$'\n                                    )}{' '}\n                                    {data?.commission_type}\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n                            {/* line 2 */}\n                            <div className='row py-5'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    Maximum:\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {formattedNumberFieldsWithoutDecimal(\n                                        data?.maximum_withheld,\n                                        '$'\n                                    )}\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n                            {/* line 3 */}\n                            <div className='row py-5 bg-strip'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    {' '}\n                                    Override Settlement:\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {data?.override_settlement}\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n                            {/* Line */}\n                            <div className='row py-5'>\n                                <div className='col-1'></div>\n                                <div className='col-5' style={titleStyle}>\n                                    Clawback Settlement:\n                                </div>\n                                <div className='col-5' style={discriptionStyle}>\n                                    {data?.clawback_settlement}\n                                </div>\n                                <div className='col-1'></div>\n                            </div>\n                        </>\n                    ) : null}\n                    {data?.is_stack === 1 ? (\n                        <div className='row py-5 bg-strip'>\n                            <div className='col-1'></div>\n                            <div className='col-5' style={titleStyle}>\n                                Stack Settlement:\n                            </div>\n                            <div className='col-5' style={discriptionStyle}>\n                                {data?.stack_settlement}\n                            </div>\n                            <div className='col-1'></div>\n                        </div>\n                    ) : null}\n                    {/* Pay Frequency */}\n                    <div className='row py-5'>\n                        <div className='col-1'></div>\n                        <div className='col-5' style={titleStyle}>\n                            Pay Frequency:\n                        </div>\n                        <div className='col-5' style={discriptionStyle}>\n                            {data?.frequency_type_name}\n                        </div>\n                        <div className='col-1'></div>\n                    </div>\n                </div>\n            </Sidebar>\n        </div>\n    )\n}\n\nexport default ViewPositionSidebar\n","import {useCallback, useEffect, useState} from 'react'\nimport {CreateCompensationAppModal} from './CompensationPlan/CreateCompensationAppModal'\nimport {\n    deletePositionService,\n    getCostCenterDropdownService,\n    getPositionByIdService,\n    updatePositionGroupService,\n    updatePositionHierarchyService,\n} from '../../../../../../services/Services'\nimport ViewPositionModal from './ViewPositionModal'\nimport {useSelector} from 'react-redux'\nimport {getPermissionsGroupListSelector} from '../../../../../../redux/selectors/PermissionsSelectors'\nimport {getPermissionGroupListAction} from '../../../../../../redux/actions/PermissionsActions'\nimport {useDispatch} from 'react-redux'\nimport {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../../accessRights/AccessRightsConstants'\nimport AccessRights, {isPermittedForAccess} from '../../../../../../accessRights/AccessRights'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomDialog from '../../../../../../customComponents/customDialog/CustomDialog'\nimport {\n    TABLE_BORDER,\n    formattedNumberFieldsWithoutDecimal,\n} from '../../../../../../helpers/CommonHelpers'\nimport Edit from '../../../sequidocs/Icon/edit.png'\nimport {useNavigate} from 'react-router-dom'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport ViewPositionSidebar from './ViewPositionSidebar'\n\nconst PositionTabel = ({\n    getPosition,\n    loader,\n    setLoader,\n    positionsData,\n    setPositionsData,\n    className,\n    reload,\n    onEditPosition,\n    activePage,\n    setActivePage,\n}) => {\n    const navigate = useNavigate()\n\n    const dispatch = useDispatch()\n    const [setup, setSetup] = useState(false)\n    const [selectedPositionData, setSelectedPositionData] = useState({id: '', position: ''})\n    const [viewSideBar, setViewSideBar] = useState(false)\n\n    const handleSideBar = () => {\n        setViewSideBar(!viewSideBar)\n    }\n\n    const handlSetup = () => {\n        setSetup(false)\n        setSelectedPositionData(null)\n    }\n    const deletePosition = (id) => {\n        setLoader(true)\n        deletePositionService(id).finally((res) => {\n            CustomToast.success('Position Deleted Successfully')\n            getPosition()\n        })\n    }\n    const [list, setList] = useState([])\n    useEffect(() => {\n        dispatch(getPermissionGroupListAction())\n        getCostCenterDropdownService().then((res) => {\n            setList(res.data)\n        })\n    }, [])\n\n    const [setupLoader, setSetupLoader] = useState(false)\n    const [position, setPosition] = useState()\n    const [edit1, setEdit1] = useState(false)\n    const [override, setOverrides] = useState([])\n    const [deductions, setDeduction] = useState([])\n    const getPositionid = (id) => {\n        getPositionByIdService(id).then((r) => {\n            setData(r.data[0])\n            setPosition(r.data[0])\n            setDeduction(r.data[0].deduction)\n            setOverrides(r.data[0].override)\n            getPosition()\n            setEdit1(false)\n        })\n    }\n    const [data, setData] = useState('')\n    const handleid = (type, item) => {\n        setSetupLoader(true)\n        getPositionByIdService(item?.id)\n            .then((res) => {\n                setData(res.data[0])\n                setSelectedPositionData((val) => ({\n                    ...val,\n                    ...item,\n                    ...res?.data?.[0],\n                }))\n                if (type == 'edit') setSetup(true)\n            })\n            .finally(() => {\n                setSetupLoader(false)\n            })\n    }\n\n    const reorder = useCallback((list, startIndex, endIndex) => {\n        const result = Array.from(list)\n        const [removed] = result.splice(startIndex, 1)\n        result.splice(endIndex, 0, removed)\n        return result\n    }, [])\n\n    const onDragEnd = (result) => {\n        if (!result.destination) return\n        const items = reorder(positionsData, result.source.index, result.destination.index)\n        const body = {\n            position_ids: items?.map((item) => item?.id),\n        }\n        updatePositionHierarchyService(body)\n        setPositionsData(items)\n    }\n\n    const updatePermissionGroup = useCallback(\n        (position_id, group_id) =>\n            new Promise((resolve, reject) => {\n                updatePositionGroupService(position_id, {group_id})\n                    .then(() => {\n                        getPosition().finally(resolve)\n                    })\n                    .catch(reject)\n            }),\n        [getPosition]\n    )\n    return (\n        <>\n            <div className={`card  ${className} mb-6 `}>\n                {/* begin::Header */}\n                <div className='card-body py-0 px-0 mx-0' style={{marginTop: '-5px'}}>\n                    {/* begin::Table container */}\n                    <div className='table-responsive'>\n                        {/* begin::Table */}\n                        <table\n                            style={{height: '50px'}}\n                            className='table table-row-bordered table-row-gray-100'\n                        >\n                            {/* begin::Table head */}\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='text-cmGrey900 bg-cmGrey300'\n                                    style={{\n                                        fontWeight: 700,\n                                        fontSize: '14px',\n                                        lineHeight: '21px',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    {/* <th className='min-text-nowrap'>Order Id</th> */}\n                                    <th className='text-nowrap p-5 ps-10'>Position</th>\n                                    <th className='text-nowrap p-5'>Position Id</th>\n                                    <th className='text-nowrap p-5'>Department</th>\n                                    <th className='text-nowrap p-5'>People</th>\n                                    <th className='text-nowrap p-5'>Pay Frequency</th>\n                                    <th className='text-nowrap p-5'>Overrides</th>\n                                    <th className='text-nowrap p-5'>Commission Structure </th>\n                                    <th className='text-nowrap p-5'>Permissions Group</th>\n                                    <th className=' text-nowrap p-5'></th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {positionsData?.data?.length > 0 ? (\n                                    <>\n                                        {positionsData?.data?.map((item, index) => (\n                                            <tr className='stripRow' key={index}>\n                                                <td\n                                                    className=' ps-10 p-5 text-nowrap text-cmGrey800'\n                                                    style={{fontWeight: 600}}\n                                                >\n                                                    {' '}\n                                                    {item?.position}{' '}\n                                                </td>\n                                                <td\n                                                    className='  p-5 text-nowrap text-cmGrey800'\n                                                    style={{fontWeight: 600}}\n                                                >\n                                                    {' '}\n                                                    {item?.id}{' '}\n                                                </td>\n                                                <td\n                                                    className=' text-nowrap p-5 text-cmGrey700'\n                                                    style={{\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: 500,\n                                                    }}\n                                                >\n                                                    {item?.Department}\n                                                </td>\n                                                <td\n                                                    className='  text-nowrap text-start p-5 text-cmGrey500'\n                                                    style={{fontWeight: '500'}}\n                                                    onClick={() =>\n                                                        navigate('peoples', {\n                                                            state: {\n                                                                id: item?.id,\n                                                                name: item?.position,\n                                                            },\n                                                        })\n                                                    }\n                                                >\n                                                    <span className='px-3 py-1 rounded d-flex align-items-center gap-2 text-cmGrey500 cursor-pointer'>\n                                                        <i class='fa-regular fa-user'></i>\n                                                        {formattedNumberFieldsWithoutDecimal(\n                                                            item?.people\n                                                        )}\n                                                    </span>\n                                                </td>\n                                                <td\n                                                    className='  p-5 text-nowrap text-cmGrey700'\n                                                    style={{fontWeight: '500'}}\n                                                >\n                                                    {item?.pay_frequency ?? 'NA'}\n                                                </td>\n                                                <td\n                                                    className=' p-5'\n                                                    style={{\n                                                        color: '#616161',\n                                                        fontFamily: 'Manrope',\n                                                    }}\n                                                >\n                                                    {item?.override ?? 'NA'}\n                                                </td>\n                                                <td\n                                                    style={{\n                                                        fontFamily: 'Manrope',\n                                                        fontSize: '14px',\n                                                        // cursor: 'pointer',\n                                                    }}\n                                                    className=' p-5 text-cmBlue-Crayola cursor-pointer'\n                                                >\n                                                    {item.status != 0 ? (\n                                                        <div className='d-flex flex-row align-items-center'>\n                                                            <div\n                                                                onClick={() => {\n                                                                    handleid('view', item)\n                                                                    handleSideBar()\n                                                                }}\n                                                                style={{\n                                                                    cursor: 'pointer',\n                                                                }}\n                                                            >\n                                                                View\n                                                            </div>\n                                                            {isPermittedForAccess({\n                                                                permission:\n                                                                    PERMISSIONS_GROUP.administrator\n                                                                        .setting.positions,\n                                                                type: PERMISSION_TYPE.edit,\n                                                            }) && (\n                                                                <>\n                                                                    <span>\n                                                                        {' '}\n                                                                        &nbsp;&nbsp;|&nbsp;&nbsp;\n                                                                    </span>\n                                                                    <div\n                                                                        onClick={() => {\n                                                                            handleid('edit', item)\n                                                                        }}\n                                                                        style={{\n                                                                            cursor: 'pointer',\n                                                                            fontWeight: 'bold',\n                                                                        }}\n                                                                    >\n                                                                        Edit\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </div>\n                                                    ) : (\n                                                        <div\n                                                            className=' '\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                            }}\n                                                            onClick={() => {\n                                                                // setSelectedPositionData(\n                                                                //     item\n                                                                // )\n                                                                handleid('edit', item)\n                                                                // setSetup(true)\n                                                            }}\n                                                        >\n                                                            Setup\n                                                        </div>\n                                                    )}\n                                                </td>\n                                                <td\n                                                    style={{\n                                                        fontFamily: 'Manrope',\n                                                        fontSize: '14px',\n                                                    }}\n                                                    className='p-5 text-cmBlue-Crayola d-flex align-items-start'\n                                                >\n                                                    <PermissionGroup\n                                                        data={item}\n                                                        updateGroup={updatePermissionGroup}\n                                                    />\n                                                </td>\n\n                                                <td className='p-5'>\n                                                    <div className='d-flex gap-2 align-items-center justify-contennt-center'>\n                                                        <button\n                                                            className=' btn btn-sm btn-icon  btn-bg-light btn-active-color-primary'\n                                                            onClick={() => onEditPosition(item)}\n                                                        >\n                                                            <img\n                                                                src={Edit}\n                                                                alt=''\n                                                                style={{\n                                                                    width: '34px',\n                                                                }}\n                                                            />\n                                                        </button>\n                                                        {[position]?.includes(item?.id) ||\n                                                        item?.people > 0 ? (\n                                                            <b></b>\n                                                        ) : (\n                                                            <CustomDelete\n                                                                onClick={() => {\n                                                                    CustomDialog.warn(\n                                                                        'Are you sure you want to delete ?',\n                                                                        () => {\n                                                                            deletePosition(item?.id)\n                                                                        }\n                                                                    )\n                                                                }}\n                                                            />\n                                                        )}\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr className='no-data'>\n                                        <td\n                                            colSpan={10}\n                                            className='text-center fw-bold py-10'\n                                            style={{\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination\n                        page={activePage}\n                        totalPages={positionsData?.last_page}\n                        setPage={(changedPage) => setActivePage(changedPage)}\n                    />\n                </div>\n                {/* begin::Body */}\n                {setup && (\n                    <CreateCompensationAppModal\n                        show={setup}\n                        handleClose={handlSetup}\n                        selectedPositionData={selectedPositionData}\n                        getPosition={getPosition}\n                        setLoader={setLoader}\n                    />\n                )}\n            </div>\n\n            {/* {!setup && selectedPositionData && (\n                <ViewPositionModal\n                    setupLoader={setupLoader}\n                    data={selectedPositionData}\n                    setData={setData}\n                    editposition={setPosition}\n                    setEditPosition={setPosition}\n                    list={list}\n                    getPositionid={getPositionid}\n                    position={position}\n                    setPosition={setPosition}\n                    edit={edit1}\n                    setEdit={setEdit1}\n                    override={override}\n                    setOverrides={setOverrides}\n                    deductions={deductions}\n                    setDeduction={setDeduction}\n                    setLoader={setLoader}\n                    loader={loader}\n                />\n            )} */}\n            {viewSideBar ? (\n                <ViewPositionSidebar\n                    open={viewSideBar}\n                    close={handleSideBar}\n                    setupLoader={setupLoader}\n                    data={selectedPositionData}\n                    setData={setData}\n                    editposition={setPosition}\n                    setEditPosition={setPosition}\n                    list={list}\n                    getPositionid={getPositionid}\n                    position={position}\n                    setPosition={setPosition}\n                    edit={edit1}\n                    setEdit={setEdit1}\n                    override={override}\n                    setOverrides={setOverrides}\n                    deductions={deductions}\n                    setDeduction={setDeduction}\n                    setLoader={setLoader}\n                    loader={loader}\n                />\n            ) : null}\n        </>\n    )\n}\n\nexport default PositionTabel\n\nconst PermissionGroup = ({data, updateGroup}) => {\n    const [loading, setLoading] = useState(false)\n    const [selectedGroup, setSelectedGroup] = useState(data?.group_id)\n    const groupList = useSelector(getPermissionsGroupListSelector)\n    const [editPermission, setEditPermission] = useState(false)\n\n    useEffect(() => {\n        if (data?.group_id) setSelectedGroup(data?.group_id)\n    }, [data?.group_id])\n\n    const updatePermissionGroup = () => {\n        setEditPermission(false)\n        if (selectedGroup) {\n            setLoading(true)\n            updateGroup(data?.id, selectedGroup).finally(() => {\n                setLoading(false)\n                CustomToast.success('Permission Group Updated')\n            })\n        }\n    }\n\n    return (\n        <div className='d-flex gap-2 align-items-center justify-content-center'>\n            {!editPermission && (\n                <>\n                    <span>\n                        {loading ? 'Loading...' : data?.group_name ?? 'No Permission Group'}\n                    </span>\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.positions.edit}\n                    >\n                        <>\n                            <span className='text-cmBlack'>|</span>\n                            <span\n                                onClick={() => setEditPermission(!editPermission)}\n                                className='cursor-pointer  fw-bold'\n                            >\n                                Edit\n                            </span>\n                        </>\n                    </AccessRights>\n                </>\n            )}\n            {editPermission && (\n                <>\n                    <CustomDropdown\n                        options={groupList}\n                        valueKey={'group_id'}\n                        displayKey='group_name'\n                        value={selectedGroup}\n                        onChange={(e) => setSelectedGroup(e?.target?.value)}\n                    />\n\n                    <span onClick={updatePermissionGroup} className='cursor-pointer fw-bold'>\n                        Save\n                    </span>\n                </>\n            )}\n        </div>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useEffect, useMemo} from 'react'\n\nimport {} from '../../../../../../_metronic/partials/modals/create-app-stepper/IAppModels'\nimport {\n    AddPositionService,\n    getDepartmentDropdownService,\n    updatePositionsService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {useDispatch} from 'react-redux'\nimport {getPermissionGroupListAction} from '../../../../../../redux/actions/PermissionsActions'\nimport {useSelector} from 'react-redux'\nimport {getPermissionsGroupListSelector} from '../../../../../../redux/selectors/PermissionsSelectors'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport {\n    newPositionValidation,\n    NEW_POSITION_VALIDATION_FIELD,\n} from '../../../../../../validations/validations'\nimport {isEmptyObjectValue} from '../../../../../../helpers/CommonHelpers'\nimport CustomInput from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {getPosittionMailRolesAction} from '../../../../../../redux/actions/SettingActions'\nimport {\n    getPositionsSelector,\n    positionMainRolesSelector,\n} from '../../../../../../redux/selectors/SettingsSelectors'\nimport {MAIN_POSITTIONS_ID} from '../../../../../../constants/constants'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\n\nconst ManagePosition = ({getPosition, setLoader, show, handleClose, positionEditdata}) => {\n    const dispatch = useDispatch()\n    const [departmentlist, setDepartmentList] = useState([])\n    const [department, setDepartment] = useState(positionEditdata?.department_id)\n    const [name, setName] = useState(positionEditdata?.position)\n    const [mainPosition, setMainPosition] = useState(positionEditdata?.parent_id)\n    const [selectedGroup, setSelectedGroup] = useState(positionEditdata?.group_id)\n    const positionList = useSelector(getPositionsSelector)\n    const [selectedOrgParentPosition, setSelectedOrgParentPosition] = useState(\n        positionEditdata?.org_parent_id\n    )\n    const [loading, setLoading] = useState(false)\n    const permissionGroupList = useSelector(getPermissionsGroupListSelector)\n    const [positionError, setPositionError] = useState(NEW_POSITION_VALIDATION_FIELD)\n    const positionMainRoles = useSelector(positionMainRolesSelector)\n\n    const parentPositionList = useMemo(() => {\n        return positionList?.filter((item) => item?.id != positionEditdata?.id)\n    }, [])\n\n    useEffect(function () {\n        dispatch(getPermissionGroupListAction())\n        getDepartmentDropdownService().then((res) => {\n            setDepartmentList(res.data)\n        })\n        dispatch(getPosittionMailRolesAction())\n    }, [])\n    useEffect(() => {\n        setName(positionEditdata?.position)\n        setMainPosition(positionEditdata?.parent_id)\n        setDepartment(positionEditdata?.department_id)\n        setSelectedGroup(positionEditdata?.group_id)\n    }, [positionEditdata])\n\n    const addposition = (e) => {\n        e.preventDefault()\n        var body = {\n            id: positionEditdata?.id ?? null,\n            position_name: name,\n            department_id: department,\n            parent_position: mainPosition,\n            group_id: selectedGroup,\n            org_parent_position: selectedOrgParentPosition,\n        }\n        const validationErrors = newPositionValidation(body)\n        setPositionError(validationErrors)\n        if (isEmptyObjectValue(validationErrors)) {\n            setLoading(true)\n            if (positionEditdata) {\n                updatePositionsService(positionEditdata?.id, body)\n                    .then((r) => {\n                        getPosition()\n                        setLoader(true)\n                        CustomToast.success('Position Updates Successfully')\n                        handleClose()\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            } else {\n                AddPositionService(body)\n                    .then((r) => {\n                        getPosition()\n                        setLoader(true)\n                        CustomToast.success('Position Added Successfully')\n                        handleClose()\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            }\n        }\n    }\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='650'\n            title={\n                positionEditdata\n                    ? `Edit Position | ${positionEditdata?.position_name}`\n                    : 'New Position'\n            }\n        >\n            <CustomLoader full visible={loading} />\n\n            {/* <div className='modal-header '></div> */}\n            <form onSubmit={addposition}>\n                <div className=''>\n                    <div className=''>\n                        {![MAIN_POSITTIONS_ID.closer, MAIN_POSITTIONS_ID.setter].includes(\n                            positionEditdata?.id?.toString()\n                        ) ? (\n                            <>\n                                <div className='container d-flex justify-content-center'>\n                                    <div className='row w-500px'>\n                                        <div className='col text-cmGrey700'>\n                                            <CustomInput\n                                                label={'Position Name'}\n                                                required\n                                                placeholder='Enter Position Name'\n                                                onChange={(e) => {\n                                                    setName(e.target.value)\n                                                }}\n                                                errorMessage={positionError?.positionName}\n                                                value={name}\n                                                rejex={/^[\\w\\-\\s]+$/}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='container mt-5 px-lg-10 d-flex justify-content-center'>\n                                    <div className='row d-flex w-500px justify-content-center'>\n                                        <div\n                                            className='col text-cmGrey700'\n                                            style={{\n                                                fontFamily: 'Manrope',\n                                                fontSize: '14px',\n                                                fontWeight: 600,\n                                            }}\n                                        >\n                                            <CustomDropdown\n                                                label={'Main Role'}\n                                                disabled={positionEditdata}\n                                                required\n                                                displayKey='position_name'\n                                                options={positionMainRoles}\n                                                value={mainPosition}\n                                                onChange={(e) => setMainPosition(e.target.value)}\n                                                errorMessage={positionError?.parenrPosition}\n                                                valueKey='id'\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </>\n                        ) : null}\n\n                        <div className='container mt-5 my-5 px-lg-10 d-flex justify-content-center'>\n                            <div className='row d-flex w-500px justify-content-center'>\n                                <div\n                                    className='col text-cmGrey700'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: 600,\n                                    }}\n                                >\n                                    <CustomDropdown\n                                        label={'Department'}\n                                        required\n                                        options={departmentlist}\n                                        value={department}\n                                        onChange={(e) => setDepartment(e.target.value)}\n                                        errorMessage={positionError?.department}\n                                        valueKey='id'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='container my-5 px-lg-10 d-flex justify-content-center'>\n                            <div className='row d-flex w-500px justify-content-center'>\n                                <div\n                                    className='col text-cmGrey700'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: 600,\n                                    }}\n                                >\n                                    <CustomDropdown\n                                        label={'Permission Group'}\n                                        required\n                                        value={selectedGroup}\n                                        options={permissionGroupList}\n                                        displayKey='group_name'\n                                        valueKey='group_id'\n                                        onChange={(e) => setSelectedGroup(e.target.value)}\n                                        errorMessage={positionError?.permissionGroup}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='container my-5 px-lg-10 d-flex justify-content-center'>\n                            <div className='row d-flex w-500px justify-content-center'>\n                                <div\n                                    className='col text-cmGrey700'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: 600,\n                                    }}\n                                >\n                                    <CustomDropdown\n                                        label={'Parent Position'}\n                                        displayKey='position_name'\n                                        options={parentPositionList}\n                                        value={selectedOrgParentPosition}\n                                        onChange={(e) =>\n                                            setSelectedOrgParentPosition(e.target.value)\n                                        }\n                                        valueKey='id'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='d-flex justify-content-center mt-0 my-5'>\n                    <CustomButton\n                        type='submit'\n                        buttonType={BUTTON_TYPE.primary}\n                        buttonLabel={!positionEditdata ? 'Create' : 'Update'}\n                        onClick={addposition}\n                    />\n                </div>\n            </form>\n        </CustomModal>\n    )\n}\n\nexport default ManagePosition\n","import {Tree, TreeNode} from 'react-organizational-chart'\n\nconst PositionOrgChart = ({setLoader, chartData}) => {\n    const UserNode = ({item, isLabel = false}) => (\n        <div className='my-5' style={{fontFamily: 'Manrope'}}>\n            <span className='text-cmGrey900' style={{fontWeight: 700}}>\n                {item?.position_name}\n                {!isLabel ? (\n                    <span className='text-cmGrey700'>({item?.peoples_count ?? 0})</span>\n                ) : null}\n            </span>\n        </div>\n    )\n\n    const ChildeNode = ({item}) => {\n        return (\n            <>\n                {item?.org_chields?.length > 0 ? (\n                    <TreeNode label={<UserNode item={item} />}>\n                        {item?.org_chields?.length > 0 &&\n                            item?.org_chields.map((item1) => <ChildeNode item={item1} />)}\n                    </TreeNode>\n                ) : (\n                    <TreeNode label={<UserNode item={item} />} />\n                )}\n            </>\n        )\n    }\n\n    return (\n        <div className=' my-10 py-10 overflow-auto'>\n            <Tree\n                lineWidth={'2px'}\n                lineColor={'grey'}\n                lineHeight={'35px'}\n                label={<UserNode item={chartData} isLabel={true} />}\n            >\n                {chartData?.org_chields?.length > 0 &&\n                    chartData?.org_chields?.map((item) => <ChildeNode item={item} />)}\n            </Tree>\n        </div>\n    )\n}\n\nexport default PositionOrgChart\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport CustomInput from '../../../../customComponents/customInputs/customInput/CustomInput'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport {Checkbox} from 'primereact/checkbox'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomRadioButton from '../../../../customComponents/customRadioButton/CustomRadioButton'\nimport {getPermissionGroupListAction} from '../../../../redux/actions/PermissionsActions'\nimport {getDepartmentDropdownService} from '../../../../services/Services'\nimport {getPosittionMailRolesAction} from '../../../../redux/actions/SettingActions'\nimport {getPermissionsGroupListSelector} from '../../../../redux/selectors/PermissionsSelectors'\nimport {useDispatch} from 'react-redux'\nimport {useSelector} from 'react-redux'\nimport usePayFrequency from '../../../../hooks/usePayFrequency'\nimport {displayfilterCounts} from '../../../../helpers/CommonHelpers'\n\nconst FILTER_KEYS = {\n    payFrequency: 'pay_frequency_filter',\n    department: 'department',\n    overrideSettelment: 'override_settelement',\n    permissionGroup: 'permission_group',\n}\nconst PositionFilter = ({initialFilter = null, onApplyFilter = null, onResetFilter = null}) => {\n    const [filterProps, filterData, setFilterData] = useFilterButton(\n        initialFilter,\n        onApplyFilter,\n        onResetFilter\n    )\n    const dispatch = useDispatch()\n    const [departmentlist, setDepartmentList] = useState([])\n    const permissionGroupList = useSelector(getPermissionsGroupListSelector)\n    const {weekDropdownList} = usePayFrequency()\n    useEffect(function () {\n        // dispatch(getPermissionGroupListAction())\n        getDepartmentDropdownService().then((res) => {\n            setDepartmentList(res.data)\n        })\n        dispatch(getPosittionMailRolesAction())\n    }, [])\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n\n    return (\n        <CustomFilterButton {...filterProps} filterData={filterData}>\n            <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Pay Frequency'}\n                    searching={false}\n                    value={filterData?.[FILTER_KEYS.payFrequency]}\n                    name={FILTER_KEYS.payFrequency}\n                    onChange={onChangeInputData}\n                    options={weekDropdownList}\n                    valueKey='frequency_type_id'\n                />\n            </div>\n            <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Department'}\n                    value={filterData?.[FILTER_KEYS.department]}\n                    name={FILTER_KEYS.department}\n                    onChange={onChangeInputData}\n                    options={departmentlist}\n                    valueKey='id'\n                />\n            </div>\n            <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <div className='mb-1'>Override Settlement</div>\n                <div className='d-flex align-items-center gap-5'>\n                    <CustomRadioButton\n                        label={'With M2'}\n                        handleChange={onChangeInputData}\n                        isChecked={filterData?.[FILTER_KEYS.overrideSettelment] === 'During M2'}\n                        value={'During M2'}\n                        name={FILTER_KEYS.overrideSettelment}\n                    />\n                    <CustomRadioButton\n                        label={'Reconciliation'}\n                        handleChange={onChangeInputData}\n                        isChecked={\n                            filterData?.[FILTER_KEYS.overrideSettelment] === 'Reconciliation'\n                        }\n                        value={'Reconciliation'}\n                        name={FILTER_KEYS.overrideSettelment}\n                    />\n                </div>\n            </div>\n            <div className='mb-5 text-cmGrey800' style={{fontSize: 'Manrope', fontWeight: 600}}>\n                <CustomDropdown\n                    label={'Permission Group'}\n                    value={filterData?.[FILTER_KEYS.permissionGroup]}\n                    name={FILTER_KEYS.permissionGroup}\n                    onChange={onChangeInputData}\n                    options={permissionGroupList}\n                    displayKey='group_name'\n                    valueKey='group_id'\n                />\n            </div>\n        </CustomFilterButton>\n    )\n}\n\nexport default PositionFilter\n","import React, {useState, useEffect, useCallback, useMemo} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport PositionTabel from './PositionTabel'\nimport {Dropdown1} from '../../../../../../_metronic/partials'\nimport clsx from 'clsx'\nimport ManagePosition from './ManagePosition'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n    getPositionsAction,\n    getPositionSettingAction,\n} from '../../../../../../redux/actions/SettingActions'\nimport {getPositionsSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport {\n    getErrorMessageFromResponse,\n    getGlobalSearchData,\n    sendDataToReducer,\n} from '../../../../../../helpers/CommonHelpers'\nimport {SET_POSITIONS} from '../../../../../../redux/reducers/SettingReducer'\nimport PositionOrgChart from './PositionOrgChart'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../../../accessRights/AccessRights'\nimport {\n    getPositionListService,\n    positionFilterService,\n    positionOrgChartService,\n} from '../../../../../../services/Services'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport PositionFilter from '../../../filters/PositionFilter'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {allPermissionsAccess} from '../../../../../../accessRights/useCustomAccessRights'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport debounce from 'lodash.debounce'\n\nconst initialFilter = {\n    pay_frequency_filter: '',\n    department: '',\n    override_settelement: '',\n    permission_group: '',\n}\nexport default function PositionCard() {\n    const dispatch = useDispatch()\n    const [chartData, setChartData] = useState(null)\n    const [loader, setLoader] = useState(true)\n    const [open, setOpen] = useState(false)\n    const [showOrgchart, setShowOrgchart] = useState(false)\n    const [positionEditdata, setPositionEditdata] = useState(null)\n    // const positionsData = useSelector(getPositionsSelector)\n    const [searchText, setSearchText] = useState('')\n    const [positionsData, setPositionData] = useState([])\n    const [activePage, setActivePage] = useState(1)\n    const [filterData, setFilterData] = useState(null)\n    const [searchVal, setSearchVal] = useState(null)\n\n    useEffect(() => {\n        dispatch(getPositionsAction())\n    }, [])\n\n    const getOrgChart = useCallback(() => {\n        positionOrgChartService().then((res) => setChartData(res?.positionsOrgChart))\n    }, [])\n    const handleClose = () => {\n        setOpen(false)\n    }\n    useEffect(\n        function () {\n            getPosition()\n            getOrgChart()\n        },\n        [activePage, filterData, searchVal]\n    )\n\n    const setPositionsData = useCallback(\n        (data) => {\n            sendDataToReducer(dispatch, SET_POSITIONS, data)\n        },\n        [dispatch]\n    )\n\n    const getPosition = () => {\n        setLoader(true)\n        getPositionListService({page: activePage, search_filter: searchVal, ...filterData})\n            .then((res) => {\n                const finalData = res?.data?.data?.map((item) => ({\n                    ...item,\n                    position_name: item?.position,\n                }))\n                // setPositionData(finalData)\n                setPositionData({...res?.data, data: finalData})\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally((res) => {\n                setLoader(false)\n            })\n    }\n    // new Promise((resolve, reject) => {\n    //     dispatch(getPositionSettingAction())\n    //     getOrgChart()\n    //     dispatch(getPositionsAction())\n    //         .catch(reject)\n    //         .finally((res) => {\n    //             setLoader(false)\n    //             resolve(res)\n    //         })\n    // })\n    const handleSearchChange = (e) => {\n        // setFilterData(initialFilter)\n        setActivePage(1)\n        setSearchText(e?.target?.value)\n        delaySave(e?.target?.value)\n    }\n    const delaySave = useCallback(\n        debounce((val) => {\n            setSearchVal(val)\n            setLoader(true)\n        }, 500),\n        [searchVal]\n    )\n\n    const onApplyFilter = (filter) => {\n        setSearchVal('')\n        setSearchText('')\n        setActivePage(1)\n        // setLoader(true)\n        setFilterData(filter)\n        // positionFilterService({...filter, page: 1})\n        //     .then((res) => {\n        //         setPositionsData(res?.data)\n        //     })\n        //     .finally((res) => {\n        //         setLoader(false)\n        //     })\n    }\n\n    const resetFilter = () => {\n        setSearchVal('')\n        setSearchText('')\n        setActivePage(1)\n        setFilterData(initialFilter)\n        // getPosition()\n    }\n\n    return (\n        <div \n            className='card bg-white h-auto shadow'\n            style={{fontSize: '14px', fontFamily: 'Manrope'}}\n        >\n            <div className='w-100 p-5 d-sm-flex flex-wrap align-items-center  justify-content-between'>\n                <div\n                    className='mt-2 ms-2 mb-2 text-cmGrey600'\n                    style={{fontSize: '14px', fontFamily: 'Manrope', fontWeight: 500}}\n                >\n                    Create Employee Positions and setup <br /> Compensation plans and Permissions.\n                </div>\n                <div className=''>\n                    <CustomInput\n                        type={INPUT_TYPE.search}\n                        value={searchText}\n                        onChange={handleSearchChange}\n                    />\n                </div>\n                <div className='d-flex flex-wrap align-items-center gap-5'>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.secondary}\n                        buttonLabel={showOrgchart ? 'List' : 'Org. Chart'}\n                        onClick={() => setShowOrgchart(!showOrgchart)}\n                        icon={showOrgchart ? null : 'bi bi-diagram-2 fs-1'}\n                    />\n                    <PositionFilter\n                        initialFilter={initialFilter}\n                        onApplyFilter={(updatedFilter) => onApplyFilter(updatedFilter)}\n                        onResetFilter={resetFilter}\n                    />\n                    <AccessRights\n                        customCondition={allPermissionsAccess.administrator.setting.positions.add}\n                    >\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel='Create New'\n                            onClick={() => {\n                                setPositionEditdata(null)\n                                setOpen(true)\n                            }}\n                        />\n                    </AccessRights>\n                </div>\n            </div>\n\n            {!showOrgchart && (\n                <div>\n                    <PositionTabel\n                        getPosition={getPosition}\n                        loader={loader}\n                        setLoader={setLoader}\n                        positionsData={positionsData}\n                        setPositionsData={setPositionsData}\n                        className='mx-0 px-0'\n                        reload={handleClose}\n                        onEditPosition={(val) => {\n                            setPositionEditdata(val)\n                            setOpen(true)\n                        }}\n                        activePage={activePage}\n                        setActivePage={setActivePage}\n                    />\n                </div>\n            )}\n            {showOrgchart && (\n                <div>\n                    <PositionOrgChart\n                        setLoader={setLoader}\n                        chartData={{position_name: 'Positions', org_chields: chartData}}\n                    />\n                </div>\n            )}\n            {open ? (\n                <ManagePosition\n                    getPosition={getPosition}\n                    setLoader={setLoader}\n                    show={open}\n                    handleClose={handleClose}\n                    positionEditdata={positionEditdata}\n                />\n            ) : null}\n            <CustomLoader full visible={loader} />\n        </div>\n    )\n}\n","import PositionCard from './Position/PositionCard'\nimport {useEffect} from 'react'\nimport {getPayFrequencySettingAction} from '../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nexport default function Position() {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getPayFrequencySettingAction())\n    }, [])\n    return (\n        <>\n            <PositionCard />\n        </>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useRef, useEffect} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport Select from '../../Icon/select.png'\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\nimport {\n    addLocationService,\n    deletLocationService,\n    getRecuiterFilterService,\n    getStateListService,\n    updateLocationService,\n} from '../../../../../../services/Services'\nimport {getCityListService} from '../../../../../../services/Services'\n\nimport {\n    defaultCreateAppData,\n    ICreateAppData,\n} from '../../../../../../_metronic/partials/modals/create-app-stepper/IAppModels'\n// import {KTSVG} from '../../../helpers'\nimport CustomDatePicker from '../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\n\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst LocationEdit = ({show, handleClose, data, handleClose1, getlocation, setLoader}) => {\n    const stepperRef = useRef()\n    const stepper = useRef()\n    const [hasError, setHasError] = useState(false)\n    const [selectedOption, setSelectedOption] = useState(null)\n    const [statelist, setStateList] = useState([])\n    const [state, setState] = useState()\n    const [city, setCity] = useState()\n    const [state1, setState1] = useState()\n    const [city1, setCity1] = useState()\n    const [partner, setPartner] = useState()\n    const [min, setMin] = useState()\n    const [max, setMax] = useState()\n    const [standard, setStandard] = useState()\n    const [marketting, setMarketting] = useState(false)\n    const [markettingdeal, setMarkettingdeal] = useState({\n        url: '',\n        first_name: '',\n        last_name: '',\n        id: '',\n        image: '',\n    })\n    const [mar, setMar] = useState('')\n    useEffect(\n        function () {\n            getStateListService()\n                .then((res) => {\n                    setStateList(res.data)\n                })\n                .catch((e) => {\n                    setStateList([])\n                })\n            if (data === '') {\n            } else {\n                setCity(data.city)\n                setState(data.state)\n                setStandard(data.redline_standard)\n                setMin(data.redline_min)\n                setMax(data.redline_max)\n                setPartner(data.installation_partner)\n                setMar(data.marketing_deal_name)\n                setCity1(data.city_id)\n                setState1(data.state_id)\n                setMarkettingdeal({...markettingdeal, image: data.marketing_deal_image})\n            }\n        },\n        [data]\n    )\n    const [citylist, setCityList] = useState([])\n    const addLocation = () => {\n        var body = {\n            state_id: state1,\n            city_id: city1,\n            installation_partner: partner,\n            redline_min: min,\n            redline_standard: standard,\n            redline_max: max,\n            marketing_deal_person_id:\n                markettingdeal.id === '' ? data.marketing_deal_person_id : markettingdeal.id,\n            type: 'Branch',\n            id: data.id,\n        }\n        updateLocationService(body)\n            .then((res) => {\n                setLoader(true)\n                getlocation()\n                handleClose()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n    }\n\n    useEffect(function () {}, [])\n    const getcitylist = (event) => {\n        var id = event.target.value\n        getCityListService(id)\n            .then((res) => {\n                setCityList(res.data)\n            })\n            .catch((e) => {\n                setCityList([])\n            })\n    }\n    const [filterdata, setFilterDate] = useState([])\n    useEffect(function () {\n        var data = 'na'\n        getRecuiterFilterService(data).then((res) => {\n            setFilterDate(res.data)\n        })\n    }, [])\n    const filter = (event) => {\n        getRecuiterFilterService(event.target.value).then((res) => {\n            setFilterDate(res.data)\n        })\n    }\n    const deleteLocation = () => {\n        deletLocationService(data.id).then((res) => {\n            handleClose()\n            setLoader(true)\n            getlocation()\n        })\n    }\n    return (\n        <CustomModal show={show} onHide={handleClose} title='Edit Location' maxWidth='650'>\n            <div className='mt-2 border border-gray-200'></div>\n            {/* <div className='modal-header '></div> */}\n            <div className=''>\n                <div className='modal-body  py-lg-7 px-lg-10'>\n                    <div className='container d-flex justify-content-center'>\n                        <div className='row w-500px'>\n                            <div\n                                className='col-6 text-cmGrey700'\n                                style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                            >\n                                State <label className='text-cmError'>*</label>\n                                <label className='mt-1 d-flex flex-row h-50px' style={{}}>\n                                    <select\n                                        style={{\n                                            fontWeight: '600',\n                                            fontSize: '14px',\n                                        }}\n                                        onChange={(e) => {\n                                            getcitylist(e)\n                                            setState(e.target.value)\n                                            setState1(e.target.value)\n                                        }}\n                                        name='status'\n                                        data-control='select2'\n                                        data-hide-search='true'\n                                        className='form-select form-select-black form-select-sm text-cmGrey800 bg-cmbg cursor-pointer'\n                                    >\n                                        <option selected disabled hidden>\n                                            {state}\n                                        </option>\n                                        {statelist.map((item) => (\n                                            <option\n                                                style={{\n                                                    fontWeight: '600',\n                                                }}\n                                                value={item.id}\n                                            >\n                                                {item.name}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </label>\n                                <div\n                                    className='text-cmGrey600 mt-2   '\n                                    style={{fontSize: '12px', fontWeight: 500}}\n                                >\n                                    State Codes must match the state code in the CRM Data\n                                </div>\n                            </div>\n                            <div\n                                className='col-6 text-cmGrey700'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontSize: '14px',\n                                    fontWeight: 600,\n                                }}\n                            >\n                                City\n                                <label className='mt-1 d-flex flex-row w-225px h-50px'>\n                                    <select\n                                        style={{\n                                            fontWeight: '600',\n                                            color: '#424242',\n                                            fontSize: '14px',\n                                        }}\n                                        name='statu345s'\n                                        data-control='sele4ct2'\n                                        data-hide-search='true'\n                                        className='form-select form-select-black form-select-sm text-cmGrey800 bg-cmbg cursor-pointer'\n                                        onChange={(e) => {\n                                            setCity1(e.target.value)\n                                            setCity(e.target.value)\n                                        }}\n                                    >\n                                        <option selected disabled hidden>\n                                            {city}\n                                        </option>\n                                        <option>-Select City-</option>\n                                        {citylist.map((item) => (\n                                            <option value={item.id}>{item.name}</option>\n                                        ))}\n                                    </select>\n                                </label>\n                                {/* <input\n                  onChange={(e) => setCity(e.target.value)}\n                  style={{borderRadius: '6px', background: '#FAFAFA', border: '1px solid #D8D8D8'}}\n                  className='w-225px  p-3 d-flex h-50px mt-1'\n                  placeholder='Enter'\n                ></input> */}\n                            </div>\n                            <div className='mt-5'>\n                                <div className='form-check form-check-custom bg-white  form-check-lg'>\n                                    <input\n                                        className='form-check-input w-25px h-25px'\n                                        type='checkbox'\n                                        value=''\n                                        id='flexCheckboxLg'\n                                    />\n                                    <label\n                                        className='form-check-label text-cmGrey700'\n                                        style={{fontSize: '14px'}}\n                                        for='flexCheckboxLg'\n                                    >\n                                        Branch Location\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='container py-lg-7 px-lg-10 d-flex justify-content-center'>\n                        <div className='row d-flex w-500px justify-content-center'>\n                            <div\n                                className='col text-cmGrey700'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontSize: '14px',\n                                    fontWeight: 600,\n                                }}\n                            >\n                                Installation Partner\n                                <input\n                                    onChange={(e) => setPartner(e.target.value)}\n                                    style={{\n                                        borderRadius: '6px',\n                                        fontWeight: 600,\n                                    }}\n                                    value={partner}\n                                    className='p-3 d-flex h-50px w-md-475px text-cmGrey800 bg-cmbg border border-cmDisabled'\n                                    placeholder='Enter'\n                                ></input>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='py-lg-0 ms-sm-12'>\n                        <div className='row ms-1'>\n                            <div\n                                className='text-cmGrey700'\n                                style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                            >\n                                Redline\n                            </div>\n                            <div\n                                style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                className='d-sm-flex flex-row justify-content-between w-500px'\n                            >\n                                <div className='d-flex flex-row mt-1'>\n                                    <label\n                                        className='me-2 text-cmGrey600'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        {' '}\n                                        Min{' '}\n                                    </label>\n                                    <input\n                                        type='radio'\n                                        style={{marginTop: '1px'}}\n                                        id='specifyColor'\n                                        name='radio7'\n                                        value='GFG'\n                                        checked\n                                        readOnly\n                                    />\n                                </div>\n\n                                <div className='d-flex flex-row mt-1'>\n                                    <label\n                                        className='me-2 text-cmGrey600'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        Standard <label className='text-cmError'>*</label>{' '}\n                                    </label>\n                                    <input\n                                        type='radio'\n                                        style={{marginTop: '1px'}}\n                                        id='specifyColor1'\n                                        name='radio1'\n                                        value='GFG'\n                                        checked\n                                        readOnly\n                                    />\n                                </div>\n\n                                <div className='d-flex flex-row mt-1 me-20'>\n                                    <label\n                                        className='me-2 text-cmGrey600'\n                                        style={{fontWeight: 600}}\n                                    >\n                                        Max{' '}\n                                    </label>\n                                    <input\n                                        type='radio'\n                                        style={{marginTop: '1px'}}\n                                        id='specifyColor2'\n                                        name='radio2'\n                                        value='GFG'\n                                        checked\n                                        readOnly\n                                    />\n                                </div>\n                            </div>\n\n                            <div\n                                style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                className='d-flex d-sm-flex me-sm-6 flex-row justify-content-between w-500px'\n                            >\n                                <div className='d-flex flex-row mt-1'>\n                                    <label\n                                        style={{fontSize: '16px', fontWeight: 800}}\n                                        className='me-2 mt-5 text-cmGrey800 '\n                                    >\n                                        ${' '}\n                                    </label>\n                                    <input\n                                        style={{\n                                            borderRadius: '6px',\n                                            fontWeight: 600,\n                                        }}\n                                        value={min}\n                                        onChange={(e) => setMin(e.target.value)}\n                                        className='p-3 w-100px h-50px mt-1 text-cmGrey800 bg-cmbg border border-cmDisabled'\n                                        placeholder='3.65'\n                                    ></input>\n                                </div>\n\n                                <div className='d-flex flex-row mt-1'>\n                                    <label\n                                        s\n                                        style={{fontSize: '16px', fontWeight: 800}}\n                                        className='me-2 mt-5 text-cmGrey800 '\n                                    >\n                                        ${' '}\n                                    </label>\n                                    <input\n                                        value={standard}\n                                        onChange={(e) => setStandard(e.target.value)}\n                                        style={{\n                                            borderRadius: '6px',\n                                            fontWeight: 600,\n                                        }}\n                                        className='p-3 w-100px h-50px mt-1 text-cmGrey800 bg-cmbg border border-cmDisabled'\n                                        placeholder='3.65'\n                                    ></input>{' '}\n                                </div>\n\n                                <div className='d-flex flex-row mt-1 me-3'>\n                                    <label\n                                        style={{fontSize: '16px', fontWeight: 800}}\n                                        className='me-2 mt-5 text-cmGrey800 '\n                                    >\n                                        ${' '}\n                                    </label>\n                                    <input\n                                        onChange={(e) => setMax(e.target.value)}\n                                        value={max}\n                                        style={{\n                                            borderRadius: '6px',\n                                            fontWeight: 600,\n                                        }}\n                                        className='p-3 w-100px h-50px mt-1 text-cmGrey800 bg-cmbg border border-cmDisabled'\n                                        placeholder='3.65'\n                                    ></input>\n                                </div>\n                            </div>\n                            <div\n                                className='mt-10 d-flex align-items-center gap-5 '\n                                style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                            >\n                                <div className='text-cmGrey700' style={{fontWeight: 600}}>\n                                    Effective from\n                                </div>\n                                <div>\n                                    <CustomDatePicker isModal />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='container mt-7 d-flex justify-content-center'>\n                        <div className='row w-500px'>\n                            <div\n                                className='col text-cmGrey700'\n                                style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                            >\n                                Marketing Deal\n                                <label\n                                    className='mt-1 d-flex flex-row w-475px h-50px bg-cmGrey200 rounded cursor-pointer'\n                                    onClick={(e) => {\n                                        setMarketting(true)\n                                    }}\n                                >\n                                    {' '}\n                                    <CustomImage\n                                        src={markettingdeal.image}\n                                        className='avatar mt-3 ms-3'\n                                        alt=''\n                                    />\n                                    <div className='w-400px mt-5 ms-4'>\n                                        {mar === '' ? (\n                                            <>\n                                                {markettingdeal.first_name}{' '}\n                                                {markettingdeal.last_name}\n                                            </>\n                                        ) : (\n                                            <>{mar}</>\n                                        )}\n                                    </div>\n                                    {/* <select\n                    style={{\n                      background: '#EEEEEE',\n                      fontWeight: '800px',\n                      color: '#424242',\n                      fontSize: '14px',\n                    }}\n                    name='status'\n                    data-control='select2'\n                    data-hide-search='true'\n                    onChange={(e) => {\n                      setMarketting(true)\n                      setMarkettingdeal(e.target.value)\n                    }}\n                    className='form-select form-select-black form-select-sm'\n                    defaultValue='1'\n                  ></select> */}\n                                </label>\n                                {/* <input\n                  style={{borderRadius: '6px', background: '#FAFAFA', border: '1px solid #D8D8D8'}}\n                  className='w-225px p-3 d-flex h-50px mt-1'\n                  placeholder='Enter'\n                ></input> */}\n                            </div>\n                        </div>\n                    </div>\n\n                    {marketting === false ? (\n                        <b></b>\n                    ) : (\n                        <div className='' style={{marginLeft: '-5.5%'}}>\n                            <div\n                                className=''\n                                style={{\n                                    position: 'absolute',\n                                    width: '100%',\n                                    background: '#EEEEEE',\n                                    color: 'black',\n                                }}\n                            >\n                                <input\n                                    className='p-3 m-4'\n                                    placeholder='type to Search...'\n                                    type='text'\n                                    onChange={(e) => filter(e)}\n                                    style={{background: 'white', width: '96%', border: '#EEEEEE'}}\n                                ></input>\n                                <div className='ms-5  mt-3'>\n                                    {filterdata.map((item) => (\n                                        <div className='d-flex flex-row mb-2'>\n                                            <CustomImage src={item.image} className='avatar me-3' />\n                                            <div\n                                                onClick={() => {\n                                                    // setPhoneperKW(item.direct_per_kw)\n                                                    setMarketting(false)\n                                                    setMar('')\n                                                    setMarkettingdeal({\n                                                        url: '',\n                                                        first_name: item.first_name,\n                                                        last_name: item.last_name,\n                                                        id: item.id,\n                                                        image: item.image,\n                                                    })\n                                                }}\n                                                className=''\n                                                style={{\n                                                    fontFmaily: 'Manrope ms-10 mt-5',\n                                                    cursor: 'pointer',\n                                                    fontSize: '14px',\n                                                }}\n                                            >\n                                                <p className='mt-2'>\n                                                    {item.first_name} {item.last_name}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className='d-flex justify-content-center mt-sm-20 mb-8'>\n                <button\n                    type='button'\n                    className=' me-8 text-cmError bg-cmError bg-opacity-10'\n                    style={{\n                        height: '46px',\n                        width: '134px',\n                        borderRadius: '6px',\n                        fontSize: '16px',\n                        fontWeight: 700,\n                        borderWidth: 0,\n                    }}\n                    onClick={deleteLocation}\n                >\n                    Delete\n                </button>\n                <button\n                    type='button'\n                    className='text-cmwhite bg-cmBlue-Crayola'\n                    style={{\n                        height: '46px',\n                        width: '134px',\n                        borderRadius: '6px',\n                        fontSize: '16px',\n                        borderWidth: 0,\n                        fontWeight: 700,\n                    }}\n                    onClick={addLocation}\n                >\n                    Save\n                </button>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {LocationEdit}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport {KTSVG} from '../../../helpers'\n\ntype Props = {\n    className: string\n    color: string\n    svgIcon: string\n    iconColor: string\n    title: string\n    titleColor?: string\n    description: string\n    descriptionColor?: string\n}\n\nconst StatisticsWidget5: React.FC<Props> = ({\n    className,\n    color,\n    svgIcon,\n    iconColor,\n    title,\n    titleColor,\n    description,\n    descriptionColor,\n}) => {\n    return (\n        <a href='#' className={`card bg-${color} hoverable ${className}`}>\n            <div className='card-body'>\n                <KTSVG path={svgIcon} className={`svg-icon-${iconColor} svg-icon-3x ms-n1`} />\n\n                <div className={`text-${titleColor} fw-bold fs-2 mb-2 mt-5`}>{title}</div>\n\n                <div className={`fw-semibold text-${descriptionColor}`}>{description}</div>\n            </div>\n        </a>\n    )\n}\n\nexport {StatisticsWidget5}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport {FC} from 'react'\n\nimport {KTSVG} from '../../../helpers'\nimport Select from '../../../../app/modules/admin/Setting/Icon/select.png'\nimport Menu from '../../../../app/modules/admin/Setting/Icon/shape.png'\nimport {RightToolbar} from '../../layout/RightToolbar'\n\nimport {DemosToggleDrawer} from '../../layout/demos-drawer/DemosToggleDrawer'\nimport {HelpDrawer} from '../../layout/help-drawer/HelpDrawer'\nimport {ToggleHelpDrawer} from '../../layout/help-drawer/ToggleHelpDrawer'\nimport {PurchaseButton} from '../../layout/purchase/PurchaseButton'\nimport {ThemeModeProvider} from '../../layout/theme-mode/ThemeModeProvider'\ntype Props = {\n    className: string\n}\n\nconst CompensationTabel: React.FC<Props> = ({className}) => {\n    return (\n        <div className={`card  ${className}`}>\n            {/* begin::Header */}\n            <div className='card-body py-0 px-0 mx-0' style={{marginTop: '-5px'}}>\n                {/* begin::Table container */}\n                <div className='table-responsive'>\n                    {/* begin::Table */}\n                    <table\n                        style={{height: '50px'}}\n                        className='table table-row-bordered table-row-gray-100 gs-0 gy-3'\n                    >\n                        {/* begin::Table head */}\n                        <thead>\n                            <tr\n                                className='text-muted'\n                                style={{\n                                    background: '#EEEEEE',\n                                    color: '#424242',\n                                    height: '48px',\n                                    fontSize: '14px',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <th className='w-25px'>\n                                    <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                                        <input\n                                            className='form-check-input'\n                                            type='checkbox'\n                                            value='1'\n                                            data-kt-check='true'\n                                            data-kt-check-target='.widget-13-check'\n                                        />\n                                    </div>\n                                </th>\n                                {/* <th className='min-w-150px'>Order Id</th> */}\n                                <th className='min-w-140px' style={{color: '#424242'}}>\n                                    Plan Name\n                                </th>\n                                <th className='min-w-140px' style={{color: '#424242'}}>\n                                    Position\n                                </th>\n                                <th className='min-w-120px' style={{color: '#424242'}}>\n                                    Commission\n                                </th>\n                                <th className='min-w-120px' style={{color: '#424242'}}>\n                                    Scale\n                                </th>\n                                <th className='min-w-120px' style={{color: '#424242'}}>\n                                    Upfront\n                                </th>\n                                <th className='min-w-140px' style={{color: '#424242'}}>\n                                    Override Scale\n                                </th>\n\n                                <th className='min-w-140px' style={{color: '#424242'}}>\n                                    People\n                                </th>\n                                {/* <th className='min-w-100px' style={{color: '#212121'}}>\n                  People\n                </th> */}\n                                <th className='min-w-120px'></th>\n                                <th className='min-w-140px'></th>\n                            </tr>\n                        </thead>\n                        {/* end::Table head */}\n                        {/* begin::Table body */}\n                        <tbody>\n                            <tr>\n                                <td style={{marginTop: '10px'}}>\n                                    <div className=' ms-14 form-check form-check-sm form-check-custom form-check-solid'>\n                                        {/* <input className='form-check-input widget-13-check' type='checkbox' value='1' /> */}\n                                    </div>\n                                </td>\n\n                                {/* <button\n        id='kt_engage_demos_toggle'\n        className='engage-demos-toggle btn btn-flex h-35px bg-body btn-color-gray-700 btn-active-color-gray-900 shadow-sm fs-6 px-4 rounded-top-0'\n        title={`Check out ${process.env.REACT_APP_THEME_NAME} more demos`}\n        data-bs-toggle='tooltip'\n        data-bs-placement='left'\n        data-bs-dismiss='click'\n        data-bs-trigger='hover'\n      >\n        <span id='kt_engage_demos_label'>Demos</span>\n      </button> */}\n\n                                <td\n                                    id='kt_engage_demos_toggle'\n                                    className='engage-demos-toggle '\n                                    title={`Check out ${process.env.REACT_APP_THEME_NAME} more demos`}\n                                    data-bs-toggle='tooltip'\n                                    data-bs-placement='left'\n                                    data-bs-dismiss='click'\n                                    data-bs-trigger='hover'\n                                    style={{\n                                        color: '#424242',\n                                        marginTop: '10px',\n                                        fontSize: '14px',\n                                        cursor: 'pointer',\n                                        fontStyle: 'Medium',\n                                        textDecoration: 'underline',\n                                    }}\n                                >\n                                    <span\n                                        id='kt_engage_demos_label'\n                                        style={{color: 'red'}}\n                                        className='bi bi-person'\n                                    ></span>{' '}\n                                    Setter Plan A\n                                </td>\n\n                                <td\n                                    style={{\n                                        color: '#424242',\n                                        fontSize: '14px',\n                                        fontStyle: 'Medium',\n                                    }}\n                                >\n                                    {' '}\n                                    Setter{' '}\n                                </td>\n                                {/* <td style={{color: '#424242', fontSize: '14px', fontStyle: 'Medium'}}>Sales </td> */}\n                                <td style={{color: '#9E9E9E', fontWeight: '400'}}>\n                                    {/* <img\n                    className='avatar'\n                    src='https://images.pexels.com/photos/674010/pexels-photo-674010.jpeg?cs=srgb&dl=pexels-anjana-c-674010.jpg&fm=jpg'\n                  /> */}\n                                    40%\n                                </td>\n                                <td style={{color: '#9E9E9E', fontWeight: '400'}}>\n                                    {/* <img\n                    className='avatar'\n                    src='https://images.pexels.com/photos/674010/pexels-photo-674010.jpeg?cs=srgb&dl=pexels-anjana-c-674010.jpg&fm=jpg'\n                  /> */}\n                                    Tired{' '}\n                                    <span\n                                        className='ms-2'\n                                        style={{\n                                            background: 'rgba(114, 57, 234, 0.1)',\n                                            color: '#7239EA',\n                                            width: '169px',\n                                            height: '29px',\n                                            fontSize: '14px',\n                                            borderRadius: '34px',\n                                        }}\n                                    >\n                                        Incremental\n                                    </span>\n                                </td>\n\n                                <td style={{color: '#9E9E9E', fontWeight: '400'}}>\n                                    {/* <img\n                    className='avatar'\n                    src='https://images.pexels.com/photos/674010/pexels-photo-674010.jpeg?cs=srgb&dl=pexels-anjana-c-674010.jpg&fm=jpg'\n                  /> */}\n                                    $100 per KW\n                                </td>\n                                <td style={{color: '#9E9E9E', fontWeight: '400'}}>\n                                    {/* <img\n                    className='avatar'\n                    src='https://images.pexels.com/photos/674010/pexels-photo-674010.jpeg?cs=srgb&dl=pexels-anjana-c-674010.jpg&fm=jpg'\n                  /> */}\n                                    Tiered\n                                    <span\n                                        className='ms-2'\n                                        style={{\n                                            background: 'rgba(114, 57, 234, 0.1)',\n                                            color: '#7239EA',\n                                            width: '169px',\n                                            height: '29px',\n                                            fontSize: '14px',\n                                            borderRadius: '34px',\n                                        }}\n                                    >\n                                        Incremental\n                                    </span>\n                                </td>\n                                <td style={{color: '#9E9E9E', fontWeight: '400'}}>\n                                    <img className='w-10px h-6' src={Menu} />{' '}\n                                    <b\n                                        className='ms-1'\n                                        style={{\n                                            fontSize: '14px',\n                                            marginLeft: '5px',\n                                            color: '#9E9E9E',\n                                            fontWeight: '400',\n                                        }}\n                                    >\n                                        1.88\n                                    </b>\n                                </td>\n\n                                <td>\n                                    {' '}\n                                    <button\n                                        className=' btn btn-sm btn-icon engage-demos-toggle  btn-bg-light btn-active-color-primary'\n                                        id='kt_engage_demos_toggle'\n                                        title={`Check out ${process.env.REACT_APP_THEME_NAME} more demos`}\n                                        data-bs-toggle='tooltip'\n                                        data-bs-placement='left'\n                                        data-bs-dismiss='click'\n                                        data-bs-trigger='hover'\n                                    >\n                                        <img\n                                            style={{width: '14px'}}\n                                            id='kt_engage_demos_label'\n                                            src='https://img.icons8.com/ultraviolet/40/null/pencil--v1.png'\n                                        />\n                                        {/* <i className='bi bi-three-dots fs-3'></i> */}\n                                    </button>\n                                </td>\n                                {/* <td className='text-end'></td> */}\n                            </tr>\n                        </tbody>\n                        {/* end::Table body */}\n                    </table>\n                    {/* end::Table */}\n                </div>\n                {/* end::Table container */}\n            </div>\n            {/* begin::Body */}\n        </div>\n    )\n}\n\nexport {CompensationTabel}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport clsx from 'clsx'\nimport {toAbsoluteUrl} from '../../../../helpers'\n\ntype Props = {\n    className: string\n    description: string\n    icon: boolean\n    stats: number\n    labelColor: string\n    textColor: string\n}\n\nconst items: Array<{\n    name: string\n    initials?: string\n    src?: string\n    state?: string\n}> = [\n    {name: 'Alan Warden', initials: 'A', state: 'warning'},\n    {name: 'Michael Eberon', src: toAbsoluteUrl('/media/avatars/300-11.jpg')},\n    {name: 'Susan Redwood', initials: 'S', state: 'primary'},\n    {name: 'Melody Macy', src: toAbsoluteUrl('/media/avatars/300-2.jpg')},\n    {name: 'Perry Matthew', initials: 'P', state: 'danger'},\n    {name: 'Barry Walter', src: toAbsoluteUrl('/media/avatars/300-12.jpg')},\n]\n\nconst CardsWidget7 = ({className, description, icon, stats, labelColor, textColor}: Props) => (\n    <div className={`card card-flush ${className}`}>\n        <div className='card-header pt-5'>\n            <div className='card-title d-flex flex-column'>\n                <div className='card-title d-flex flex-column'>\n                    <span className='fs-2hx fw-bold text-dark me-2 lh-1 ls-n2'>{stats}</span>\n                    <span className='text-gray-400 pt-1 fw-semibold fs-6'>{description}</span>\n                </div>\n            </div>\n        </div>\n        <div className='card-body d-flex flex-column justify-content-end pe-0'>\n            <span className='fs-6 fw-bolder text-gray-800 d-block mb-2'>Today’s Heroes</span>\n            <div className='symbol-group symbol-hover flex-nowrap'>\n                {items.map((item, index) => (\n                    <div\n                        className='symbol symbol-35px symbol-circle'\n                        data-bs-toggle='tooltip'\n                        title={item.name}\n                        key={`cw7-item-${index}`}\n                    >\n                        {item.src && <img alt='Pic' src={item.src} />}\n                        {item.state && item.initials && (\n                            <span\n                                className={clsx(\n                                    'symbol-label fw-bold',\n                                    'bg-' + item.state,\n                                    'text-inverse-' + item.state\n                                )}\n                            >\n                                {item.initials}\n                            </span>\n                        )}\n                    </div>\n                ))}\n\n                <a href='#' className='symbol symbol-35px symbol-circle'>\n                    <span\n                        className={clsx(\n                            'symbol-label fs-8 fw-bold',\n                            'bg-' + labelColor,\n                            'text-' + textColor\n                        )}\n                    >\n                        +42\n                    </span>\n                </a>\n            </div>\n        </div>\n    </div>\n)\nexport {CardsWidget7}\n","import React, {useState, useEffect} from 'react'\nimport More1 from '../Path1.png'\nimport More from '../Path.png'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport {CompensationTabel} from '../../../../../../_metronic/partials/widgets'\nimport {Dropdown1} from '../../../../../../_metronic/partials'\nimport clsx from 'clsx'\nexport default function CompensationCard() {\n    const [more, setMore] = useState(false)\n    const [edit, setEdit] = useState(false)\n    return (\n        <div className='card bg-white h-auto' style={{fontSize: '14px', fontFamily: 'Manrope'}}>\n            <div className='w-100 p-8 d-sm-flex  justify-content-between'>\n                <div\n                    className=''\n                    style={{fontSize: '16px', color: '#757575', fontFamily: 'Manrope'}}\n                >\n                    Create cost centers and sub-centers to ensure costs are tracked accurately.\n                </div>\n                <div className=' '>\n                    <a\n                        href=''\n                        className={clsx('btn btn-sm btn-flex fw-bold')}\n                        data-kt-menu-trigger='click'\n                        data-kt-menu-placement='bottom-end'\n                        style={{\n                            background: '#F5F5F5',\n                            color: '#757575',\n                            fontSize: '14px',\n                            fontStyle: 'bold',\n                            width: '99px',\n                            height: '43px',\n                        }}\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen031.svg'\n                            className='me-6 svg-icon-6 svg-icon-muted me-1'\n                        />\n                        Filter\n                    </a>\n                    <button\n                        href='#'\n                        className='btn btn-sm  ms-6'\n                        style={{\n                            background: '#6078EC',\n                            color: 'white',\n                            fontSize: '14px',\n                            fontStyle: 'bold',\n                            width: '119px',\n                            height: '43px',\n                        }}\n                        data-bs-toggle='modal'\n                        data-bs-target='#kt_modal_offer_a_deal'\n                    >\n                        Create New\n                    </button>\n                    <a className='me-0'>\n                        <button\n                            style={{\n                                color: '#757575',\n                                fontSize: '14px',\n                                fontStyle: 'bold',\n                            }}\n                            className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary'\n                            data-kt-menu-trigger='click'\n                            data-kt-menu-placement='top-end'\n                            data-kt-menu-flip='bottom-end'\n                        >\n                            <i\n                                style={{marginTop: '-6px'}}\n                                className='bi ms-4 bi-three-dots-vertical  fs-3'\n                            ></i>\n                        </button>\n                        <Dropdown1 />\n                    </a>\n                </div>\n            </div>\n\n            <div>{/* <CompensationTabel className='mx-0 px-0' /> */}</div>\n        </div>\n    )\n}\n","import PermissionCard from './Permission/Permission'\nexport function Permission() {\n    return (\n        <>\n            <PermissionCard />\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport More1 from '../Path1.png'\nimport More from '../Path.png'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport {CompensationTabel} from '../../../../../../_metronic/partials/widgets'\nimport {Dropdown1} from '../../../../../../_metronic/partials'\nimport clsx from 'clsx'\nimport {CreateCompensationAppModal} from '../../../../../../_metronic/partials'\nexport default function CompensationCard() {\n    const [more, setMore] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [open, setOpen] = useState(false)\n    const handleClose = () => {\n        setOpen(false)\n    }\n    return (\n        <div className='card bg-white h-auto' style={{fontSize: '14px', fontFamily: 'Manrope'}}>\n            <div className='w-100 p-8 d-sm-flex  justify-content-between'>\n                <div\n                    style={{\n                        background: '#F5F5F5',\n                        height: '40px',\n                        width: '322px',\n                        borderRadius: '20px',\n                    }}\n                    className='w-322px mb-3'\n                    id='kt_chat_contacts_header'\n                >\n                    <form\n                        className='position-relative '\n                        style={{background: '#F5F5F5', borderRadius: '90px'}}\n                        autoComplete='off'\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen021.svg'\n                            className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                        />\n\n                        <input\n                            style={{background: '#F5F5F5', borderRadius: '10px'}}\n                            type='text'\n                            className='form-control form-control-solid px-12 '\n                            name='search'\n                            placeholder='Search...'\n                        />\n                    </form>\n                </div>\n                <div className=' '>\n                    <a\n                        href=''\n                        className={clsx('btn btn-sm btn-flex fw-bold')}\n                        data-kt-menu-trigger='click'\n                        data-kt-menu-placement='bottom-end'\n                        style={{\n                            background: '#F5F5F5',\n                            color: '#757575',\n                            fontSize: '14px',\n                            fontStyle: 'bold',\n                            width: '99px',\n                            height: '43px',\n                        }}\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen031.svg'\n                            className='me-6 svg-icon-6 svg-icon-muted me-1'\n                        />\n                        Filter\n                    </a>\n                    <button\n                        href='#'\n                        className='btn btn-sm  ms-6'\n                        style={{\n                            background: '#6078EC',\n                            color: 'white',\n                            fontSize: '14px',\n                            fontStyle: 'bold',\n                            width: '119px',\n                            height: '43px',\n                        }}\n                        data-bs-toggle='modal'\n                        data-bs-target='#kt_modal_offer_a_deal'\n                        onClick={() => setOpen(true)}\n                    >\n                        Create New\n                    </button>\n                    <a className='me-0'>\n                        <button\n                            style={{\n                                color: '#757575',\n                                fontSize: '14px',\n                                fontStyle: 'bold',\n                            }}\n                            className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary'\n                            data-kt-menu-trigger='click'\n                            data-kt-menu-placement='top-end'\n                            data-kt-menu-flip='bottom-end'\n                        >\n                            <i\n                                style={{marginTop: '-6px'}}\n                                className='bi ms-4 bi-three-dots-vertical  fs-3'\n                            ></i>\n                        </button>\n                        <Dropdown1 />\n                    </a>\n                </div>\n            </div>\n\n            <div>\n                <CompensationTabel className='mx-0 px-0' />\n            </div>\n            <CreateCompensationAppModal show={open} handleClose={handleClose} />\n        </div>\n    )\n}\n","import React from 'react'\nimport CompensationCard from './Compensation/CompensationCard'\n\nexport function Compensation() {\n    return (\n        <>\n            <CompensationCard />\n        </>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState, useRef, useCallback, useMemo} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport {getAllStatesAndCitiesSelector} from '../../../../../redux/selectors/SettingsSelectors'\nimport {useSelector} from 'react-redux'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../customComponents/customModal/CustomModal'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../customComponents/customCheckbox/CustomCheckbox'\n\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst ManualAddressPopup = ({\n    show,\n    handleClose,\n    setCompanyProfile,\n    onChangeInputData,\n    companyProfile,\n}) => {\n    const [manualData, setManualData] = useState({\n        mailing_address: null,\n        mailing_city: null,\n        mailing_state: null,\n        mailing_zip: null,\n        business_city: null,\n        business_address: null,\n        business_state: null,\n        business_zip: null,\n    })\n    const allStatCity = useSelector(getAllStatesAndCitiesSelector)\n\n    const cityList = useMemo(() => {\n        return (\n            allStatCity?.find((item) => item?.state_code == manualData?.business_state)?.cities ??\n            []\n        )\n    }, [allStatCity, manualData?.business_state])\n\n    const mailingCityList = useMemo(() => {\n        return (\n            allStatCity?.find((item) => item?.state_code == manualData?.mailing_state)?.cities ?? []\n        )\n    }, [allStatCity, manualData?.mailing_state])\n\n    const onSetManualData = (field, value) => {\n        setManualData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }\n    const onSameAsBusiness = (e) => {\n        let data = {...manualData}\n        if (e.target.checked) {\n            data['mailing_address'] = manualData?.business_address\n            data['mailing_city'] = manualData?.business_city\n            data['mailing_state'] = manualData?.business_state\n            data['mailing_zip'] = manualData?.business_zip\n        } else {\n            data['mailing_address'] = ''\n            data['mailing_city'] = ''\n            data['mailing_state'] = ''\n            data['mailing_zip'] = ''\n        }\n        setManualData(data)\n    }\n    const onSaveData = (e) => {\n        let data = {...companyProfile}\n        let completeAddress = [\n            manualData?.business_address,\n            manualData?.business_city,\n            manualData?.business_state,\n            manualData?.business_zip,\n        ]\n            .filter(function (val) {\n                return val\n            })\n            .join(', ')\n        let completeMailingAddress = [\n            manualData?.mailing_address,\n            manualData?.mailing_city,\n            manualData?.mailing_state,\n            manualData?.mailing_zip,\n        ]\n            .filter(function (val) {\n                return val\n            })\n            .join(', ')\n        data['business_address'] = completeAddress\n        data['business_city'] = manualData?.business_city\n        data['business_state'] = manualData?.business_state\n        data['business_zip'] = manualData?.business_zip\n        data['mailing_address'] = completeMailingAddress\n        data['mailing_city'] = manualData?.mailing_city\n        data['mailing_state'] = manualData?.mailing_state\n        data['mailing_zip'] = manualData?.mailing_zip\n        setCompanyProfile(data)\n        handleClose()\n    }\n    return (\n        <CustomModal show={show} onHide={handleClose} maxWidth='1000' title='Enter Address'>\n            {/* body */}\n            <div\n                className='w-sm-50 mx-5 mx-sm-auto'\n                style={{fontSize: '14px', fontWeight: '600', fontFamily: 'Manrope'}}\n            >\n                {/* line */}\n                <div className='mb-5'>\n                    <CustomInput\n                        label={'Business Address'}\n                        placeholder='Enter Address'\n                        name='business_address'\n                        value={manualData?.business_address}\n                        onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                    />\n                </div>\n                {/* line */}\n                <div className='row gap-sm-0 gap-5 align-items-center mb-5 '>\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'State'}\n                            name='business_state'\n                            value={manualData?.business_state}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            placeholder='Select State'\n                            options={allStatCity}\n                            valueKey='state_code'\n                        />\n                    </div>\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'City'}\n                            name='business_city'\n                            value={manualData?.business_city}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            placeholder='Select City'\n                            options={cityList}\n                            valueKey='name'\n                        />\n                    </div>\n                </div>\n                {/* line */}\n                <div className='mb-15'>\n                    <CustomInput\n                        label={'ZIP'}\n                        type={INPUT_TYPE.number}\n                        placeholder='Enter ZIP'\n                        name='business_zip'\n                        value={manualData?.business_zip}\n                        onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                    />\n                </div>\n                {/* Mailing Address */}\n                <div className='mb-5'>\n                    <div className='d-flex align-items-center justify-content-end gap-3'>\n                        <CustomCheckbox\n                            onChange={onSameAsBusiness}\n                            checked={manualData?.business_address == manualData?.mailing_address}\n                        />\n                        <label\n                            className=' text-cmGrey600'\n                            style={{fontWeight: '600', fontSize: '12px'}}\n                        >\n                            Same as business address\n                        </label>\n                    </div>\n\n                    <CustomInput\n                        label={'Mailing Address'}\n                        placeholder='Enter Mailing Address'\n                        name='mailing_address'\n                        value={manualData?.mailing_address}\n                        onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                    />\n                </div>\n                {/* City & State */}\n                {/* line */}\n                <div className='row align-items-center gap-sm-0 gap-5 mb-5 '>\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'State'}\n                            name='mailing_state'\n                            value={manualData?.mailing_state}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            placeholder='Select State'\n                            options={allStatCity}\n                            valueKey='state_code'\n                        />\n                    </div>\n                    <div className='col-sm'>\n                        <CustomDropdown\n                            label={'City'}\n                            name='mailing_city'\n                            value={manualData?.mailing_city}\n                            onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                            placeholder='Select City'\n                            options={mailingCityList}\n                            valueKey='name'\n                        />\n                    </div>\n                </div>\n                <div className='mb-15'>\n                    <CustomInput\n                        label={'ZIP'}\n                        type={INPUT_TYPE.number}\n                        placeholder='Enter ZIP'\n                        name='mailing_zip'\n                        value={manualData?.mailing_zip}\n                        onChange={(e) => onSetManualData(e.target.name, e.target.value)}\n                    />\n                </div>\n\n                <div className='text-center'>\n                    <div\n                        className='btn bg-cmBlue-Crayola text-cmwhite px-10 py-2'\n                        style={{fontWeight: 700, fontSize: '16px'}}\n                        onClick={onSaveData}\n                    >\n                        Save\n                    </div>\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {ManualAddressPopup}\n","import {useRef, useState} from 'react'\nimport CustomImage from '../../../../customComponents/customImage/CustomImage'\nimport CustomModal from '../../../../customComponents/customModal/CustomModal'\nimport {IMAGE_TYPE, getServerImage} from '../../../../helpers/CommonHelpers'\nimport CustomButton, {BUTTON_TYPE} from '../../../../customComponents/customButtton/CustomButton'\nimport AvatarEditor from 'react-avatar-editor'\n\nconst EditProfileModal = ({\n    show,\n    handleClose,\n    companyProfile,\n    // getServerImage,\n    companyProfileFilePickerRef,\n    updateCompanyProfileData,\n    handleRotationChange,\n    handleZoomChange,\n    rotation,\n    zoomLevel,\n}) => {\n    const editorRef = useRef(null)\n\n    const [editImage, setEditImage] = useState(false)\n    const [scale, setScale] = useState(1)\n    const [rotate, setRotate] = useState(0)\n\n    const onPressEdit = () => {\n        setEditImage(true)\n    }\n    // const onPressSave = () => {\n    //     setEditImage(false)\n    //     handleClose()\n    // }\n\n    const onPressSave = () => {\n        // if (editorRef.current) {\n        //     const canvas = editorRef.current.getImageScaledToCanvas()\n        //     // You can save the canvas or upload it to your server here\n        //     updateCompanyProfileData('logo', canvas.toDataURL('image/png'))\n        //     setEditImage(false)\n        //     handleClose()\n        // }\n        if (editorRef.current) {\n            const canvas = editorRef.current.getImageScaledToCanvas()\n            // Convert the canvas image to a blob\n            canvas?.toBlob((blob) => {\n                // Set the desired image name here\n                const customImageName = 'custom_image_name.png'\n                // Save the blob as a file with the custom name\n                let file = new File([blob], customImageName, {type: 'image/png'})\n                updateCompanyProfileData('logo', file)\n                setEditImage(false)\n                handleClose()\n            })\n            // setEditImage(false)\n            // handleClose()\n        }\n    }\n    return (\n        <>\n            <CustomModal show={show} onHide={handleClose} maxWidth='500' title={'Company Logo'}>\n                {/* <CustomLoader full visible={loading} /> */}\n                {/* Body Starts */}\n                <div className='overflow-hidden'>\n                    <div className=' d-flex align-items-center justify-content-center mx-auto '>\n                        {editImage ? (\n                            <AvatarEditor\n                                ref={editorRef}\n                                image={\n                                    companyProfile?.logo?.name\n                                        ? URL.createObjectURL(companyProfile?.logo)\n                                        : getServerImage(\n                                              companyProfile?.logo,\n                                              IMAGE_TYPE.companyLogo\n                                          )\n                                }\n                                width={250}\n                                height={250}\n                                border={15}\n                                color={[255, 255, 255, 0.6]} // RGBA\n                                scale={scale}\n                                rotate={rotate}\n                            />\n                        ) : (\n                            <CustomImage\n                                className={'w-250px h-250px m-5'}\n                                type={IMAGE_TYPE.companyLogo}\n                                customSrc={\n                                    companyProfile?.logo?.name\n                                        ? URL.createObjectURL(companyProfile?.logo)\n                                        : getServerImage(\n                                              companyProfile?.logo,\n                                              IMAGE_TYPE.companyLogo\n                                          )\n                                }\n                            ></CustomImage>\n                        )}\n                    </div>\n                </div>\n                {editImage ? (\n                    <>\n                        <div className='row'>\n                            <div\n                                className='col-sm'\n                                style={{\n                                    fontSize: '15px',\n                                    fontWeight: 600,\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <div>\n                                    <label>Zoom</label>\n                                </div>\n                                <div className='d-flex'>\n                                    <span className='fs-2 px-2'>+</span>\n                                    <input\n                                        type='range'\n                                        min='0.1'\n                                        max='2'\n                                        step='0.01'\n                                        value={scale}\n                                        onChange={(e) => setScale(parseFloat(e.target.value))}\n                                    />\n                                    <span className='fs-2 px-2'>-</span>\n                                </div>\n                            </div>\n                            <div\n                                className='col-sm'\n                                style={{\n                                    fontSize: '15px',\n                                    fontWeight: 600,\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <div>\n                                    <label>Straighten</label>\n                                </div>\n                                <div className='d-flex'>\n                                    <span className='fs-2 px-2'>+</span>\n                                    <input\n                                        type='range'\n                                        min='0'\n                                        max='360'\n                                        step='1'\n                                        value={rotate}\n                                        onChange={(e) => setRotate(parseInt(e.target.value))}\n                                    />\n                                    <span className='fs-2 px-2'>-</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div\n                            className='mt-7 d-flex gap-3 justify-content-between'\n                            style={{float: 'right'}}\n                        >\n                            <div className='d-flex gap-3'>\n                                <div>\n                                    <CustomButton\n                                        type='submit'\n                                        buttonType={BUTTON_TYPE.primary}\n                                        buttonLabel={'Save'}\n                                        onClick={onPressSave}\n                                    />\n                                </div>\n\n                                <div>\n                                    <CustomButton\n                                        type='submit'\n                                        buttonType={BUTTON_TYPE.error}\n                                        buttonLabel={'Cancel'}\n                                        onClick={() => setEditImage(false)}\n                                    />\n                                    {/* <button\n                                        className=' btn btn-sm btn-icon text-cmError bg-cmError bg-opacity-10 py-5 px-15 rounded cursor-pointer '\n                                        style={{\n                                            fontSize: '14px',\n                                            fontWeight: 600,\n                                            color: '#6078EC',\n                                            fontFamily: 'Manrope',\n                                        }}\n                                        onClick={() => setEditImage(false)} */}\n                                    {/* > */}\n                                    {/* <span>Cancel</span>\n                                    </button> */}\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <div className='mt-5 d-flex flex-wrap gap-3 justify-content-between'>\n                        <div className='d-flex gap-3'>\n                            {companyProfile?.logo?.name ? (\n                                <div>\n                                    <CustomButton\n                                        buttonType={BUTTON_TYPE.secondary}\n                                        buttonLabel={\n                                            <div className='d-flex align-items-center gap-3'>\n                                                <div className='bi bi-pen fs-4 px-1 text-cminfo' />\n                                                <div>Edit</div>\n                                            </div>\n                                        }\n                                        onClick={onPressEdit}\n                                    />\n                                </div>\n                            ) : null}\n\n                            <div>\n                                <CustomButton\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonLabel={\n                                        <div className='d-flex align-items-center gap-3'>\n                                            <div className='bi bi-camera fs-3 px-1 text-cminfo' />\n                                            <div>Add Logo</div>\n                                        </div>\n                                    }\n                                    onClick={() => companyProfileFilePickerRef?.current?.click()}\n                                />\n                            </div>\n                        </div>\n\n                        <div className='d-flex flex-center gap-5'>\n                            <CustomButton\n                                buttonLabel='Save'\n                                buttonType={BUTTON_TYPE.primary}\n                                onClick={() => handleClose()}\n                            />\n                            <CustomButton\n                                buttonLabel='Delete'\n                                buttonType={BUTTON_TYPE.error}\n                                onClick={() => {\n                                    updateCompanyProfileData('logo', null)\n                                }}\n                            />\n                            <input\n                                ref={companyProfileFilePickerRef}\n                                type='file'\n                                name='logo'\n                                accept='.png,.jpeg,.jpg,.heic'\n                                onChange={(e) => {\n                                    updateCompanyProfileData(e?.target?.name, e?.target?.files?.[0])\n                                    setEditImage(true)\n                                }}\n                                style={{display: 'none'}}\n                            />\n                        </div>\n                    </div>\n                )}\n            </CustomModal>\n        </>\n    )\n}\n\nexport default EditProfileModal\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {useSelector} from 'react-redux'\nimport {useNavigate} from 'react-router-dom'\nimport {VALIDATION_PATTERN} from '../../../../../constants/constants'\nimport {\n    getCompanyProfileAction,\n    updateCompanyProfileAction,\n} from '../../../../../redux/actions/SettingActions'\nimport {getCompanyProfileSelector} from '../../../../../redux/selectors/SettingsSelectors'\nimport {\n    getLatLongByLocationService,\n    getPlaceAddressService,\n    updateCompanyProfileService,\n} from '../../../../../services/Services'\nimport images from '../../../../../assets/images'\nimport CustomLoader from '../../../../../customComponents/customLoader/CustomLoader'\nimport timeZones from '../../../../../constants/timezones.json'\nimport {INITIAL_ADDRESS_FIELD} from '../../../../../customComponents/customInputs/customAddressInput/CustomAddressInput2'\nimport {\n    IMAGE_TYPE,\n    getDataWithoutMask,\n    getErrorMessageFromResponse,\n    getMobileNumberWithoutMask,\n    getServerImage,\n    jsonToFormData,\n} from '../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../customComponents/customToast/CustomToast'\nimport {InputMask} from 'primereact/inputmask'\nimport {ManualAddressPopup} from './ManualAddressPopup'\nimport CustomSearchInput from '../../../../../customComponents/customInputs/customSearchInput/CustomSearchInput'\nimport CustomImage from '../../../../../customComponents/customImage/CustomImage'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../customComponents/customButtton/CustomButton'\nimport useDocumentTitle from '../../../../../hooks/useDocumentTitle'\nimport CustomDropdown from '../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport EditProfileModal from '../EditProfileModal'\nimport CustomAddressInput from '../../../../../customComponents/customInputs/customAddressInput/CustomAddressInput'\nimport CustomAddressInput2 from '../../../../../customComponents/customInputs/customAddressInput/CustomAddressInput2'\nimport useValidation from '../../../../../hooks/useValidation'\nimport {editCompanyProfileValidation} from '../../../../../validations/validations'\n\nconst SettingsEditProfile = () => {\n    const navigate = useNavigate()\n    const companyProfileFilePickerRef = useRef()\n    const dispatch = useDispatch()\n    const globalCompanyProfile = useSelector(getCompanyProfileSelector)\n    const [companyProfile, setCompanyProfile] = useState(globalCompanyProfile)\n    const [loading, setLoading] = useState(false)\n    const [showAddressPopup, setShowAddressPopup] = useState(false)\n    const [selectedAddress, setSelectedAddress] = useState(null)\n    const [manualAddressObj, setManualAddressObj] = useState(null)\n    const [showEditProfileModal, setShowEditProfileModal] = useState(false)\n    const [zoomLevel, setZoomLevel] = useState(100)\n    const [rotation, setRotation] = useState(0)\n    const [validateEditCompanyProfile, companyProfileErrorMessages] = useValidation()\n\n    useEffect(() => {\n        setCompanyProfile(globalCompanyProfile)\n    }, [globalCompanyProfile])\n\n    useEffect(() => {\n        if (companyProfileErrorMessages.beginValidating) {\n            validateEditCompanyProfile(editCompanyProfileValidation(companyProfile))\n        }\n    }, [companyProfile])\n\n    const handleZoomChange = (event) => {\n        const newZoomLevel = parseInt(event.target.value)\n        setZoomLevel(newZoomLevel)\n    }\n\n    const handleRotationChange = (event) => {\n        const newRotation = event.target.value\n        setRotation(newRotation)\n    }\n\n    const updateCompanyProfileData = useCallback((field, value) => {\n        setCompanyProfile((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }, [])\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            updateCompanyProfileData(e?.target?.name, e?.target?.value)\n        },\n        [updateCompanyProfileData]\n    )\n    const onSavePress = useCallback(() => {\n        validateEditCompanyProfile(editCompanyProfileValidation(companyProfile)).then((res) => {\n            if (res?.isValidate) {\n                let body = {\n                    id: companyProfile?.id ?? 1,\n                    name: companyProfile?.name ?? '',\n                    phone_number: getMobileNumberWithoutMask(companyProfile?.phone_number) ?? '',\n                    company_email: companyProfile?.company_email ?? '',\n                    country: companyProfile?.country ?? 'USA',\n                    time_zone: companyProfile?.time_zone ?? '',\n                    business_phone:\n                        getMobileNumberWithoutMask(companyProfile?.business_phone) ?? '',\n                    company_type: companyProfile?.company_type ?? 'Solar',\n                    business_name: companyProfile?.business_name ?? '',\n                    business_address: companyProfile?.business_address ?? '',\n                    business_city: companyProfile?.business_city ?? '',\n                    business_state: companyProfile?.business_state ?? '',\n                    business_zip: companyProfile?.business_zip ?? '',\n                    business_address_1: companyProfile?.business_address_1 ?? '',\n                    business_address_2: companyProfile?.business_address_2 ?? '',\n                    business_lat: companyProfile?.business_lat ?? '',\n                    business_long: companyProfile?.business_long ?? '',\n                    business_address_time_zone: companyProfile?.business_address_time_zone ?? '',\n\n                    mailing_address: companyProfile?.mailing_address ?? '',\n                    mailing_address_1: companyProfile?.mailing_address_1 ?? '',\n                    mailing_address_2: companyProfile?.mailing_address_2 ?? '',\n                    mailing_lat: companyProfile?.mailing_lat ?? '',\n                    mailing_long: companyProfile?.mailing_long ?? '',\n                    mailing_state: companyProfile?.mailing_state ?? '',\n                    mailing_city: companyProfile?.mailing_city ?? '',\n                    mailing_zip: companyProfile?.mailing_zip ?? '',\n                    mailing_address_time_zone: companyProfile?.mailing_address_time_zone ?? '',\n                    business_ein: getDataWithoutMask(companyProfile?.business_ein) ?? '',\n                    company_website: companyProfile?.company_website ?? '',\n                }\n                if (companyProfile?.logo) body.logo = companyProfile?.logo\n                if (!companyProfile?.logo) body.remove_logo = 1\n\n                setLoading(true)\n                dispatch(updateCompanyProfileAction(body))\n                    .then(() => {\n                        dispatch(getCompanyProfileAction())\n                        navigate(-1)\n                    })\n                    .catch((error) => {\n                        CustomToast.error(getErrorMessageFromResponse(error))\n                    })\n                    .finally((res) => {\n                        setLoading(false)\n                    })\n            }\n        })\n    }, [companyProfile, dispatch, navigate, validateEditCompanyProfile])\n\n    const closeAddressPopup = () => {\n        setShowAddressPopup(false)\n    }\n\n    const onPressEditCompanyProfile = () => {\n        setShowEditProfileModal(true)\n    }\n\n    return (\n        <div>\n            <div\n                className='bg-cmwhite shadow-sm text-cmGrey800 '\n                style={{\n                    fontFamily: 'Manrope',\n                    fontSize: '14px',\n                    fontWeight: '800',\n                    borderRadius: '10px',\n                    position: 'relative',\n                }}\n            >\n                <CustomLoader style={{zIndex: 10}} full visible={loading} />\n                <div className='d-flex flex-wrap gap-5 align-items-center justify-content-between py-5 px-10'>\n                    <div className='d-flex align-items-center gap-5 text-cmGrey900'>\n                        {/* <div\n                            className='bi bi-box-arrow-left fs-1 text-cmGrey600 text-hover-dark cursor-pointer'\n                            onClick={() => navigate(-1)}\n                        ></div> */}\n                        <div className='' style={{fontFamily: 'Manrope', fontSize: '20px'}}>\n                            Edit Company Profile\n                        </div>\n                    </div>\n                    <div className='d-flex align-items-center gap-5 text-cmGrey900'>\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.greyText}\n                            buttonLabel='Cancel'\n                            buttonSize={BUTTON_SIZE.small}\n                            onClick={() => navigate(-1)}\n                        />\n\n                        <CustomButton\n                            buttonLabel='Save'\n                            buttonSize={BUTTON_SIZE.small}\n                            onClick={onSavePress}\n                        />\n                    </div>\n                </div>\n                <hr className='p-0 m-0 text-cmGrey400' />\n                {/* Begins body */}\n                <div\n                    className='p-sm-10 p-5 text-cmGrey800'\n                    style={{fontWeight: 700, fontSize: '15px'}}\n                >\n                    {/* Line 1 */}\n                    <div className='d-sm-flex mb-10'>\n                        <div className='w-sm-25'>Company Logo</div>\n                        <div className='position-relative w-sm-auto w-75'>\n                            <div\n                                className=' d-flex align-items-center justify-content-center border  border-cmGrey500 rounded'\n                                style={{width: '140px', height: '140px', overflow: 'hidden'}}\n                            >\n                                <CustomImage\n                                    style={{width: '140px', height: '140px'}}\n                                    objectFit='cover'\n                                    type={IMAGE_TYPE.companyLogo}\n                                    showImageError={false}\n                                    customSrc={\n                                        companyProfile?.logo?.name\n                                            ? URL.createObjectURL(companyProfile?.logo)\n                                            : getServerImage(\n                                                  companyProfile?.logo,\n                                                  IMAGE_TYPE.companyLogo\n                                              )\n                                    }\n                                />\n                            </div>\n                            <div className='d-flex align-items-center justify-content-center gap-3 w-sm-100 ms-sm-2 position-absolute top-50 start-100 translate-middle '>\n                                <div\n                                    onClick={onPressEditCompanyProfile}\n                                    className='bi bi-pencil-fill fs-6 py-1 px-2 text-cmGrey700 bg-white shadow-sm rounded cursor-pointer'\n                                ></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Line 2 */}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25 required'>Company Name</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomInput\n                                errorMessage={companyProfileErrorMessages?.name}\n                                placeholder='Enter company name'\n                                name='name'\n                                value={companyProfile?.name}\n                                onChange={onChangeInputData}\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Line 3*/}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25'>\n                            Contact Phone<span className='required'></span>\n                        </div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomInput\n                                value={companyProfile?.phone_number}\n                                type={INPUT_TYPE.mobile}\n                                onChange={onChangeInputData}\n                                name='phone_number'\n                                errorMessage={companyProfileErrorMessages?.phone_number}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Line 4 */}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25 required'>Business Name</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomInput\n                                placeholder='Enter Business name'\n                                name='business_name'\n                                errorMessage={companyProfileErrorMessages?.business_name}\n                                value={companyProfile?.business_name}\n                                onChange={onChangeInputData}\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Line 4*/}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25 required'>Company Email</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomInput\n                                name='company_email'\n                                value={companyProfile?.company_email}\n                                errorMessage={companyProfileErrorMessages?.company_email}\n                                onChange={onChangeInputData}\n                                placeholder='abc@gmail.com'\n                            />\n                        </div>\n                    </div>\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25'>Company Website</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomInput\n                                name='company_website'\n                                value={companyProfile?.company_website}\n                                onChange={onChangeInputData}\n                                placeholder='www.URL.com'\n                            />\n                        </div>\n                    </div>\n                    {/* line */}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25'>Company Address</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomAddressInput2\n                                needTimeZone\n                                showAddressLine2\n                                data={{\n                                    ...INITIAL_ADDRESS_FIELD,\n                                    full_address: companyProfile?.business_address,\n                                    address_line1: companyProfile?.business_address_1,\n                                    address_line2: companyProfile?.business_address_2,\n                                    city: companyProfile?.business_city,\n                                    state: companyProfile?.business_state,\n                                    zip: companyProfile?.business_zip,\n                                    lat: companyProfile?.business_lat,\n                                    long: companyProfile?.business_long,\n                                    time_zone: companyProfile?.business_address_time_zone,\n                                }}\n                                setData={(data) => {\n                                    setCompanyProfile((val) => ({\n                                        ...val,\n                                        business_address: data?.full_address,\n                                        business_address_1: data?.address_line1,\n                                        business_address_2: data?.address_line2,\n                                        business_city: data?.city,\n                                        business_state: data?.state,\n                                        business_zip: data?.zip,\n                                        business_lat: data?.lat,\n                                        business_long: data?.long,\n                                        business_address_time_zone: data?.time_zone,\n                                    }))\n                                }}\n                                errorMessage={companyProfileErrorMessages?.business_address}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Line */}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25 required'>Business Phone</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomInput\n                                errorMessage={companyProfileErrorMessages?.business_phone}\n                                value={companyProfile?.business_phone}\n                                type={INPUT_TYPE.mobile}\n                                onChange={onChangeInputData}\n                                name='business_phone'\n                                placeholder='XXXXXXXXXX'\n                            />\n                        </div>\n                    </div>\n\n                    {/* Mailing Address */}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25'>Mailing Address</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomAddressInput2\n                                needTimeZone\n                                showAddressLine2\n                                data={{\n                                    ...INITIAL_ADDRESS_FIELD,\n                                    full_address: companyProfile?.mailing_address,\n                                    address_line1: companyProfile?.mailing_address_1,\n                                    address_line2: companyProfile?.mailing_address_2,\n                                    city: companyProfile?.mailing_city,\n                                    state: companyProfile?.mailing_state,\n                                    zip: companyProfile?.mailing_zip,\n                                    lat: companyProfile?.mailing_lat,\n                                    long: companyProfile?.mailing_long,\n                                    time_zone: companyProfile?.mailing_address_time_zone,\n                                }}\n                                setData={(data) => {\n                                    setCompanyProfile((val) => ({\n                                        ...val,\n                                        mailing_address: data?.full_address,\n                                        mailing_address_1: data?.address_line1,\n                                        mailing_address_2: data?.address_line2,\n                                        mailing_city: data?.city,\n                                        mailing_state: data?.state,\n                                        mailing_zip: data?.zip,\n                                        mailing_lat: data?.lat,\n                                        mailing_long: data?.long,\n                                        mailing_address_time_zone: data?.time_zone,\n                                    }))\n                                }}\n                                errorMessage={companyProfileErrorMessages?.mailing_address}\n                            />\n                        </div>\n                    </div>\n\n                    {/* Business EIN */}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25 required'>Business EIN</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomInput\n                                value={companyProfile?.business_ein}\n                                errorMessage={companyProfileErrorMessages?.business_ein}\n                                onChange={onChangeInputData}\n                                name='business_ein'\n                                type={INPUT_TYPE.mobile}\n                                mask='99-9999999'\n                                placeholder='Enter business EIN'\n                            />\n                        </div>\n                    </div>\n\n                    {/* Line */}\n                    {/* <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25'>Company Type</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomDropdown\n                                placeholder='Select Company type'\n                                value={companyProfile?.company_type}\n                                name='company_type'\n                                onChange={onChangeInputData}\n                                options={[\n                                    {name: 'Solar', value: 'Solar'},\n                                    {name: 'Pest', value: 'Pest'},\n                                ]}\n                                searching={false}\n                            />\n                        </div>\n                    </div> */}\n\n                    {/* Line */}\n                    <div className='d-flex align-items-baseline flex-wrap mb-10'>\n                        <div className='w-sm-25'>Time Zone</div>\n                        <div className='w-sm-50 w-100'>\n                            <CustomDropdown\n                                placeholder='Select Timezone'\n                                name='time_zone'\n                                value={companyProfile?.time_zone}\n                                onChange={onChangeInputData}\n                                options={timeZones}\n                                valueKey={'text'}\n                                displayKey={'text'}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ManualAddressPopup\n                show={showAddressPopup}\n                handleClose={closeAddressPopup}\n                manualData={manualAddressObj}\n                onChangeInputData={onChangeInputData}\n                companyProfile={companyProfile}\n                setCompanyProfile={setCompanyProfile}\n            />\n            {showEditProfileModal ? (\n                <EditProfileModal\n                    show={showEditProfileModal}\n                    handleClose={() => setShowEditProfileModal(false)}\n                    companyProfile={companyProfile}\n                    // getServerImage={getServerImage}\n                    updateCompanyProfileData={updateCompanyProfileData}\n                    companyProfileFilePickerRef={companyProfileFilePickerRef}\n                    handleRotationChange={handleRotationChange}\n                    handleZoomChange={handleZoomChange}\n                    rotation={rotation}\n                    zoomLevel={zoomLevel}\n                />\n            ) : null}\n        </div>\n    )\n}\n\nexport default SettingsEditProfile\n","import React from 'react'\n\nconst SetupPaperwork = () => {\n    return (\n        <div\n            className='bg-cmwhite shadow-sm pb-10'\n            style={{borderRadius: '10px', fontSize: '14px', fontFamily: 'Manrope'}}\n        >\n            {/* Begins header */}\n            <div className='p-5'>\n                <div\n                    className='d-flex align-items-center gap-5 mx-sm-0 mx-auto'\n                    style={{fontSize: '18px', fontFamily: 'Manrope', fontWeight: '600'}}\n                >\n                    <div>Company Paperwork</div>\n                </div>\n            </div>\n            <hr className='py-0 my-0 text-cmGrey500' />\n            <div className='my-10 text-center text-cmGrey400 fs-2'>Iframe goes here</div>\n        </div>\n    )\n}\n\nexport default SetupPaperwork\n","import React from 'react'\n\nconst SetupBankAcc = () => {\n    return (\n        <div\n            className='bg-cmwhite shadow-sm pb-10'\n            style={{borderRadius: '10px', fontSize: '14px', fontFamily: 'Manrope'}}\n        >\n            {/* Begins header */}\n            <div className='p-5'>\n                <div\n                    className='d-flex align-items-center gap-5 mx-sm-0 mx-auto'\n                    style={{fontSize: '18px', fontFamily: 'Manrope', fontWeight: '600'}}\n                >\n                    <div>Bank Account</div>\n                </div>\n            </div>\n            <hr className='py-0 my-0 text-cmGrey500' />\n            <div className='my-10 text-center text-cmGrey400 fs-2'>Iframe goes here</div>\n        </div>\n    )\n}\n\nexport default SetupBankAcc\n","import React, {useCallback, useEffect, useState} from 'react'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getuserbyPositionIDService} from '../../../../../../services/Services'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport debounce from 'lodash.debounce'\nimport Pagination from '../../../sequidocs/component/Pagination'\n\nconst PositionPeople = () => {\n    const navigate = useNavigate()\n    const Location = useLocation()\n    const [tableData, settableData] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [searchText, setSearchText] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [activePage, setActivePage] = useState(1)\n\n    useEffect(() => {\n        // const body = {id: Location?.state?.id}\n        const body = {\n            page: activePage,\n            search: searchVal,\n        }\n        getuserbyPositionIDService(Location?.state?.id, body)\n            .then((res) => {\n                settableData(res?.data)\n            })\n            .finally(() => setLoading(false))\n    }, [activePage, searchVal])\n\n    const handleSearchChange = (e) => {\n        // setFilterData(initialFilter)\n        setActivePage(1)\n        setSearchText(e?.target?.value)\n        delaySave(e?.target?.value)\n    }\n    const delaySave = useCallback(\n        debounce((val) => {\n            setSearchVal(val)\n            setLoading(true)\n        }, 500),\n        [searchVal]\n    )\n\n    return (\n        <div\n            className='bg-cmwhite shadow-sm'\n            style={{\n                fontFamily: 'Manrope',\n                fontSize: '14px',\n                borderRadius: '12px',\n                position: 'relative',\n            }}\n        >\n            <CustomLoader visible={loading} full />\n\n            <div className='d-flex justify-content-between align-items-center p-5'>\n                <div\n                    className='bi bi-box-arrow-left fs-1 text-cmGrey600 text-hover-dark cursor-pointer'\n                    onClick={() => navigate(-1)}\n                ></div>\n                <div style={{fontSize: '16px', fontWeight: '600', fontFamily: 'Manrope'}}>\n                    List of People: {Location?.state?.name}\n                </div>\n                <div>\n                    {' '}\n                    <CustomInput\n                        type={INPUT_TYPE.search}\n                        value={searchText}\n                        onChange={handleSearchChange}\n                    />\n                </div>\n            </div>\n            <div className='table-responsive overflow-auto'>\n                <table className='table'>\n                    <thead>\n                        <tr\n                            className=' bg-cmGrey300 text-cmGrey800 '\n                            style={{\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                fontFamily: 'Manrope',\n                            }}\n                        >\n                            <th className='w-200px p-5'>S.no</th>\n                            <th className='w-auto p-5 '>Users</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tableData?.data?.length > 0 ? (\n                            tableData?.data?.map((i, index) => (\n                                <tr\n                                    key={i?.id}\n                                    className={`stripRow`}\n                                    style={{\n                                        fontSize: '14px',\n                                        fontFamily: 'Manrope',\n                                        fontWeight: '600',\n                                    }}\n                                >\n                                    <td className='p-5'>{index + 1}</td>\n                                    <td className='text-decoration-underline text-hover-primary cursor-pointer p-5 text-nowrap'>\n                                        <RedirectToEmployeeProfile employeeId={i?.id}>\n                                            <CustomImage src={i?.image} className='avatar me-3' />\n                                            {i?.first_name} {i?.last_name}{' '}\n                                        </RedirectToEmployeeProfile>\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr className='no-data'>\n                                <td\n                                    colSpan={3}\n                                    className='text-center fw-bold py-10'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    No data found\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n            <Pagination\n                page={activePage}\n                totalPages={tableData?.last_page}\n                setPage={(changedPage) => setActivePage(changedPage)}\n            />\n        </div>\n    )\n}\n\nexport default PositionPeople\n","import React, {useEffect, useState} from 'react'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport {addOnBoardingConfigurationService} from '../../../../../../../services/Services'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\n\nconst EmployeeIdSettings = ({\n    configurationData,\n    setConfigurationData,\n    isEmployeeIdAlreadySet,\n    getConfigurationData,\n}) => {\n    const [openCard, setOpenCard] = useState(true)\n    const [editMode, setEditMode] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const handleOpenCard = () => {\n        setOpenCard(!openCard)\n    }\n    const handleEditMode = () => {\n        setLoading(true)\n        getConfigurationData()\n        setEditMode(!editMode)\n        setLoading(false)\n    }\n\n    const handleChange = (field_name, value) => {\n        const tempData = {...configurationData}\n        tempData[field_name] = value\n        setConfigurationData(tempData)\n    }\n\n    const onSavePress = () => {\n        setLoading(true)\n        let bodyData = {...configurationData}\n        bodyData['employee_personal_detail'] = bodyData?.employee_personal_detail?.map((res) => ({\n            ...res,\n            attribute_option: JSON.stringify(res?.attribute_option),\n        }))\n        bodyData['additional_info_for_employee_to_get_started'] =\n            bodyData?.additional_info_for_employee_to_get_started?.map((res) => ({\n                ...res,\n                attribute_option: JSON.stringify(res?.attribute_option),\n            }))\n        addOnBoardingConfigurationService(bodyData)\n            .then(() => CustomToast.success('Employee ID Settings Updated'))\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                // getConfigurationData()\n                setLoading(false)\n                handleEditMode()\n            })\n    }\n\n    return (\n        <div\n            className='bg-cmwhite shadow-sm text-cmGrey800'\n            style={{borderRadius: 10, position: 'relative'}}\n        >\n            <CustomLoader full visible={loading} />\n\n            <div\n                className='px-10 py-5 text-cmGrey500 border-bottom border-cmGrey200 border-2'\n                style={{fontSize: 16, fontWeight: 600}}\n            >\n                Hiring Configurations\n            </div>\n            <div className='d-flex flex-wrap gap-3 align-items-center justify-content-between px-10 py-5 '>\n                <div className='d-flex flex-center gap-5'>\n                    <div className='text-cmGrey900' style={{fontSize: 16, fontWeight: 700}}>\n                        Employee ID Settings\n                    </div>\n                    <CustomArrow\n                        arrowDirection={openCard ? ARROW_DIRECTION.down : ARROW_DIRECTION.right}\n                        onClick={handleOpenCard}\n                    />\n                </div>\n                {openCard ? (\n                    <>\n                        {' '}\n                        {editMode ? (\n                            <div className='d-flex gap-5'>\n                                <CustomButton\n                                    buttonLabel='Cancel'\n                                    buttonType={BUTTON_TYPE.greyText}\n                                    onClick={handleEditMode}\n                                />\n                                <CustomButton\n                                    buttonLabel='Save'\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    padding={'px-10'}\n                                    onClick={onSavePress}\n                                />\n                            </div>\n                        ) : (\n                            <CustomEditIcon onClick={handleEditMode} />\n                        )}{' '}\n                    </>\n                ) : null}\n            </div>\n            {/* Display screen */}\n            {openCard ? (\n                <>\n                    {editMode ? (\n                        <>\n                            <div className='bg-strip w-100 mx-auto row py-5 align-items-center'>\n                                <div className='col-lg-3 col-sm-4 text-sm-end'>\n                                    Employee ID Code:\n                                </div>\n                                <div className='col-sm d-flex align-itmes-center gap-5 '>\n                                    <div>\n                                        <CustomDropdown\n                                            options={[\n                                                {name: 'Prefix', value: 'prefix'},\n                                                {name: 'None', value: 'none'},\n                                            ]}\n                                            disabled={isEmployeeIdAlreadySet.id_code}\n                                            value={configurationData?.prefix}\n                                            onChange={(e) => {\n                                                handleChange(e.target.name, e.target.value)\n                                            }}\n                                            name={'prefix'}\n                                            showClear={false}\n                                            searching={false}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            placeholder='Enter ID Code'\n                                            disabled={isEmployeeIdAlreadySet.id_code}\n                                            name='id_code'\n                                            value={\n                                                configurationData?.prefix == 'none'\n                                                    ? ''\n                                                    : configurationData?.id_code\n                                            }\n                                            onChange={(e) =>\n                                                handleChange(e.target.name, e.target.value)\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='row py-5 w-100 mx-auto align-items-center'>\n                                <div className='col-lg-3 col-sm-4  text-sm-end'>\n                                    Employee ID Code number to start from:\n                                </div>\n                                <div className='col-sm mw-sm-325px'>\n                                    <CustomInput\n                                        type={INPUT_TYPE.number}\n                                        placeholder='Enter Number'\n                                        name='id_code_no_to_start_from'\n                                        // disabled={isEmployeeIdAlreadySet.id_code_no_to_start_from}\n                                        value={configurationData?.id_code_no_to_start_from}\n                                        onChange={(e) =>\n                                            handleChange(e.target.name, e.target.value)\n                                        }\n                                    />\n                                </div>\n                            </div>\n                            <hr className='my-1 text-cmGrey400' />\n                            <div className='bg-strip w-100 mx-auto row py-5 align-items-center'>\n                                <div className='col-lg-3 col-sm-4 text-sm-end'>\n                                    {' '}\n                                    OnBoarding ID Code:\n                                </div>\n                                <div className='col-sm d-flex align-itmes-center gap-5 '>\n                                    <div>\n                                        <CustomDropdown\n                                            options={[\n                                                {name: 'Prefix', value: 'prefix'},\n                                                {name: 'None', value: 'none'},\n                                            ]}\n                                            disabled={isEmployeeIdAlreadySet.onbording_id_code}\n                                            value={configurationData?.onbording_prefix}\n                                            onChange={(e) => {\n                                                handleChange(e.target.name, e.target.value)\n                                            }}\n                                            name={'onbording_prefix'}\n                                            showClear={false}\n                                            searching={false}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            placeholder='Enter OnBoarding ID Code'\n                                            disabled={isEmployeeIdAlreadySet.onbording_id_code}\n                                            name='onbording_id_code'\n                                            value={\n                                                configurationData?.prefix == 'none'\n                                                    ? ''\n                                                    : configurationData?.onbording_id_code\n                                            }\n                                            onChange={(e) =>\n                                                handleChange(e.target.name, e.target.value)\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='row py-5 w-100 mx-auto align-items-center'>\n                                <div className='col-lg-3 col-sm-4  text-sm-end'>\n                                    OnBoarding ID Code number to start from:\n                                </div>\n                                <div className='col-sm mw-sm-325px'>\n                                    <CustomInput\n                                        type={INPUT_TYPE.number}\n                                        placeholder='Enter Number'\n                                        name='onbording_id_code_no_to_start_from'\n                                        // disabled={isEmployeeIdAlreadySet.onbording_id_code_no_to_start_from}\n                                        value={\n                                            configurationData?.onbording_id_code_no_to_start_from\n                                        }\n                                        onChange={(e) =>\n                                            handleChange(e.target.name, e.target.value)\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className='bg-strip w-100 mx-auto row py-5'>\n                                <div className='col-lg-3 col-sm-4 col text-sm-end'>ID Code:</div>\n                                <div className='col d-flex align-itmes-center gap-5 '>\n                                    <div>{configurationData?.prefix ?? '--'}</div>\n                                    <div>{configurationData?.id_code ?? '--'}</div>\n                                </div>\n                            </div>\n                            <div className='row py-5 w-100 mx-auto'>\n                                <div className='col-lg-3 col-sm-4 col text-sm-end'>\n                                    ID Code number to start from:\n                                </div>\n                                <div className='col-sm text-cmGrey900'>\n                                    {configurationData?.id_code_no_to_start_from ?? '--'}\n                                </div>\n                            </div>\n                            <hr className='my-2 text-cmGrey300' />\n                            <div className='bg-strip w-100 mx-auto row py-5'>\n                                <div className='col-lg-3 col-sm-4 col text-sm-end'>\n                                    OnBoarding ID Code:\n                                </div>\n                                <div className='col d-flex align-itmes-center gap-5 '>\n                                    <div>{configurationData?.prefix ?? '--'}</div>\n                                    <div>{configurationData?.onbording_id_code ?? '--'}</div>\n                                </div>\n                            </div>\n                            <div className='row py-5 w-100 mx-auto'>\n                                <div className='col-lg-3 col-sm-4 col text-sm-end'>\n                                    OnBoarding ID Code number to start from:\n                                </div>\n                                <div className='col-sm text-cmGrey900'>\n                                    {configurationData?.onbording_id_code_no_to_start_from ?? '--'}\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </>\n            ) : null}\n        </div>\n    )\n}\n\nexport default EmployeeIdSettings\n","import {useCallback, useState} from 'react'\nimport {\n    addOrUpdateOnboardingDynamicAttributesService,\n    deleteOnboardingDynamicAttributesService,\n} from '../../../../../../../services/Services'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\nimport _ from 'lodash'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {DYNAMIC_FIELD_TYPE} from '../../../../../../../constants/constants'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomDelete from '../../../../../../../customComponents/customIcons/CustomDelete'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomDialog from '../../../../../../../customComponents/customDialog/CustomDialog'\nimport CustomLink from '../../../../../../../customComponents/customButtton/CustomLink'\n\nexport const ONBOARDING_CONFIGURATION_TYPE = {\n    employee_personal_detail: 'employee_personal_detail',\n    additional_info_for_employee_to_get_started: 'additional_info_for_employee_to_get_started',\n    document_to_update: 'document_to_update',\n}\n\nconst SingleConfigurationAttributeRow = ({\n    data,\n    getConfigurationData,\n    type = '',\n    onDeleteRow = () => {},\n    index,\n}) => {\n    const [item, setItem] = useState(data)\n    const [loading, setLoading] = useState(false)\n    const [editMode, setEditMode] = useState(data?.id ? false : true)\n\n    const onDeletePress = useCallback(() => {\n        CustomDialog.confirm('Are you sure want to delete', () => {\n            let body = {}\n            if (type == ONBOARDING_CONFIGURATION_TYPE.employee_personal_detail)\n                body.employee_personal_detail_id = data?.id\n            else if (\n                type == ONBOARDING_CONFIGURATION_TYPE.additional_info_for_employee_to_get_started\n            )\n                body.additional_info_id = data?.id\n            else if (type == ONBOARDING_CONFIGURATION_TYPE.document_to_update)\n                body.document_type_id = data?.id\n\n            setLoading(true)\n            deleteOnboardingDynamicAttributesService(body)\n                .then(() => {\n                    getConfigurationData().finally(() => {\n                        setLoading(false)\n                    })\n                })\n                .catch((e) => {\n                    setLoading(false)\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n        })\n    }, [data?.id, getConfigurationData, type])\n\n    const onEditPress = useCallback(() => {\n        setEditMode(true)\n    }, [])\n\n    const onSavePress = useCallback(() => {\n        if (!item?.field_name) return CustomToast.error('Enter field name')\n        if (!item?.field_type && type != ONBOARDING_CONFIGURATION_TYPE.document_to_update)\n            return CustomToast.error('Select field type')\n        if (\n            item?.field_type == 'dropdown' &&\n            (!item?.attribute_option || item?.attribute_option?.length <= 0)\n        )\n            return CustomToast.error('Add atleast 1 dropdown option')\n        if (!item?.field_required) return CustomToast.error('Select field mandatory or mandatory')\n\n        const body = {\n            [type]: {\n                id: data?.id ?? null,\n                field_name: item?.field_name,\n                field_type: item?.field_type,\n                field_required: item?.field_required,\n                attribute_option: item?.attribute_option\n                    ? JSON.stringify(item?.attribute_option)\n                    : null,\n                field_link: item?.field_link,\n            },\n        }\n        setLoading(true)\n        addOrUpdateOnboardingDynamicAttributesService(body)\n            .then(() => {\n                getConfigurationData().finally(() => {\n                    setLoading(false)\n                    setEditMode(false)\n                })\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n                setLoading(false)\n            })\n    }, [\n        data?.id,\n        getConfigurationData,\n        item?.attribute_option,\n        item?.field_link,\n        item?.field_name,\n        item?.field_required,\n        item?.field_type,\n        type,\n    ])\n\n    const handleDropdownFieldsChange = useCallback(\n        (index, value) => {\n            let options = [...item?.attribute_option]\n            options[index] = value\n            setItem((val) => ({\n                ...val,\n                attribute_option: options,\n            }))\n        },\n        [item?.attribute_option]\n    )\n\n    const addDropDownFields = useCallback(() => {\n        let options = _.cloneDeep(item?.attribute_option ?? [])\n        options.push('')\n        setItem((val) => ({\n            ...val,\n            attribute_option: options,\n        }))\n    }, [item?.attribute_option])\n\n    const onChangeInputData = useCallback((e) => {\n        setItem((val) => ({\n            ...val,\n            [e?.target?.name]: e?.target?.value,\n        }))\n    }, [])\n\n    const onDeleteDropdownField = useCallback(\n        (index) => {\n            let options = [...item?.attribute_option]\n            const filteredOptions = options.filter((it, ind) => ind != index)\n            setItem((val) => ({\n                ...val,\n                attribute_option: filteredOptions,\n            }))\n        },\n        [item?.attribute_option]\n    )\n\n    return (\n        <>\n            <tr className='stripRow' style={{verticalAlign: 'middle'}}>\n                <td></td>\n                <td className=''>\n                    {editMode ? (\n                        <CustomInput\n                            type={INPUT_TYPE.text}\n                            placeholder='Enter'\n                            onChange={onChangeInputData}\n                            value={item?.field_name}\n                            name={'field_name'}\n                        />\n                    ) : (\n                        data?.field_name\n                    )}\n                </td>\n\n                {type != ONBOARDING_CONFIGURATION_TYPE.document_to_update && (\n                    <td>\n                        {editMode ? (\n                            <CustomDropdown\n                                options={DYNAMIC_FIELD_TYPE}\n                                searching={false}\n                                value={item?.field_type}\n                                name={'field_type'}\n                                onChange={onChangeInputData}\n                            />\n                        ) : (\n                            data?.field_type\n                        )}\n                    </td>\n                )}\n\n                <td>\n                    {editMode ? (\n                        <CustomDropdown\n                            options={[\n                                {\n                                    name: 'Optional',\n                                    value: 'optional',\n                                },\n                                {\n                                    name: 'Mandatory',\n                                    value: 'required',\n                                },\n                            ]}\n                            searching={false}\n                            value={item?.field_required}\n                            name={'field_required'}\n                            onChange={onChangeInputData}\n                        />\n                    ) : data?.field_required == 'required' ? (\n                        'Mandatory'\n                    ) : (\n                        'Optional'\n                    )}\n                </td>\n                {/* {type != ONBOARDING_CONFIGURATION_TYPE.document_to_update && <td></td>} */}\n                {type == ONBOARDING_CONFIGURATION_TYPE.document_to_update && (\n                    <td>\n                        {editMode ? (\n                            <CustomInput\n                                type={INPUT_TYPE.text}\n                                placeholder='Enter'\n                                value={item?.field_link}\n                                name={'field_link'}\n                                onChange={onChangeInputData}\n                            />\n                        ) : (\n                            data?.field_link ?? '-'\n                        )}\n                    </td>\n                )}\n\n                {type != ONBOARDING_CONFIGURATION_TYPE.document_to_update && (\n                    <td>\n                        {editMode\n                            ? null\n                            : item?.attribute_option?.length > 0\n                            ? item?.attribute_option?.join(', ')\n                            : '-'}\n                    </td>\n                )}\n\n                <td className='d-flex flex-center gap-5'>\n                    {editMode ? (\n                        <div className='d-flex gap-5'>\n                            {loading && editMode ? (\n                                <div className='my-auto'>\n                                    <i\n                                        class='fa-solid fa-circle-notch fa-spin text-cmBlue-Crayola'\n                                        style={{fontSize: '20px'}}\n                                    ></i>\n                                </div>\n                            ) : (\n                                <i\n                                    class='fa-solid fa-square-check text-cmBlue-Crayola cursor-pointer'\n                                    style={{fontSize: '35px'}}\n                                    onClick={onSavePress}\n                                ></i>\n                            )}\n                            {data?.id ? (\n                                <i\n                                    class='fa-solid fa-square-xmark text-cmGrey400 cursor-pointer'\n                                    style={{fontSize: '35px'}}\n                                    onClick={() => {\n                                        setEditMode(false)\n                                        setItem(data)\n                                    }}\n                                ></i>\n                            ) : null}\n                        </div>\n                    ) : (\n                        <span className='d-flex flex-center gap-5'>\n                            <CustomEditIcon onClick={onEditPress} />\n                            {!editMode || !data?.id ? (\n                                loading && !editMode ? (\n                                    <i\n                                        class='fa-solid fa-circle-notch fa-spin text-cmError'\n                                        style={{fontSize: '20px'}}\n                                    ></i>\n                                ) : (\n                                    <CustomDelete onClick={onDeletePress} />\n                                )\n                            ) : null}\n                        </span>\n                    )}\n                    {!data?.id ? (\n                        <CustomDelete\n                            loading={loading && !editMode}\n                            onClick={() => onDeleteRow(index)}\n                        />\n                    ) : null}\n                </td>\n\n                {type == ONBOARDING_CONFIGURATION_TYPE.document_to_update && <td></td>}\n            </tr>\n            {/* Optional Dropdown */}\n\n            {editMode &&\n                item?.field_type == 'dropdown' &&\n                item?.attribute_option != null &&\n                item?.attribute_option?.length > 0 &&\n                item?.attribute_option?.map((val, i) => (\n                    <tr className='stripRow' key={i}>\n                        <td></td>\n\n                        <td className=''>\n                            {i === 0 ? (\n                                <div\n                                    className='text-cmGrey800'\n                                    style={{\n                                        fontWeight: '600  ',\n                                    }}\n                                >\n                                    Options:\n                                </div>\n                            ) : null}\n                        </td>\n\n                        <td colSpan={2}>\n                            <CustomInput\n                                type={INPUT_TYPE.text}\n                                placeholder='Enter'\n                                value={val}\n                                onChange={(e) => handleDropdownFieldsChange(i, e.target.value)}\n                            />\n                        </td>\n\n                        <td>\n                            <CustomDelete onClick={() => onDeleteDropdownField(i)} />\n                        </td>\n\n                        <td></td>\n                    </tr>\n                ))}\n            {editMode && item?.field_type == 'dropdown' ? (\n                <tr>\n                    <td></td>\n                    <td className='text-center' colSpan={3}>\n                        <div className='mx-auto' style={{width: 'fit-content'}}>\n                            <CustomLink\n                                label={'Add Options'}\n                                onClick={addDropDownFields}\n                                icon={'bi bi-plus-square  fs-4'}\n                            />\n                        </div>\n                    </td>\n\n                    <td></td>\n                    <td></td>\n                </tr>\n            ) : null}\n        </>\n    )\n}\n\nexport default SingleConfigurationAttributeRow\n","import React, {useCallback, useMemo, useState} from 'react'\nimport _ from 'lodash'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport CustomEditIcon from '../../../../../../../customComponents/customIcons/CustomEditIcon'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDelete from '../../../../../../../customComponents/customIcons/CustomDelete'\nimport {DYNAMIC_FIELD_TYPE} from '../../../../../../../constants/constants'\nimport {\n    addOnBoardingConfigurationService,\n    addOrUpdateOnboardingDynamicAttributesService,\n} from '../../../../../../../services/Services'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport SingleConfigurationAttributeRow, {\n    ONBOARDING_CONFIGURATION_TYPE,\n} from './SingleConfigurationAttributeRow'\n\nconst PersonalDetails = ({configurationData, setConfigurationData, getConfigurationData}) => {\n    const [openCard, setOpenCard] = useState(true)\n\n    const handleOpenCard = () => {\n        setOpenCard(!openCard)\n    }\n    const addNewRow = (name) => {\n        let dumbData = {...configurationData}\n        if (!dumbData?.[name]) dumbData[name] = []\n        dumbData[name].push({\n            id: null,\n            field_name: null,\n            field_type: 'text',\n            field_required: 'optional',\n            configuration_id: null,\n            attribute_option: null,\n        })\n        setConfigurationData(dumbData)\n    }\n\n    const onDeleteRow = useCallback(\n        (itemIndex) => {\n            let tempData = {...configurationData}\n            tempData = configurationData?.employee_personal_detail?.filter(\n                (item, index) => index != itemIndex\n            )\n\n            setConfigurationData({\n                ...configurationData,\n                employee_personal_detail: tempData,\n            })\n        },\n        [configurationData, setConfigurationData]\n    )\n    return (\n        <div\n            className='bg-cmwhite shadow-sm text-cmGrey800'\n            style={{borderRadius: 10, position: 'relative'}}\n        >\n            <div className='d-flex flex-wrap gap-3 align-items-center justify-content-between px-10 py-5 '>\n                <div className='d-flex flex-center gap-5'>\n                    <div className='text-cmGrey900' style={{fontSize: 16, fontWeight: 700}}>\n                        Employee Additional Personal Details\n                    </div>\n                    <CustomArrow\n                        arrowDirection={openCard ? ARROW_DIRECTION.down : ARROW_DIRECTION.right}\n                        onClick={handleOpenCard}\n                    />\n                </div>\n            </div>\n            {/* Display screen */}\n            {openCard ? (\n                <>\n                    <div className='table-responsive'>\n                        <table\n                            className='table text-cmGrey800'\n                            style={{tableLayout: 'fixed', fontWeight: 600, width: '100%'}}\n                        >\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600'\n                                    style={{fontSize: 12, fontWeight: 500}}\n                                >\n                                    <th className='w-50px'></th>\n                                    <th className='w-150px'>Description</th>\n                                    <th className='w-150px'>Output</th>\n                                    <th className='w-150px'>Condition</th>\n                                    <th className='w-100px'>Options(If Any)</th>\n                                    <th className='w-75px'></th>\n                                    {/* <th className='w-50px'></th> */}\n                                    {/* <th className='w-50px'></th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {configurationData?.employee_personal_detail?.length > 0 &&\n                                    configurationData?.employee_personal_detail.map(\n                                        (item, index) =>\n                                            !item?.is_deleted && (\n                                                <SingleConfigurationAttributeRow\n                                                    data={item}\n                                                    getConfigurationData={getConfigurationData}\n                                                    type={\n                                                        ONBOARDING_CONFIGURATION_TYPE.employee_personal_detail\n                                                    }\n                                                    onDeleteRow={onDeleteRow}\n                                                    index={index}\n                                                />\n                                            )\n                                    )}\n                                <tr>\n                                    <td></td>\n                                    <td className='text-cmBlue-Crayola ' colSpan={5}>\n                                        <div\n                                            className='d-flex gap-3 align-items-center cursor-pointer'\n                                            onClick={() => addNewRow('employee_personal_detail')}\n                                            style={{width: 'fit-content'}}\n                                        >\n                                            <div className='bi bi-plus-square' />\n                                            <div>Add Another</div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </>\n            ) : null}\n        </div>\n    )\n}\n\nexport default PersonalDetails\n","import React, {useCallback, useState} from 'react'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport SingleConfigurationAttributeRow, {\n    ONBOARDING_CONFIGURATION_TYPE,\n} from './SingleConfigurationAttributeRow'\n\nconst AdditionalInfo = ({configurationData, setConfigurationData, getConfigurationData}) => {\n    const [openCard, setOpenCard] = useState(true)\n\n    const handleOpenCard = () => {\n        setOpenCard(!openCard)\n    }\n\n    const addNewRow = (name) => {\n        let dumbData = {...configurationData}\n        if (!dumbData?.[name]) dumbData[name] = []\n        dumbData[name].push({\n            id: null,\n            field_name: null,\n            field_type: 'text',\n            field_required: 'optional',\n            configuration_id: null,\n            attribute_option: null,\n        })\n        setConfigurationData(dumbData)\n    }\n\n    const onDeleteRow = useCallback(\n        (itemIndex) => {\n            let tempData = {...configurationData}\n            tempData = configurationData?.additional_info_for_employee_to_get_started?.filter(\n                (item, index) => index != itemIndex\n            )\n\n            setConfigurationData({\n                ...configurationData,\n                additional_info_for_employee_to_get_started: tempData,\n            })\n        },\n        [configurationData, setConfigurationData]\n    )\n    return (\n        <div\n            className='bg-cmwhite shadow-sm text-cmGrey800'\n            style={{borderRadius: 10, position: 'relative'}}\n        >\n            <div className='d-flex  flex-wrap gap-3 align-items-center justify-content-between px-10 py-5 '>\n                <div className='d-flex flex-center gap-5'>\n                    <div className='text-cmGrey900' style={{fontSize: 16, fontWeight: 700}}>\n                        Additional Info for Employee to Get Started\n                    </div>\n                    <CustomArrow\n                        arrowDirection={openCard ? ARROW_DIRECTION.down : ARROW_DIRECTION.right}\n                        onClick={handleOpenCard}\n                    />\n                </div>\n            </div>\n            {/* Display screen */}\n            {openCard ? (\n                <>\n                    <div className='table-responsive'>\n                        <table\n                            className='table text-cmGrey800'\n                            style={{tableLayout: 'fixed', fontWeight: 600}}\n                        >\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600'\n                                    style={{fontSize: 12, fontWeight: 500}}\n                                >\n                                    <th className='w-50px'></th>\n                                    <th className='w-150px'>Description</th>\n                                    <th className='w-150px'>Output</th>\n                                    <th className='w-150px'>Condition</th>\n                                    <th className='w-100px'>Options(If Any)</th>\n                                    <th className='w-75px '></th>\n                                    {/* <th className='w-50px'></th> */}\n                                    {/* <th className='w-50px'></th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {configurationData?.additional_info_for_employee_to_get_started\n                                    ?.length > 0 &&\n                                    configurationData?.additional_info_for_employee_to_get_started.map(\n                                        (item, index) =>\n                                            !item?.is_deleted && (\n                                                <SingleConfigurationAttributeRow\n                                                    data={item}\n                                                    getConfigurationData={getConfigurationData}\n                                                    type={\n                                                        ONBOARDING_CONFIGURATION_TYPE.additional_info_for_employee_to_get_started\n                                                    }\n                                                    onDeleteRow={onDeleteRow}\n                                                    index={index}\n                                                />\n                                            )\n                                    )}\n                                <tr>\n                                    <td></td>\n                                    <td className='text-cmBlue-Crayola ' colSpan={5}>\n                                        <div\n                                            className='d-flex gap-3 align-items-center cursor-pointer'\n                                            onClick={() =>\n                                                addNewRow(\n                                                    'additional_info_for_employee_to_get_started'\n                                                )\n                                            }\n                                            style={{width: 'fit-content'}}\n                                        >\n                                            <div className='bi bi-plus-square' />\n                                            <div>Add Another</div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </>\n            ) : null}\n        </div>\n    )\n}\n\nexport default AdditionalInfo\n","import React, {useCallback, useState} from 'react'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport SingleConfigurationAttributeRow, {\n    ONBOARDING_CONFIGURATION_TYPE,\n} from './SingleConfigurationAttributeRow'\n\nconst DocumentToUpload = ({configurationData, setConfigurationData, getConfigurationData}) => {\n    const [openCard, setOpenCard] = useState(true)\n\n    // Edit mode data handlers\n\n    const handleOpenCard = () => {\n        setOpenCard(!openCard)\n    }\n    const addNewRow = (name) => {\n        let dumbData = {...configurationData}\n        if (!dumbData?.[name]) dumbData[name] = []\n        dumbData[name].push({\n            id: null,\n            field_name: null,\n            field_type: 'text',\n            field_required: 'optional',\n            configuration_id: null,\n            attribute_option: null,\n        })\n        setConfigurationData(dumbData)\n    }\n\n    const onDeleteRow = useCallback(\n        (itemIndex) => {\n            let tempData = {...configurationData}\n            tempData = configurationData?.document_to_update?.filter(\n                (item, index) => index != itemIndex\n            )\n\n            setConfigurationData({...configurationData, document_to_update: tempData})\n        },\n        [configurationData, setConfigurationData]\n    )\n\n    return (\n        <div\n            className='bg-cmwhite shadow-sm text-cmGrey800'\n            style={{borderRadius: 10, position: 'relative'}}\n        >\n            <div className='d-flex  flex-wrap gap-3 align-items-center justify-content-between px-10 py-5 '>\n                <div className='d-flex flex-center gap-5'>\n                    <div className='text-cmGrey900' style={{fontSize: 16, fontWeight: 700}}>\n                        Documents to Upload\n                    </div>\n                    <CustomArrow\n                        arrowDirection={openCard ? ARROW_DIRECTION.down : ARROW_DIRECTION.right}\n                        onClick={handleOpenCard}\n                    />\n                </div>\n            </div>\n\n            {openCard ? (\n                <>\n                    <div className='table-responsive'>\n                        <table\n                            className='table text-cmGrey800'\n                            style={{tableLayout: 'fixed', fontWeight: 600, width: '100%'}}\n                        >\n                            <thead>\n                                <tr\n                                    className='text-cmGrey600'\n                                    style={{fontSize: 12, fontWeight: 500}}\n                                >\n                                    <th className='w-50px'></th>\n                                    <th className='w-150px'>Description</th>\n                                    <th className='w-150px'>Condition</th>\n                                    <th className='w-150px'>Link</th>\n                                    <th className='w-75px'></th>\n                                    <th className='w-100px'></th>\n                                    {/* <th className='w-50px'></th> */}\n                                    {/* <th className='w-50px'></th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {configurationData?.document_to_update?.length > 0 &&\n                                    configurationData?.document_to_update?.map(\n                                        (item, index) =>\n                                            !item?.is_deleted && (\n                                                <SingleConfigurationAttributeRow\n                                                    data={item}\n                                                    getConfigurationData={getConfigurationData}\n                                                    type={\n                                                        ONBOARDING_CONFIGURATION_TYPE.document_to_update\n                                                    }\n                                                    onDeleteRow={onDeleteRow}\n                                                    index={index}\n                                                />\n                                            )\n                                    )}\n                                <tr>\n                                    <td></td>\n                                    <td className='text-cmBlue-Crayola ' colSpan={5}>\n                                        <div\n                                            className='d-flex gap-3 align-items-center cursor-pointer'\n                                            onClick={() => addNewRow('document_to_update')}\n                                            style={{width: 'fit-content'}}\n                                        >\n                                            <div className='bi bi-plus-square' />\n                                            <div>Add Another</div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </>\n            ) : null}\n        </div>\n    )\n}\n\nexport default DocumentToUpload\n","import React, {useEffect, useState} from 'react'\nimport EmployeeIdSettings from './components/EmployeeIdSettings'\nimport PersonalDetails from './components/PersonalDetails'\nimport AdditionalInfo from './components/AdditionalInfo'\nimport DocumentToUpload from './components/DocumentToUpload'\nimport {\n    getOnBoardingConfigurationService,\n    getTemplateListByCategoryService,\n} from '../../../../../../services/Services'\nimport {useDispatch} from 'react-redux'\nimport {getOnBoardingConfigurationAction} from '../../../../../../redux/actions/SettingActions'\n\nconst SettingHiringPage = () => {\n    const [configurationData, setConfigurationData] = useState([])\n    const [isEmployeeIdAlreadySet, setIsEmployeeIdAlreadySet] = useState({\n        id_code: false,\n        id_code_no_to_start_from: false,\n        onbording_id_code_no_to_start_from: false,\n        onbording_id_code: false,\n    })\n\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        getConfigurationData()\n        dispatch(getOnBoardingConfigurationAction())\n    }, [dispatch])\n\n    const getConfigurationData = () =>\n        new Promise((resolve, reject) => {\n            setLoading(true)\n            const body = {\n                id: '1',\n            }\n            getOnBoardingConfigurationService(body)\n                .then((res) => {\n                    let data = {...res.data?.[0]}\n                    data['employee_personal_detail'] =\n                        data?.employee_personal_detail?.map((res) => ({\n                            ...res,\n                            attribute_option: res?.attribute_option\n                                ? JSON.parse(res?.attribute_option)\n                                : [],\n                        })) ?? []\n                    data['additional_info_for_employee_to_get_started'] =\n                        data?.additional_info_for_employee_to_get_started?.map((res) => ({\n                            ...res,\n                            attribute_option: res?.attribute_option\n                                ? JSON.parse(res?.attribute_option)\n                                : [],\n                        })) ?? []\n\n                    setConfigurationData(data)\n                    setIsEmployeeIdAlreadySet((val) => ({\n                        ...val,\n                        id_code: data?.id_code ? true : false,\n                        id_code_no_to_start_from: data?.id_code_no_to_start_from ? true : false,\n                        onbording_id_code: data?.onbording_id_code ? true : false,\n                        onbording_id_code_no_to_start_from: data?.onbording_id_code_no_to_start_from\n                            ? true\n                            : false,\n                    }))\n                    resolve(data)\n                })\n                .catch(reject)\n                .finally(() => setLoading(false))\n        })\n\n    return (\n        <div style={{fontSize: 14, fontWeight: 600}}>\n            <div className='mb-10'>\n                <EmployeeIdSettings\n                    configurationData={configurationData}\n                    setConfigurationData={setConfigurationData}\n                    isEmployeeIdAlreadySet={isEmployeeIdAlreadySet}\n                    getConfigurationData={getConfigurationData}\n                />\n            </div>\n            <div className='mb-10'>\n                <PersonalDetails\n                    configurationData={configurationData}\n                    setConfigurationData={setConfigurationData}\n                    getConfigurationData={getConfigurationData}\n                />\n            </div>\n            <div className='mb-10'>\n                <AdditionalInfo\n                    configurationData={configurationData}\n                    setConfigurationData={setConfigurationData}\n                    getConfigurationData={getConfigurationData}\n                />\n            </div>\n            <div className='mb-10'>\n                <DocumentToUpload\n                    configurationData={configurationData}\n                    setConfigurationData={setConfigurationData}\n                    getConfigurationData={getConfigurationData}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SettingHiringPage\n","import React, {useState, useCallback, useEffect} from 'react'\nimport More1 from '../../../Setting/components/Path1.png'\nimport More from '../../../Setting/components/Path.png'\nimport {DYNAMIC_FIELD_TYPE} from '../../../../../../constants/constants'\nimport {\n    addOnBoardingConfigurationService,\n    getOnBoardingConfigurationService,\n    getTemplateListByCategoryService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getOnBoardingConfigurationAction} from '../../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomDelete from '../../../../../../customComponents/customIcons/CustomDelete'\nimport SettingHiringPage from './SettingHiringPage'\nvar selectedArr = null\n\nconst HiringConfiguration = () => {\n    const [more, setMore] = useState(false)\n    const [more1, setMore1] = useState(false)\n    const [more2, setMore2] = useState(false)\n    const [configurationData, setConfigurationData] = useState([])\n    const [isEmployeeIdAlreadySet, setIsEmployeeIdAlreadySet] = useState({\n        id_code: false,\n        id_code_no_to_start_from: false,\n    })\n    const [templateDropdown, setTemplateDropdown] = useState(null)\n    const [contractToSignData, setContractToSignData] = useState(null)\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const [checkedAll, setCheckedAll] = useState(false)\n\n    useEffect(() => {\n        getConfigurationData()\n        const body = {\n            category_id: 1,\n        }\n        getTemplateListByCategoryService(body).then((res) => {\n            let data = res?.data?.map((item) => ({id: item?.id, value: item?.template_name}))\n            setTemplateDropdown(data)\n        })\n\n        dispatch(getOnBoardingConfigurationAction())\n    }, [])\n    const getConfigurationData = () => {\n        setLoading(true)\n        const body = {\n            id: '1',\n        }\n        getOnBoardingConfigurationService(body)\n            .then((res) => {\n                let data = {...res.data?.[0]}\n                data['employee_personal_detail'] =\n                    data?.employee_personal_detail?.map((res) => ({\n                        ...res,\n                        attribute_option: JSON.parse(res?.attribute_option ?? '[]'),\n                    })) ?? []\n                data['additional_info_for_employee_to_get_started'] =\n                    data?.additional_info_for_employee_to_get_started?.map((res) => ({\n                        ...res,\n                        attribute_option: JSON.parse(res?.attribute_option ?? '[]'),\n                    })) ?? []\n\n                setConfigurationData(data)\n                setIsEmployeeIdAlreadySet((val) => ({\n                    ...val,\n                    id_code: data?.id_code ? true : false,\n                    id_code_no_to_start_from: data?.id_code_no_to_start_from ? true : false,\n                }))\n                getAgreementData(data?.select_agreement_to_sign)\n            })\n            .finally(() => setLoading(false))\n    }\n    const getAgreementData = (selectedAgreement) => {\n        const formBody = {\n            category_id: 2,\n        }\n        getTemplateListByCategoryService(formBody).then((res) => {\n            let data = res?.data?.map((item) => ({id: item?.id, value: item?.template_name}))\n            let SignDataArr = selectedAgreement?.split(',')\n\n            let checkedData = data?.map((item) => {\n                return {...item, isChecked: SignDataArr?.includes((item?.id).toString())}\n            })\n\n            setContractToSignData(checkedData)\n        })\n    }\n    const handleAddAnotherPersonalDetail = (name) => {\n        let dumbData = {...configurationData}\n        if (!dumbData?.[name]) dumbData[name] = []\n        dumbData[name].push({\n            id: null,\n            field_name: null,\n            field_type: 'text',\n            field_required: 'optional',\n            configuration_id: null,\n            attribute_option: null,\n        })\n        setConfigurationData(dumbData)\n    }\n    const addDropDownFields = (name, index) => {\n        const dumbData = {...configurationData}\n        if (dumbData?.[name]?.[index]?.['attribute_option']?.length > 0) {\n            dumbData[name][index]['attribute_option'] = [\n                ...dumbData?.[name]?.[index]?.['attribute_option'],\n                '',\n            ]\n        } else {\n            dumbData[name][index]['attribute_option'] = ['']\n        }\n\n        setConfigurationData(dumbData)\n    }\n    const onDeleteDropdownField = useCallback(\n        (name, itemIndex, subIndex) => {\n            let tempData = {...configurationData}\n\n            tempData = configurationData[name]?.map((item, index) => {\n                if (index === itemIndex) {\n                    item.attribute_option = item?.attribute_option?.filter(\n                        (subItem, i) => subIndex != i\n                    )\n                }\n\n                return item\n            })\n\n            setConfigurationData({...configurationData, [name]: tempData})\n        },\n        [configurationData]\n    )\n\n    const handleFieldsChange = (main_name, field_name, index, value) => {\n        const tempData = {...configurationData}\n        tempData[main_name][index][field_name] = value\n        setConfigurationData(tempData)\n    }\n    const handleDropdownFieldsChange = (main_name, index, value, subIndex) => {\n        const tempData = {...configurationData}\n\n        tempData[main_name][index]['attribute_option'][subIndex] = value\n        setConfigurationData(tempData)\n    }\n\n    const handleChange = (field_name, value) => {\n        const tempData = {...configurationData}\n        tempData[field_name] = value\n        setConfigurationData(tempData)\n    }\n    const onDeleteField = useCallback(\n        (main_name, itemIndex) => {\n            let tempData = {...configurationData}\n            tempData = configurationData[main_name]?.filter((item, index) => index != itemIndex)\n\n            setConfigurationData({...configurationData, [main_name]: tempData})\n        },\n        [configurationData]\n    )\n\n    const onSaveConfiguration = () => {\n        setLoading(true)\n        let bodyData = {...configurationData}\n        bodyData['employee_personal_detail'] = bodyData?.employee_personal_detail?.map((res) => ({\n            ...res,\n            attribute_option: JSON.stringify(res?.attribute_option),\n        }))\n        bodyData['additional_info_for_employee_to_get_started'] =\n            bodyData?.additional_info_for_employee_to_get_started?.map((res) => ({\n                ...res,\n                attribute_option: JSON.stringify(res?.attribute_option),\n            }))\n        addOnBoardingConfigurationService(bodyData)\n            .then(() => CustomToast.success('Hiring configuration saved'))\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                getConfigurationData()\n            })\n    }\n    const handleChceckbox = (id, e) => {\n        let updatedData = [...contractToSignData]\n        updatedData = updatedData?.map((item) => {\n            if (item?.id == id) {\n                return {...item, isChecked: e.target.checked}\n            } else {\n                return item\n            }\n        })\n        selectedArr = updatedData?.filter((item) => item?.isChecked)?.map((item2) => item2?.id)\n        setContractToSignData(updatedData)\n        if (contractToSignData?.length == selectedArr?.length) setCheckedAll(true)\n        else setCheckedAll(false)\n        handleChange('select_agreement_to_sign', selectedArr.join(','))\n    }\n    const selectAllCheckbox = (e) => {\n        let selectAllData = contractToSignData?.map((item) => {\n            return {...item, isChecked: e.target.checked}\n        })\n        selectedArr = selectAllData?.filter((item) => item?.isChecked)?.map((item2) => item2?.id)\n        setContractToSignData(selectAllData)\n        setCheckedAll(e.target.checked)\n        handleChange('select_agreement_to_sign', selectedArr.join(','))\n    }\n\n    return (\n        <>\n            <div\n                className='bg-cmwhite shadow-sm mb-20'\n                style={{borderRadius: '10px', fontSize: '14px', position: 'relative'}}\n            >\n                <CustomLoader full visible={loading} />\n                <div className='d-flex flex-wrap gap-2 gap-sm-0 justify-content-between align-items-center px-5 py-4'>\n                    <div className=' d-flex  align-items-center gap-3 text-cmGrey900 mx-auto mx-sm-0'>\n                        <span className='bi bi-gear fs-1' />\n                        <div\n                            style={{\n                                fontSize: '18px',\n                                fontFamily: 'Manrope',\n                                fontWeight: '600',\n                            }}\n                        >\n                            Configuration\n                        </div>\n                    </div>\n                    <div className='d-flex align-items-center gap-5 mx-sm-0 mx-auto'>\n                        {/* <CustomButton\n                        buttonType={BUTTON_TYPE.error}\n                        buttonLabel='Cancel'\n                        onClick={() => navigate(-1)}\n                    /> */}\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.primary}\n                            buttonLabel='Save'\n                            onClick={() => onSaveConfiguration()}\n                        />\n                    </div>\n                </div>\n\n                <div className='m-0 border border-gray-200'></div>\n\n                <div\n                    className='py-10 px-sm-0 px-3 w-xl-50 mx-sm-10'\n                    style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                >\n                    {/* Employee ID Settings */}\n                    <div className=''>\n                        <div className='mb-5' style={{fontSize: '16px', fontWeight: '600'}}>\n                            Employee ID Settings\n                        </div>\n                        <div className='ms-sm-10 mb-5'>\n                            <div className='mb-1' style={{fontWeight: '600'}}>\n                                ID Code\n                            </div>\n                            <div className='d-flex flex-wrap align-items-center gap-sm-10 gap-5'>\n                                <div>\n                                    <CustomDropdown\n                                        options={[\n                                            {name: 'Prefix', value: 'prefix'},\n                                            {name: 'None', value: 'none'},\n                                        ]}\n                                        disabled={isEmployeeIdAlreadySet.id_code}\n                                        value={configurationData?.prefix}\n                                        onChange={(e) => {\n                                            handleChange(e.target.name, e.target.value)\n                                        }}\n                                        name={'prefix'}\n                                        showClear={false}\n                                        searching={false}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        placeholder='Enter ID Code'\n                                        disabled={isEmployeeIdAlreadySet.id_code}\n                                        name='id_code'\n                                        value={\n                                            configurationData?.prefix == 'none'\n                                                ? ''\n                                                : configurationData?.id_code\n                                        }\n                                        onChange={(e) =>\n                                            handleChange(e.target.name, e.target.value)\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='ms-sm-10 mb-5'>\n                            <CustomInput\n                                label={'ID Code number to start from'}\n                                type={INPUT_TYPE.number}\n                                placeholder='Enter Number'\n                                name='id_code_no_to_start_from'\n                                disabled={isEmployeeIdAlreadySet.id_code_no_to_start_from}\n                                value={configurationData?.id_code_no_to_start_from}\n                                onChange={(e) => handleChange(e.target.name, e.target.value)}\n                            />\n                        </div>\n\n                        <div\n                            className='text-Grey800 mb-5'\n                            style={{fontSize: '16px', fontWeight: '600'}}\n                        >\n                            Offer Letter Settings\n                        </div>\n                        {/* question */}\n                        <div className='mb-10 ms-sm-10'>\n                            {/* slect box */}\n                            <div className=''>\n                                <CustomDropdown\n                                    label={'Select Offer Letter to send'}\n                                    name='select_offer_letter_to_send'\n                                    onChange={(e) =>\n                                        handleChange(e?.target?.name, e?.target?.value)\n                                    }\n                                    value={configurationData?.select_offer_letter_to_send}\n                                    options={templateDropdown}\n                                    valueKey='id'\n                                    displayKey='value'\n                                    placeholder='Select Offer Letter'\n                                />\n                            </div>\n                        </div>\n\n                        <div\n                            className='text-Grey800 mb-5'\n                            style={{fontSize: '16px', fontWeight: '600'}}\n                        >\n                            Select Agreements to sign\n                        </div>\n                        <div\n                            className='bg-cmwhite rounded border mb-10 ms-sm-10  border-2'\n                            // style={{width: '352px', height: '214px'}}\n                        >\n                            <div className='d-flex justify-content-between py-2 mx-5 text-cmGrey500'>\n                                <div>\n                                    {selectedArr?.length ?? '0'}/{contractToSignData?.length}{' '}\n                                    selected\n                                </div>\n                                {/* select box */}\n                                {contractToSignData?.length > 0 ? (\n                                    <div className=''>\n                                        <div className='form-check form-check-custom form-check-solid '>\n                                            <CustomCheckbox\n                                                checked={checkedAll}\n                                                onChange={(e) => selectAllCheckbox(e)}\n                                            />\n                                            <label\n                                                className='form-check-label'\n                                                style={{fontFamily: 'Manrope'}}\n                                            >\n                                                Select all\n                                            </label>\n                                        </div>\n                                    </div>\n                                ) : null}\n                            </div>\n                            <hr className='m-0' style={{borderTop: '1px solid gray'}} />\n                            <div\n                                className='d-flex flex-column px-5 mt-5 gap-5 my-auto overflow-auto'\n                                style={{height: '150px'}}\n                            >\n                                {/* check box */}\n                                {contractToSignData?.map((item) => (\n                                    <div className='' key={item?.id}>\n                                        <div className='form-check form-check-custom form-check-solid '>\n                                            <div>\n                                                <CustomCheckbox\n                                                    checked={item?.isChecked}\n                                                    name='select_agreement_to_sign'\n                                                    onChange={(e) => handleChceckbox(item?.id, e)}\n                                                />\n                                            </div>\n                                            <div>\n                                                <label\n                                                    className='form-check-label text-cmGrey600'\n                                                    style={{\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: 500,\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    {item?.value}\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <div\n                            className='text-Grey800 mb-5'\n                            style={{fontSize: '16px', fontWeight: '600'}}\n                        >\n                            Employee Personal Details\n                            <>\n                                {!more ? (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => setMore(true)}\n                                        src={More1}\n                                        alt=''\n                                    ></img>\n                                ) : (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => setMore(false)}\n                                        src={More}\n                                        alt=''\n                                    ></img>\n                                )}\n                            </>\n                        </div>\n                        <div className='ms-sm-10 mb-10'>\n                            {more && (\n                                <>\n                                    <div\n                                        className='text-cmGrey800 mb-2'\n                                        style={{fontWeight: '600  '}}\n                                    >\n                                        Dynamic Fields\n                                    </div>\n                                    {configurationData?.employee_personal_detail?.map(\n                                        (item, index) => (\n                                            <>\n                                                <div className='mb-5' key={index}>\n                                                    <div className='row align-items-center gap-5 mb-2'>\n                                                        <div className='col-sm'>\n                                                            <CustomInput\n                                                                type={INPUT_TYPE.text}\n                                                                placeholder='Enter'\n                                                                onChange={(e) =>\n                                                                    handleFieldsChange(\n                                                                        'employee_personal_detail',\n                                                                        e.target.name,\n                                                                        index,\n                                                                        e.target.value\n                                                                    )\n                                                                }\n                                                                value={item?.field_name}\n                                                                name={'field_name'}\n                                                            />\n                                                        </div>\n\n                                                        <div className='col-sm'>\n                                                            <CustomDropdown\n                                                                options={DYNAMIC_FIELD_TYPE}\n                                                                searching={false}\n                                                                value={item?.field_type}\n                                                                name={'field_type'}\n                                                                onChange={(e) =>\n                                                                    handleFieldsChange(\n                                                                        'employee_personal_detail',\n                                                                        e.target.name,\n                                                                        index,\n                                                                        e.target.value\n                                                                    )\n                                                                }\n                                                            />\n                                                        </div>\n                                                        <div className='col-sm'>\n                                                            <CustomDropdown\n                                                                options={[\n                                                                    {\n                                                                        name: 'Optional',\n                                                                        value: 'optional',\n                                                                    },\n                                                                    {\n                                                                        name: 'Mandatory',\n                                                                        value: 'required',\n                                                                    },\n                                                                ]}\n                                                                searching={false}\n                                                                value={item?.field_required}\n                                                                name={'field_required'}\n                                                                onChange={(e) =>\n                                                                    handleFieldsChange(\n                                                                        'employee_personal_detail',\n                                                                        e.target.name,\n                                                                        index,\n                                                                        e.target.value\n                                                                    )\n                                                                }\n                                                            />\n                                                        </div>\n                                                        <div className='col-sm-1 text-center'>\n                                                            <CustomDelete\n                                                                onClick={() =>\n                                                                    onDeleteField(\n                                                                        'employee_personal_detail',\n                                                                        index\n                                                                    )\n                                                                }\n                                                            />\n                                                        </div>\n                                                    </div>\n\n                                                    {item?.field_type == 'dropdown' &&\n                                                        item?.attribute_option != null &&\n                                                        item?.attribute_option?.length > 0 &&\n                                                        // JSON.parse(JSON.stringify(item?.attribute_option ?? '[]'))?.map((val, i) => (\n                                                        item?.attribute_option?.map((val, i) => (\n                                                            <div key={i}>\n                                                                {i == 0 && (\n                                                                    <div\n                                                                        className='text-cmGrey800'\n                                                                        style={{\n                                                                            fontWeight: '600  ',\n                                                                        }}\n                                                                    >\n                                                                        Options:\n                                                                    </div>\n                                                                )}\n                                                                <div className='d-flex align-items-center justify-content-center mx-auto gap-5  text-center mb-5'>\n                                                                    <div className='w-auto'>\n                                                                        <CustomInput\n                                                                            type={INPUT_TYPE.text}\n                                                                            placeholder='Enter'\n                                                                            value={val}\n                                                                            onChange={(e) =>\n                                                                                handleDropdownFieldsChange(\n                                                                                    'employee_personal_detail',\n                                                                                    index,\n                                                                                    e.target.value,\n                                                                                    i\n                                                                                )\n                                                                            }\n                                                                        />\n                                                                    </div>\n                                                                    {\n                                                                        <CustomDelete\n                                                                            onClick={() =>\n                                                                                onDeleteDropdownField(\n                                                                                    'employee_personal_detail',\n                                                                                    index,\n                                                                                    i\n                                                                                )\n                                                                            }\n                                                                        />\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        ))}\n                                                    {item?.field_type == 'dropdown' ? (\n                                                        <div className='d-flex align-items-center  justify-content-center text-cmBlue-Crayola gap-1'>\n                                                            <span\n                                                                className='cursor-pointer'\n                                                                onClick={() =>\n                                                                    addDropDownFields(\n                                                                        'employee_personal_detail',\n                                                                        index\n                                                                    )\n                                                                }\n                                                            >\n                                                                <span className='bi bi-plus-square  fs-4'></span>{' '}\n                                                                <span className='fw-bold text-decoration-underline'>\n                                                                    {' '}\n                                                                    Add Options\n                                                                </span>\n                                                            </span>\n                                                        </div>\n                                                    ) : null}\n                                                </div>\n                                                {configurationData?.employee_personal_detail\n                                                    .length -\n                                                    1 ===\n                                                index ? null : (\n                                                    <hr />\n                                                )}\n                                            </>\n                                        )\n                                    )}\n\n                                    <div className='d-flex align-items-center text-cmBlue-Crayola gap-1'>\n                                        <span\n                                            className='cursor-pointer'\n                                            onClick={() =>\n                                                handleAddAnotherPersonalDetail(\n                                                    'employee_personal_detail'\n                                                )\n                                            }\n                                        >\n                                            <span className='bi bi-plus-square  fs-4'></span>{' '}\n                                            <span className='fw-bold text-decoration-underline'>\n                                                {' '}\n                                                Add Another\n                                            </span>\n                                        </span>\n                                    </div>\n                                </>\n                            )}\n                        </div>\n                        <div\n                            className='text-Grey800 mb-5'\n                            style={{fontSize: '16px', fontWeight: '600'}}\n                        >\n                            Additional Info for Employee to Get Started\n                            <>\n                                {!more1 ? (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            marginTop: '-3px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => setMore1(true)}\n                                        src={More1}\n                                        alt=''\n                                    ></img>\n                                ) : (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            marginTop: '-3px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => setMore1(false)}\n                                        src={More}\n                                        alt=''\n                                    ></img>\n                                )}\n                            </>\n                        </div>\n                        {more1 && (\n                            <>\n                                <div className='ms-sm-10 mb-10'>\n                                    <div\n                                        className='text-cmGrey800 mb-2'\n                                        style={{fontWeight: '600  '}}\n                                    >\n                                        Dynamic Fields\n                                    </div>\n                                    {configurationData?.additional_info_for_employee_to_get_started?.map(\n                                        (item, index) => {\n                                            return (\n                                                <div key={index}>\n                                                    <div className='mb-5'>\n                                                        <div className='row align-items-center gap-5 mb-2 mx-sm-0 mx-2'>\n                                                            <div className='col-sm'>\n                                                                <CustomInput\n                                                                    type={INPUT_TYPE.text}\n                                                                    placeholder='Enter'\n                                                                    value={item?.field_name}\n                                                                    name={'field_name'}\n                                                                    onChange={(e) =>\n                                                                        handleFieldsChange(\n                                                                            'additional_info_for_employee_to_get_started',\n                                                                            e.target.name,\n                                                                            index,\n                                                                            e.target.value\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </div>\n                                                            <div className='col-sm'>\n                                                                <CustomDropdown\n                                                                    options={DYNAMIC_FIELD_TYPE}\n                                                                    searching={false}\n                                                                    value={item?.field_type}\n                                                                    name={'field_type'}\n                                                                    onChange={(e) =>\n                                                                        handleFieldsChange(\n                                                                            'additional_info_for_employee_to_get_started',\n                                                                            e.target.name,\n                                                                            index,\n                                                                            e.target.value\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </div>\n\n                                                            <div className='col-sm'>\n                                                                <CustomDropdown\n                                                                    value={item?.field_required}\n                                                                    searching={false}\n                                                                    name={'field_required'}\n                                                                    onChange={(e) =>\n                                                                        handleFieldsChange(\n                                                                            'additional_info_for_employee_to_get_started',\n                                                                            e.target.name,\n                                                                            index,\n                                                                            e.target.value\n                                                                        )\n                                                                    }\n                                                                    options={[\n                                                                        {\n                                                                            name: 'Optional',\n                                                                            value: 'optional',\n                                                                        },\n                                                                        {\n                                                                            name: 'Mandatory',\n                                                                            value: 'required',\n                                                                        },\n                                                                    ]}\n                                                                />\n                                                            </div>\n\n                                                            <div className='col-sm-1 text-center'>\n                                                                <CustomDelete\n                                                                    onClick={() =>\n                                                                        onDeleteField(\n                                                                            'additional_info_for_employee_to_get_started',\n                                                                            index\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        {item?.field_type == 'dropdown' &&\n                                                            item?.attribute_option != null &&\n                                                            item?.attribute_option?.length > 0 &&\n                                                            // JSON.parse(JSON.stringify(item?.attribute_option ?? '[]'))?.map((val, i) => (\n                                                            item?.attribute_option?.map(\n                                                                (val, i) => (\n                                                                    <>\n                                                                        {i == 0 && (\n                                                                            <div\n                                                                                className='text-cmGrey800'\n                                                                                style={{\n                                                                                    fontWeight:\n                                                                                        '600  ',\n                                                                                }}\n                                                                            >\n                                                                                Options:\n                                                                            </div>\n                                                                        )}\n                                                                        <div className='d-flex align-items-center justify-content-center mx-auto gap-5 w-sm-75  text-center mb-5'>\n                                                                            <CustomInput\n                                                                                type={\n                                                                                    INPUT_TYPE.text\n                                                                                }\n                                                                                placeholder='Enter'\n                                                                                value={val}\n                                                                                onChange={(e) =>\n                                                                                    handleDropdownFieldsChange(\n                                                                                        'additional_info_for_employee_to_get_started',\n\n                                                                                        index,\n                                                                                        e.target\n                                                                                            .value,\n                                                                                        i\n                                                                                    )\n                                                                                }\n                                                                            />\n                                                                            {\n                                                                                <CustomDelete\n                                                                                    onClick={() =>\n                                                                                        onDeleteDropdownField(\n                                                                                            'additional_info_for_employee_to_get_started',\n                                                                                            index,\n                                                                                            i\n                                                                                        )\n                                                                                    }\n                                                                                />\n                                                                            }\n                                                                        </div>\n                                                                    </>\n                                                                )\n                                                            )}\n                                                        {item?.field_type == 'dropdown' ? (\n                                                            <div className='d-flex align-items-center  justify-content-center text-cmBlue-Crayola gap-1'>\n                                                                <span\n                                                                    className='cursor-pointer'\n                                                                    onClick={() =>\n                                                                        addDropDownFields(\n                                                                            'additional_info_for_employee_to_get_started',\n                                                                            index\n                                                                        )\n                                                                    }\n                                                                >\n                                                                    <span className='bi bi-plus-square  fs-4'></span>{' '}\n                                                                    <span className='fw-bold text-decoration-underline'>\n                                                                        {' '}\n                                                                        Add Options\n                                                                    </span>\n                                                                </span>\n                                                            </div>\n                                                        ) : null}\n                                                    </div>\n                                                    {configurationData\n                                                        ?.additional_info_for_employee_to_get_started\n                                                        .length -\n                                                        1 ===\n                                                    index ? null : (\n                                                        <hr />\n                                                    )}\n                                                </div>\n                                            )\n                                        }\n                                    )}\n\n                                    <div className='d-flex align-items-center text-cmBlue-Crayola gap-1 cursor-pointer'>\n                                        <span\n                                            onClick={() =>\n                                                handleAddAnotherPersonalDetail(\n                                                    'additional_info_for_employee_to_get_started'\n                                                )\n                                            }\n                                        >\n                                            <span className='bi bi-plus-square  fs-4 '></span>{' '}\n                                            <span className='fw-bold text-decoration-underline'>\n                                                {' '}\n                                                Add Another\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                            </>\n                        )}\n\n                        <div\n                            className='text-Grey800 mb-5'\n                            style={{fontSize: '16px', fontWeight: '600'}}\n                        >\n                            Documents to Upload\n                            <>\n                                {!more2 ? (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            marginTop: '-3px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => setMore2(true)}\n                                        src={More1}\n                                        alt=''\n                                    ></img>\n                                ) : (\n                                    <img\n                                        style={{\n                                            marginLeft: '17px',\n                                            marginTop: '-3px',\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={() => setMore2(false)}\n                                        src={More}\n                                        alt=''\n                                    ></img>\n                                )}\n                            </>\n                        </div>\n                        <div className='ms-sm-10 mb-10'>\n                            {more2 && (\n                                <>\n                                    <div\n                                        className='text-cmGrey800 mb-2'\n                                        style={{fontWeight: '600  '}}\n                                    >\n                                        Dynamic Fields\n                                    </div>\n                                    {configurationData?.document_to_update?.map((item, index) => (\n                                        <div key={index}>\n                                            <div className='row align-items-center gap-5 mb-5'>\n                                                <div className='col-sm-5'>\n                                                    <CustomInput\n                                                        type={INPUT_TYPE.text}\n                                                        placeholder='Enter'\n                                                        value={item?.field_name}\n                                                        name={'field_name'}\n                                                        onChange={(e) =>\n                                                            handleFieldsChange(\n                                                                'document_to_update',\n                                                                e.target.name,\n                                                                index,\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className='col-sm-5'>\n                                                    <CustomDropdown\n                                                        options={[\n                                                            {name: 'Optional', value: 'optional'},\n                                                            {name: 'Mandatory', value: 'required'},\n                                                        ]}\n                                                        searching={false}\n                                                        value={item?.field_required}\n                                                        name={'field_required'}\n                                                        onChange={(e) =>\n                                                            handleFieldsChange(\n                                                                'document_to_update',\n                                                                e.target.name,\n                                                                index,\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                                <div className='col-sm text-center'>\n                                                    <CustomDelete\n                                                        onClick={() =>\n                                                            onDeleteField(\n                                                                'document_to_update',\n                                                                index\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            {configurationData?.document_to_update?.length - 1 ===\n                                            index ? null : (\n                                                <hr />\n                                            )}\n                                        </div>\n                                    ))}\n\n                                    <div className='d-flex align-items-center text-cmBlue-Crayola gap-1'>\n                                        <span\n                                            className=''\n                                            onClick={() =>\n                                                handleAddAnotherPersonalDetail('document_to_update')\n                                            }\n                                        >\n                                            <span className='bi bi-plus-square fs-4 '></span>{' '}\n                                            <span className='fw-bold text-decoration-underline'>\n                                                {' '}\n                                                Add Another\n                                            </span>\n                                        </span>\n                                    </div>\n                                </>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <SettingHiringPage />\n        </>\n    )\n}\n\nexport default HiringConfiguration\n","import {Navigate, Routes, Route, Outlet} from 'react-router-dom'\nimport React from 'react'\nimport {PageTitle} from '../../../../_metronic/layout/core'\nimport CompanySetup from './components/companySetup/CompanySetup'\nimport Alert from './components/Alert'\nimport ProfileHeader from './ProfileHeader'\nimport Location from './components/Location'\nimport CostCenter from './components/CostCenter'\nimport Department from './components/Department'\nimport Position from './components/Position'\nimport {Permission} from './components/Permission'\nimport {Compensation} from './components/Compensation'\nimport Costs from '../costs/component/costs/Costs'\nimport SettingsEditProfile from './components/SettingsEditProfile'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport SetupPaperwork from './components/setupPaperwork/SetupPaperwork'\nimport SetupBankAcc from './components/setupBankAcc/SetupBankAcc'\nimport PositionPeople from './components/Position/PositionPeople'\nimport useCustomAccessRights, {\n    allPermissionsAccess,\n} from '../../../../accessRights/useCustomAccessRights'\nimport HiringConfiguration from './components/hiringConfiguration/HiringConfiguration'\nimport SettingHiringPage from './components/hiringConfiguration/SettingHiringPage'\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard/',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n        \n    },\n    {\n        title: 'Settings/',\n        path: 'setting/setup',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst SettingHeader = () => {\n    const {hiringAccess} = useCustomAccessRights()\n    return (\n        <div className='mx-sm-10'>\n            <Routes>\n                <Route\n                    element={\n                        <>\n                            <ProfileHeader />\n                            <Outlet />\n                        </>\n                    }\n                >\n                    <Route\n                        path='setup'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}> Setup</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.setup.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <CompanySetup />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='hiring'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}> Hiring</PageTitle>\n                                <AccessRights\n                                    customCondition={hiringAccess.showConfigurationButtonAccess}\n                                    showPlaceHolder\n                                >\n                                    <SettingHiringPage />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='alert'\n                        element={\n                            <>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.alerts.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <PageTitle breadcrumbs={profileBreadCrumbs}>Alert</PageTitle>\n                                    <Alert />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n\n                    <Route\n                        path='bank-account'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Alert</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.bankAccounts.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <SetupBankAcc />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='paperwork'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Alert</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.paperWork.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <SetupPaperwork />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='costs'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Costs</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.costTracking.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Costs />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='location'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Location</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.locations.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Location />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='cost-center'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Cost Center</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.costTracking.view\n                                    }\n                                >\n                                    <CostCenter />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='department'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Department</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.departments.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Department />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='position'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Position</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.positions.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Position />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='position/peoples'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Position</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.setting.positions.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <PositionPeople />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='compensation-plan'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Compensation Plan\n                                </PageTitle>\n                                <Compensation />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='permissions'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Permission</PageTitle>\n                                <Permission />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='edit-profile'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Edit Company Profile\n                                </PageTitle>\n                                <AccessRights showPlaceHolder forSuperAdmin>\n                                    <SettingsEditProfile />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route index element={<Navigate to='/setting' />} />\n                </Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default SettingHeader\n","import React, {useCallback, useRef} from 'react'\nimport {OverlayPanel} from 'primereact/overlaypanel'\n\nconst CustomOverlayPanel = ({templateData = null, showIcon = true, hovertemplate = null}) => {\n    const overlayPanelRef = useRef(null)\n\n    const onEnterButtonPress = useCallback((e) => {\n        overlayPanelRef.current.toggle(e)\n    }, [])\n\n    const onLeaveButton = useCallback((e) => {\n        overlayPanelRef?.current?.hide()\n    }, [])\n\n    return (\n        <div className=''>\n            <span\n                className={`${showIcon ? 'bi bi-info-circle' : null} cursor-pointer`}\n                // onClick={onEnterButtonPress}\n                onMouseOver={onEnterButtonPress}\n                onMouseLeave={onLeaveButton}\n            >\n                {hovertemplate}\n            </span>\n\n            <OverlayPanel ref={overlayPanelRef} style={{width: '360px'}} dismissable>\n                {templateData}\n            </OverlayPanel>\n        </div>\n    )\n}\n\nexport default CustomOverlayPanel\n","import {RadioButton} from 'primereact/radiobutton'\nimport React from 'react'\n\nconst CustomRadioButton = ({label, name, value, isChecked, handleChange, children, childClass}) => {\n    return (\n        <div\n            className='form-check form-check-custom form-check-solid'\n            style={{fontFamily: 'Manrope', fontWeight: 600}}\n        >\n            {/* <input className='form-check-input' type='radio' value='' id='flexRadioDefault' /> */}\n            <RadioButton\n                inputId='ingredient2'\n                name={name}\n                value={value}\n                onChange={handleChange}\n                checked={isChecked}\n            />\n            {label ? (\n                <label htmlFor='ingredient2' className='ms-3'>\n                    {label}\n                </label>\n            ) : (\n                <div className={`ms-3 ${childClass}`}> {children}</div>\n            )}\n        </div>\n    )\n}\n\nexport default CustomRadioButton\n","import {useCallback, useMemo, useState} from 'react'\n\nconst useFilterButton = (initialFilter, onApplyFilter, onResetFilter) => {\n    const [storedFilteredData, setStoredFilteredData] = useState(initialFilter)\n    const [filterData, setFilterData] = useState(initialFilter)\n\n    const onApplyClick = useCallback(() => {\n        onApplyFilter(filterData)\n        setStoredFilteredData(filterData)\n    }, [filterData, onApplyFilter])\n\n    const onResetClick = useCallback(() => {\n        onResetFilter()\n        setFilterData(initialFilter)\n        onApplyFilter(initialFilter)\n        setStoredFilteredData(storedFilteredData)\n    }, [initialFilter, onApplyFilter, onResetFilter, storedFilteredData])\n\n    const onCancelClick = useCallback(() => {\n        setFilterData(storedFilteredData)\n    }, [storedFilteredData])\n\n    const filterProps = useMemo(\n        () => ({\n            onApplyClick,\n            onResetClick,\n            onCancelClick,\n        }),\n        [onApplyClick, onCancelClick, onResetClick]\n    )\n\n    return [filterProps, filterData, setFilterData]\n}\n\nexport default useFilterButton\n","import {sendDataToReducer} from '../../helpers/CommonHelpers'\nimport {\n    getPermissionGroupListService,\n    getPermissionPoliciesListService,\n    groupGroupPolicyListService,\n} from '../../services/Services'\nimport {\n    SET_PERMISSION_GROUP_LIST,\n    SET_PERMISSION_GROUP_POLICY_LIST,\n    SET_PERMISSION_POLICIES_LIST,\n} from '../reducers/PermissionsReducer'\n\n// Get Group List\nexport const getPermissionGroupListAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        getPermissionGroupListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_PERMISSION_GROUP_LIST, res?.data)\n                resolve(res?.data)\n            })\n            .catch(reject)\n    })\n\n// Get Policies List\nexport const getPermissionPoliciesListAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        getPermissionPoliciesListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_PERMISSION_POLICIES_LIST, res?.data)\n                resolve(res?.data)\n            })\n            .catch(reject)\n    })\n\n// Get PermissionPolicies List\nexport const getPermissionGroupPolicyListAction = () => (dispatch) =>\n    new Promise((resolve, reject) => {\n        groupGroupPolicyListService()\n            .then((res) => {\n                sendDataToReducer(dispatch, SET_PERMISSION_GROUP_POLICY_LIST, res?.data)\n                resolve(res)\n            })\n            .catch(reject)\n    })\n","export const getPermissionsGroupListSelector = (state) => state?.permissions?.permissionGroupList\nexport const getPermissionsPoliciesListSelector = (state) =>\n    state?.permissions?.permissionPoliciesList\nexport const getPermissionsGroupPolicyListSelector = (state) =>\n    state?.permissions?.permissionGroupPolicyList\n"],"names":["AlertsEmail","toggle","setToggle","useState","domainToggle","setDomainToggle","domainData","setDomainData","domainName","setDomainName","loading","setLoading","domainError","setDomainError","isAllDomainAllowed","setIsAllDomainAllowed","confirmPop","setConfirmPop","useEffect","getEmailSeting","getEmailNotificationSettingService","then","res","_res$data$","data","status","getDomain","getDomainSettingService","email_setting_type","finally","onEnableDisableAllPress","useCallback","body","updateDomainSettingService","catch","e","CustomToast","getErrorMessageFromResponse","_jsxs","className","style","fontWeight","borderRadius","position","children","_jsx","CustomLoader","full","visible","fontSize","fontFamily","fontsFamily","lineHeight","type","value","id","checked","onChange","company_id","updateEmailNotificationSettingService","updateEmailSetting","CustomCheckbox","getBooleanValue","length","map","item","updateDomainSetting","name","domain_name","CustomDelete","onClick","CustomDialog","deleteDomainSettingService","_Fragment","CustomInput","INPUT_TYPE","errorMessage","placeholder","target","CustomButton","buttonType","BUTTON_TYPE","buttonLabel","padding","addDomain","_body$domain_setting$","domain_setting","addDomainSettingService","useBackendCard","dispatch","useDispatch","reconciliationList","useSelector","getReconciliationScheduleSelector","more","setMore","edit","setEdit","reconciliation","setReconciliation","noOfReconcilationSchedule","setNoOfReconcilationSchedule","companySetting","getCompanySettingSelector","getCompanySettingAction","getReconliation","Promise","resolve","getCompanyReconciliationAction","toggleMorePress","onEditButtonPress","handleReconciliation","updateCompanySettingAction","onSavePress","period_from","period_to","includes","Schedule","getValidDate","updateCompanyReconcilationService","r","handleFromPeriod","date","index","field","_reconData","reconData","_","reconDataFinal","formatedDate","filter","i","onChangeNoOfReconcilationSchedule","_e$target","_reconData2","_e$target2","Object","freeze","Number","_reconData3","_e$target3","_reconData4","_reconData5","splice","_e$target4","_reconData6","newArr","Array","fill","day_date","backend_setting_id","reconDisableDates","useMemo","dates","reconItem","reconIndex","currDate","moment","startOf","lastDate","push","clone","toDate","add","diff","_ref","selectedYear","setSelectedYear","Date","onYearChange","year","getReconciliationDataAsPerSelectedYear","startDateYear","endDateYear","totalRecords","_reconciliation$filte","tableLayout","width","verticalAlign","colSpan","CustomDatePicker","dateFormat","viewMode","isDataAsPerSelectedYear","count","height","CustomNoData","label","handlePeriod","handleToPeriod","yearStartDate","yearEndDate","deleteRow","deleteReconciliationPeriodService","ind","isYearCanBeChange","every","concat","_reconciliation$filte2","isPayPeriodHasEntries","disabled","showTodayAndClearButton","readOnlyInput","minDate","maxDate","disabledDates","event","CustomLink","addNewRow","newArray","icon","SetupCard1","isPermittedForAccess","permission","PERMISSIONS_GROUP","PERMISSION_TYPE","marginLeft","CustomArrow","arrowDirection","ARROW_DIRECTION","buttonSize","BUTTON_SIZE","CustomEditIcon","ReconciliationTableEdit","ReconciliationTableview","CompanyMarginCard","editMode","setEditMode","companyMargin","setCompanyMargin","setloading","companyMarginInputEror","setCompanyMarginInputEror","handleEditMode","getCompanyMarginData","getCompanyMarginService","_res$data","company_margin","color","suffixText","max","percentageLimitCheck","handleChangeCompanyMargin","handleEditCancel","UpdateCompanyMarginData","updateCompanyMarginService","err","_overrideSetting$pay_","companyOverrideSetting","getCompanyOverrideSettingSelector","overrideSetting","setOverrideSetting","removeExistingManualOverrides","setRemoveExistingManualOverrides","showMore","setshowMore","getCompanyOverrideSettingAction","handleOverrides","overrides","updateOverridesOnTwoAccountStatusService","allow_manual_override_status","allow_office_stack_override_status","pay_type","handleSave","remove_existing_manual_override","forManager","handleEdit","val","CustomDropdown","searching","options","payFrequencyIndex","payFrequencyData","updatePayfrequencySetting","updateMultiplePayFrequencySetting","day_of_week","_payFrequencyData$day","afterMonth","currentDate","day","toLowerCase","dt","deadlineToFinalizePayroll","getDeadlinetoFinalizePayroll","first_day","pay_period","selectedPayPeriod","_payFrequencyData$pay","_payFrequencyData$pay2","_payFrequencyData$pay3","_payFrequencyData$pay4","_payFrequencyData$pay5","_payFrequencyData$pay6","startPayPeriod","split","endPayPeriod","onChangePayPeriodFrom","fromDate","payPeriodMinMaxDate","payPeiodFrom","payPeiodTo","disableDays","foundDay","WEEK_DAYS","dayNumber","disabledDays","setDisabledDates","firstPayDayOfMonthList","firstPayDateList","isInputValueExist","first_day_pay_of_manths","subtract","month","daysInMonth","middleDate","nextMonthDate","onChangePayPeriodTo","_e$target5","_e$target6","_e$target7","PAY_FREQUENCY_TYPES_ID","INITIAL_FREQUENCY","day_of_months","deadline_to_run_payroll","first_months","first_pay_period_ends_on","frequency_type_id","frequency_type_name","monthly_pay_type","monthly_per_days","second_pay_day_of_month","SetupPayFrequency","_payFrequencyData$fre","_frequencyData$weekly","_frequencyData$weekly2","_frequencyData$weekly3","_payFrequencyData$fre2","_frequencyData$monthl","_frequencyData$monthl2","_frequencyData$monthl3","setToggleMorePress","toggleAddNew","setToggleAddNew","isEdit","setIsEdit","setPayFrequencyData","payFrequencyDropDownValue","setPayFrequencyDropDownValue","payrollFrequencyTypes","getPayFrequencyTypeSelector","getPayFrequencySetting","getPayFrequencySettingAction","getPayFrequencyTypeAction","getPayFrequencySettingService","frequency","isThereActivePayFrequency","some","weeklyFrequency","find","monthlyFrequency","finalData","_data","payPeriodsData","remainingPayFrequencyTypes","_payFrequencyData$fil","rawTypes","activeTypes","pp","frequencyData","weekly","findIndex","monthly","handleSaveSettings","_errorData$weekly","_errorData$weekly2","_errorData$monthly","_errorData$monthly2","finalPayFrequencyData","getDeadlinetoFinalizePayrollDate","activePayFrequency","errorData","join","addPayFrequencySettingService","WeeklyEdit","MonthlyEdit","valueKey","indexOf","CompanySetup","BackendCard","OverridesCard","_data$details2","_data$details3","_data$details4","_data$details5","_dumbData$details","setData","loader","setLoader","showAlerts","setShowAlerts","deparmentDropdown","getDepartmentWithPositionSelector","getInCompleteAccountAlertData","getDepartmentWithPositionAction","handleShowAlerts","_data$id","putToggleAlertsService","setMarketingData","field_name","data1","details","getIncompleteAccountAlertService","_res$data2","_res$data2$","dumbData","onDeleteAlertPress","itemIndex","tempData","marginTop","cursor","src","More","More1","AccessRights","customCondition","allPermissionsAccess","Edit","alt","SubmitMarketingDealEdit","_data$details","request","alert_type","department_id","position_id","number","createIncompleteAccountAlertService","value_i","_value_i$alert_type","_value_i$number","_value_i$type","_value_i$department_i","_data$details6","_data$details6$index","_value_i$position_id","displayKey","_data$details7","_data$details7$index","valueIndex","onToggleStatus","textDecoration","handleAddAnother","alert_id","department_name","position_name","amount","Alert","IncompleteAccount","ProfileHeader","_companyProfile$busin","location","useLocation","Navigate","useNavigate","companyProfile","getCompanyProfileSelector","hiringAccess","useCustomAccessRights","getCompanyProfileAction","showEditProfileButton","pathname","CustomImage","IMAGE_TYPE","customSrc","getServerImage","logo","business_name","background","display","justifyContent","alignItems","company_type","business_address","formattedPhoneNumber","phone_number","company_email","forSuperAdmin","overflowX","overflowY","Link","to","showConfigurationButtonAccess","LocationTabel","locationsData","setLocationData","onEditLocation","ifThereIsNoLocation","getlocation","handleClose1","totalData","page","setPage","sortValue","sortingOrder","onPress","TABLE_BORDER","CustomSortSvg","_item$general_code","_item$office_name","_item$work_site_id","_getLocationRedlineHe","_getLocationRedlineHe2","_item$user_count","_item$redline_sales_c","state","general_code","office_name","work_site_id","installation_partner","formattedNumberFields","getLocationRedlineHelper","current","redline_standard","Menu","formattedNumberFieldsWithoutDecimal","user_count","redline_sales_count","_tempData","deleteLocationService","deleteLocation","textAlign","paddingTop","paddingBottom","NoDataImg","Pagination","totalPages","FILTER_KEYS","initialFilter","onApplyFilter","resetFilter","filterProps","filterData","setFilterData","useFilterButton","allStateCity","getAllStatesAndCitiesSelector","stateOptions","state_code","onChangeInputData","resetFilterData","CustomFilterButton","onResetClick","AnyReactComponent","text","transform","LocationCard","_mapData$","_mapData$2","setMap","selectedLocation","setSelectedLocation","setTotalData","showCreateAppModal","setShowCreateAppModal","setIfThereIsNoLocation","handleClose","firstTimeApiCalled","setFirstTimeApiCalled","locationType","setLocationType","searchText","setSearchText","searchVal","setSearchVal","setSortValue","setSortingOrder","search","sort","sort_val","getLocationsListService","_res$locations","_res$locations$data","_res$locations2","_res$locations3","locations","last_page","mapData","_locationsData$filter","lat","long","stateCityName","Map","values","MapProps","center","lng","zoom","delaySave","debounce","onExportLocationData","exportLocationDataService","fileName","format","downloadAnyFileHelper","alignSelf","LocationFilter","updatedFilter","filters","onResetFilter","GoogleMapReact","bootstrapURLKeys","key","GOOGLE_MAPS_KEY","defaultCenter","defaultZoom","mark","ManageLocation","show","Location","LocattionCard","EditCostModal","getcostcenter","getCostCenterDropdownService","setCode","code","setName","setDescription","description","setCostHead","parent_id","costcenter","getParentCostCenterSelector","costhead","CustomModal","onHide","title","maxWidth","required","rejex","activecostcenter","disableCostCenterService","error","desablecostcenter","_data$chields","chields","AddCostCenter","updateCostCenterService","CommonRowForCostCenter","_item$chields","setShowChild","showChild","onEditPress","Showbutton","isChild","CustomEllipsis","whiteSpace","CostCenterTableRow","_ref2","_item$chields2","ite","_ref3","_costTrackingData$dat","_costTrackingData$dat2","costTrackingData","open","setOpen","NoCostimg","CreateCostModal","addHeadError","setAddHeadError","ADD_COST_HEAD_VALIDATION_FIELD","preventDefault","validationErrors","newCostHeadValidation","isEmptyObjectValue","addCostCenterService","onSubmit","codeHeadName","costHeadCode","CostCenterCard","open1","setOpen1","setCostTrackingData","statusFilter","setstatusFilter","setSearch","getParentCostCenterListAction","getCostCenterListService","costCenters","delaySaveToDb","CostCenterTabel","total","CostCenter","document","getElementById","CreateDepartmentModal","getdepartment","departmentlist","setDepartmentList","department","setDepartment","adddepartment","AddDepartmentService","getDepartmentDropdownService","parseInt","parent","setParent","people_count","deletedepartment","deletDepartmentService","updatedepartment","updateDepartmentService","CommanDepartmentTable","_item$positions_name","_item$subdepartments","_item$subdepartments2","_item$subdepartments3","menu","useRef","positionTemplate","positions_name","listStyle","subdepartments","fontStyle","position_count","CustomOverlayPanel","showIcon","templateData","hovertemplate","DepartmentTableRow","childData","DepartmentTabel","_ref4","_departmentsData$data","_departmentsData$data2","departmentsData","activePage","setActivePage","changedPage","EditDepartmentModal","DepartmentCard","getDepartmentsSelector","departmentData","setDepartmentData","getDepartmentListService","Department","DeparmentCard","_data$deduction","_data$limit_ammount","_data$override","_data$override2","close","setupLoader","editposition","setEditPosition","list","getPositionid","setPosition","override","setOverrides","deductions","setDeduction","deducation","titleStyle","discriptionStyle","HeadingStyle","Sidebar","showCloseIcon","margin","icons","commission_parentag_hiring_locked","commission_parentage","commission_parentag_type_hiring_locked","commission_structure_type","upfront_status","upfront_ammount_locked","upfront_ammount","calculated_by","upfront_system_locked","upfront_system","upfront_limit","deduction_status","deduction_locked","deduction","cost_center_name","deduction_type","ammount_par_paycheck","limit_type","limit_ammount","item2","_item2$overrides_type","overrides_type","override_ammount_locked","override_type_id","override_ammount","reconciliation_status","commission_withheld","commission_type","maximum_withheld","override_settlement","clawback_settlement","is_stack","stack_settlement","_positionsData$data","_positionsData$data2","getPosition","positionsData","setPositionsData","reload","onEditPosition","navigate","setup","setSetup","selectedPositionData","setSelectedPositionData","viewSideBar","setViewSideBar","handleSideBar","setList","getPermissionGroupListAction","setSetupLoader","edit1","setEdit1","handleid","getPositionByIdService","updatePermissionGroup","startIndex","endIndex","result","from","removed","group_id","reject","updatePositionGroupService","_item$pay_frequency","_item$override","class","people","pay_frequency","PermissionGroup","updateGroup","deletePositionService","CreateCompensationAppModal","handlSetup","ViewPositionSidebar","_data$group_name","selectedGroup","setSelectedGroup","groupList","getPermissionsGroupListSelector","editPermission","setEditPermission","group_name","_positionEditdata$id2","positionEditdata","mainPosition","setMainPosition","positionList","getPositionsSelector","selectedOrgParentPosition","setSelectedOrgParentPosition","org_parent_id","permissionGroupList","positionError","setPositionError","NEW_POSITION_VALIDATION_FIELD","positionMainRoles","positionMainRolesSelector","parentPositionList","getPosittionMailRolesAction","addposition","_positionEditdata$id","parent_position","org_parent_position","newPositionValidation","updatePositionsService","AddPositionService","MAIN_POSITTIONS_ID","toString","positionName","parenrPosition","permissionGroup","_chartData$org_chield","_chartData$org_chield2","chartData","UserNode","_item$peoples_count","isLabel","peoples_count","ChildeNode","_item$org_chields","_item$org_chields2","org_chields","TreeNode","item1","Tree","lineWidth","lineColor","weekDropdownList","usePayFrequency","CustomRadioButton","handleChange","isChecked","pay_frequency_filter","override_settelement","permission_group","PositionCard","setChartData","showOrgchart","setShowOrgchart","setPositionEditdata","setPositionData","getPositionsAction","getOrgChart","positionOrgChartService","positionsOrgChart","sendDataToReducer","SET_POSITIONS","getPositionListService","search_filter","_res$data$data","PositionFilter","PositionTabel","PositionOrgChart","ManagePosition","Position","CompensationTabel","process","REACT_APP_THEME_NAME","toAbsoluteUrl","CompensationCard","href","clsx","KTSVG","path","Dropdown1","Permission","PermissionCard","autoComplete","Compensation","ManualAddressPopup","setCompanyProfile","manualData","setManualData","mailing_address","mailing_city","mailing_state","mailing_zip","business_city","business_state","business_zip","allStatCity","cityList","_allStatCity$find$cit","_allStatCity$find","cities","mailingCityList","_allStatCity$find$cit2","_allStatCity$find2","onSetManualData","completeAddress","completeMailingAddress","_companyProfile$logo","_companyProfile$logo2","_companyProfile$logo3","companyProfileFilePickerRef","updateCompanyProfileData","handleRotationChange","handleZoomChange","rotation","zoomLevel","editorRef","editImage","setEditImage","scale","setScale","rotate","setRotate","AvatarEditor","ref","image","URL","createObjectURL","border","min","step","parseFloat","float","onPressSave","canvas","getImageScaledToCanvas","toBlob","blob","file","File","onPressEdit","_companyProfileFilePi","click","accept","_e$target2$files","files","SettingsEditProfile","globalCompanyProfile","showAddressPopup","setShowAddressPopup","selectedAddress","setSelectedAddress","manualAddressObj","setManualAddressObj","showEditProfileModal","setShowEditProfileModal","setZoomLevel","setRotation","validateEditCompanyProfile","companyProfileErrorMessages","useValidation","beginValidating","editCompanyProfileValidation","isValidate","_companyProfile$id","_companyProfile$name","_getMobileNumberWitho","_companyProfile$compa","_companyProfile$count","_companyProfile$time_","_getMobileNumberWitho2","_companyProfile$compa2","_companyProfile$busin2","_companyProfile$busin3","_companyProfile$busin4","_companyProfile$busin5","_companyProfile$busin6","_companyProfile$busin7","_companyProfile$busin8","_companyProfile$busin9","_companyProfile$busin10","_companyProfile$maili","_companyProfile$maili2","_companyProfile$maili3","_companyProfile$maili4","_companyProfile$maili5","_companyProfile$maili6","_companyProfile$maili7","_companyProfile$maili8","_companyProfile$maili9","_getDataWithoutMask","_companyProfile$compa3","getMobileNumberWithoutMask","country","time_zone","business_phone","business_address_1","business_address_2","business_lat","business_long","business_address_time_zone","mailing_address_1","mailing_address_2","mailing_lat","mailing_long","mailing_address_time_zone","business_ein","getDataWithoutMask","company_website","remove_logo","updateCompanyProfileAction","zIndex","overflow","objectFit","showImageError","onPressEditCompanyProfile","CustomAddressInput2","needTimeZone","showAddressLine2","INITIAL_ADDRESS_FIELD","full_address","address_line1","address_line2","city","zip","mask","timeZones","closeAddressPopup","EditProfileModal","newRotation","newZoomLevel","SetupPaperwork","SetupBankAcc","PositionPeople","_Location$state2","_tableData$data","_tableData$data2","tableData","settableData","_Location$state","getuserbyPositionIDService","RedirectToEmployeeProfile","employeeId","first_name","last_name","_configurationData$pr","_configurationData$id","_configurationData$id2","_configurationData$pr2","_configurationData$on","_configurationData$on2","configurationData","setConfigurationData","isEmployeeIdAlreadySet","getConfigurationData","openCard","setOpenCard","handleOpenCard","_bodyData$employee_pe","_bodyData$additional_","bodyData","employee_personal_detail","attribute_option","JSON","stringify","additional_info_for_employee_to_get_started","addOnBoardingConfigurationService","id_code","prefix","showClear","id_code_no_to_start_from","onbording_id_code","onbording_prefix","onbording_id_code_no_to_start_from","ONBOARDING_CONFIGURATION_TYPE","_data$field_link","_item$attribute_optio3","_item$attribute_optio4","_item$attribute_optio5","_item$attribute_optio6","onDeleteRow","setItem","onDeletePress","employee_personal_detail_id","additional_info_id","document_type_id","deleteOnboardingDynamicAttributesService","_item$attribute_optio","field_type","field_required","field_link","addOrUpdateOnboardingDynamicAttributesService","handleDropdownFieldsChange","addDropDownFields","_item$attribute_optio2","onDeleteDropdownField","filteredOptions","it","DYNAMIC_FIELD_TYPE","_configurationData$em2","_configurationData$em","is_deleted","SingleConfigurationAttributeRow","configuration_id","_configurationData$ad2","_configurationData$ad","_configurationData$do2","_configurationData$do3","_configurationData$do","document_to_update","SettingHiringPage","setIsEmployeeIdAlreadySet","getOnBoardingConfigurationAction","getOnBoardingConfigurationService","_data$employee_person","_data$employee_person2","_data$additional_info","_data$additional_info2","parse","EmployeeIdSettings","PersonalDetails","AdditionalInfo","DocumentToUpload","profileBreadCrumbs","isSeparator","isActive","SettingHeader","Routes","Route","element","Outlet","PageTitle","breadcrumbs","showPlaceHolder","Costs","overlayPanelRef","onEnterButtonPress","onLeaveButton","_overlayPanelRef$curr","hide","onMouseOver","onMouseLeave","OverlayPanel","dismissable","childClass","RadioButton","inputId","htmlFor","storedFilteredData","setStoredFilteredData","onApplyClick","onCancelClick","getPermissionGroupListService","SET_PERMISSION_GROUP_LIST","getPermissionPoliciesListAction","getPermissionPoliciesListService","SET_PERMISSION_POLICIES_LIST","getPermissionGroupPolicyListAction","groupGroupPolicyListService","SET_PERMISSION_GROUP_POLICY_LIST","_state$permissions","permissions","getPermissionsPoliciesListSelector","_state$permissions2","permissionPoliciesList","getPermissionsGroupPolicyListSelector","_state$permissions3","permissionGroupPolicyList"],"sourceRoot":""}