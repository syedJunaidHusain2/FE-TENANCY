{"version":3,"file":"static/js/5826.5c4e3a5b.chunk.js","mappings":"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","sources":["app/modules/admin/reports/ProfileHeader.js","app/modules/admin/reports/component/company/Crad.js","app/modules/admin/reports/component/company/Chart.js","app/modules/admin/reports/component/company/ComapanyChart.tsx","app/modules/admin/reports/component/company/Company.js","app/modules/admin/reports/component/sales/Doughnut.js","app/modules/admin/reports/component/sales/Accounts.js","app/modules/admin/reports/component/sales/Progress.js","app/modules/admin/reports/component/sales/Avg.js","../node_modules/primereact/progressbar/progressbar.esm.js","app/modules/admin/reports/component/sales/salesTableComponent/ExcelImportModal.js","app/modules/admin/reports/component/sales/Tabel.js","app/modules/admin/reports/component/sales/SalesContractCard.js","app/modules/admin/reports/component/sales/Sales.js","app/modules/admin/payroll/component/runpayroll/EditRunPayroll.js","app/modules/admin/reports/component/payrolll/PayrollTabel.js","app/modules/admin/reports/component/payrolll/Payroll.js","app/modules/admin/reports/component/clawback/Card.js","app/modules/admin/reports/component/clawback/CrawbackTabel.js","app/modules/admin/reports/component/clawback/Clawback.js","app/modules/admin/reports/component/pending/Card.js","app/modules/admin/filters/PendingInstallFilter.js","app/modules/admin/reports/component/pending/PendingTabel.js","app/modules/admin/reports/component/pending/Pending.js","app/modules/admin/reports/component/reconciliation/ReconciliationTabel.js","app/modules/admin/reports/component/reconciliation/FiscalYearTabel.js","app/modules/admin/reports/component/reconciliation/Reconciliation.js","app/modules/admin/reports/component/sales/AccountSummary/components/Commisions.js","app/modules/admin/reports/component/sales/AccountSummary/components/Overrides.js","app/modules/admin/reports/component/sales/AccountSummary/components/AccountSummaryCompany.js","app/modules/admin/reports/component/sales/AccountSummary/SalesAccountSummary.js","app/modules/admin/reports/component/payrolll/PayrollReport.js","app/modules/admin/reports/component/sales/salesTableComponent/importHistoryComponents/ImportHistoryPage.js","app/modules/admin/reports/ReportsHeader.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect} from 'react'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Link} from 'react-router-dom'\nimport {Dropdown1} from '../../../../_metronic/partials'\nimport {useLocation} from 'react-router-dom'\nimport {useNavigate} from 'react-router-dom'\nimport {getCompanyProfileService} from '../../../../services/Services'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../redux/selectors/SettingsSelectors'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\nimport {fontsFamily} from '../../../../assets/fonts/fonts'\n\nconst ProfileHeader = () => {\n    const location = useLocation()\n    const companySetting = useSelector(getCompanySettingSelector)\n\n    return (\n        <div\n            style={{\n                fontSize: '16px',\n                fontWeight: '800',\n                fontFamily: fontsFamily.manrope,\n                overflowX: 'auto',\n            }}\n            className='d-flex flex-nowrap gap-7 text-cmGrey500'\n        >\n            <AccessRights customCondition={allPermissionsAccess.administrator.reports.company.view}>\n                <Link\n                    className={`${\n                        location.pathname === '/reports/company' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/reports/company'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Company\n                </Link>\n            </AccessRights>\n\n            <AccessRights customCondition={allPermissionsAccess.administrator.reports.sales.view}>\n                <Link\n                    className={`${\n                        location.pathname.includes('sales') && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/reports/sales'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Sales\n                </Link>\n            </AccessRights>\n\n            <AccessRights customCondition={allPermissionsAccess.administrator.reports.cost.view}>\n                <Link\n                    className={`${\n                        location.pathname === '/reports/costs' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/reports/costs'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Costs\n                </Link>\n            </AccessRights>\n\n            <AccessRights customCondition={allPermissionsAccess.administrator.reports.payroll.view}>\n                <Link\n                    className={`${\n                        location.pathname.includes('/reports/payroll') && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/reports/payroll'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Payroll\n                </Link>\n            </AccessRights>\n\n            {companySetting?.reconciliation ? (\n                <AccessRights\n                    customCondition={allPermissionsAccess.administrator.reports.reconciliation.view}\n                >\n                    <Link\n                        className={`${\n                            location.pathname === '/reports/reconciliation' && 'active'\n                                ? 'text-cmBlue-Crayola'\n                                : 'text-cmGrey500'\n                        } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                        to='/reports/reconciliation'\n                        style={{\n                            borderRadius: '10px 10px 0px 0px',\n                        }}\n                    >\n                        Reconciliation\n                    </Link>\n                </AccessRights>\n            ) : null}\n\n            <AccessRights\n                customCondition={allPermissionsAccess.administrator.reports.clawback.view}\n            >\n                <Link\n                    className={`${\n                        location.pathname === '/reports/clawback' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/reports/clawback'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Clawback\n                </Link>\n            </AccessRights>\n\n            <AccessRights\n                customCondition={allPermissionsAccess.administrator.reports.pendingInstall.view}\n            >\n                <Link\n                    className={`${\n                        location.pathname === '/reports/pending-installs' && 'active'\n                            ? 'text-cmBlue-Crayola'\n                            : 'text-cmGrey500'\n                    } py-2 px-3 text-nowrap cursor-pointer shadow-sm bg-cmwhite`}\n                    to='/reports/pending-installs'\n                    style={{\n                        borderRadius: '10px 10px 0px 0px',\n                    }}\n                >\n                    Pending Installs\n                </Link>\n            </AccessRights>\n        </div>\n    )\n}\n\nexport default ProfileHeader\n","import React, {useState} from 'react'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport More from './icon/more.png'\nimport More1 from './icon/more1.png'\nexport default function Card({cardData}) {\n    const [payroll, setPayroll] = useState(false)\n    const [cost, setCost] = useState(false)\n    return (\n        <>\n            <div className='row w-100 mx-auto gap-8 mt-10'>\n                <div\n                    style={{borderRadius: '10px'}}\n                    className='shadow mt-1 mb-4 col-sm 0 d-flex justify-content-center h-md-275px bg-white border border-cmBlue-Crayola'\n                >\n                    <div className='container my-0 card pb-5 ' style={{fontSize: '14px'}}>\n                        <div className='row g-2 p-2 mt-0'>\n                            <div\n                                className='mt-4 text-cmGrey900 text-nowrap'\n                                style={{fontSize: '16px', fontWeight: '600', fontFamily: 'Manrope'}}\n                            >\n                                Revenue Summary\n                                <span\n                                    className={\n                                        cardData?.revenue_summary?.revenue_percentage > 0\n                                            ? 'text-cmSucccess'\n                                            : cardData?.revenue_summary?.revenue_percentage < 0\n                                            ? 'text-cmError'\n                                            : 'text-warning'\n                                    }\n                                    style={{\n                                        marginLeft: '5px',\n                                    }}\n                                >\n                                    <i\n                                        className={\n                                            cardData?.revenue_summary?.revenue_percentage > 0\n                                                ? 'bi bi-arrow-up text-cmSuccess'\n                                                : cardData?.revenue_summary?.revenue_percentage < 0\n                                                ? 'bi bi-arrow-down text-cmError'\n                                                : 'bi bi-dash text-cmError'\n                                        }\n                                    ></i>\n                                    {cardData?.revenue_summary?.revenue_percentage} %\n                                </span>\n                            </div>\n                        </div>\n                        <div className='card-body my-0 p-0'>\n                            <div\n                                className='container mt-4 text-cmGrey600'\n                                style={{\n                                    fontSize: '14px',\n                                    marginLeft: '-3px',\n                                    fontWeight: 500,\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                {cardData?.revenue_summary?.data?.length > 0 ? (\n                                    <div className='d-flex algin-items-center flex-wrap justify-content-between'>\n                                        <div className=''>\n                                            {cardData?.revenue_summary?.data?.[0]?.install_partner}\n                                        </div>\n                                        <div className=''>\n                                            {formattedNumberFields(\n                                                cardData?.revenue_summary?.data[0]?.gross_total,\n                                                '$'\n                                            )}\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <div className='row g-2'>\n                                        <div className='row g-2'>No Data</div>\n                                    </div>\n                                )}\n                            </div>\n                            <div\n                                className='container mt-2 text-cmGrey600'\n                                style={{\n                                    fontSize: '14px',\n                                    marginLeft: '-3px',\n                                    fontWeight: 500,\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                {cardData?.revenue_summary?.data?.length > 0 ? (\n                                    <div className='row'>\n                                        <div className='col-7 mt-3'>\n                                            {cardData?.revenue_summary?.data[1]?.install_partner}\n                                        </div>\n                                        <div className='col-5 mt-3 text-end'>\n                                            {formattedNumberFields(\n                                                cardData?.revenue_summary?.data[1]?.gross_total,\n                                                '$'\n                                            )}\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <div className='row g-2'>\n                                        <div className='row g-2'>No Data</div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        {/* <div\n              className='container mt-4 text-cmGrey600'\n              style={{\n                fontSize: '14px',\n                marginLeft: '-2px',\n                fontWeight: 500,\n                fontFamily: 'Manrope',\n              }}\n            >\n              <div className='row g-2  '>\n                <div className='col-8 mt-3'>SunPower</div>\n                <div className='col-4 mt-3 text-end'>$3,486.00</div>\n              </div>\n            </div> */}\n\n                        <div\n                            className='card-footer border-0 my-0 p-0 '\n                            style={{fontSize: '14px,', fontWeight: 700}}\n                        >\n                            <div className='row g-2  me-0 text-cmGrey800'>\n                                <div className='col-6 mt-4 ' style={{fontFamily: 'Manrope'}}>\n                                    Total Revenue\n                                </div>\n                                <div\n                                    className='col-6 mt-4 text-end me-0 text-cmGrey900'\n                                    style={{fontFamily: 'Manrope'}}\n                                >\n                                    {formattedNumberFields(cardData?.revenue_summary?.total, '$')}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    style={{borderRadius: '10px'}}\n                    // style={{border: '1px solid #FFB03A'}}\n                    className={\n                        cost === false\n                            ? `shadow mt-1 mb-4 col-sm d-flex justify-content-center border border-cmOrange ${\n                                  payroll === false ? 'h-md-275px' : 'h-auto'\n                              } bg-white `\n                            : `shadow mt-1 mb-4 col-sm d-flex justify-content-center ${\n                                  cost === false ? 'h-md-275px' : 'h-auto'\n                              } bg-white `\n                    }\n                >\n                    <div\n                        className='container my-0 card pb-5'\n                        style={{fontSize: '14px', borderRadius: '10px'}}\n                    >\n                        <div className='row g-2 p-2 mt-0'>\n                            <div\n                                className='mt-4 text-cmGrey900 text-nowrap'\n                                style={{fontSize: '16px', fontWeight: '600', fontFamily: 'Manrope'}}\n                            >\n                                Cost Summary\n                                <span\n                                    className={\n                                        cardData?.cost_summary?.cost_percentage > 0\n                                            ? 'text-cmSucccess'\n                                            : cardData?.cost_summary?.cost_percentage < 0\n                                            ? 'text-cmError'\n                                            : 'text-warning'\n                                    }\n                                    style={{\n                                        marginLeft: '5px',\n                                    }}\n                                >\n                                    <i\n                                        className={\n                                            cardData?.cost_summary?.cost_percentage > 0\n                                                ? 'bi bi-arrow-up text-cmSuccess'\n                                                : cardData?.cost_summary?.cost_percentage < 0\n                                                ? 'bi bi-arrow-down text-cmError'\n                                                : 'bi bi-dash text-cmError'\n                                        }\n                                    ></i>\n                                    {cardData?.cost_summary?.cost_percentage} %\n                                </span>\n                            </div>\n                        </div>\n\n                        <div className='card-body my-0 p-0'>\n                            <div\n                                className={`container mt-4 ${\n                                    cost === false ? 'text-cmGrey600' : 'text-cmGrey900'\n                                }`}\n                                style={{\n                                    fontSize: '14px',\n                                    marginLeft: '-3px',\n                                    fontFamily: cost === false ? 'Manrope' : 'Manrope',\n                                    fontWeight: cost === false ? '' : 'bold',\n                                }}\n                            >\n                                <div className='row g-2 text-nowrap'>\n                                    <div className='col-8 mt-3'>\n                                        Costs{' '}\n                                        <img\n                                            className='ms-1'\n                                            onClick={() => {\n                                                cost === false ? setCost(true) : setCost(false)\n                                            }}\n                                            style={{cursor: 'pointer', marginTop: '-3px'}}\n                                            src={cost === false ? More : More1}\n                                        ></img>\n                                    </div>\n                                    <div className='col-4 mt-3 text-end'>\n                                        {formattedNumberFields(\n                                            cardData?.cost_summary?.costs?.total,\n                                            '$'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            {cost === false ? (\n                                <></>\n                            ) : (\n                                <>\n                                    {' '}\n                                    {cardData?.cost_summary?.costs?.data?.map((item) => (\n                                        <div\n                                            className='container mt-2 text-cmGrey600'\n                                            style={{\n                                                fontSize: '14px',\n                                                marginLeft: '-3px',\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            <div className='row g-2'>\n                                                <div className='col-8 mt-3'>{item?.cost_data}</div>\n                                                <div className='col-4 mt-3 text-end'>\n                                                    {formattedNumberFields(item?.cost_amount, '$')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                    {/* <div\n                  className='container mt-4 text-cmGrey600'\n                  style={{\n                    fontSize: '14px',\n                    marginLeft: '-3px',\n                    fontFamily: 'Manrope',\n                  }}\n                >\n                  <div className='row g-2'>\n                    <div className='col-8 mt-3'>Travel</div>\n                    <div className='col-4 mt-3 text-end'>$21,006.58</div>\n                  </div>\n                </div>\n                <div\n                  className='container mt-4 text-cmGrey600'\n                  style={{\n                    fontSize: '14px',\n                    marginLeft: '-3px',\n                    fontFamily: 'Manrope',\n                  }}\n                >\n                  <div className='row g-2'>\n                    <div className='col-8 mt-3'>Medical</div>\n                    <div className='col-4 mt-3 text-end'>$21,006.58</div>\n                  </div>\n                </div> */}\n                                </>\n                            )}\n                            <div\n                                className={`container mt-4 ${\n                                    payroll === false ? 'text-cmGrey600' : 'text-cmGrey900'\n                                }`}\n                                style={{\n                                    fontSize: '14px',\n                                    marginLeft: '-3px',\n                                    fontFamily: payroll === false ? 'Manrope' : 'Manrope',\n                                    fontWeight: payroll === false ? '' : 'bold',\n                                }}\n                            >\n                                <div className='row g-2 text-nowrap'>\n                                    <div className='col-8 mt-3'>\n                                        Payroll\n                                        <img\n                                            className='ms-2'\n                                            onClick={() => {\n                                                payroll === false\n                                                    ? setPayroll(true)\n                                                    : setPayroll(false)\n                                            }}\n                                            style={{cursor: 'pointer', marginTop: '-3px'}}\n                                            src={payroll === false ? More : More1}\n                                        ></img>\n                                    </div>\n                                    <div className='col-4 mt-3 text-end'>\n                                        {formattedNumberFields(\n                                            cardData?.cost_summary?.payroll?.total,\n                                            '$'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            {payroll === false ? (\n                                <></>\n                            ) : (\n                                <>\n                                    {' '}\n                                    {cardData?.cost_summary?.payroll?.data?.map((item) => (\n                                        <div\n                                            className='container mt-5 text-cmGrey600'\n                                            style={{\n                                                fontSize: '14px',\n                                                marginLeft: '-3px',\n\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            <div className='row g-2'>\n                                                <div className='col-8 mt-3'>\n                                                    {item?.payroll_data}\n                                                </div>\n                                                <div className='col-4 mt-3 text-end'>\n                                                    {formattedNumberFields(\n                                                        item?.payroll_amount,\n                                                        '$'\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                    {/* <div\n                  className='container mt-5 text-cmGrey600'\n                  style={{\n                    fontSize: '14px',\n                    marginLeft: '-3px',\n\n                    fontFamily: 'Manrope',\n                  }}\n                >\n                  <div className='row g-2'>\n                    <div className='col-8 mt-3'>Total (M2)</div>\n                    <div className='col-4 mt-3 text-end'>$21,006.58</div>\n                  </div>\n                </div>\n                <div\n                  className='container mt-5 text-cmGrey600'\n                  style={{\n                    fontSize: '14px',\n                    marginLeft: '-3px',\n\n                    fontFamily: 'Manrope',\n                  }}\n                >\n                  <div className='row g-2'>\n                    <div className='col-8 mt-3'>Total Overrides</div>\n                    <div className='col-4 mt-3 text-end'>$21,006.58</div>\n                  </div>\n                </div>\n                <div\n                  className='container mt-5 text-cmGrey600'\n                  style={{\n                    fontSize: '14px',\n                    marginLeft: '-3px',\n\n                    fontFamily: 'Manrope',\n                  }}\n                >\n                  <div className='row g-2'>\n                    <div className='col-8 mt-3'>Total Adjustments</div>\n                    <div className='col-4 mt-3 text-end'>$21,006.58</div>\n                  </div>\n                </div> */}\n                                    {/* <div\n                  className='container mt-5 text-cmGrey600'\n                  style={{\n                    fontSize: '14px',\n                    marginLeft: '-3px',\n\n                    fontFamily: 'Manrope',\n                  }}\n                >\n                  <div className='row g-2'>\n                    <div className='col-8 mt-3'>Total Reimbursements</div>\n                    <div className='col-4 mt-3 text-end'>$21,006.58</div>\n                  </div>\n                </div>\n                <div\n                  className='container mt-5 text-cmGrey600'\n                  style={{\n                    fontSize: '14px',\n                    marginLeft: '-3px',\n\n                    fontFamily: 'Manrope',\n                  }}\n                >\n                  <div className='row g-2'>\n                    <div className='col-8 mt-3'>Employee Deductions</div>\n                    <div className='col-4 mt-3 text-end'>$21,006.58</div>\n                  </div>\n                </div> */}\n                                </>\n                            )}\n                        </div>\n                        <div\n                            className={\n                                cost === false\n                                    ? `container card-footer border-0 my-0 p-0 ${\n                                          payroll === false ? 'mt-20' : 'mt-0 mb-0'\n                                      }`\n                                    : `container card-footer border-0 p-0 ${\n                                          cost === false ? 'mt-0' : 'mt-0 mb-0'\n                                      }`\n                            }\n                            style={{fontSize: '14px', marginLeft: '-3px'}}\n                        >\n                            <div\n                                className='row g-2 text-cmGrey800'\n                                style={{fontWeight: '700', fontFamily: 'Manrope', fontSize: '14px'}}\n                            >\n                                <div className='col-6 mt-4  '>Total Cost</div>\n                                <div className='col-6 mt-4 text-end me-0 text-cmGrey900'>\n                                    {formattedNumberFields(\n                                        cardData?.cost_summary?.total_costs,\n                                        '$'\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    style={{borderRadius: '10px'}}\n                    className='shadow mt-1 mb-4 col-sm d-flex justify-content-center h-md-275px bg-white border border-cmSuccess'\n                >\n                    <div className='container card my-0 card pb-5' style={{fontSize: '14px'}}>\n                        <div className='row g-2 p-2 mt-0'>\n                            <div\n                                className='mt-4 text-cmGrey900 text-nowrap'\n                                style={{fontWeight: '600', fontFamily: 'Manrope', fontSize: '16px'}}\n                            >\n                                Profitability Summary\n                                <span\n                                    className={\n                                        cardData?.profitability_summary?.profitability_percentage >\n                                        0\n                                            ? 'text-cmSucccess'\n                                            : cardData?.profitability_summary\n                                                  ?.profitability_percentage < 0\n                                            ? 'text-cmError'\n                                            : 'text-warning'\n                                    }\n                                    style={{\n                                        marginLeft: '5px',\n                                    }}\n                                >\n                                    <i\n                                        className={\n                                            cardData?.profitability_summary\n                                                ?.profitability_percentage > 0\n                                                ? 'bi bi-arrow-up text-cmSuccess'\n                                                : cardData?.profitability_summary\n                                                      ?.profitability_percentage < 0\n                                                ? 'bi bi-arrow-down text-cmError'\n                                                : 'bi bi-dash text-cmError'\n                                        }\n                                    ></i>\n                                    {cardData?.profitability_summary?.profitability_percentage}%\n                                </span>\n                            </div>\n                        </div>\n                        {/* body */}\n                        <div className='card-body my-0 p-0'>\n                            <div\n                                className='container text-cmGrey600'\n                                style={{\n                                    fontSize: '14px',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <div className='row'>\n                                    <div className='col mt-3'>Revenue</div>\n                                    <div className='col mt-3 text-end' style={{fontSize: '13px'}}>\n                                        {formattedNumberFields(\n                                            cardData?.profitability_summary?.data.revenue,\n                                            '$'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className='container mt-4 text-cmGrey600'\n                                style={{\n                                    fontSize: '14px',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <div className='row  text-nowrap'>\n                                    <div className='col '>Cost</div>\n                                    <div className='col text-end'>\n                                        {formattedNumberFields(\n                                            cardData?.profitability_summary?.data.costs,\n                                            '$'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className='container mt-4 text-cmGrey600'\n                                style={{\n                                    fontSize: '14px',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <div className='row  text-nowrap '>\n                                    <div className='col'>Payroll</div>\n                                    <div className='col text-end'>\n                                        {formattedNumberFields(\n                                            cardData?.profitability_summary?.data.payroll,\n                                            '$'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className='container mt-4 text-cmGrey600'\n                                style={{\n                                    fontSize: '14px',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <div className='row text-nowrap '>\n                                    <div className='col'>Clawback</div>\n                                    <div className='col text-end'>\n                                        {formattedNumberFields(\n                                            cardData?.profitability_summary?.data.clowback,\n                                            '$'\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div\n                            className='container mt-4 card-footer border-0 my-0 p-0'\n                            style={{fontSize: '14px', fontFamily: 'Manrope', fontWeight: '700'}}\n                        >\n                            <div className='row '>\n                                <div className='col text-cmGrey800 '>Total Profits/Loss</div>\n                                <div className='col text-end  text-cmGrey900'>\n                                    {formattedNumberFields(\n                                        cardData?.profitability_summary?.total,\n                                        '$'\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport {Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend} from 'chart.js'\n\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend)\nexport default function Chart() {\n    const chartData = {\n        labels: [\n            'Jan',\n            'Febuary',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec',\n        ],\n        datasets: [\n            // {\n            //   label: 'KW sold',\n            //   data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            //   backgroundColor: ['#FFE16A'],\n            //   barThickness: 20,\n            //   borderRadius: 5,\n            //   type: 'line',\n            //   order: 3,\n            //   // yAxisID: 'start',\n            // },\n            {\n                label: 'Profitability',\n                data: [-10, -15, -20, 40, 10, 20, 22, 10, -8, 30, 20, -20],\n                backgroundColor: [\n                    '#FF3333',\n                    '#FF3333',\n                    '#FF3333',\n                    '#00C247',\n                    '#00C247',\n                    '#00C247',\n                    '#00C247',\n                    '#00C247',\n                    '#FF3333',\n                    '#00C247',\n                    '#00C247',\n                    '#FF3333',\n                ],\n                barThickness: 10,\n                borderRadius: 5,\n                type: 'bar',\n                order: 3,\n                // yAxisID: 'start',\n            },\n            {\n                label: 'Revenue',\n                data: [0, 0, 3, 4, 8, 3, 8, 8, 9, 8, 5, 3],\n                borderColor: ['#6078EC'],\n                type: 'line',\n                tension: 0.4,\n                order: 2,\n            },\n            {\n                label: 'Cost',\n                data: [0, 4, 30, 30, 20, 30, 10, 7, 9, 12, 20, 30],\n                borderColor: ['#FFB03A'],\n                type: 'line',\n                tension: 0.4,\n                order: 1,\n            },\n        ],\n    }\n    return (\n        <div className='bg-white p-5 w-1175px rounded shadow mt-9'>\n            <Bar\n                data={chartData}\n                height={375}\n                options={{\n                    type: 'scatter',\n                    data: {chartData},\n                    options: {\n                        responsive: true,\n                        maintainAspectRatio: true,\n                        aspectRatio: 2,\n                        scales: {\n                            start: {\n                                beginAtZero: true,\n                                ticks: {\n                                    display: false,\n                                },\n                            },\n                        },\n                    },\n                }}\n            />\n        </div>\n    )\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useRef} from 'react'\nimport ApexCharts, {ApexOptions} from 'apexcharts'\nimport {getCSS, getCSSVariableValue} from '../../../../../../_metronic/assets/ts/_utils'\nimport {useThemeMode} from '../../../../../../_metronic/partials'\nimport {\n    formattedNumberFields,\n    formattedNumberFieldsWithoutDecimal,\n} from '../../../../../../helpers/CommonHelpers'\n\ntype Props = {\n    className: string\n    graphData: any\n}\n\nconst ComapanyChart: React.FC<Props> = ({className, graphData}) => {\n    const chartRef = useRef<HTMLDivElement | null>(null)\n    const {mode} = useThemeMode()\n    const refreshChart = () => {\n        if (!chartRef.current) {\n            return\n        }\n\n        const height = parseInt(getCSS(chartRef.current, 'height'))\n\n        const chart = new ApexCharts(chartRef.current, getChartOptions(height, graphData))\n        if (chart) {\n            chart.render()\n        }\n\n        return chart\n    }\n\n    useEffect(() => {\n        const chart = refreshChart()\n        return () => {\n            if (chart) {\n                chart.destroy()\n            }\n        }\n    }, [chartRef, graphData])\n\n    return (\n        <div\n            className={`card p-0 text-cmGrey500 shadow-sm`}\n            style={{fontFamily: 'Manrope', fontWeight: '600', fontSize: '13px'}}\n        >\n            {/* begin::Header */}\n            <div className='card-header border-0 p-0 d-flex justify-content-center align-items-center gap-10'>\n                <div className='d-flex gap-3 align-items-center'>\n                    <div className='rounded-pill bg-cmBlue-Crayola  w-20px h-10px'></div>\n                    <div>Revenue</div>\n                </div>\n                <div className='d-flex gap-3 align-items-center'>\n                    <div className='rounded-pill bg-cmOrange w-20px h-10px'></div>\n                    <div>Cost</div>\n                </div>\n                <div className='d-flex gap-3 align-items-center'>\n                    <div>\n                        <div className='rounded-pill bg-cmSuccess w-20px h-10px mb-1'></div>\n                        <div className='rounded-pill bg-cmError text-cmError w-20px h-10px'></div>\n                    </div>\n                    <div>Profitability</div>\n                </div>\n            </div>\n            {/* end::Header */}\n\n            {/* begin::Body */}\n            <div className='card-body m-0 p-0'>\n                {/* begin::Chart */}\n                <div\n                    ref={chartRef}\n                    id='kt_charts_widget_5_chart'\n                    className='w-sm-100'\n                    // style={{width: '500px'}}\n                ></div>\n                {/* end::Chart */}\n            </div>\n            {/* end::Body */}\n        </div>\n    )\n}\n\nexport {ComapanyChart}\n\nfunction getChartOptions(height: number, graphData: any): ApexOptions {\n    var months: any = []\n    var revenue: any = []\n    var profitability: any = []\n    var profitabilityMinus: any = []\n    var cost: any = []\n\n    graphData &&\n        Object.keys(graphData).map((keyName, i) => {\n            revenue.push(graphData?.[keyName]?.revenue?.toFixed(2) ?? 0)\n            profitability.push(\n                graphData?.[keyName]?.profitability > 0\n                    ? graphData?.[keyName]?.profitability?.toFixed(2)\n                    : 0\n            )\n            profitabilityMinus.push(\n                graphData?.[keyName]?.profitability < 0\n                    ? graphData?.[keyName]?.profitability?.toFixed(2)\n                    : 0\n            )\n            cost.push(graphData?.[keyName]?.costs?.toFixed(2) ?? 0)\n            const finalItem = keyName?.split(' ')\n            if (finalItem?.length > 1) months.push(finalItem)\n            else months.push(finalItem?.[0])\n        })\n    const labelColor = getCSSVariableValue('--kt-gray-500')\n    const borderColor = getCSSVariableValue('--kt-gray-200')\n    const baseColor = getCSSVariableValue('--kt-primary')\n    const secondaryColor = getCSSVariableValue('--kt-info')\n\n    const maxValue = Math.max(...revenue, ...cost, ...profitability, ...profitabilityMinus) + 20\n\n    return {\n        series: [\n            {\n                name: 'Revenue',\n                type: 'line',\n                data: revenue,\n                // data: [2000.23,1900.11],\n            },\n            {\n                name: 'Cost',\n                type: 'line',\n                data: cost,\n            },\n            {\n                name: '↑ Profitability',\n                type: 'bar',\n                data: profitability,\n                // data: [301086.08, 2227759.1, 2865779.63],\n            },\n            {\n                name: '↓ Profitability',\n                type: 'bar',\n                data: profitabilityMinus,\n                // data: [0, 0, -2865459.63],\n            },\n        ],\n        chart: {\n            fontFamily: 'Manrope',\n            // type: 'bar',\n            stacked: false,\n            height: 350,\n            zoom: {\n                enabled: true,\n                type: 'xy',\n                autoScaleYaxis: true,\n            },\n\n            toolbar: {\n                show: true,\n                // tools: {\n                //   download: false,\n                //   selection: true,\n                //   zoom: false,\n                //   zoomin: true,\n                //   zoomout: true,\n                //   pan: false,\n                //   reset: true,\n                // },\n            },\n        },\n\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '10%',\n                borderRadius: [5, 5],\n            },\n        },\n        legend: {\n            show: false,\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['#6078EC', '#FFB03A', 'transparent', 'transparent'],\n        },\n        xaxis: {\n            categories: months,\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                rotate: 0,\n                style: {\n                    colors: labelColor,\n                    fontSize: '12px',\n                },\n            },\n        },\n        yaxis: [\n            {\n                seriesName: 'Revenue',\n                show: true,\n                min: -maxValue,\n                max: maxValue,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '600',\n                    },\n                    formatter: function (val) {\n                        return formattedNumberFieldsWithoutDecimal(val, '$')\n                    },\n                },\n                title: {\n                    text: 'Revenue / Costs',\n                    style: {\n                        fontSize: '14px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        color: '#000000',\n                    },\n                },\n            },\n\n            {\n                seriesName: 'Cost',\n                opposite: false,\n                show: false,\n                min: -maxValue,\n                max: maxValue,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '10px',\n                    },\n                    formatter: function (val) {\n                        return formattedNumberFieldsWithoutDecimal(val, '$')\n                    },\n                },\n            },\n            {\n                seriesName: '↑ Profitability',\n                opposite: true,\n                show: false,\n                min: -maxValue,\n                max: maxValue,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px',\n                    },\n                },\n            },\n            {\n                seriesName: '↓ Profitability',\n                opposite: true,\n                show: true,\n                min: -maxValue,\n                max: maxValue,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '600',\n                    },\n                    formatter: function (val) {\n                        return formattedNumberFieldsWithoutDecimal(val, '$')\n                    },\n                },\n                title: {\n                    text: 'Profitability',\n                    style: {\n                        fontSize: '14px',\n                        fontFamily: 'Manrope',\n                        fontWeight: '700',\n                        color: '#000000',\n                    },\n                },\n            },\n        ],\n        fill: {\n            opacity: [1, 1, 1, 1],\n        },\n        states: {\n            normal: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            hover: {\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n            active: {\n                allowMultipleDataPointsSelection: false,\n                filter: {\n                    type: 'none',\n                    value: 0,\n                },\n            },\n        },\n        tooltip: {\n            style: {\n                fontSize: '12px',\n            },\n            y: {\n                formatter: function (val) {\n                    return formattedNumberFieldsWithoutDecimal(val, '$')\n                },\n            },\n        },\n        // colors: [baseColor, secondaryColor, ],\n        colors: ['#6078EC', '#FFB03A', '#00C247', '#FF3333'],\n        grid: {\n            borderColor: '#EAEAEA',\n            strokeDashArray: 4,\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n            padding: {\n                top: 10,\n                right: 50,\n                bottom: 10,\n                left: 50,\n            },\n        },\n    }\n}\n","import React, {useState, useEffect} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport clsx from 'clsx'\nimport Select from '../../Icon/select.png'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport moment from 'moment'\nimport Calendar from '../../Icon/calendar.png'\nimport Card from './Crad'\nimport Chart from './Chart'\nimport CommanTopbarforReports from './CommanTopbarforReports'\nimport {\n    getAdminCompanyReportService,\n    getAdminCompanyGraphService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\n\nimport {ComapanyChart} from './ComapanyChart'\nimport useOfficeLocation from '../../../../../../hooks/useOfficeLocation'\nimport {getErrorMessageFromResponse} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nexport default function Company() {\n    const [value, setValue] = useState()\n    const [loading, setLoading] = useState(true)\n    const [reportData, setReportData] = useState()\n    const [graphData, setGraphData] = useState()\n    const [officeList, selectedLocation, setSelectedLocation] = useOfficeLocation()\n    const [filter, setFilter] = useState('this_year')\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n\n    useEffect(() => {\n        let body = {\n            filter: filter?.toLocaleLowerCase(),\n            office_id: selectedLocation,\n        }\n        if (filter == 'custom' && moment(startDate).isValid() && moment(endDate).isValid()) {\n            body.start_date = startDate\n            body.end_date = endDate\n        }\n        if (\n            selectedLocation &&\n            (filter != 'custom' ||\n                (filter == 'custom' &&\n                    moment(startDate).isValid() &&\n                    moment(endDate).isValid() &&\n                    startDate <= endDate))\n        ) {\n            setLoading(true)\n            getAdminCompanyReportService(body).then((res) => {\n                setReportData(res.data)\n            })\n\n            //Graph\n            getAdminCompanyGraphService(body)\n                .then((res) => {\n                    setGraphData(res.data)\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [selectedLocation, filter, startDate, endDate])\n\n    const changeFilter = (val) => {\n        setLoading(val != 'custom')\n        if (val != 'custom') {\n            if (startDate) setStartDate(null)\n            if (endDate) setEndDate(null)\n        }\n        setFilter(val)\n    }\n    const onLocationChange = (loc) => {\n        setLoading(true)\n        setSelectedLocation(loc)\n    }\n    const changeStartDate = (start) => {\n        setStartDate(moment(start).format('YYYY-MM-DD'))\n    }\n    const changeEndDate = (end) => {\n        setEndDate(moment(end).format('YYYY-MM-DD'))\n    }\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div className='mb-10'>\n                <CommanTopbarforReports\n                    filter={filter}\n                    officeList={officeList}\n                    onChangeFilter={(loc) => {\n                        changeFilter(loc)\n                    }}\n                    onLocationChange={(loc) => onLocationChange(loc)}\n                    selectedLocation={selectedLocation}\n                    onStartDateChange={(start) => changeStartDate(start)}\n                    onEndDateChange={(end) => changeEndDate(end)}\n                    notToExport={true}\n                />\n            </div>\n            {/* <Chart /> */}\n            <ComapanyChart graphData={graphData?.[0]} />\n            <Card cardData={reportData} />\n        </div>\n    )\n}\n","import {Doughnut} from 'react-chartjs-2'\nimport {Chart, ArcElement} from 'chart.js'\n\nChart.register(ArcElement)\n\nconst Doughnut1 = ({graphsData}) => {\n    const data = {\n        datasets: [\n            {\n                data: [\n                    graphsData?.m2_complete,\n                    graphsData?.m2_pending,\n                    graphsData?.cancelled,\n                    graphsData?.clawback,\n                ],\n                backgroundColor: ['#6078EC', '#50CD89', '#FFE16A', '#FE679D'],\n                display: true,\n                borderColor: ['#6078EC', '#50CD89', '#FFE16A', '#FE679D'],\n            },\n        ],\n    }\n    return (\n        <div className='w-175px'>\n            <Doughnut\n                data={data}\n                options={{\n                    plugins: {\n                        legend: {\n                            display: false,\n                        },\n                        tooltip: {\n                            enabled: false,\n                        },\n                    },\n                    rotation: -90,\n                    circumference: 180,\n                    cutout: '80%',\n                    maintainAspectRatio: true,\n                    responsive: true,\n                }}\n            />\n            <div\n                style={{\n                    position: 'relative',\n                    top: '-31%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    textAlign: 'center',\n                }}\n            >\n                <div\n                    className='text-cmGrey500'\n                    style={{fontWeight: 500, fontSize: '10px', fontFamily: 'Manrope'}}\n                >\n                    Total Sales\n                </div>\n                <div\n                    className='text-cmBlack'\n                    style={{fontSize: '22px', fontWeight: '700', fontFamily: 'Manrope'}}\n                >\n                    {graphsData?.total_sales}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Doughnut1\n","import React from 'react'\nexport default function Accounts({graphsData}) {\n    return (\n        <div className='px-2 py-4'>\n            <div className='row mb-2 mx-auto'>\n                <div className='col-6 d-flex gap-2 text-nowrap align-items-center'>\n                    <i className='bi bi-circle-fill text-cmBlue-Crayola' />\n                    <div\n                        className='text-cmGrey600'\n                        style={{fontFamily: 'Manrope', fontWeight: 500, fontSize: '12px'}}\n                    >\n                        M2 complete\n                    </div>\n                    <div\n                        className='text-cmBlack'\n                        style={{\n                            fontSize: '14px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                        }}\n                    >\n                        {graphsData?.m2_complete}\n                    </div>\n                </div>\n                <div className='col-6 d-flex text-nowrap align-items-center gap-2'>\n                    <i className='bi bi-circle-fill text-cmgreen' />\n\n                    <div\n                        className='text-cmGrey600'\n                        style={{fontFamily: 'Manrope', fontSize: '12px', fontWeight: '500'}}\n                    >\n                        M2 pending\n                    </div>\n                    <div\n                        className='text-cmBlack'\n                        style={{\n                            fontSize: '14px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                        }}\n                    >\n                        {graphsData?.m2_pending}\n                    </div>\n                </div>\n            </div>\n\n            <div className='row mb-2 mx-auto'>\n                <div className='col-6  d-flex text-nowrap align-items-center gap-2'>\n                    <i className='bi bi-circle-fill text-cmYellow' />\n\n                    <div\n                        className='text-cmGrey600'\n                        style={{fontFamily: 'Manrope', fontWeight: 500, fontSize: '12px'}}\n                    >\n                        Cancelled\n                    </div>\n                    <div\n                        className='ms-2 text-cmBlack'\n                        style={{\n                            fontSize: '14px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                        }}\n                    >\n                        {graphsData?.cancelled}\n                    </div>\n                </div>\n                <div className='col-6 d-flex text-nowrap align-items-center gap-2'>\n                    <i className='bi bi-circle-fill text-cmpink' />\n\n                    <div\n                        className='text-cmgrey600'\n                        style={{fontFamily: 'Manrope', fontSize: '12px'}}\n                    >\n                        Clawback\n                    </div>\n                    <div\n                        className='text-cmBlack'\n                        style={{\n                            fontSize: '14px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                        }}\n                    >\n                        {graphsData?.clawback}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import {Doughnut} from 'react-chartjs-2'\nimport {Chart, ArcElement} from 'chart.js'\n\nChart.register(ArcElement)\n\nconst Doughnut1 = ({a, b}) => {\n    const data = {\n        datasets: [\n            {\n                data: [b, a],\n                backgroundColor: ['rgba(96, 120, 236, 0.2)', '#6078EC'],\n                display: true,\n                borderColor: ['rgba(96, 120, 236, 0.2)', '#6078EC'],\n            },\n        ],\n    }\n    return (\n        <div className='mx-auto p-0 m-0' style={{width: '107px'}}>\n            <Doughnut\n                className=''\n                data={data}\n                options={{\n                    plugins: {\n                        legend: {\n                            display: false,\n                        },\n                        tooltip: {\n                            enabled: false,\n                        },\n                    },\n                    rotation: 90,\n                    circumference: 360,\n                    cutout: '88%',\n                    maintainAspectRatio: true,\n                    responsive: true,\n                }}\n            />\n            <div\n                style={{\n                    position: 'relative',\n                    top: '10%',\n                    left: '54%',\n                    transform: 'translate(-55%, -227%)',\n                    textAlign: 'center',\n                }}\n            >\n                <div className='text-gray-800' style={{fontSize: '19px', fontWeight: '700'}}>\n                    {Number(a ?? 0).toFixed(2) ?? '0'}%\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Doughnut1\n","import React, {useState, useEffect} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport clsx from 'clsx'\nimport Select from '../../Icon/select.png'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport moment from 'moment'\nimport './style.css'\nimport Progress from './Progress'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nexport default function Avg({avgData}) {\n    useEffect(() => {\n        // var dateDay = new Date(item.date).toLocaleString('en-us',{month:'short',day:'numeric'})\n        // var dateMonth = new Date(item.date).toLocaleString('en-us',{month:'short'})\n    }, [])\n\n    return (\n        <div>\n            <div\n                className='row gap-5 mb-5 mx-auto justify-content-between'\n                style={{fontFamily: 'Manrope'}}\n            >\n                <div\n                    style={{background: '#D7F9EF', borderRadius: '10px'}}\n                    className='shadow col-sm py-5'\n                >\n                    <div\n                        className='text-cmGrey800 text-center mb-4'\n                        style={{fontWeight: '600', fontSize: '12px'}}\n                    >\n                        Avg. Account per rep\n                    </div>\n                    <div\n                        style={{\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                            fontSize: '20px',\n                        }}\n                        className='text-center text-cmBlack'\n                    >\n                        {avgData?.avg_account_per_rep ?? 0}\n                    </div>\n                </div>\n                <div\n                    style={{background: '#FFF4DE', borderRadius: '10px'}}\n                    className='shadow col-sm py-5 text-center'\n                >\n                    <div\n                        className='text-cmGrey800 mb-4'\n                        style={{fontWeight: '600', fontSize: '12px'}}\n                    >\n                        Avg. KW per rep\n                    </div>\n                    <div\n                        style={{\n                            color: '#0D1821',\n                            fontFamily: 'Manrope',\n                            fontWeight: '700',\n                            fontSize: '20px',\n                        }}\n                        className='text-center  text-cmBlack'\n                    >\n                        {avgData?.avg_kw_per_rep ?? 0}\n                    </div>\n                </div>\n            </div>\n\n            <div\n                style={{fontWeight: 600, borderRadius: '10px'}}\n                className='shadow py-2 bg-cmwhite overflow-hidden'\n            >\n                <div className='row px-5 py-2'>\n                    <div className='col text-cmGrey600' style={{fontWeight: 600, fontSize: '12px'}}>\n                        Best Day:\n                    </div>\n                    <div className='col text-nowrap'>\n                        {formattedNumberFields(avgData?.bestDay?.kw, '')} KW\n                    </div>\n\n                    <div\n                        className='col text-cmGrey800'\n                        style={{\n                            fontFamily: fontsFamily.manrope,\n                            fontSize: '14px',\n                            fontWeight: 600,\n                        }}\n                    >\n                        {new Date(avgData?.bestDay?.date).toLocaleString('en-us', {\n                            month: 'short',\n                            day: 'numeric',\n                        })}\n                    </div>\n                </div>\n\n                <div className='bord'></div>\n\n                <div className='row px-5 py-2'>\n                    <div\n                        className='col-4 text-cmGrey600'\n                        style={{fontWeight: 600, fontSize: '12px'}}\n                    >\n                        Best Week:\n                    </div>\n                    <div className='col text-nowrap'>{avgData?.bestWeek?.kw} KW</div>\n                    <div\n                        className='col text-cmGrey800'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                    >\n                        {new Date(avgData?.bestWeek?.date[0]).toLocaleString('en-us', {\n                            month: 'short',\n                            day: 'numeric',\n                        })}\n                        -\n                        {new Date(avgData?.bestWeek?.date[1]).toLocaleString('en-us', {\n                            day: 'numeric',\n                        })}\n                    </div>\n                </div>\n\n                <div className='bord'></div>\n\n                <div className='row px-5 py-2'>\n                    <div\n                        className='col text-cmGrey600 '\n                        style={{fontWeight: 600, fontSize: '12px'}}\n                    >\n                        Best Month:\n                    </div>\n                    <div className='col text-nowrap text-cmBlack'>{avgData?.bestMonth?.kw} KW</div>\n                    <div\n                        className='col text-nowrap text-cmGrey800'\n                        style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: 600}}\n                    >\n                        {getValidDate(avgData?.bestMonth?.date, 'MMMM')}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import * as React from 'react';\nimport { ObjectUtils, classNames } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar ProgressBarBase = {\n  defaultProps: {\n    __TYPE: 'ProgressBar',\n    id: null,\n    value: null,\n    showValue: true,\n    unit: '%',\n    style: null,\n    className: null,\n    mode: 'determinate',\n    displayValueTemplate: null,\n    color: null,\n    children: undefined\n  },\n  getProps: function getProps(props) {\n    return ObjectUtils.getMergedProps(props, ProgressBarBase.defaultProps);\n  },\n  getOtherProps: function getOtherProps(props) {\n    return ObjectUtils.getDiffProps(props, ProgressBarBase.defaultProps);\n  }\n};\n\nvar ProgressBar = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var props = ProgressBarBase.getProps(inProps);\n  var elementRef = React.useRef(null);\n  var createLabel = function createLabel() {\n    if (props.showValue && props.value != null) {\n      var label = props.displayValueTemplate ? props.displayValueTemplate(props.value) : props.value + props.unit;\n      return label;\n    }\n    return null;\n  };\n  var createDeterminate = function createDeterminate() {\n    var otherProps = ProgressBarBase.getOtherProps(props);\n    var className = classNames('p-progressbar p-component p-progressbar-determinate', props.className);\n    var label = createLabel();\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      role: \"progressbar\",\n      id: props.id,\n      ref: elementRef,\n      className: className,\n      style: props.style,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuenow\": props.value,\n      \"aria-valuemax\": \"100\"\n    }, otherProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-progressbar-value p-progressbar-value-animate\",\n      style: {\n        width: props.value + '%',\n        display: 'flex',\n        backgroundColor: props.color\n      }\n    }, props.value != null && props.value !== 0 && props.showValue && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-progressbar-label\"\n    }, label)));\n  };\n  var createIndeterminate = function createIndeterminate() {\n    var otherProps = ProgressBarBase.getOtherProps(props);\n    var className = classNames('p-progressbar p-component p-progressbar-indeterminate', props.className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      role: \"progressbar\",\n      id: props.id,\n      ref: elementRef,\n      className: className,\n      style: props.style\n    }, otherProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-progressbar-indeterminate-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-progressbar-value p-progressbar-value-animate\",\n      style: {\n        backgroundColor: props.color\n      }\n    })));\n  };\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  if (props.mode === 'determinate') return createDeterminate();else if (props.mode === 'indeterminate') return createIndeterminate();else throw new Error(props.mode + \" is not a valid mode for the ProgressBar. Valid values are 'determinate' and 'indeterminate'\");\n}));\nProgressBar.displayName = 'ProgressBar';\n\nexport { ProgressBar };\n","import React, {useCallback, useRef, useState} from 'react'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport {KTSVG} from '../../../../../../../_metronic/helpers'\nimport {ProgressBar} from 'primereact/progressbar'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport {importAdminSalesDataService} from '../../../../../../../services/Services'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport {\n    downloadAnyFileHelper,\n    getErrorMessageFromResponse,\n} from '../../../../../../../helpers/CommonHelpers'\nimport moment from 'moment'\nimport axios from 'axios'\nimport {saveAs} from 'file-saver'\nimport {AMAZON_S3_BUCKET_URL, AMAZON_S3_CONFIG} from '../../../../../../../constants/constants'\nconst ExcelImportModal = ({open, handleClose}) => {\n    const companyProfileFilePickerRef = useRef()\n    const [selectedFile, setSelectedFile] = useState(null)\n    const [uploadProgress, setUploadProgress] = useState(0)\n    const [uploadError, setUploadError] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const fileSelectedHandler = (e) => {\n        setUploadError(false)\n        setSelectedFile(e?.target?.files?.[0])\n    }\n\n    const onUploadFile = useCallback(() => {\n        if (!selectedFile) return CustomToast.error('No file selected')\n        setLoading(true)\n        setErrorMessage(null)\n        let formData = new FormData()\n        formData.append('file', selectedFile)\n        importAdminSalesDataService(formData, (uploadProgress) => {\n            setUploadProgress(uploadProgress?.completed)\n        })\n            .then((res) => {\n                handleClose()\n                CustomToast.success('Your excel sheet has been successfully imported.')\n            })\n            .catch((err) => {\n                setUploadProgress(0)\n                setUploadError(true)\n                setErrorMessage(err?.data?.error ?? getErrorMessageFromResponse(err))\n            })\n            .finally(() => setLoading(false))\n    }, [handleClose, selectedFile])\n\n    const sampleFileDownload = () => {\n        const fileURL = `${AMAZON_S3_CONFIG.s3_bucket_url}/excel_import/import_format.xlsx`\n\n        axios\n            .get(fileURL, {responseType: 'arraybuffer'})\n            .then((response) => {\n                const blob = new Blob([response.data], {\n                    type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                })\n                saveAs(blob, 'sample_file.xlsx')\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((error) => {\n                console.error('Error downloading file:', error)\n            })\n    }\n\n    const handleDragEnter = (e) => {\n        setErrorMessage('')\n        setUploadError(false)\n        e.preventDefault()\n    }\n\n    const handleDrop = (e) => {\n        e.preventDefault()\n        const file = e?.dataTransfer?.files?.[0]\n        if (file && file?.name?.split(\".\")?.[1]===\"xlsx\") {\n             setSelectedFile(file)\n          } else {\n            setUploadError(true)\n            setErrorMessage(\"Invalid file type. Please upload an XLSX file.\")\n          }\n       \n    }\n\n    const removeFile = () => {\n        setSelectedFile(null)\n    }\n    return (\n        <CustomModal show={open} onHide={handleClose} maxWidth='425' showline={false}>\n            <div className='mb-5' style={{fontWeight: 700, fontSize: 18, color: '#363939'}}>\n                Excel Import\n            </div>\n            <div\n                className='text-cmGrey600 mb-10 cursor-pointer'\n                style={{fontSize: 12, fontWeight: 600}}\n            >\n                Need Help to understand what will work?{' '}\n                <span\n                    className='text-cminfo text-decoration-underline'\n                    onClick={sampleFileDownload}\n                >\n                    Download Sample{' '}\n                </span>\n            </div>\n\n            <div\n                onDragEnter={handleDragEnter}\n                onDragOver={(e) => e.preventDefault()}\n                onDrop={handleDrop}\n                className='d-flex flex-center flex-column h-200px border-cmGrey400 rounded border gap-1 border-dashed bg-cmwhite bg-hover-cmGrey100 cursor-pointer mb-10 draggable=\"true\"'\n                onClick={() => companyProfileFilePickerRef?.current?.click()}\n            >\n                <div className='bi bi-plus-circle text-cmGrey600' style={{fontSize: 30}} />\n                <div style={{color: '#363939', fontWeight: 600, fontSize: 18}}>Upload Files</div>\n                <div className='' style={{color: '#57595A', fontWeight: 600}}>\n                    <span className='text-cmBlue-Crayola'>Browse file</span> from your computer\n                </div>\n                <input\n                    ref={companyProfileFilePickerRef}\n                    type='file'\n                    accept='.xlsx, .xls'\n                    onChange={fileSelectedHandler}\n                    style={{display: 'none'}}\n                />\n            </div>\n            {selectedFile ? (\n                <div\n                    className='border border-cmGrey300 gap-5 d-flex align-items-start p-3 mb-3'\n                    style={{borderRadius: 10}}\n                >\n                    <div className=''>\n                        <KTSVG\n                            path='/media/icons/duotune/art/ExcelSheetIcon.svg'\n                            svgClassName='cursor-pointer'\n                            svgStyle={{width: '45px', height: '45px'}}\n                        />\n                    </div>\n\n                    <div className='flex-grow-1'>\n                        <div className='d-flex justify-content-between align-items-start mb-3'>\n                            <div>\n                                <div style={{color: '#363939', fontSize: 15, fontWeight: 500}}>\n                                    {selectedFile?.name}\n                                </div>\n                                <div style={{fontSize: 10, fontWeight: 500, color: '#57595A'}}>\n                                    {selectedFile?.size}kb\n                                </div>\n                            </div>\n                            {uploadError ? (\n                                <div className='me-5'>\n                                    <KTSVG\n                                        path='/media/icons/duotune/art/Red-Warn.svg'\n                                        svgClassName='cursor-pointer'\n                                        svgStyle={{width: '25px', height: '25px'}}\n                                    />\n                                </div>\n                            ) : (\n                                <div>\n                                    <KTSVG\n                                        path='/media/icons/duotune/art/trash-2.svg'\n                                        svgClassName='cursor-pointer'\n                                        svgStyle={{width: '21px', height: '21px'}}\n                                        onClick={removeFile}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                        {uploadProgress > 0 && !uploadError ? (\n                            <div className='d-flex align-items-center justify-content-between w-95 pb-2'>\n                                <div className='w-85'>\n                                    <ProgressBar\n                                        color='#6078EC'\n                                        value={uploadProgress}\n                                        style={{borderRadius: 50, height: '12px'}}\n                                    />\n                                </div>\n                                <div style={{fontSize: 10, fontWeight: 500, color: '#797A7B'}}>\n                                    {uploadProgress}%\n                                </div>\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n            ) : null}\n\n            <div>\n                <span className='p-error' style={{fontWeight: 'bold', fontSize: 12}}>\n                    {errorMessage}\n                </span>\n            </div>\n            <div className='d-flex mt-10 flex-center gap-7'>\n                <div>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.disabledBorder}\n                        buttonLabel='Cancel'\n                        buttonSize={BUTTON_SIZE.small}\n                        onClick={handleClose}\n                    />\n                </div>\n                <div>\n                    <CustomButton\n                        buttonLabel='Upload'\n                        buttonSize={BUTTON_SIZE.small}\n                        onClick={onUploadFile}\n                        loading={loading}\n                    />\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default ExcelImportModal\n","import React, {useState, useCallback, useEffect} from 'react'\nimport clsx from 'clsx'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport debounce from 'lodash.debounce'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getAdminReportService} from '../../../../../../services/Services'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport {\n    TABLE_BORDER,\n    formattedNumberFields,\n    getBooleanValue,\n} from '../../../../../../helpers/CommonHelpers'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\n// import Edit from '../../../../sequidocs/Icon/edit.png'\nimport Edit from '../../../sequidocs/Icon/edit.png'\nimport CustomCheckbox from '../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomEditIcon from '../../../../../../customComponents/customIcons/CustomEditIcon'\nimport {\n    CURRENT_HOST,\n    HOST_SERVERS,\n    getValidDate,\n    SHOW_BASED_ON_HOST,\n} from '../../../../../../constants/constants'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport ExcelImportModal from './salesTableComponent/ExcelImportModal'\nimport CustomLink from '../../../../../../customComponents/customButtton/CustomLink'\nimport CustomTooltip from '../../../../../../customComponents/customTooltip/CustomTooltip'\nimport {CustomSortSvg} from '../../../../../../_metronic/helpers/components/CustomSortSVG'\nlet CheckBoxTitle = [\n    {name: 'Closed', isChecked: false},\n    {name: 'M1', isChecked: false},\n    {name: 'M2', isChecked: false},\n]\nconst ReconciliationTabel = ({\n    params,\n    setParams,\n    selectedLocation,\n    className,\n    headerFilterChnage,\n}) => {\n    const [reportData, setReportData] = useState(null)\n    const [open, setOpen] = useState(false)\n    const [cstype, setCsType] = useState('')\n    const navigate = useNavigate()\n    const [checkBoxValue, setCheckBoxValue] = useState([\n        {name: 'Closed', isChecked: false},\n        {name: 'M1', isChecked: false},\n        {name: 'M2', isChecked: false},\n    ])\n\n    const [loading, setLoading] = useState(false)\n    const [closerSetterObj, setCloserSetterObj] = useState({})\n    const [searchText, setSearchText] = useState(params?.search)\n    const [openImportExcel, setOpenImportExcel] = useState(false)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    const handleOpenImportExcel = () => {\n        setOpenImportExcel(!openImportExcel)\n    }\n\n    const openParticularType = (type) => {\n        navigate(type)\n    }\n\n    const ReportApi = (page) => {\n        setLoading(true)\n        getAdminReportService({\n            ...params,\n            office_id: selectedLocation,\n            page,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        })\n            .then((res) => {\n                setReportData(res?.data)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    useEffect(() => {\n        ReportApi(params?.page)\n    }, [sortValue, sortingOrder])\n\n    useEffect(() => {\n        if (\n            params?.office_id &&\n            (params?.filter != 'custom' ||\n                (params?.filter == 'custom' && params?.start_date && params?.end_date))\n        ) {\n            ReportApi(params?.page)\n        }\n    }, [\n        params?.start_date,\n        params?.end_date,\n        params?.filter,\n        params?.office_id,\n        params?.search,\n        params?.m1,\n        params?.m2,\n        params?.closed,\n    ])\n\n    useEffect(() => {\n        if (params?.office_id) {\n            ReportApi(params?.page)\n        }\n    }, [params?.page])\n    useEffect(() => {\n        let m1Index = CheckBoxTitle.indexOf(params?.m1)\n    }, [])\n\n    const handleSearchChange = (e) => {\n        delaySave(e?.target?.value)\n        setSearchText(e?.target?.value)\n    }\n    const delaySave = useCallback(\n        debounce((val) => {\n            setParams({\n                search: val,\n                page: 1,\n            })\n            setLoading(true)\n        }, 500),\n        [params]\n    )\n\n    const headerFilterChange = (e) => {\n        headerFilterChnage(e?.target?.value, getBooleanValue(e?.target?.checked))\n    }\n\n    return (\n        <>\n            <div className={`card shadow mt-12 ${className}`}>\n                <CustomLoader full visible={loading} />\n\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        {/* <div className=' m-5 d-flex flex-wrap align-items-center justify-content-between'> */}\n                        <div className='d-flex flex-wrap gap-sm-5 gap-2 align-items-center justify-content-between m-5'>\n                            <label\n                                className=' text-cmGrey900'\n                                style={{\n                                    fontWeight: '600',\n                                    fontSize: '17px',\n                                }}\n                            >\n                                Customer Info\n                            </label>\n\n                            <div style={{borderRadius: '20px'}}>\n                                <CustomInput\n                                    type={INPUT_TYPE.search}\n                                    name='search'\n                                    onChange={handleSearchChange}\n                                    value={searchText}\n                                />\n                            </div>\n\n                            <div\n                                style={{borderRadius: '20px', alignItems: 'center'}}\n                                className='w-md-325px'\n                            >\n                                <div className='d-flex flex-wrap gap-6'>\n                                    <div className='d-flex align-items-center gap-2'>\n                                        <CustomCheckbox\n                                            onChange={headerFilterChange}\n                                            value={'closed'}\n                                            checked={params?.closed == '1'}\n                                        />\n                                        <span className='text-cmGrey700'>Closed</span>\n                                    </div>\n                                    <div className='d-flex align-items-center gap-2'>\n                                        <CustomCheckbox\n                                            onChange={headerFilterChange}\n                                            value={'m1'}\n                                            checked={params?.m1 == '1'}\n                                        />\n                                        <span className='text-cmGrey700'>M1</span>\n                                    </div>\n                                    <div className='d-flex align-items-center gap-2'>\n                                        <CustomCheckbox\n                                            onChange={headerFilterChange}\n                                            value={'m2'}\n                                            checked={params?.m2 == '1'}\n                                        />\n                                        <span className='text-cmGrey700'>M2</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className='d-flex flex-center flex-wrap gap-5'>\n                                <CustomLink\n                                    label={'Import History'}\n                                    onClick={() => navigate('import-history')}\n                                />\n\n                                <CustomButton\n                                    buttonLabel='Import'\n                                    buttonType={BUTTON_TYPE.secondary}\n                                    buttonSize={BUTTON_SIZE.small}\n                                    onClick={handleOpenImportExcel}\n                                />\n\n                                <CustomButton\n                                    buttonLabel='Add Sale'\n                                    buttonSize={BUTTON_SIZE.small}\n                                    onClick={() => navigate('add-sales')}\n                                />\n                            </div>\n                            {/* </div> */}\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className=' bg-cmGrey300 text-cmGrey900 '\n                                    style={{\n                                        fontSize: '12px',\n                                        fontWeight: 700,\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-6 '>PID</th>\n                                    <th className='text-nowrap p-6'>Customer</th>\n                                    <th className='text-nowrap p-6'>Source</th>\n                                    <th className='text-nowrap p-6'>Status</th>\n                                    <th className='text-nowrap p-6'>\n                                        <div className='d-flex'>\n                                            State\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'state' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('state')\n                                                    setSortingOrder(\n                                                        sortValue !== 'state'\n                                                            ? 'asc'\n                                                            : sortingOrder === 'asc'\n                                                            ? 'desc'\n                                                            : 'asc'\n                                                    )\n                                                    setParams({\n                                                        page: 1,\n                                                    })\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-6'>Rep Name</th>\n                                    <th className='text-nowrap p-6'>\n                                        <div className='d-flex'>\n                                            KW\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'kw' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('kw')\n                                                    setSortingOrder(\n                                                        sortValue !== 'kw'\n                                                            ? 'asc'\n                                                            : sortingOrder === 'asc'\n                                                            ? 'desc'\n                                                            : 'asc'\n                                                    )\n                                                    setParams({\n                                                        page: 1,\n                                                    })\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-6'>\n                                        <div className='d-flex'>\n                                            M1\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'm1' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('m1')\n                                                    setSortingOrder(\n                                                        sortValue !== 'm1'\n                                                            ? 'asc'\n                                                            : sortingOrder === 'asc'\n                                                            ? 'desc'\n                                                            : 'asc'\n                                                    )\n                                                    setParams({\n                                                        page: 1,\n                                                    })\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-6'>\n                                        <div className='d-flex'>\n                                            M2\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'm2' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('m2')\n                                                    setSortingOrder(\n                                                        sortValue !== 'm2'\n                                                            ? 'asc'\n                                                            : sortingOrder === 'asc'\n                                                            ? 'desc'\n                                                            : 'asc'\n                                                    )\n                                                    setParams({\n                                                        page: 1,\n                                                    })\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-6'>\n                                        <div className='d-flex'>\n                                            EPC\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'epc' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('epc')\n                                                    setSortingOrder(\n                                                        sortValue !== 'epc'\n                                                            ? 'asc'\n                                                            : sortingOrder === 'asc'\n                                                            ? 'desc'\n                                                            : 'asc'\n                                                    )\n                                                    setParams({\n                                                        page: 1,\n                                                    })\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-6'>Net EPC</th>\n                                    <th className='text-nowrap p-6'>\n                                        <div className='d-flex'>\n                                            Adders\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'adders' ? sortingOrder : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('adders')\n                                                    setSortingOrder(\n                                                        sortValue !== 'adders'\n                                                            ? 'asc'\n                                                            : sortingOrder === 'asc'\n                                                            ? 'desc'\n                                                            : 'asc'\n                                                    )\n                                                    setParams({\n                                                        page: 1,\n                                                    })\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-6'>\n                                        <div className='d-flex'>\n                                            Total Commission\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'total_commission'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => {\n                                                    setSortValue('total_commission')\n                                                    setSortingOrder(\n                                                        sortValue !== 'total_commission'\n                                                            ? 'asc'\n                                                            : sortingOrder === 'asc'\n                                                            ? 'desc'\n                                                            : 'asc'\n                                                    )\n                                                    setParams({\n                                                        page: 1,\n                                                    })\n                                                }}\n                                            />\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {reportData?.data?.length > 0 ? (\n                                    <>\n                                        {reportData &&\n                                            reportData?.data?.map((item, index) => (\n                                                <tr\n                                                    key={index}\n                                                    className={` text-cmGrey700 stripRow `}\n                                                    style={{\n                                                        height: '40px',\n                                                        fontSize: '14px',\n                                                        fontFamily: 'Manrope',\n                                                    }}\n                                                >\n                                                    <td className='text-nowrap p-5'>\n                                                        {item?.alertcentre_status ? (\n                                                            <div className='d-flex'>\n                                                                <Link\n                                                                    style={{\n                                                                        cursor: 'pointer',\n                                                                        textDecoration: 'underline',\n                                                                        fontWeight: 700,\n                                                                        alignItems: 'center',\n                                                                    }}\n                                                                    className='text-cmGrey800'\n                                                                    to={`customer-Info?pid=${item?.pid}`}\n                                                                    state={{pid: item?.pid}}\n                                                                >\n                                                                    {item?.pid}\n                                                                </Link>\n                                                                {SHOW_BASED_ON_HOST.showSalesReportAlertCenterIcon ? (\n                                                                    <Link\n                                                                        style={{\n                                                                            cursor: 'pointer',\n                                                                            textDecoration:\n                                                                                'underline',\n                                                                            fontWeight: 700,\n                                                                            alignItems: 'center',\n                                                                        }}\n                                                                        className='text-cmGrey800'\n                                                                        to={`/alert-center/alerts?alertType=sales&page=1&search=&allSearchTerm=`}\n                                                                        state={{pid: item?.pid}}\n                                                                    >\n                                                                        <CustomTooltip title='Alert Center'>\n                                                                            <i\n                                                                                className='bi bi-exclamation-triangle ms-2 text-cmBlue-Crayola'\n                                                                                style={{\n                                                                                    fontSize: 15,\n                                                                                }}\n                                                                            />\n                                                                        </CustomTooltip>\n                                                                    </Link>\n                                                                ) : (\n                                                                    ''\n                                                                )}\n                                                            </div>\n                                                        ) : (\n                                                            <Link\n                                                                style={{\n                                                                    cursor: 'pointer',\n                                                                    textDecoration: 'underline',\n                                                                    fontWeight: 700,\n                                                                }}\n                                                                className='text-cmGrey800'\n                                                                // to='customer-Info'\n                                                                to={`customer-Info?pid=${item?.pid}`}\n                                                                state={{pid: item?.pid}}\n                                                            >\n                                                                {item?.pid}\n                                                            </Link>\n                                                        )}\n                                                    </td>\n\n                                                    <td className='text-nowrap p-5'>\n                                                        {item?.customer_name}\n                                                    </td>\n                                                    <td className='text-nowrap p-5'>\n                                                        {item?.data_source_type ?? '-'}\n                                                    </td>\n                                                    <td className='text-nowrap p-5'>\n                                                        {item?.mark_account_status_name ?? '-'}\n                                                    </td>\n\n                                                    <td className='text-nowrap p-5'>\n                                                        {item?.state}\n                                                    </td>\n\n                                                    <td className='text-nowrap p-5'>\n                                                        <label className='d-flex'>\n                                                            <RedirectToEmployeeProfile\n                                                                employeeId={\n                                                                    item?.closer1_detail?.id\n                                                                }\n                                                            >\n                                                                <label style={{color: '#7239EA'}}>\n                                                                    (C)\n                                                                </label>\n                                                                {item?.closer1_detail?.first_name ??\n                                                                    '-'}{' '}\n                                                                {item?.closer1_detail?.last_name ??\n                                                                    '-'}\n                                                            </RedirectToEmployeeProfile>\n                                                        </label>\n                                                        <label className='d-flex'>\n                                                            <RedirectToEmployeeProfile\n                                                                employeeId={\n                                                                    item?.setter1_detail?.id\n                                                                }\n                                                            >\n                                                                <label style={{color: '#004CE8'}}>\n                                                                    (S)\n                                                                </label>\n                                                                {item?.setter1_detail?.first_name ??\n                                                                    '-'}{' '}\n                                                                {item?.setter1_detail?.last_name ??\n                                                                    '-'}\n                                                            </RedirectToEmployeeProfile>\n                                                        </label>\n                                                    </td>\n\n                                                    <td className='text-nowrap p-5'>\n                                                        {formattedNumberFields(item?.kw, '')}\n                                                    </td>\n\n                                                    <td className='text-nowrap p-5'>\n                                                        <span\n                                                            className={\n                                                                Number(item?.total_m1 ?? 0) < 0\n                                                                    ? 'bi bi-exclamation-triangle text-cmError me-2'\n                                                                    : ''\n                                                            }\n                                                        ></span>\n                                                        <div className='fw-bold'>\n                                                            {formattedNumberFields(\n                                                                item?.total_m1,\n                                                                '$'\n                                                            )}{' '}\n                                                        </div>\n                                                        <div>\n                                                            {' '}\n                                                            {getValidDate(item?.m1_date) ?? '-'}\n                                                        </div>\n                                                    </td>\n\n                                                    <td className='text-nowrap p-5'>\n                                                        <span\n                                                            className={\n                                                                Number(item?.total_m2 ?? 0) < 0\n                                                                    ? 'bi bi-exclamation-triangle text-cmError me-2'\n                                                                    : ''\n                                                            }\n                                                        ></span>\n                                                        <div className='fw-bold'>\n                                                            {formattedNumberFields(\n                                                                item?.total_m2,\n                                                                '$'\n                                                            )}\n                                                        </div>\n                                                        <div>\n                                                            {' '}\n                                                            {getValidDate(item?.m2_date) ?? '-'}\n                                                        </div>\n                                                    </td>\n\n                                                    <td\n                                                        className='text-nowrap p-5'\n                                                        style={{color: '#212121'}}\n                                                    >\n                                                        {formattedNumberFields(item?.epc) ?? '-'}\n                                                    </td>\n\n                                                    <td className='text-nowrap p-5'>\n                                                        {formattedNumberFields(item?.net_epc, '')}\n                                                    </td>\n\n                                                    <td\n                                                        className='text-nowrap p-5 text-center'\n                                                        style={{color: '#212121'}}\n                                                    >\n                                                        {item?.adders\n                                                            ? formattedNumberFields(item?.adders)\n                                                            : '-'}\n                                                    </td>\n\n                                                    <td\n                                                        className='text-nowrap p-5'\n                                                        style={{\n                                                            color: '#212121',\n                                                            fontFamily: 'Manrope',\n                                                        }}\n                                                    >\n                                                        {formattedNumberFields(\n                                                            item?.total_commission,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={11}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                    {reportData?.data?.length > 0 ? (\n                        <Pagination\n                            page={params?.page}\n                            setPage={(changedPage) => {\n                                setParams({\n                                    page: Number(changedPage),\n                                })\n                            }}\n                            totalPages={reportData?.last_page}\n                        />\n                    ) : null}\n                </div>\n            </div>\n            {openImportExcel ? (\n                <ExcelImportModal open={openImportExcel} handleClose={handleOpenImportExcel} />\n            ) : null}\n        </>\n    )\n}\n\nexport default ReconciliationTabel\n","import React from 'react'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport Progress from './Progress'\n\nconst SalesContractCard = ({graphsData, contracts}) => {\n    return (\n        <div className='w-100' style={{fontFamily: 'Manrope', fontSize: '13px', fontWeight: '600'}}>\n            <div className='row p-5 bg-cmwhite shadow' style={{borderRadius: '12px'}}>\n                {/* Contracts table starts  */}\n                <div className='mb-sm-0 mb-10 col-xxl-7 col-sm-6' style={{fontWeight: '600 '}}>\n                    <div\n                        className='mb-4 text-cmGrey800'\n                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                    >\n                        Contracts\n                    </div>\n                    {/* Table starts */}\n                    <div>\n                        {/* line 1 */}\n                        <div className='d-flex align-items-center justify-content-between'>\n                            <div className='text-cmGrey600'>Avg. profit per rep:</div>\n                            <div className='text-cmBlack'>\n                                {formattedNumberFields(contracts?.avg_profit_per_rep, '$')}\n                            </div>\n                        </div>\n                        <hr className='border-cmGrey500 p-0 my-2 border-dotted' />\n                        {/* line 2 */}\n                        <div className='d-flex align-items-center justify-content-between'>\n                            <div className='text-cmGrey600'>Total KW Installed:</div>\n                            <div className='text-cmBlack'>\n                                {formattedNumberFields(contracts?.total_kw_installed, '')} Kw\n                            </div>\n                        </div>\n\n                        <hr className='border-cmGrey500 p-0 my-2 border-dotted' />\n                        {/* line 3 */}\n                        <div className='d-flex align-items-center justify-content-between'>\n                            <div className='text-cmGrey600 '>Total Revenue Generated:</div>\n                            <div className='text-cmBlack '>\n                                {formattedNumberFields(contracts?.total_revenue_generated, '$')}\n                            </div>\n                        </div>\n                        <hr className='border-cmGrey500 p-0 my-2 border-dotted' />\n                        {/* line 4 */}\n                        <div className='d-flex align-items-center justify-content-between '>\n                            <div className='text-cmGrey600 '>Total KW Pending:</div>\n                            <div className='text-cmBlack'>\n                                {formattedNumberFields(contracts?.total_kw_pending, '')} KW\n                            </div>\n                        </div>\n                        <hr className='border-cmGrey500 p-0 my-2 border-dotted' />\n                        {/* line 5 */}\n                        <div className='d-flex align-items-center justify-content-between'>\n                            <div className='text-cmGrey600'>Total Revenue Pending:</div>\n                            <div className='text-cmBlack'>\n                                {' '}\n                                {formattedNumberFields(contracts?.total_revenue_pending, '$')}\n                            </div>\n                        </div>\n                    </div>\n                    {/* Table ends */}\n                </div>\n                {/* Contracts table ends  */}\n                {/* Line */}\n                {/* <div\n                    className='d-none d-md-block border-cmGrey200 border-end-dashed col '\n                    style={{width: 'fit-content'}}\n                /> */}\n                <div className='mx-auto col-xxl-4 col-sm-6'>\n                    <div\n                        className='mb-5 text-cmGrey800 text-center'\n                        style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                    >\n                        Install Ratio\n                    </div>\n                    <div className=''>\n                        <Progress\n                            a={graphsData?.install?.replace('%', '')}\n                            b={graphsData?.uninstall?.replace('%', '')}\n                        />\n                    </div>\n                    <div className='d-flex flex-center'>\n                        <div\n                            style={{marginTop: '-20px', fontSize: '12px', fontWeight: '500'}}\n                            className='text-cmGrey600 text-nowrap'\n                        >\n                            <div className='d-flex gap-2 '>\n                                <i className='bi bi-circle-fill text-cmBlue-Crayola' />\n\n                                <div>Installed Accounts</div>\n                            </div>\n                            <div className='d-flex gap-2'>\n                                <i className='bi bi-circle-fill' style={{color: '#DFE4FB'}} />\n\n                                <div>Unserviced Accounts</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SalesContractCard\n","import React, {useState, useEffect, useMemo, useRef, useCallback} from 'react'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport moment from 'moment'\nimport Doughnut from './Doughnut'\nimport Accounts from './Accounts'\nimport Avg from './Avg'\nimport Tabel from './Tabel'\nimport ViewCostomer from './ViewCostomer'\nimport CommanTopbarforReports from '../company/CommanTopbarforReports'\nimport {\n    exportAdminSalesService,\n    getAdminAllGraphsService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport debounce from 'lodash.debounce'\nimport SalesContractCard from './SalesContractCard'\nimport useOfficeLocation from '../../../../../../hooks/useOfficeLocation'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport {\n    downloadAnyFileHelper,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nexport default function Sales({params, setParams}) {\n    const [loading, setLoading] = useState(false)\n    const [tableLoading, setTableLoading] = useState(false)\n    const [graphsData, setGraphData] = useState(null)\n    const [officeList, selectedLocation, setSelectedLocation] = useOfficeLocation(params?.office_id)\n\n    useEffect(() => {\n        setParams({\n            office_id: selectedLocation,\n        })\n    }, [selectedLocation])\n\n    useEffect(() => {\n        let body = {\n            filter: params?.filter,\n            m1: params?.m1,\n            m2: params?.m2,\n            closed: params?.closed,\n            office_id: params?.office_id,\n        }\n        if (\n            body?.filter == 'custom' &&\n            moment(params?.start_date).isValid() &&\n            moment(params?.end_date).isValid()\n        ) {\n            body.start_date = params?.start_date\n            body.end_date = params?.end_date\n        }\n        if (\n            params?.office_id &&\n            (body?.filter != 'custom' ||\n                (body?.filter == 'custom' &&\n                    moment(params?.start_date).isValid() &&\n                    moment(params?.end_date).isValid() &&\n                    params?.start_date <= params?.end_date))\n        ) {\n            setLoading(true)\n            getAdminAllGraphsService(body)\n                .then((res) => {\n                    setGraphData(res.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [\n        params?.m1,\n        params?.m2,\n        params?.closed,\n        params?.office_id,\n        params?.filter,\n        params?.start_date,\n        params?.end_date,\n    ])\n\n    const changeFilter = (val) => {\n        setParams({\n            filter: val,\n            page: 1,\n            ...(val != 'custom' && {\n                start_date: null,\n                end_date: null,\n            }),\n        })\n    }\n    const headerFilterChnage = (val, isChecked) => {\n        setParams({\n            [val]: isChecked,\n            page: 1,\n        })\n    }\n    const onLocationChange = (loc) => {\n        setSelectedLocation(loc)\n        setLoading(true)\n        setParams({\n            page: 1,\n        })\n    }\n    const changeStartDate = (start) => {\n        setParams({\n            start_date: moment(start).format('YYYY-MM-DD'),\n        })\n    }\n    const changeEndDate = (end) => {\n        setParams({\n            end_date: moment(end).format('YYYY-MM-DD'),\n        })\n    }\n\n    const handleSearchChange = (e) => {\n        delaySaveToDb(e)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setTableLoading(true)\n        }, 500),\n        []\n    )\n\n    const onExportCostData = useCallback(() => {\n        setLoading(true)\n        const body = {\n            office_id: selectedLocation,\n            filter: params?.filter,\n            m1: params?.m1,\n            m2: params?.m2,\n            closed: params?.closed,\n        }\n        if (\n            body?.filter == 'custom' &&\n            moment(params?.start_date).isValid() &&\n            moment(params?.end_date).isValid()\n        ) {\n            body.start_date = params?.start_date\n            body.end_date = params?.end_date\n        }\n        exportAdminSalesService(body)\n            .then((res) => {\n                const fileName = `Payroll Reports - ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((err) => {\n                CustomToast.success(getErrorMessageFromResponse(err))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [\n        selectedLocation,\n        params?.filter,\n        params?.m1,\n        params?.m2,\n        params?.closed,\n        params?.start_date,\n        params?.end_date,\n    ])\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <CommanTopbarforReports\n                selectedLocation={selectedLocation}\n                filter={params.filter}\n                params={params}\n                officeList={officeList}\n                onChangeFilter={(val) => {\n                    changeFilter(val)\n                }}\n                onLocationChange={(loc) => onLocationChange(loc)}\n                onStartDateChange={(start) => changeStartDate(start)}\n                onEndDateChange={(end) => changeEndDate(end)}\n                handleExport={onExportCostData}\n            />\n            <div className='row mt-10 mx-auto'>\n                {/* <div className=' shadow mb-4  w-md-300px h-md-230px bg-white rounded'> */}\n                <div\n                    className='col  shadow mb-4 bg-cmwhite'\n                    style={{borderRadius: '10px', height: 'fit-content'}}\n                >\n                    <div\n                        className='p-4 text-cmGrey800'\n                        style={{\n                            fontSize: '14px',\n                            fontWeight: '600',\n                            fontFamily: fontsFamily.manrope,\n                        }}\n                    >\n                        Accounts\n                    </div>\n                    <div\n                        style={{marginTop: '-50px'}}\n                        className='d-flex h-200px justify-content-center mx-auto'\n                    >\n                        <Doughnut graphsData={graphsData?.accounts} />\n                    </div>\n                    <div\n                        className='bord bg-cmGrey300'\n                        style={{\n                            marginTop: '-55px',\n                        }}\n                    ></div>\n\n                    <div className=''>\n                        <Accounts graphsData={graphsData?.accounts} />\n                    </div>\n                </div>\n\n                {/* <Contracts graphsData={graphsData?.install_ratio} contracts={graphsData?.contracts} /> */}\n\n                <div className='col-sm'>\n                    <Avg avgData={graphsData?.best_avg} />\n                </div>\n                <div className='col-xxl-5'>\n                    <SalesContractCard\n                        graphsData={graphsData?.install_ratio}\n                        contracts={graphsData?.contracts}\n                    />\n                </div>\n            </div>\n            <Tabel\n                params={params}\n                setParams={setParams}\n                selectedLocation={selectedLocation}\n                onSearchChange={(text) => handleSearchChange(text)}\n                loading={tableLoading}\n                headerFilterChnage={(val, isChecked) => headerFilterChnage(val, isChecked)}\n            />\n            <ViewCostomer />\n        </div>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState} from 'react'\nimport {\n    formattedNumberFields,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport {\n    adjustPayrollDetailService,\n    updatePayrollDetailService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomModal from '../../../../../../customComponents/customModal/CustomModal'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nconst EditRunPayroll = ({show, handleClose, editData, getPayrollData, currentPayPeriod}) => {\n    const [data, setData] = useState({\n        commission: null,\n        override: null,\n        deduction: null,\n        clawback: null,\n        adjustment: null,\n        reconciliation: null,\n        comment: null,\n    })\n    const [loading, setLoading] = useState(false)\n    const [commentError, setCommentError] = useState(null)\n\n    const handleUpdate = (field, value) => {\n        const dummyData = {...data}\n        dummyData[field] = value\n\n        setData(dummyData)\n    }\n\n    const onEditPayroll = (status) => {\n        setLoading(true)\n        const body = {\n            payroll_id: editData?.payroll_id,\n            commission: data?.commission,\n            override: data?.override,\n            deduction: data?.deduction,\n            clawback: data?.clawback,\n            adjustment: data?.adjustment,\n            // reconciliation: data?.reconciliation,\n            comment: data?.comment,\n            status: status,\n        }\n        updatePayrollDetailService(body)\n            .then(() => getPayrollData())\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                handleClose()\n                setLoading(false)\n            })\n    }\n\n    const adjustPayroll = () => {\n        const body = {\n            payroll_id: editData?.payroll_id,\n            commission_amount: data?.commission,\n            overrides_amount: data?.override,\n            deductions_amount: data?.deduction,\n            clawbacks_amount: data?.clawback,\n            adjustments_amount: data?.adjustment,\n            // reconciliations_amount: data?.reconciliation,\n            comment: data?.comment,\n        }\n        if (!body.comment) return setCommentError('Enter Comment')\n\n        setLoading(true)\n        adjustPayrollDetailService(body)\n            .then(() => {\n                getPayrollData()\n            })\n            .catch((e) => {\n                CustomToast.error(getErrorMessageFromResponse(e))\n            })\n            .finally(() => {\n                handleClose()\n                setLoading(false)\n            })\n    }\n    return (\n        <CustomModal show={show} onHide={handleClose} maxWidth='1000' title={'Edit Payroll'}>\n            <CustomLoader full visible={loading} />\n            {/* Body Starts */}\n            <div\n                className='d-flex flex-wrap justify-content-between w-sm-75 mx-auto'\n                style={{fontWeight: '700', fontFamily: 'Manrope', fontSize: '14px'}}\n            >\n                {/* block 1 */}\n                <div className='w-sm-auto w-100 px-sm-0 px-5 '>\n                    <div className='d-flex align-items-center gap-5'>\n                        <CustomImage src={editData?.emp_img} className='avatar' />\n                        <div>\n                            {editData?.first_name} {editData?.last_name} (\n                            {getValidDate(currentPayPeriod?.pay_period_from)} -\n                            {getValidDate(currentPayPeriod?.pay_period_to)})\n                        </div>\n                    </div>\n\n                    <div\n                        className='my-5 card bg-cmwhite shadow-sm border border-cmGrey200 shadow-sm'\n                        style={{borderRadius: '10px'}}\n                    >\n                        <div className='card-body my-0 p-0'>\n                            <div className='d-flex justify-content-between py-2 px-5'>\n                                <div className='text-cmGrey600'>Commission</div>\n                                <div className='text-cmGrey800'>\n                                    {formattedNumberFields(editData?.commission, '$')}\n                                </div>\n                            </div>\n                            <hr className='m-0 p-0 text-cmGrey500' />\n                            <div className='d-flex justify-content-between py-2 px-5'>\n                                <div className='text-cmGrey600'>Overrides</div>\n                                <div className='text-cmGrey800'>\n                                    <span className='text-cmGrey500 me-1'>\n                                        {formattedNumberFields(\n                                            editData?.override_value_is_higher,\n                                            '$'\n                                        )}\n                                    </span>{' '}\n                                    <span>{formattedNumberFields(editData?.override, '$')}</span>\n                                </div>\n                            </div>\n                            <hr className='m-0 p-0 text-cmGrey500' />\n                            <div className='d-flex justify-content-between py-2 px-5'>\n                                <div className='text-cmGrey600'>Adjustments</div>\n                                <div className='text-cmGrey800'>\n                                    {formattedNumberFields(editData?.adjustment, '$')}\n                                </div>\n                            </div>\n                            <hr className='m-0 p-0 text-cmGrey500' />\n                            <hr className='m-0 p-0 text-cmGrey500' />\n                            <div className='d-flex justify-content-between py-2 px-5'>\n                                <div className='text-cmGrey600'>Deductions</div>\n                                <div className='text-cmGrey800'>\n                                    {formattedNumberFields(editData?.deduction, '$')}\n                                </div>\n                            </div>\n                            <hr className='m-0 p-0 text-cmGrey500' />\n\n                            <div className='d-flex justify-content-between py-2 px-5'>\n                                <div className='text-cmGrey600'>Clawbacks</div>\n                                <div className='text-cmGrey800'>\n                                    {formattedNumberFields(editData?.clawback, '$')}\n                                </div>\n                            </div>\n                            <hr className='m-0 p-0 text-cmGrey500' />\n\n                            <div className='d-flex justify-content-between py-2 px-5'>\n                                <div className='text-cmGrey600'>Reconciliations</div>\n                                <div className='text-cmGrey800'>\n                                    {formattedNumberFields(editData?.reconciliation, '$')}\n                                </div>\n                            </div>\n                            <hr className='m-0 p-0 text-cmGrey500' />\n                        </div>\n\n                        <div className='card-footer border-0 my-0 py-3 px-0 '>\n                            <div className='d-flex justify-content-between py-2 px-5'>\n                                <div className='text-cmGrey900'>Net Pay</div>\n                                <div className='text-cmGrey900'>\n                                    {formattedNumberFields(editData?.net_pay, '$')}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* block 1 ends*/}\n                {/* block 2 */}\n                <div className='w-sm-auto w-100'>\n                    <div className='mx-sm-0 mx-5' style={{fontFamily: 'Manrope'}}>\n                        Adjust Amount\n                    </div>\n\n                    <div className='my-5 bg-cmwhite'>\n                        <div className=''>\n                            <div className='d-sm-flex justify-content-between align-items-center py-2 px-5'>\n                                <div className='text-cmGrey600'>Commission</div>\n                                <CustomInput\n                                    type={INPUT_TYPE.number}\n                                    placeholder='Amount'\n                                    name='commission'\n                                    onChange={(e) => handleUpdate(e.target.name, e.target.value)}\n                                    value={data?.commission}\n                                />\n                            </div>\n                            <div className='d-sm-flex justify-content-between align-items-center  py-2 px-5'>\n                                <div className='text-cmGrey600'>Overrides</div>\n                                <CustomInput\n                                    type={INPUT_TYPE.number}\n                                    placeholder='Amount'\n                                    name='override'\n                                    onChange={(e) => handleUpdate(e.target.name, e.target.value)}\n                                    value={data?.override}\n                                />\n                            </div>\n                            <div className='d-sm-flex justify-content-between align-items-center py-2 px-5'>\n                                <div className='text-cmGrey600'>Adjustments</div>\n                                <CustomInput\n                                    type={INPUT_TYPE.number}\n                                    placeholder='Amount'\n                                    name='adjustment'\n                                    onChange={(e) => handleUpdate(e.target.name, e.target.value)}\n                                    value={data?.adjustment}\n                                />\n                            </div>\n                            <div className='d-sm-flex justify-content-between align-items-center  py-2 px-5'>\n                                <div className='text-cmGrey600'>Deductions</div>\n                                <CustomInput\n                                    type={INPUT_TYPE.number}\n                                    placeholder='Amount'\n                                    name='deduction'\n                                    onChange={(e) => handleUpdate(e.target.name, e.target.value)}\n                                    value={data?.deduction}\n                                />\n                            </div>\n                            <div className='d-sm-flex justify-content-between align-items-center  py-2 px-5'>\n                                <div className='text-cmGrey600'>Clawbacks</div>\n                                <CustomInput\n                                    type={INPUT_TYPE.number}\n                                    placeholder='Amount'\n                                    name='clawback'\n                                    onChange={(e) => handleUpdate(e.target.name, e.target.value)}\n                                    value={data?.clawback}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* block 2 ends*/}\n            </div>\n            {/* Body Ends*/}\n\n            <div className='w-75 mx-auto mt-2 px-sm-0 px-5'>\n                <CustomInput\n                    type={INPUT_TYPE.textarea}\n                    placeholder='Add a Comment'\n                    name='comment'\n                    value={data.comment}\n                    onChange={(e) => handleUpdate(e.target.name, e.target.value)}\n                    errorMessage={commentError}\n                />\n            </div>\n\n            <div className='d-flex flex-wrap justify-content-center gap-15 text-center my-15 '>\n                <CustomButton\n                    buttonType={BUTTON_TYPE.primary}\n                    buttonLabel='Edit Payroll'\n                    onClick={adjustPayroll}\n                />\n                <CustomButton\n                    buttonType={BUTTON_TYPE.error}\n                    buttonLabel='\n                        Skip Payroll'\n                    onClick={() => onEditPayroll('skipped')}\n                />\n                <CustomButton\n                    buttonType={BUTTON_TYPE.primary}\n                    buttonLabel='Move to Next Payroll'\n                    onClick={() => onEditPayroll('next_payroll')}\n                />\n                {/* <button\n                    style={{fontSize: '13px', fontWeight: '700'}}\n                    className='btn bg-cmBlue-Crayola text-cmwhite'\n                    onClick={adjustPayroll}\n                >\n                    Edit Payroll\n                </button>\n                <button\n                    style={{fontSize: '13px', fontWeight: '700'}}\n                    className='btn bg-cmError text-cmError bg-opacity-10'\n                    onClick={() => onEditPayroll('skipped')}\n                >\n                    Skip Payroll\n                </button>\n                <button\n                    style={{fontSize: '13px', fontWeight: '700'}}\n                    className='btn bg-cmBlue-Crayola text-cmwhite'\n                    onClick={() => onEditPayroll('next_payroll')}\n                >\n                    Move To Next Payroll\n                </button> */}\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {EditRunPayroll}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState} from 'react'\nimport Edit from '../../../sequidocs/Icon/edit.png'\nimport Pagination from '../../../sequidocs/component/Pagination'\n\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\n\nimport {useNavigate} from 'react-router-dom'\nimport {EditRunPayroll} from '../../../payroll/component/runpayroll/EditRunPayroll'\nimport {PayRollCommissionsTable} from '../../../payroll/component/runpayroll/commisonTable/PayRollCommissionsTable'\nimport {PayrollAdjustments} from '../../../payroll/component/runpayroll/PayrollAdjustments'\nimport {PayRollReimbursTable} from '../../../payroll/component/runpayroll/PayRollReimbursTable'\nimport {PayRollDeductionTable} from '../../../payroll/component/runpayroll/PayRollDeductionTable'\nimport {PayRollOverridesTable} from '../../../payroll/component/runpayroll/overrideTable/PayRollOverridesTable'\nimport {useSelector} from 'react-redux'\nimport {getCompanySettingSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\n\nconst PayrollTabel = ({payrollTableData, activePage, onPageChange, currentPayPeriod}) => {\n    const [open, setOpen] = useState(false)\n    const [showCreateAppModal, setShowCreateAppModal] = useState(false)\n    const [showAdjustmentModal, setShowAdjustmentModal] = useState(false)\n    const [showReimbursementsModal, setShowReimbursementsModal] = useState(false)\n    const [showDeductionsModal, setShowDeductionsModal] = useState(false)\n    const [showOverridesModal, setShowOverridesModal] = useState(false)\n    const companySetting = useSelector(getCompanySettingSelector)\n    const [payrollMetaData, setPayrollMetaData] = useState(null)\n\n    const navigate = useNavigate()\n\n    const handleCloseCommissions = () => {\n        setShowCreateAppModal(false)\n    }\n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleCloseAdjustment = () => {\n        setShowAdjustmentModal(false)\n    }\n\n    const handleReimbursement = () => {\n        setShowReimbursementsModal(false)\n    }\n    const handleDeduction = () => {\n        setShowDeductionsModal(false)\n    }\n    const handleOverrides = () => {\n        setShowOverridesModal(false)\n    }\n\n    return (\n        <>\n            <div className=' py-0 px-0 mx-0 '>\n                <div className='table-responsive rounded shadow-sm'>\n                    <table className='table'>\n                        <thead className={TABLE_BORDER}>\n                            <tr\n                                className='bg-cmGrey300 text-cmGrey900'\n                                style={{\n                                    fontSize: '14px',\n                                    fontWeight: '700',\n                                    fontFamily: 'Manrope',\n                                }}\n                            >\n                                <th className='text-nowrap p-5 '>Employee</th>\n                                <th className='text-nowrap p-5'>Position</th>\n                                <th className=' p-5 text-nowrap'>Commission</th>\n                                <th className=' p-5 text-nowrap'>\n                                    Overrides\n                                    {/* <i\n                                        className='bi bi-gear ms-2 fs-5 text-cmGrey700 '\n                                        onClick={() => navigate('/setting/setup')}\n                                        style={{cursor: 'pointer'}}\n                                    ></i> */}\n                                </th>\n\n                                <th\n                                    data-toggle='tooltip'\n                                    data-placement='left'\n                                    title='bonuses, advances, incentives, \n                  Fine/Fee, Payroll Dispute '\n                                    className=' p-5 text-nowrap'\n                                >\n                                    Adjustments{' '}\n                                    <i\n                                        className='bi bi-exclamation-circle ms-1 text-cmGrey700'\n                                        style={{cursor: 'pointer'}}\n                                    ></i>\n                                </th>\n\n                                <th className=' p-5 text-nowrap'>Reimbursements</th>\n\n                                <th className='p-5 text-nowrap'>Deductions </th>\n                                {companySetting?.reconciliation ? (\n                                    <th className=' p-5 text-nowrap'>Reconciliation</th>\n                                ) : null}\n\n                                <th className=' p-5 text-nowrap'>Net Pay</th>\n                                <th className='p-5 text-nowrap'></th>\n                            </tr>\n                        </thead>\n                        <tbody className={TABLE_BORDER}>\n                            {payrollTableData?.data?.length > 0 ? (\n                                <>\n                                    {payrollTableData?.data?.map((item, i) => (\n                                        <tr\n                                            className={`text-cmGrey700 stripRow `}\n                                            style={{\n                                                fontSize: '14px',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: 600,\n                                            }}\n                                        >\n                                            <td\n                                                className='p-4 text-nowrap text-cmGrey800'\n                                                style={{\n                                                    textDecoration: 'underline',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '700',\n                                                    fontSize: '14px',\n                                                }}\n                                            >\n                                                <RedirectToEmployeeProfile employeeId={item?.id}>\n                                                    <CustomImage\n                                                        src={item?.employee_image}\n                                                        className='avatar me-3'\n                                                    />{' '}\n                                                    {item?.employee ?? '-'}\n                                                </RedirectToEmployeeProfile>\n                                            </td>\n\n                                            <td className='text-nowrap p-5'>\n                                                {item?.position ?? '-'}\n                                            </td>\n\n                                            <td\n                                                className='p-5 text-nowrap text-decoration-underline cursor-pointer'\n                                                onClick={() => {\n                                                    setShowCreateAppModal(true)\n                                                    setPayrollMetaData({\n                                                        payroll_id: item?.payroll_id,\n                                                        name: item?.employee,\n                                                        user_id: item?.id,\n                                                    })\n                                                }}\n                                            >\n                                                {formattedNumberFields(item?.commission, '$')}\n                                            </td>\n\n                                            <td\n                                                className='text-nowrap p-5 text-decoration-underline cursor-pointer'\n                                                onClick={() => {\n                                                    setShowOverridesModal(true)\n                                                    setPayrollMetaData({\n                                                        payroll_id: item?.payroll_id,\n                                                        name: item?.employee,\n                                                        user_id: item?.id,\n                                                    })\n                                                }}\n                                            >\n                                                {formattedNumberFields(item?.override, '$')}\n                                            </td>\n\n                                            <td\n                                                className='text-nowrap p-5 text-decoration-underline cursor-pointer'\n                                                onClick={() => {\n                                                    setShowAdjustmentModal(true)\n                                                    setPayrollMetaData({\n                                                        payroll_id: item?.payroll_id,\n                                                        name: item?.employee,\n                                                        user_id: item?.id,\n                                                    })\n                                                }}\n                                            >\n                                                {formattedNumberFields(item?.adjustment, '$')}\n                                            </td>\n\n                                            <td\n                                                className='p-5 text-nowrap text-decoration-underline cursor-pointer'\n                                                onClick={() => {\n                                                    setShowReimbursementsModal(true)\n                                                    setPayrollMetaData({\n                                                        payroll_id: item?.payroll_id,\n                                                        name: item?.employee,\n                                                        user_id: item?.id,\n                                                    })\n                                                }}\n                                            >\n                                                {formattedNumberFields(item?.reimbursement, '$')}\n                                            </td>\n\n                                            <td\n                                                className='p-5 text-nowrap text-decoration-underline cursor-pointer'\n                                                onClick={() => {\n                                                    setShowDeductionsModal(true)\n                                                    setPayrollMetaData({\n                                                        payroll_id: item?.payroll_id,\n                                                        name: item?.employee,\n                                                        user_id: item?.id,\n                                                    })\n                                                }}\n                                            >\n                                                {formattedNumberFields(item?.deduction, '$')}\n                                            </td>\n\n                                            {companySetting?.reconciliation ? (\n                                                <td className='p-5 text-nowrap '>\n                                                    {formattedNumberFields(\n                                                        item?.reconciliation,\n                                                        '$'\n                                                    )}\n                                                </td>\n                                            ) : null}\n\n                                            <td\n                                                className='p-5 text-nowrap text-cmGrey900'\n                                                style={{\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '700',\n                                                }}\n                                            >\n                                                {formattedNumberFields(item?.net_pay, '$')}\n                                            </td>\n\n                                            {item?.comment ? (\n                                                <td className='p-5 text-nowrap'>\n                                                    <i\n                                                        // className='btn btn-secondary'\n                                                        data-toggle='tooltip'\n                                                        data-placement='left'\n                                                        title='Reimbursement $75 for Flight'\n                                                        style={{\n                                                            fontSize: '20px',\n                                                            cursor: 'pointer',\n                                                        }}\n                                                        className='bi bi-chat-fill text-hover-black text-cmOrange'\n                                                    ></i>\n                                                </td>\n                                            ) : null}\n                                        </tr>\n                                    ))}\n                                </>\n                            ) : (\n                                <tr>\n                                    <td\n                                        colSpan={6}\n                                        style={{\n                                            textAlign: 'center',\n                                            fontFamily: 'Manrope',\n                                            fontWeight: '500',\n                                            fontSize: 14,\n                                            paddingTop: 20,\n                                            paddingBottom: 20,\n                                        }}\n                                    >\n                                        No data found\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n                {payrollTableData?.data?.length ? (\n                    <Pagination\n                        page={activePage && activePage}\n                        totalPages={payrollTableData?.last_page}\n                        setPage={(changedPage) => onPageChange(changedPage)}\n                    />\n                ) : null}\n            </div>\n            <EditRunPayroll\n                show={open}\n                handleClose={handleClose}\n                currentPayPeriod={currentPayPeriod}\n            />\n            <PayRollCommissionsTable\n                show={showCreateAppModal}\n                handleClose={handleCloseCommissions}\n                payrollMetaData={{...payrollMetaData, ...currentPayPeriod}}\n                report={true}\n            />\n            <PayrollAdjustments\n                show={showAdjustmentModal}\n                handleClose={handleCloseAdjustment}\n                payrollMetaData={{...payrollMetaData, ...currentPayPeriod}}\n                report={true}\n            />\n            <PayRollReimbursTable\n                show={showReimbursementsModal}\n                handleClose={handleReimbursement}\n                payrollMetaData={{...payrollMetaData, ...currentPayPeriod}}\n                report={true}\n            />\n            {showDeductionsModal ? (\n                <PayRollDeductionTable\n                    show={showDeductionsModal}\n                    handleClose={handleDeduction}\n                    payrollMetaData={{...payrollMetaData, ...currentPayPeriod}}\n                />\n            ) : null}\n            <PayRollOverridesTable\n                show={showOverridesModal}\n                handleClose={handleOverrides}\n                payrollMetaData={{...payrollMetaData, ...currentPayPeriod}}\n                report={true}\n            />\n        </>\n    )\n}\n\nexport {PayrollTabel}\n","import React, {useState, useEffect, useCallback, useMemo} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport {PayrollTabel} from './PayrollTabel'\nimport {\n    exportPayrollReportService,\n    getAdminPayrollReportService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport debounce from 'lodash.debounce'\nimport usePayFrequency from '../../../../../../hooks/usePayFrequency'\nimport {\n    downloadAnyFileHelper,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport ViewSummary from '../../../payroll/component/runpayroll/ViewSummary'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport CustomButton, {\n    BUTTON_SIZE,\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport moment from 'moment'\n\nexport default function RunPayroll() {\n    const [payrollData, setPayrollData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [page, setPage] = useState(1)\n    const [searchTerm, setSearchTerm] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [showSummary, setShowSummary] = useState(false)\n    const location = useLocation()\n    const navigate = useNavigate()\n\n    const {selectedWeekData, executedPayPeriodList, weekDropdownList} = usePayFrequency()\n\n    // useEffect(() => {\n    //     // if (location?.state) {\n    //     //     setSelectedPayPeriod(location?.state?.period)\n    //     // } else\n    //     setSelectedPayPeriod(executedPayPeriodList?.[0]?.id)\n    // }, [executedPayPeriodList, location, selectedWeekData])\n\n    useEffect(() => {\n        let startDate = location?.state?.payPeriod?.pay_period_from ?? null,\n            endDate = location?.state?.payPeriod?.pay_period_to ?? null\n        if (startDate && endDate) {\n            setLoading(true)\n            const body = {\n                start_date: getValidDate(startDate, 'YYYY-MM-DD'),\n                end_date: getValidDate(endDate, 'YYYY-MM-DD'),\n                search: searchTerm,\n                page: page,\n            }\n            getAdminPayrollReportService(body)\n                .then((res) => {\n                    setPayrollData(res.data)\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [page, searchTerm, location])\n    // useEffect(() => {\n    //     let startDate = executedCurrentPayPeriod?.pay_period_from ?? null,\n    //         endDate = executedCurrentPayPeriod?.pay_period_to ?? null\n    //     if (startDate && endDate) {\n    //         setLoading(true)\n    //         const body = {\n    //             start_date: getValidDate(startDate, 'YYYY-MM-DD'),\n    //             end_date: getValidDate(endDate, 'YYYY-MM-DD'),\n    //             search: searchTerm,\n    //             page: page,\n    //         }\n    //         getAdminPayrollReportService(body)\n    //             .then((res) => {\n    //                 setPayrollData(res.data)\n    //             })\n    //             .catch((e) => {\n    //                 CustomToast.error(getErrorMessageFromResponse(e))\n    //             })\n    //             .finally(() => {\n    //                 setLoading(false)\n    //             })\n    //     }\n    // }, [page, selectedPayPeriod, searchTerm, executedPayPeriodList])\n\n    const onPageChange = (selectedPage) => {\n        setPage(selectedPage)\n    }\n    // const periodChange = (e) => {\n    //     setPage(1)\n    //     setSelectedPayPeriod(e?.target?.value)\n    // }\n\n    const onSearchPayroll = (e) => {\n        setSearchVal(e.target.value)\n        delaySaveToDb(e.target.value)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setPage(1)\n            setSearchTerm(val)\n        }, 500),\n        []\n    )\n\n    const handleViewSummary = () => {\n        setShowSummary(!showSummary)\n    }\n\n    const periodList = useMemo(() => {\n        return executedPayPeriodList?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.pay_period_from)} to ${getValidDate(\n                item?.pay_period_to\n            )}`,\n        }))\n    }, [executedPayPeriodList])\n\n    const downloadCsvFile = useCallback(() => {\n        // let startDate = executedCurrentPayPeriod?.pay_period_from ?? null,\n        //     endDate = executedCurrentPayPeriod?.pay_period_to ?? null\n        let startDate = location?.state?.payPeriod?.pay_period_from ?? null,\n            endDate = location?.state?.payPeriod?.pay_period_to ?? null\n        setLoading(true)\n        const body = {\n            start_date: getValidDate(startDate, 'YYYY-MM-DD'),\n            end_date: getValidDate(endDate, 'YYYY-MM-DD'),\n            pay_frequency: weekDropdownList?.find(\n                (item) => selectedWeekData == item?.frequency_type_name\n            )?.frequency_type_id,\n        }\n        exportPayrollReportService(body)\n            .then((res) => {\n                const fileName = `Payroll Reports - ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [\n        location?.state?.payPeriod?.pay_period_from,\n        location?.state?.payPeriod?.pay_period_to,\n        selectedWeekData,\n        weekDropdownList,\n    ])\n\n    return (\n        <div>\n            <CustomLoader full visible={loading} />\n            <div className='engage-toolbar d-flex position-fixed px-5  zindex-2 top-50 end-0 transform-90 mt-20 gap-2'>\n                <button\n                    style={{border: '1px solid #6078EC', borderRadius: '12px'}}\n                    id='kt_engage_demos_toggle1'\n                    className='engage-demos-toggle btn btn-flex h-35px bg-body  shadow-sm fs-6 px-4 rounded-top-0'\n                    title={`Check out ${process.env.REACT_APP_THEME_NAME} more demos`}\n                    data-bs-placement='left'\n                    data-bs-dismiss='click'\n                    data-bs-trigger='hover'\n                >\n                    <span style={{color: '#6078EC'}} onClick={handleViewSummary}>\n                        View Summary\n                    </span>\n                </button>\n            </div>\n            <div\n                className='card mb-10 bg-cmwhite'\n                style={{\n                    borderRadius: '0 10px 10px 10px',\n                    boxShadow:\n                        'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                }}\n            >\n                <div\n                    className='p-5 d-flex flex-wrap align-items-center justify-content-between gap-5'\n                    style={{\n                        fontSize: '14px',\n                        fontFamily: 'Manrope',\n                    }}\n                >\n                    <div\n                        className='d-flex flex-center gap-3 text-cmGrey900'\n                        style={{fontWeight: 700, fontSize: 16}}\n                    >\n                        <KTSVG\n                            path='/media/icons/duotune/art/back-square.svg'\n                            svgClassName='w-30px h-30px cursor-pointer'\n                            onClick={() => navigate(-1)}\n                        />\n                        <div>\n                            {getValidDate(\n                                location?.state?.payPeriod?.pay_period_from,\n                                'MM/DD/YYYY'\n                            )}{' '}\n                            -{' '}\n                            {getValidDate(location?.state?.payPeriod?.pay_period_to, 'MM/DD/YYYY')}\n                        </div>\n                    </div>\n\n                    {/* small buttons */}\n\n                    <div>\n                        <CustomInput\n                            type={INPUT_TYPE.search}\n                            name='search'\n                            value={searchVal}\n                            onChange={onSearchPayroll}\n                        />\n                    </div>\n                    <div>\n                        <CustomButton\n                            buttonType={BUTTON_TYPE.disabled}\n                            buttonLabel='Export To CSV'\n                            onClick={downloadCsvFile}\n                        />\n                    </div>\n\n                    {/* <div>\n                    <CustomDropdown\n                        placeholder='Select Pay Frequency'\n                        searching={false}\n                        value={selectedWeekData}\n                        options={weekDropdownList}\n                        showClear={false}\n                        onChange={(e) => {\n                            setWeek(e.target.value)\n                            handleSelectedWeekData(e.target.value)\n                            setPayrollData([])\n                        }}\n                        valueKey='name'\n                    />\n                </div>\n\n                <div className=''>\n                    <CustomDropdown\n                        placeholder='Select Pay period'\n                        value={selectedPayPeriod}\n                        name='status'\n                        options={periodList}\n                        onChange={periodChange}\n                        valueKey={'id'}\n                        displayKey='period'\n                    />\n                </div> */}\n                </div>\n            </div>\n            <div>\n                <PayrollTabel\n                    className='mx-0 px-0 mt-8'\n                    payrollTableData={payrollData}\n                    onPageChange={(selectedPage) => onPageChange(selectedPage)}\n                    activePage={page}\n                    currentPayPeriod={location?.state?.payPeriod}\n                />\n            </div>\n            {/* <ViewSummary open={showSummary} close={handleViewSummary} /> */}\n            {showSummary ? (\n                <ViewSummary\n                    open={showSummary}\n                    close={handleViewSummary}\n                    periodList={periodList}\n                    selectedWeekData={selectedWeekData}\n                    currentPayPeriod={location?.state?.payPeriod}\n                    isReport={true}\n                />\n            ) : null}\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport clsx from 'clsx'\nimport Select from '../../Icon/select.png'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport moment from 'moment'\nexport default function Card({cardData}) {\n    return (\n        <>\n            {/* <div className='d-flex flex-row flex-wrap justify-content-between mt-10'> */}\n            <div className='row w-100 mx-auto gap-8 mt-10'>\n                <div style={{background: '#FFF4DE'}} className='shadow-sm pb-5 mb-4 rounded col-sm'>\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {cardData?.header?.clawback_count}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Clawback Accounts\n                    </div>\n                </div>\n\n                <div\n                    style={{background: '#E1D3FF'}}\n                    className='shadow-sm pb-5 mb-4  rounded col-sm'\n                >\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                $ {cardData?.header?.total_clawback}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Total Clawback\n                    </div>\n                </div>\n\n                <div\n                    style={{background: '#D7F9EF'}}\n                    className='shadow-sm pb-5 mb-4  rounded col-sm'\n                >\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {!cardData?.header?.most_clawback_closer?.user_name ||\n                                cardData.header.most_clawback_closer.user_name.length === 0\n                                    ? '-'\n                                    : cardData.header.most_clawback_closer.user_name}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Most Clawback - Closer\n                    </div>\n                </div>\n\n                <div style={{background: '#E1E9FF'}} className='shadow-m pb-5 mb-4  rounded col-sm'>\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {cardData?.header?.most_clawback_state?.name ?? '-'}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Most Clawback - State\n                    </div>\n                </div>\n\n                <div style={{background: '#FDDCEA'}} className='shadow-sm mb-4 rounded col-sm pb-5'>\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {cardData?.header?.most_clawback_installer?.install_partner ?? '-'}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Most Clawback - Installer\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState} from 'react'\nimport {FC} from 'react'\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\nimport clsx from 'clsx'\nimport Select from '../../Icon/select.png'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {Link} from 'react-router-dom'\nimport {TABLE_BORDER} from '../../../../../../helpers/CommonHelpers'\nimport {CustomSortSvg} from '../../../../../../_metronic/helpers/components/CustomSortSVG'\n\nconst CrawbackTabel = ({\n    className,\n    clawBackData,\n    onSearchChange,\n    loading,\n    activePage,\n    onPageChange,\n    onPress,\n    sortingOrder,\n    sortValue,\n}) => {\n    const [open, setOpen] = useState(false)\n    const [btn, setBtn] = useState(false)\n    const [search, setSearch] = useState('')\n\n    const handleSearchChange = (e) => {\n        setSearch(e.target.value)\n        onSearchChange(e.target.value)\n    }\n\n    return (\n        <>\n            <div className={`card shadow-nones mt-8 ${className}`}>\n                <CustomLoader full visible={loading} />\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='w-100 mt-4 ms-7 mb-3 d-flex flex-wrap justify-content-between'>\n                            <div\n                                className=' mb-2 d-flex flex-row mt-2'\n                                id='kt_chat_contacts_header'\n                            >\n                                <div\n                                    style={{borderRadius: '20px'}}\n                                    className='mb-1 me-sm-12'\n                                    id='kt_chat_contacts_header'\n                                >\n                                    <form\n                                        className='position-relative'\n                                        style={{background: '#F5F5F5', borderRadius: '90px'}}\n                                        autoComplete='off'\n                                    >\n                                        {/* Clawback Table Search Input */}\n                                        <CustomInput\n                                            type={INPUT_TYPE.search}\n                                            name='search'\n                                            onChange={handleSearchChange}\n                                            value={search}\n                                        />\n                                        {/* <KTSVG\n                                            path='/media/icons/duotune/general/gen021.svg'\n                                            className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                                        />\n\n                                        <input\n                                            style={{background: '#F5F5F5', borderRadius: '10px'}}\n                                            type='text'\n                                            className='form-control form-control-solid px-12 '\n                                            name='search'\n                                            placeholder='Search...'\n                                            onChange={handleSearchChange}\n                                            value={search}\n                                        /> */}\n                                    </form>\n                                </div>\n                            </div>\n                            {/* <div className='d-flex flex-row flex-wrap'>\n                <div className=' '>\n                  <a\n                    href=''\n                    className={clsx('btn btn-sm btn-flex fw-bold')}\n                    data-kt-menu-trigger='click'\n                    data-kt-menu-placement='bottom-end'\n                    style={{\n                      background: '#F5F5F5',\n                      color: '#757575',\n                      fontSize: '14px',\n                      fontFamily: 'Manrope',\n                      width: '99px',\n                      height: '43px',\n                    }}\n                  >\n                    <KTSVG\n                      path='/media/icons/duotune/general/gen031.svg'\n                      className='me-3 svg-icon-6 svg-icon-muted me-1'\n                    />\n                    Filter\n                  </a>\n                </div>\n\n                <div className='me-16'>\n                  <a className='ms-2'>\n                    <button\n                      style={{\n                        color: '#757575',\n                        fontSize: '14px',\n                        fontStyle: 'bold',\n                      }}\n                      className='btn btn-sm btn-icon mt-2 btn-bg-white btn-active-color-primary'\n                      data-kt-menu-trigger='click'\n                      data-kt-menu-placement='top-end'\n                      data-kt-menu-flip='bottom-end'\n                    >\n                      <i\n                        style={{marginTop: '-6px'}}\n                        className='bi ms-4 bi-three-dots-vertical  fs-3'\n                      ></i>\n                    </button>\n                  </a>\n                </div>\n              </div> */}\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='text-cmGrey900 bg-cmGrey300'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='w-auto p-5 text-nowrap'>Customer</th>\n                                    <th className='w-auto p-5 text-nowrap'> State</th>\n                                    <th className='w-auto p-5 text-nowrap'>Setter</th>\n                                    <th className='w-auto p-5 text-nowrap'>Closer</th>\n                                    <th\n                                        data-toggle='tooltip'\n                                        data-placement='left'\n                                        title='bonuses, advances, incentives                    '\n                                        className='w-auto p-5 text-nowrap'\n                                    >\n                                        <div className='d-flex flex-row'>\n                                            Clawback Date\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'clawback_date'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => onPress('clawback_date')}\n                                            />\n                                        </div>\n                                    </th>\n\n                                    <th className='w-auto p-6 text-nowrap'>\n                                        <div className='d-flex flex-row'>\n                                            Last Payment\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'last_payment'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => onPress('last_payment')}\n                                            />\n                                        </div>\n                                    </th>\n\n                                    <th\n                                        data-toggle='tooltip'\n                                        data-placement='left'\n                                        title='Amount of payment (M1 or M2)  that will be clawed back from rep'\n                                        className='w-auto py-5 text-nowrap'\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <div className='d-flex flex-row'>\n                                            Amount\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'amount' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('amount')}\n                                            />\n                                            <div className='align-item-center'>\n                                                <i\n                                                    className='bi bi-exclamation-circle ms-1'\n                                                    style={{\n                                                        color: '#616161',\n                                                        cursor: 'pointer',\n                                                    }}\n                                                ></i>\n                                            </div>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {clawBackData?.data?.length > 0 ? (\n                                    <>\n                                        {clawBackData?.data?.map((item, index) => (\n                                            <tr\n                                                key={index}\n                                                className={`text-cmGrey700 stripRow `}\n                                                style={{\n                                                    color: '#757575',\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                            >\n                                                <td className='p-5'>\n                                                    <Link\n                                                        style={{\n                                                            cursor: 'pointer',\n                                                            textDecoration: 'underline',\n                                                            fontWeight: 700,\n                                                        }}\n                                                        className='text-cmGrey800'\n                                                        // to='customer-Info'\n                                                        to={`/reports/sales/customer-Info?pid=${item?.pid}`}\n                                                        state={{pid: item?.pid}}\n                                                    >\n                                                        {item?.customer_name ?? '-'}\n                                                    </Link>\n                                                </td>\n                                                <td className='p-5'>\n                                                    {item?.customer_state ?? '-'}\n                                                </td>\n\n                                                <td\n                                                    className='p-5'\n                                                    style={{textDecoration: 'underline'}}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.setter_id}\n                                                    >\n                                                        {item?.setter ?? '-'}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n                                                <td\n                                                    className='p-5'\n                                                    style={{textDecoration: 'underline'}}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.closer_id}\n                                                    >\n                                                        {item?.closer ?? '-'}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n                                                <td className='p-5'>\n                                                    {getValidDate(item?.clawback_date)}\n                                                </td>\n                                                <td className='p-5'>\n                                                    {getValidDate(item?.last_payment ?? '-')}\n                                                </td>\n                                                <td\n                                                    className='p-5'\n                                                    style={{\n                                                        color: '#212121',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: 'bold',\n                                                    }}\n                                                >\n                                                    ${item?.amount ?? '0'}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr key='no-data'>\n                                        <td\n                                            colSpan={11}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                        {clawBackData?.data?.length > 0 ? (\n                            <Pagination\n                                page={activePage && activePage}\n                                totalPages={clawBackData?.last_page}\n                                setPage={(changedPage) => onPageChange(changedPage)}\n                            />\n                        ) : null}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default CrawbackTabel\n","import React, {useState, useEffect, useMemo, useCallback} from 'react'\nimport debounce from 'lodash.debounce'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport moment from 'moment'\nimport Card from './Card'\nimport CrawbackTabel from './CrawbackTabel'\nimport {\n    exportAdminClawBackReportService,\n    getAdminClawBackReportService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CommanTopbarforReports from '../company/CommanTopbarforReports'\nimport useOfficeLocation from '../../../../../../hooks/useOfficeLocation'\nimport {\n    downloadAnyFileHelper,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\n\nexport default function Clawback() {\n    const [clawBack, setClawBackData] = useState()\n    const [loading, setLoading] = useState(true)\n    const [officeList, selectedLocation, setSelectedLocation] = useOfficeLocation()\n    const [filter, setFilter] = useState('this_year')\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [tableLoading, setTableLoading] = useState(false)\n    const [page, setPage] = useState(1)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        const body = {\n            filter: filter,\n            search: searchTerm,\n            office_id: selectedLocation,\n            page: page,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        }\n        if (filter == 'custom' && moment(startDate).isValid() && moment(endDate).isValid()) {\n            body.start_date = moment(startDate).format('MM-DD-YYYY')\n            body.end_date = moment(endDate).format('MM-DD-YYYY')\n        }\n\n        if (\n            selectedLocation &&\n            (filter != 'custom' ||\n                (filter == 'custom' &&\n                    moment(startDate).isValid() &&\n                    moment(endDate).isValid() &&\n                    startDate <= endDate))\n        ) {\n            setLoading(true)\n            getAdminClawBackReportService(body)\n                .then((res) => {\n                    setClawBackData(res)\n                })\n                .catch(() => {})\n                .finally(() => {\n                    setLoading(false)\n                    setTableLoading(false)\n                })\n        }\n    }, [selectedLocation, sortValue, sortingOrder, endDate, filter, startDate, searchTerm, page])\n\n    const handleLocationChange = (e) => {\n        delaySaveToDb(e)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setTableLoading(true)\n            setPage(1)\n            setSearchTerm(val)\n        }, 500),\n        []\n    )\n\n    const changeFilter = (val) => {\n        setPage(1)\n        setLoading(val != 'custom')\n        if (val != 'custom') {\n            if (startDate) setStartDate(null)\n            if (endDate) setEndDate(null)\n        }\n        setFilter(val)\n    }\n    const onLocationChange = (loc) => {\n        setPage(1)\n        setLoading(true)\n        setSelectedLocation(loc)\n    }\n    const changeStartDate = (start) => {\n        setStartDate(moment(start).format('YYYY-MM-DD'))\n    }\n    const changeEndDate = (end) => {\n        setEndDate(moment(end).format('YYYY-MM-DD'))\n    }\n    const onPageChange = (selectedPage) => {\n        setPage(selectedPage)\n    }\n\n    const onExportClawbackData = useCallback(() => {\n        setLoading(true)\n        const body = {\n            office_id: selectedLocation,\n            filter: filter,\n        }\n        exportAdminClawBackReportService(body)\n            .then((res) => {\n                const fileName = `Clawback Reports - ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((err) => {\n                CustomToast.success(getErrorMessageFromResponse(err))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [selectedLocation, filter])\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <CommanTopbarforReports\n                officeList={officeList}\n                onChangeFilter={(loc) => {\n                    changeFilter(loc)\n                }}\n                filter={filter}\n                onLocationChange={(loc) => onLocationChange(loc)}\n                onStartDateChange={(start) => changeStartDate(start)}\n                onEndDateChange={(end) => changeEndDate(end)}\n                selectedLocation={selectedLocation}\n                handleExport={onExportClawbackData}\n            />\n            <Card cardData={clawBack} />\n            <CrawbackTabel\n                clawBackData={clawBack?.data}\n                onSearchChange={(text) => handleLocationChange(text)}\n                loading={tableLoading}\n                onPageChange={(selectedPage) => onPageChange(selectedPage)}\n                activePage={page}\n                onPress={(item) => {\n                    setSortValue(item)\n                    setSortingOrder(\n                        sortValue !== item ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                    )\n                    setPage(1)\n                }}\n                sortingOrder={sortingOrder}\n                sortValue={sortValue}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport default function Card({CardData}) {\n    return (\n        <>\n            <div className='row w-100 mx-auto gap-8 mt-10'>\n                <div\n                    style={{background: '#FFF4DE'}}\n                    className='shadow-sm pb-5 col-sm mb-4  rounded'\n                >\n                    <div className='ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {CardData?.pending_count ?? '0'}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Pending Accounts\n                    </div>\n                </div>\n\n                <div\n                    style={{background: '#E1D3FF'}}\n                    className='shadow-sm pb-5 col-sm mb-4  rounded'\n                >\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {CardData?.total_pending ?? '0'}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Total KW Pending\n                    </div>\n                </div>\n\n                <div\n                    style={{background: '#D7F9EF'}}\n                    className='shadow-sm pb-5 col-sm mb-4  rounded'\n                >\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {CardData?.most_pending_closer?.closer_name ?? '-'}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Closer with most pending\n                    </div>\n                </div>\n\n                <div\n                    style={{background: '#E1E9FF'}}\n                    className='shadow-sm pb-5 col-sm mb-4  rounded'\n                >\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {CardData?.most_pending_office?.office_name ?? '-'}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        State with most pending\n                    </div>\n                </div>\n\n                <div\n                    style={{background: '#FDDCEA'}}\n                    className='shadow-sm pb-5 col-sm mb-4  rounded'\n                >\n                    <div className='avg ms-7'>\n                        <div className='d-flex'>\n                            <div\n                                className='mt-7'\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: 'bold',\n                                    fontSize: '20px',\n                                    color: '#212121',\n                                }}\n                            >\n                                {CardData?.most_pending_installer?.install_partner ?? '-'}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            color: '#424242',\n                            fontFamily: 'Manrope',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                        }}\n                        className='mt-1 ms-7'\n                    >\n                        Installer with most pending\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import {useCallback, useMemo} from 'react'\nimport CustomFilterButton from '../../../../customComponents/customFilterButton/CustomFilterButton'\nimport useFilterButton from '../../../../hooks/useFilterButton'\nimport CustomDropdown from '../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {PENDING_INSTALL_FILTER} from '../../../../constants/constants'\nimport {useSelector} from 'react-redux'\nimport {\n    getAllClosersSelector,\n    getAllSettersSelector,\n} from '../../../../redux/selectors/SettingsSelectors'\n\nconst FILTER_KEYS = {\n    filter_install: 'filter_install',\n    filter_closer_setter: 'filter_closer_setter',\n    filter_age_of_account: 'filter_age_of_account',\n    filter_show_only_account: 'filter_show_only_account',\n}\n\nconst PendingInstallFilter = ({initialFilter = null, onApplyFilter = null, resetFilter = null}) => {\n    const [filterProps, filterData, setFilterData] = useFilterButton(initialFilter, onApplyFilter)\n    const closerList = useSelector(getAllClosersSelector)\n    const setterList = useSelector(getAllSettersSelector)\n\n    const closerSetterList = useMemo(() => {\n        let closerSetterArr = [...closerList, ...setterList]\n        return closerSetterArr\n    }, [closerList, setterList])\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            setFilterData((val) => ({\n                ...val,\n                [e?.target?.name]: e?.target?.value,\n            }))\n        },\n        [setFilterData]\n    )\n\n    const resetFilterData = useCallback(() => {\n        setFilterData(initialFilter)\n        resetFilter()\n    }, [initialFilter, resetFilter, setFilterData])\n\n    return (\n        <CustomFilterButton {...filterProps} onResetClick={resetFilterData} filterData={filterData}>\n            <div className='mb-5'>\n                <CustomDropdown\n                    label={'Installer'}\n                    options={[{name: 'LGYC', value: 'LGYC'}]}\n                    name={FILTER_KEYS.filter_install}\n                    value={filterData?.[FILTER_KEYS.filter_install]}\n                    onChange={onChangeInputData}\n                />\n            </div>\n            <div className='mb-5'>\n                <CustomDropdown\n                    label='Closer or Setter'\n                    options={closerSetterList}\n                    name={FILTER_KEYS.filter_closer_setter}\n                    value={filterData?.[FILTER_KEYS.filter_closer_setter]}\n                    onChange={onChangeInputData}\n                    valueKey='id'\n                />\n            </div>\n            <div className='mb-5'>\n                <CustomDropdown\n                    label='Age of Accounts'\n                    options={PENDING_INSTALL_FILTER.ageOfAccounts}\n                    name={FILTER_KEYS.filter_age_of_account}\n                    value={filterData?.[FILTER_KEYS.filter_age_of_account]}\n                    onChange={onChangeInputData}\n                    // valueKey='name'\n                />\n            </div>{' '}\n            <div className=''>\n                <CustomDropdown\n                    label='Show Only Accounts'\n                    options={PENDING_INSTALL_FILTER.showOnlyAccounts}\n                    name={FILTER_KEYS.filter_show_only_account}\n                    value={filterData?.[FILTER_KEYS.filter_show_only_account]}\n                    onChange={onChangeInputData}\n                    // valueKey='name'\n                />\n            </div>\n        </CustomFilterButton>\n    )\n}\n\nexport default PendingInstallFilter\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useState} from 'react'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport Pagination from '../../../../../../app/modules/admin/sequidocs/component/Pagination'\nimport {TABLE_BORDER, formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport PendingInstallFilter from '../../../filters/PendingInstallFilter'\nimport { CustomSortSvg } from '../../../../../../_metronic/helpers/components/CustomSortSVG'\n\nconst initialFilter = {\n    filter_install: '',\n    filter_closer_setter: '',\n    filter_age_of_account: '',\n    filter_show_only_account: '',\n}\n\nconst CrawbackTabel = ({\n    className,\n    reportData,\n    onSearchChange,\n    loading,\n    onPageChange,\n    activePage,\n    handleFilterApply,\n    searchVal,\n    onPress,\n    sortingOrder,\n    sortValue,\n}) => {\n    const [search, setSearch] = useState('')\n\n    const handleSearchChange = (e) => {\n        setSearch(e.target.value)\n        onSearchChange(e.target.value)\n    }\n    const onApplyFilter = (filters) => {\n        setSearch(null)\n        handleFilterApply(filters)\n    }\n    const onResetFilter = (filters) => {\n        setSearch(null)\n        handleFilterApply(null)\n    }\n\n    return (\n        <>\n            <div className={`mt-6 ${className}`} style={{borderRadius: 10}}>\n                <CustomLoader full visible={loading} />\n                <div className='shadow-sm py-0 px-0 mx-0'>\n                    <div\n                        className='bg-cmwhite h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope', borderRadius: 10}}\n                    >\n                        <div className='p-5 d-flex flex-wrap justify-content-between'>\n                            <div\n                                className=' mb-2 d-flex flex-row mt-2'\n                                id='kt_chat_contacts_header'\n                            >\n                                <div\n                                    style={{borderRadius: '20px'}}\n                                    className='mb-1 me-sm-12 mx-auto'\n                                    id='kt_chat_contacts_header'\n                                >\n                                    <form\n                                        className='position-relative'\n                                        style={{background: '#F5F5F5', borderRadius: '90px'}}\n                                        autoComplete='off'\n                                    >\n                                        {/* Pending Installs Table Search Input */}\n                                        <CustomInput\n                                            type={INPUT_TYPE.search}\n                                            onChange={handleSearchChange}\n                                            value={searchVal}\n                                        />\n                                    </form>\n                                </div>\n                            </div>\n                            <PendingInstallFilter\n                                initialFilter={initialFilter}\n                                onApplyFilter={(updatedFilter) => onApplyFilter(updatedFilter)}\n                                resetFilter={onResetFilter}\n                            />\n                        </div>\n                    </div>\n                    <div className='table-responsive'>\n                        <table className='table' style={{tableLayout: 'fixed', width: '100%'}}>\n                            <thead className={TABLE_BORDER}>\n                                <tr\n                                    className='text-cmGrey900 bg-cmGrey300'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '700',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='text-nowrap p-5'>PID</th>\n                                    <th className='text-nowrap p-5'>Customer</th>\n                                    <th className='text-nowrap p-5'> Closer</th>\n                                    <th className='text-nowrap p-5'>Installer</th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            KW\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'kw' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('kw')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>M1</th>\n                                    {/* <th className='text-nowrap p-5'>Status</th> */}\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Gross acc. value\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'gross_account_value'\n                                                        ? sortingOrder\n                                                        : null\n                                                }\n                                                onClick={() => onPress('gross_account_value')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            EPC\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'epc' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('epc')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Net EPC\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'net_epc' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('net_epc')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'> Dealer Fee % | $</th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Total $\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'amount' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('amount')}\n                                            />\n                                        </div>\n                                    </th>\n                                    <th className='text-nowrap p-5'>\n                                        <div className='d-flex'>\n                                            Age<label style={{color: 'gray'}}>(days)</label>\n                                            <CustomSortSvg\n                                                sortingOrder={\n                                                    sortValue === 'age_days' ? sortingOrder : null\n                                                }\n                                                onClick={() => onPress('age_days')}\n                                            />\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className={TABLE_BORDER}>\n                                {reportData?.data?.length > 0 ? (\n                                    <>\n                                        {reportData?.data?.map((item, i) => (\n                                            <tr\n                                                className={`text-cmGrey700 stripRow `}\n                                                style={{\n                                                    color: '#757575',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                }}\n                                                key={i}\n                                            >\n                                                <td width={'100px'} className='p-5 '>\n                                                    {item?.pid ?? '-'}\n                                                </td>\n                                                <td className='p-5' width={'150px'}>\n                                                    {item?.customer_name ?? '-'}\n                                                </td>\n\n                                                <td\n                                                    className='p-5'\n                                                    width={'100px'}\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        color: '#424242',\n                                                        fontFamily: 'Manrope',\n                                                    }}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.closer_id}\n                                                    >\n                                                        {item?.closer ?? '-'}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n\n                                                <td\n                                                    className='p-5'\n                                                    width={'100px'}\n                                                    style={{color: '#616161'}}\n                                                >\n                                                    {item?.install_partner ?? '-'}\n                                                </td>\n\n                                                <td className='p-5' width={'100px'}>\n                                                    {formattedNumberFields(item?.kw, '')}{' '}\n                                                </td>\n\n                                                <td className='p-5' width={'120px'}>\n                                                    {getValidDate(item?.m1_date, 'MM/DD/YYYY') ??\n                                                        '-'}\n                                                </td>\n\n                                                {/* Gary sir told that for hide */}\n\n                                                {/* <td className='p-5'>\n                                                    <button\n                                                        style={{\n                                                            width: '82px',\n                                                            fontSize: '14px',\n                                                            height: '32px',\n                                                            background: 'rgba(96, 120, 236, 0.1)',\n                                                            border: 'none',\n                                                            borderRadius: '6px',\n                                                            fontFamily: 'Manrope',\n                                                            color: '#6078EC',\n                                                        }}\n                                                    >\n                                                        {item?.m2_status}\n                                                    </button>\n                                                </td> */}\n\n                                                <td className='p-5' width={'150px'}>\n                                                    ${item?.gross_account_value ?? '0'}\n                                                </td>\n                                                <td className='p-5 ' width={'100px'}>\n                                                    {formattedNumberFields(item?.epc, '')}\n                                                </td>\n                                                <td className='p-5' width={'100px'}>\n                                                    {formattedNumberFields(item?.net_epc, '')}\n                                                </td>\n                                                <td className='p-5' width={'1750px'}>\n                                                    {`${(item?.dealer_fee_percentage * 100).toFixed(\n                                                        2\n                                                    )}%` ?? '0'}\n                                                    <b> | </b>\n                                                    {formattedNumberFields(\n                                                        item?.dealer_fee_amount,\n                                                        '$'\n                                                    )}\n                                                </td>\n                                                <td\n                                                    width={'120px'}\n                                                    className='p-5'\n                                                    style={{\n                                                        color: '#212121',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: 'bold',\n                                                    }}\n                                                >\n                                                    ${item?.amount ?? '0'}\n                                                </td>\n                                                <td className='p-5' width={'120px'}>\n                                                    {item?.age_days}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr>\n                                        <td\n                                            colSpan={11}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                    {reportData?.data?.length > 0 ? (\n                        <Pagination\n                            page={activePage && activePage}\n                            totalPages={reportData?.last_page}\n                            setPage={(changedPage) => onPageChange(changedPage)}\n                        />\n                    ) : null}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default CrawbackTabel\n","import {useState, useEffect, useCallback} from 'react'\nimport debounce from 'lodash.debounce'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport moment from 'moment'\nimport Card from './Card'\nimport PendingTabel from './PendingTabel'\nimport {\n    exportAdminPendingInstallReportService,\n    getAdminPendingInsatllReportService,\n} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CommanTopbarforReports from '../company/CommanTopbarforReports'\nimport useOfficeLocation from '../../../../../../hooks/useOfficeLocation'\nimport {\n    downloadAnyFileHelper,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\n\nexport default function Pending() {\n    const [officeList, selectedLocation, setSelectedLocation] = useOfficeLocation()\n    const [loading, setLoading] = useState(true)\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n    const [filter, setFilter] = useState('this_year')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [tableLoading, setTableLoading] = useState(false)\n    const [page, setPage] = useState(1)\n    const [reportData, setReportData] = useState(null)\n    const [tablefilter, setTableFilter] = useState(null)\n    const [sortValue, setSortValue] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n\n    useEffect(() => {\n        const body = {\n            filter: filter,\n            search: searchTerm,\n            office_id: selectedLocation,\n            page: page,\n            ...tablefilter,\n            sort: sortValue,\n            sort_val: sortingOrder,\n        }\n        if (filter == 'custom' && moment(startDate).isValid() && moment(endDate).isValid()) {\n            body.start_date = moment(startDate).format('yyyy-MM-DD')\n            body.end_date = moment(endDate).format('yyyy-MM-DD')\n        }\n\n        if (\n            selectedLocation &&\n            (filter != 'custom' ||\n                (filter == 'custom' &&\n                    moment(startDate).isValid() &&\n                    moment(endDate).isValid() &&\n                    startDate <= endDate))\n        ) {\n            setTableLoading(true)\n            setLoading(true)\n            getAdminPendingInsatllReportService(body)\n                .then((res) => {\n                    setReportData(res)\n                })\n                .catch(() => {})\n                .finally(() => {\n                    setLoading(false)\n                    setTableLoading(false)\n                })\n        }\n    }, [selectedLocation, sortValue, sortingOrder, endDate, filter, startDate, searchTerm, tablefilter, page])\n\n    const handleSearchChange = (e) => {\n        setSearchVal(e)\n        delaySaveToDb(e)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setTableLoading(true)\n            setSearchTerm(val)\n            setPage(1)\n        }, 500),\n        []\n    )\n    const onPageChange = (selectedPage) => {\n        setPage(selectedPage)\n    }\n\n    const changeFilter = (val) => {\n        setPage(1)\n        setLoading(val != 'custom')\n        if (val != 'custom') {\n            if (startDate) setStartDate(null)\n            if (endDate) setEndDate(null)\n        }\n        setFilter(val)\n    }\n    const onLocationChange = (loc) => {\n        setPage(1)\n        setLoading(true)\n        setSelectedLocation(loc)\n    }\n    const changeStartDate = (start) => {\n        setStartDate(moment(start).format('YYYY-MM-DD'))\n    }\n    const changeEndDate = (end) => {\n        setEndDate(moment(end).format('YYYY-MM-DD'))\n    }\n\n    const onExportPendingData = useCallback(() => {\n        setLoading(true)\n        const body = {\n            office_id: selectedLocation,\n            filter: filter,\n        }\n        exportAdminPendingInstallReportService(body)\n            .then((res) => {\n                const fileName = `Pending Insatll Report- ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((err) => {\n                CustomToast.success(getErrorMessageFromResponse(err))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [selectedLocation, filter])\n\n    const handleFilterApply = (filter) => {\n        setPage(1)\n        setSearchTerm('')\n        setSearchVal('')\n        setTableFilter(filter)\n    }\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <CommanTopbarforReports\n                officeList={officeList}\n                onChangeFilter={(loc) => {\n                    changeFilter(loc)\n                }}\n                filter={filter}\n                selectedLocation={selectedLocation}\n                onLocationChange={(loc) => onLocationChange(loc)}\n                onStartDateChange={(start) => changeStartDate(start)}\n                onEndDateChange={(end) => changeEndDate(end)}\n                handleExport={onExportPendingData}\n            />\n            <Card CardData={reportData?.header} />\n            <PendingTabel\n                reportData={reportData?.data}\n                onSearchChange={(text) => handleSearchChange(text)}\n                loading={tableLoading}\n                onPageChange={(selectedPage) => onPageChange(selectedPage)}\n                activePage={page}\n                handleFilterApply={handleFilterApply}\n                searchVal={searchVal}\n                sortValue={sortValue}\n                sortingOrder={sortingOrder}\n                onPress={(item) => {\n                    setSortValue(item)\n                    setSortingOrder(\n                        sortValue !== item ? 'asc' : sortingOrder === 'asc' ? 'desc' : 'asc'\n                    )\n                    setPage(1)\n                }}\n            />\n        </div>\n    )\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState} from 'react'\nimport {FC} from 'react'\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\nimport clsx from 'clsx'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport Select from '../../Icon/select.png'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport RedirectToEmployeeProfile from '../../../../../../customComponents/redirectToEmployeeProfile/RedirectToEmployeeProfile'\nimport CustomImage from '../../../../../../customComponents/customImage/CustomImage'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {formattedNumberFields} from '../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport {ReconAdjustmentTable} from '../../../payroll/component/reconciliation/ReconAdjustmentTable'\nimport {ReconClawbackTable} from '../../../payroll/component/reconciliation/ReconClawbackTable'\nimport {ReconCommissionTable} from '../../../payroll/component/reconciliation/ReconCommissionTable '\nimport {ReconOverridesTable} from '../../../payroll/component/reconciliation/ReconOverridesTable'\n\nconst ReconciliationTabel = ({className, reconcilliationData, loading, onSearchChange}) => {\n    const [open, setOpen] = useState(false)\n    const [btn, setBtn] = useState(false)\n    const [search, setSearch] = useState('')\n    const [userData, setUserData] = useState(null)\n    const [showOverridesModal, setShowOverridesModal] = useState(false)\n    const [showCommissionModal, setShowCommissionModal] = useState(false)\n    const [showClawbackModal, setShowClawbackModal] = useState(false)\n    const [showAdjustmentModal, setShowAdjustmentModal] = useState(false)\n\n    const handleSearchChange = (e) => {\n        setSearch(e.target.value)\n        onSearchChange(e.target.value)\n    }\n    const openClawbackModal = (item) => {\n        setShowClawbackModal(true)\n        setUserData(item)\n    }\n    const openAdjustmentModal = (item) => {\n        setShowAdjustmentModal(true)\n        setUserData(item)\n    }\n    const openOverrideModal = (item) => {\n        setShowOverridesModal(true)\n        setUserData(item)\n    }\n\n    const openCommissionModal = (item) => {\n        setShowCommissionModal(true)\n        setUserData(item)\n    }\n    return (\n        <div key='reconcilation-table'>\n            <CustomLoader full visible={loading} />\n\n            <div className={`card shadow-nones mt-10 ${className}`}>\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='w-100 mt-4 mb-4 d-flex flex-wrap justify-content-between '>\n                            <div className='mt-2 mb-2 w-425px mx-4 ' style={{placeSelf: 'center'}}>\n                                <label\n                                    className='text-cmGrey700'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '16px',\n                                        color: '#424242',\n                                        fontWeight: 600,\n                                    }}\n                                >\n                                    Total Reconciliation:\n                                </label>\n                                <label\n                                    className='ms-4'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontWeight: 'bold',\n                                        color: '#212121',\n                                        fontSize: '16px',\n                                    }}\n                                >\n                                    {formattedNumberFields(\n                                        reconcilliationData?.total_reconciliation,\n                                        '$'\n                                    )}\n                                </label>\n                            </div>\n                            <div>\n                                <div\n                                    // style={{height: '43px', borderRadius: '20px'}}\n                                    className='w-md-300px mx-4 mb-1'\n                                >\n                                    <form\n                                        className='position-relative'\n                                        // style={{background: '#F5F5F5', borderRadius: '90px'}}\n                                        autoComplete='off'\n                                    >\n                                        {/* Reconcilation Table Search Input */}\n                                        <CustomInput\n                                            type={INPUT_TYPE.search}\n                                            name='search'\n                                            onChange={handleSearchChange}\n                                            value={search}\n                                        />\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className='bg-cmGrey300 text-cmGrey800'\n                                    style={{\n                                        fontSize: '14px',\n                                        fontWeight: '600',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='min-w-200px p-6 text-nowrap'>Employee Name</th>\n                                    <th className='min-w-150px p-6 text-nowrap'>\n                                        Commission Withheld\n                                    </th>\n                                    <th className='min-w-150px p-6 text-nowrap'>Override Due</th>\n                                    <th className='p-6 text-nowrap'>Clawbacks</th>\n                                    <th className='p-6 text-nowrap'>Total Adjustments</th>\n                                    <th className='min-w-100px p-6 text-nowrap'>Total Due</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {reconcilliationData?.result?.data?.length > 0 ? (\n                                    <>\n                                        {reconcilliationData?.result?.data?.map((item, i) => (\n                                            <tr\n                                                key={i}\n                                                className='text-cmGrey600 '\n                                                style={{\n                                                    height: '40px',\n                                                    fontSize: '14px',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                <td\n                                                    className='p-3 text-cmGrey800'\n                                                    style={{\n                                                        textDecoration: 'underline',\n                                                        fontFamily: 'Manrope',\n                                                        fontWeight: '700',\n                                                    }}\n                                                >\n                                                    <RedirectToEmployeeProfile\n                                                        employeeId={item?.user_id}\n                                                    >\n                                                        <CustomImage\n                                                            src={item?.emp_img}\n                                                            className='avatar me-3'\n                                                        />{' '}\n                                                        {item?.emp_name ?? '-'}\n                                                    </RedirectToEmployeeProfile>\n                                                </td>\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openCommissionModal(item)}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.commissionWithholding,\n                                                        '$'\n                                                    )}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openOverrideModal(item)}\n                                                >\n                                                    {formattedNumberFields(item?.overrideDue, '$')}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openClawbackModal(item)}\n                                                >\n                                                    {formattedNumberFields(item?.clawbackDue, '$')}\n                                                </td>\n\n                                                <td\n                                                    className='p-5 text-decoration-underline cursor-pointer'\n                                                    onClick={() => openAdjustmentModal(item)}\n                                                >\n                                                    {formattedNumberFields(\n                                                        item?.totalAdjustments,\n                                                        '$'\n                                                    )}\n                                                </td>\n                                                <td\n                                                    className='p-5 text-cmGrey900'\n                                                    style={{fontWeight: 700}}\n                                                >\n                                                    {formattedNumberFields(item?.total_due, '$')}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </>\n                                ) : (\n                                    <tr key='no-data'>\n                                        <td\n                                            colSpan={11}\n                                            style={{\n                                                textAlign: 'center',\n                                                fontFamily: 'Manrope',\n                                                fontWeight: '500',\n                                                fontSize: 14,\n                                                paddingTop: 20,\n                                                paddingBottom: 20,\n                                            }}\n                                        >\n                                            No data found\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            {showOverridesModal ? (\n                <ReconOverridesTable\n                    show={showOverridesModal}\n                    handleClose={() => setShowOverridesModal(false)}\n                    userData={userData}\n                />\n            ) : null}\n            {showCommissionModal ? (\n                <ReconCommissionTable\n                    show={showCommissionModal}\n                    handleClose={() => setShowCommissionModal(false)}\n                    userData={userData}\n                />\n            ) : null}\n            {showClawbackModal ? (\n                <ReconClawbackTable\n                    show={showClawbackModal}\n                    handleClose={() => setShowClawbackModal(false)}\n                    userData={userData}\n                />\n            ) : null}\n            {showAdjustmentModal ? (\n                <ReconAdjustmentTable\n                    show={showAdjustmentModal}\n                    handleClose={() => setShowAdjustmentModal(false)}\n                    userData={userData}\n                />\n            ) : null}\n        </div>\n    )\n}\n\nexport default ReconciliationTabel\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState} from 'react'\nimport {FC} from 'react'\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\nimport clsx from 'clsx'\nimport {KTSVG} from '../../../../../../_metronic/helpers'\nimport Select from '../../Icon/select.png'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\n\nconst FiscalYearTabel = ({className}) => {\n    const [open, setOpen] = useState(false)\n    const [btn, setBtn] = useState(false)\n    const handleClose = () => {\n        setOpen(false)\n    }\n    return (\n        <>\n            <div className={`card shadow-nones mt-10 ${className}`}>\n                <div className='card-body shadow-none py-0 px-0 mx-0'>\n                    <div\n                        className='card bg-white h-auto'\n                        style={{fontSize: '14px', fontFamily: 'Manrope'}}\n                    >\n                        <div className='w-100 mt-6 ms-8 mb-5 d-flex flex-wrap '>\n                            <div className='mt-2 w-425px'>\n                                <label\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '16px',\n                                        color: '#424242',\n                                    }}\n                                >\n                                    Total Reconciliation:\n                                </label>\n                                <label\n                                    className='ms-4'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontWeight: 'bold',\n                                        color: '#212121',\n                                        fontSize: '16px',\n                                    }}\n                                >\n                                    $10,467.00\n                                </label>\n                            </div>\n                            <div className='ms-sm-20'>\n                                <div\n                                    style={{\n                                        background: '#F5F5F5',\n                                        height: '43px',\n                                        borderRadius: '20px',\n                                    }}\n                                    className='w-md-350px mb-1'\n                                    id='kt_chat_contacts_header'\n                                >\n                                    <form\n                                        className='position-relative'\n                                        style={{background: '#F5F5F5', borderRadius: '90px'}}\n                                        autoComplete='off'\n                                    >\n                                        <CustomInput type={INPUT_TYPE.search} name='search' />\n                                        {/* <KTSVG\n                                            path='/media/icons/duotune/general/gen021.svg'\n                                            className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-3 translate-middle-y'\n                                        />\n\n                                        <input\n                                            style={{background: '#F5F5F5', borderRadius: '10px'}}\n                                            type='text'\n                                            className='form-control form-control-solid px-12 '\n                                            name='search'\n                                            placeholder='Search...'\n                                        /> */}\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='table-responsive shadow-none overflow-auto'>\n                        <table className='table'>\n                            <thead>\n                                <tr\n                                    className=' '\n                                    style={{\n                                        background: '#E0E0E0',\n                                        color: '#424242',\n                                        fontSize: '12px',\n                                        fontWeight: 'bold',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <th className='min-w-200px p-6'>Name</th>\n                                    <th className='min-w-150px p-6'>Location</th>\n                                    <th className='min-w-150px text-nowrap'>\n                                        Recon 1\n                                        <th\n                                            className='text-nowrap'\n                                            style={{color: '#616161', fontSize: '10px'}}\n                                        >\n                                            (11/01/2022)\n                                        </th>\n                                    </th>\n                                    <th className='min-w-150px text-nowrap'>\n                                        Recon 2\n                                        <th\n                                            className='text-nowrap'\n                                            style={{color: '#616161', fontSize: '10px'}}\n                                        >\n                                            (11/01/2022)\n                                        </th>\n                                    </th>\n                                    <th className='min-w-150px text-nowrap'>\n                                        Recon 3\n                                        <th\n                                            className='text-nowrap'\n                                            style={{color: '#616161', fontSize: '10px'}}\n                                        >\n                                            (11/01/2022)\n                                        </th>\n                                    </th>\n                                    <th className='min-w-150px text-nowrap'>\n                                        Recon 4\n                                        <th\n                                            className='text-nowrap'\n                                            style={{color: '#616161', fontSize: '10px'}}\n                                        >\n                                            (11/01/2022)\n                                        </th>\n                                    </th>\n                                    <th className='min-w-175px p-6'>Total</th>\n\n                                    <th></th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr\n                                    className=' '\n                                    style={{\n                                        color: '#757575',\n                                        height: '40px',\n                                        fontSize: '14px',\n                                        fontFamily: 'Manrope',\n                                    }}\n                                >\n                                    <td\n                                        className='p-3'\n                                        style={{\n                                            textDecoration: 'underline',\n                                            color: '#424242',\n                                            fontFamily: 'Manrope',\n                                            fontWeight: 'bold',\n                                        }}\n                                    >\n                                        <img\n                                            src={toAbsoluteUrl('/media/avatars/300-1.jpg')}\n                                            className='avatar me-3'\n                                        />{' '}\n                                        Annette Black\n                                    </td>\n                                    <td className='p-5'>$162,522</td>\n                                    <td className='p-5'>$118,878</td>\n                                    <td className='p-5'>$22,157</td>\n                                    <td className='p-5'>$22,157</td>\n                                    <td className='p-5'>$22,157</td>\n                                    <td\n                                        className='p-5'\n                                        style={{color: '#212121', fontFamily: 'Manrope'}}\n                                    >\n                                        $22,157\n                                    </td>\n\n                                    <td></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default FiscalYearTabel\n","import {useState, useEffect, useCallback, useMemo} from 'react'\nimport debounce from 'lodash.debounce'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport moment from 'moment'\nimport ReconciliationTabel from './ReconciliationTabel'\nimport FiscalYearTabel from './FiscalYearTabel'\nimport {getReconciliationReportService} from '../../../../../../services/Services'\nimport {useSelector} from 'react-redux'\nimport {getReconciliationScheduleSelector} from '../../../../../../redux/selectors/SettingsSelectors'\nimport useOfficeLocation from '../../../../../../hooks/useOfficeLocation'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {getValidDate} from '../../../../../../constants/constants'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\nimport {\n    downloadAnyFileHelper,\n    getErrorMessageFromResponse,\n} from '../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\n\nexport default function Reconciliation() {\n    const [loading, setLoading] = useState(false)\n    const [reconcilliationData, setReconcilliationData] = useState()\n    const [stateList, selectedLocation, setSelectedLocation] = useOfficeLocation()\n    const [searchTerm, setSearchTerm] = useState('')\n    const reconciliationSchedule = useSelector(getReconciliationScheduleSelector)\n    const [selectedReconPeriod, setReconPeriod] = useState(reconciliationSchedule?.[0])\n    const [activePage, setActivePage] = useState(1)\n\n    const [btn, setBtn] = useState(false)\n\n    useEffect(() => {\n        if (selectedLocation) {\n            setLoading(true)\n            const body = {\n                // filter: 'this_year',\n                office_id: selectedLocation,\n                search: searchTerm,\n                start_date: selectedReconPeriod?.period_from,\n                end_date: selectedReconPeriod?.period_to,\n                page: activePage,\n            }\n            getReconciliationReportService(body)\n                .then((res) => {\n                    setReconcilliationData(res.data)\n                })\n                .catch(() => {})\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [selectedLocation, searchTerm, selectedReconPeriod, activePage])\n\n    const locationChange = (e) => {\n        setLoading(true)\n        setSelectedLocation(e.target.value)\n        setLoading(true)\n    }\n    const handleLocationChange = (e) => {\n        delaySaveToDb(e)\n    }\n    const delaySaveToDb = useCallback(\n        debounce((val) => {\n            setLoading(true)\n            setSearchTerm(val)\n        }, 500),\n        []\n    )\n    const periodChange = (e) => {\n        setLoading(true)\n        setActivePage(1)\n        const selectedData = reconciliationSchedule?.filter((item) => e.target.value == item.id)\n        setReconPeriod(selectedData?.[0])\n    }\n\n    const periodList = useMemo(() => {\n        return reconciliationSchedule?.map((item) => ({\n            ...item,\n            period: `${getValidDate(item?.period_from)} - ${getValidDate(item?.period_to)}`,\n        }))\n    })\n    const onExportCostData = useCallback(() => {\n        setLoading(true)\n        const body = {\n            office_id: selectedLocation,\n            start_date: selectedReconPeriod?.period_from,\n            end_date: selectedReconPeriod?.period_to,\n            search: '',\n\n            is_export: '1',\n        }\n        getReconciliationReportService(body)\n            .then((res) => {\n                const fileName = `Reconcilliation Reports - ${moment(new Date()).format(\n                    'DD MMM YY hh:mm'\n                )}.csv`\n                downloadAnyFileHelper(res, fileName)\n                CustomToast.success('File Downloaded Successfully')\n            })\n            .catch((err) => {\n                CustomToast.success(getErrorMessageFromResponse(err))\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [selectedLocation, selectedReconPeriod?.period_from, selectedReconPeriod?.period_to])\n    return (\n        <div style={{position: 'relative'}}>\n            <div className=''>\n                <div className=' '>\n                    <div\n                        className='bg-white w-sm-100 '\n                        style={{\n                            fontSize: '14px',\n                            borderRadius: '0 10px 10px 10px',\n                            fontFamily: 'Manrope',\n                            boxShadow:\n                                'rgba(0, 0, 0, 0.05) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n                        }}\n                    >\n                        <div className='w-100 p-3 d-flex flex-wrap justify-content-between align-items-center'>\n                            <div>\n                                <label\n                                    style={{\n                                        color: '#212121',\n                                        fontFamily: 'Manrope',\n                                        fontWeight: 'bold',\n                                        fontSize: '15px',\n                                    }}\n                                >\n                                    Location:\n                                    <label\n                                        style={{fontWeight: '400', fontFamily: 'Manrope'}}\n                                        className='ms-2'\n                                    >\n                                        <CustomDropdown\n                                            options={stateList}\n                                            onChange={locationChange}\n                                            value={selectedLocation}\n                                            showClear={false}\n                                        />\n                                    </label>\n                                </label>\n                            </div>\n                            <div className=' py-3 mb-1 text-black fw-bold d-flex flex-row w-225px'>\n                                <CustomDropdown\n                                    placeholder='Select Pay period'\n                                    // value={`${selectedReconPeriod?.period_from + ',' + selectedReconPeriod?.period_to}`}\n                                    value={selectedReconPeriod?.id}\n                                    name='status'\n                                    options={periodList}\n                                    onChange={periodChange}\n                                    valueKey={'id'}\n                                    displayKey='period'\n                                    showClear={false}\n                                />\n                            </div>\n                            <div className='mb-2'>\n                                <CustomButton\n                                    buttonType={BUTTON_TYPE.disabled}\n                                    buttonLabel='Export'\n                                    onClick={onExportCostData}\n                                    padding={'py-3'}\n                                    icon={'pi pi-file-export'}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {btn === false ? (\n                <ReconciliationTabel\n                    key='reconcilation-tableData'\n                    reconcilliationData={reconcilliationData}\n                    loading={loading}\n                    onSearchChange={(text) => handleLocationChange(text)}\n                    onPageChange={(page) => setActivePage(page)}\n                    activePage={activePage}\n                />\n            ) : (\n                <FiscalYearTabel />\n            )}\n        </div>\n    )\n}\n","import React, {useCallback, useMemo} from 'react'\nimport {fontsFamily} from '../../../../../../../../assets/fonts/fonts'\nimport CustomImage from '../../../../../../../../customComponents/customImage/CustomImage'\nimport {formattedNumberFields} from '../../../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../../../constants/constants'\nimport CustomLoader from '../../../../../../../../customComponents/customLoader/CustomLoader'\n\nconst Commisions = ({typeFilter, sumData, loading}) => {\n    const summaryData = useMemo(() => {\n        const data = typeFilter == 1 ? sumData?.data : sumData\n        return data\n    }, [sumData, typeFilter])\n\n    const totals = useMemo(() => {\n        let totalPaid = 0\n        let totalDueAmount = 0\n        let grandTotal = 0\n        if (typeFilter == 1) {\n            totalPaid = summaryData?.commission_paid_total + summaryData?.adjustment_paid_total\n            totalDueAmount =\n                summaryData?.commission_unpaid_total + summaryData?.adjustment_unpaid_total\n        } else {\n            totalPaid =\n                (summaryData?.commission?.setter1?.paid_total ?? 0) +\n                (summaryData?.commission?.setter2?.paid_total ?? 0) +\n                (summaryData?.commission?.closer1?.paid_total ?? 0) +\n                (summaryData?.commission?.closer2?.paid_total ?? 0)\n            totalDueAmount =\n                (summaryData?.commission?.setter1?.unpaid_total ?? 0) +\n                (summaryData?.commission?.setter2?.unpaid_total ?? 0) +\n                (summaryData?.commission?.closer1?.unpaid_total ?? 0) +\n                (summaryData?.commission?.closer2?.unpaid_total ?? 0)\n        }\n        grandTotal = totalPaid + totalDueAmount\n\n        return {\n            totalPaid,\n            totalDueAmount,\n            grandTotal,\n        }\n    }, [\n        summaryData?.adjustment_paid_total,\n        summaryData?.adjustment_unpaid_total,\n        summaryData?.commission?.closer1?.paid_total,\n        summaryData?.commission?.closer1?.unpaid_total,\n        summaryData?.commission?.closer2?.paid_total,\n        summaryData?.commission?.closer2?.unpaid_total,\n        summaryData?.commission?.setter1?.paid_total,\n        summaryData?.commission?.setter1?.unpaid_total,\n        summaryData?.commission?.setter2?.paid_total,\n        summaryData?.commission?.setter2?.unpaid_total,\n        summaryData?.commission_paid_total,\n        summaryData?.commission_unpaid_total,\n        typeFilter,\n    ])\n\n    const payPeriodKey = useCallback((item) => {\n        let period = item?.date_paid?.split(' to ')\n        return `${getValidDate(period?.[0])} to ${getValidDate(period?.[1])}`\n    }, [])\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div className='m-0 p-0'>\n                {/* By team */}\n\n                {typeFilter == 1 ? (\n                    summaryData?.total_commissions?.length > 0 ||\n                    summaryData?.total_adjustment?.length > 0 ? (\n                        <div>\n                            <div className='table-responsive mb-10'>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>To</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.total_commissions?.length > 0 ? (\n                                            <>\n                                                {summaryData?.total_commissions?.map((item) => (\n                                                    <>\n                                                        <tr\n                                                            className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                            style={{\n                                                                fontSize: '14px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td className='p-5 text-nowrap'>\n                                                                {item?.employee}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {getValidDate(\n                                                                    item?.date,\n                                                                    'MM/DD/YYYY'\n                                                                )}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-cmGrey700'>\n                                                                {item?.type?.toUpperCase() ?? '-'}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {payPeriodKey(item)}\n                                                            </td>\n                                                            <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.paid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.unpaid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                    </>\n                                                ))}\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission_paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission_unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                            {/* Adjustments table */}\n                            <div className='table-responsive mb-10'>\n                                <div\n                                    className='text-cmGrey900 ms-5'\n                                    style={{\n                                        fontSize: '18px',\n                                        fontFamily: fontsFamily.manrope,\n                                        fontWeight: 700,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    Adjustments\n                                </div>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400 '\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>For</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.total_adjustment?.length > 0 ? (\n                                            <>\n                                                {summaryData?.total_adjustment?.map((item) => (\n                                                    <tr\n                                                        className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                            lineHeight: '20px',\n                                                        }}\n                                                    >\n                                                        <td className='p-5 text-nowrap'>\n                                                            {item?.employee}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {getValidDate(item?.date, 'MM-DD-YYYY')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                                            {item?.type.toUpperCase()}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {payPeriodKey(item)}\n                                                        </td>\n                                                        <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                            {formattedNumberFields(item?.paid, '$')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-center'>\n                                                            {formattedNumberFields(\n                                                                item?.unpaid,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n\n                                                <tr\n                                                    className=' text-cmGrey900 border border-right-0 border-left-0 border-top-0 border-cmGrey400'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.adjustment_paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            summaryData?.adjustment_unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                        <tr\n                                            className=' text-cmGrey900'\n                                            style={{\n                                                fontSize: '20px',\n                                                fontFamily: fontsFamily.manrope,\n                                                fontWeight: 600,\n                                                lineHeight: '20px',\n                                            }}\n                                        >\n                                            <td colSpan={3}></td>\n                                            <td style={{fontSize: '14px'}} className='text-center'>\n                                                Total\n                                            </td>\n                                            <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                {formattedNumberFields(totals.totalPaid, '$')}\n                                            </td>\n                                            <td className='text-center'>\n                                                {' '}\n                                                {formattedNumberFields(totals.totalDueAmount, '$')}\n                                            </td>\n                                        </tr>\n                                        <tr className=''>\n                                            <td colSpan={3}></td>\n                                            <td colSpan={3} className='text-center p-10 '>\n                                                {/* <div\n                                                    className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                    style={{\n                                                        borderRadius: '12px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                    }}\n                                                >\n                                                    <div\n                                                        style={{\n                                                            fontSize: 16,\n                                                            fontWeight: 700,\n                                                        }}\n                                                    >\n                                                        GrandTotal\n                                                    </div>\n                                                    <div\n                                                        style={{\n                                                            fontSize: '24px',\n                                                            fontWeight: 800,\n                                                        }}\n                                                    >\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            totals.grandTotal,\n                                                            '$'\n                                                        )}\n                                                    </div>\n                                                </div> */}\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className='p-20 text-center text-cmGrey600' style={{fontWeight: 600}}>\n                            No Commisions found\n                        </div>\n                    )\n                ) : // Setter table\n                summaryData?.commission?.setter1 ||\n                  summaryData?.commission?.setter2 ||\n                  summaryData?.commission?.closer1 ||\n                  summaryData?.commission?.closer2 ? (\n                    <div\n                        className='p-5'\n                        style={{fontFamily: fontsFamily.manrope, fontSize: 14, fontWeight: 700}}\n                    >\n                        {/* Setter 1 */}\n                        {summaryData?.commission?.setter1 ? (\n                            <div className='table-responsive mb-10'>\n                                <div className='d-flex align-items-center gap-5'>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <CustomImage\n                                            style={{width: '30px', height: '30px'}}\n                                            src={summaryData?.commission?.setter1?.info?.image}\n                                        />\n                                        <div className='text-cmGrey900'>\n                                            {summaryData?.commission?.setter1?.info?.name}\n                                        </div>\n                                    </div>\n                                    <div className='badge text-cminfo bg-cminfo rounded-pill bg-opacity-10 px-5'>\n                                        Setter 1\n                                    </div>\n                                </div>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.commission?.setter1?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.commission?.setter1?.data?.map(\n                                                    (item) => (\n                                                        <tr\n                                                            className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                            style={{\n                                                                fontSize: '14px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td className='p-5 text-nowrap'>\n                                                                {item?.type ?? '-'}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {getValidDate(item?.date)}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-cmGrey700'>\n                                                                {item?.description}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {payPeriodKey(item)}\n                                                            </td>\n                                                            <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.paid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.unpaid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                )}\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.setter1\n                                                                ?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.setter1\n                                                                ?.unpaid_total,\n                                                            '$'\n                                                        )}{' '}\n                                                    </td>\n                                                </tr>\n                                                {!summaryData?.commission?.closer2 &&\n                                                !summaryData?.commission?.closer1 &&\n                                                !summaryData?.commission?.setter2 ? (\n                                                    <>\n                                                        <tr\n                                                            className=' text-cmGrey900'\n                                                            style={{\n                                                                fontSize: '20px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                style={{fontSize: '14px'}}\n                                                                className='text-center'\n                                                            >\n                                                                Total\n                                                            </td>\n                                                            <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalPaid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalDueAmount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n\n                                                        <tr className=''>\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                colSpan={3}\n                                                                className='text-center p-10 '\n                                                            >\n                                                                {/* <div\n                                                                    className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                                    style={{\n                                                                        borderRadius: '12px',\n                                                                        fontFamily:\n                                                                            fontsFamily.manrope,\n                                                                    }}\n                                                                >\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: 16,\n                                                                            fontWeight: 700,\n                                                                        }}\n                                                                    >\n                                                                        GrandTotal\n                                                                    </div>\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: '24px',\n                                                                            fontWeight: 800,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFields(\n                                                                            totals.grandTotal,\n                                                                            '$'\n                                                                        )}\n                                                                    </div>\n                                                                </div> */}\n                                                            </td>\n                                                        </tr>\n                                                    </>\n                                                ) : null}\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n\n                        {/* Setter 2 */}\n                        {summaryData?.commission?.setter2 ? (\n                            <div className='table-responsive mb-10'>\n                                <div className='d-flex align-items-center gap-5'>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <CustomImage\n                                            style={{width: '30px', height: '30px'}}\n                                            src={summaryData?.commission?.setter2?.info?.image}\n                                        />\n                                        <div className='text-cmGrey900'>\n                                            {summaryData?.commission?.setter2?.info?.name}\n                                        </div>\n                                    </div>\n                                    <div className='badge text-cminfo bg-cminfo rounded-pill bg-opacity-10 px-5'>\n                                        Setter 2\n                                    </div>\n                                </div>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.commission?.setter2?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.commission?.setter2?.data?.map(\n                                                    (item) => (\n                                                        <tr\n                                                            className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                            style={{\n                                                                fontSize: '14px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td className='p-5 text-nowrap'>\n                                                                {item?.type ?? '-'}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {getValidDate(item?.date)}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-cmGrey700'>\n                                                                {item?.description}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {payPeriodKey(item)}\n                                                            </td>\n                                                            <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.paid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.unpaid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                )}\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.setter2\n                                                                ?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.setter2\n                                                                ?.unpaid_total,\n                                                            '$'\n                                                        )}{' '}\n                                                    </td>\n                                                </tr>\n                                                {!summaryData?.commission?.closer2 &&\n                                                !summaryData?.commission?.closer1 ? (\n                                                    <>\n                                                        <tr\n                                                            className=' text-cmGrey900'\n                                                            style={{\n                                                                fontSize: '20px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                style={{fontSize: '14px'}}\n                                                                className='text-center'\n                                                            >\n                                                                Total\n                                                            </td>\n                                                            <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalPaid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalDueAmount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n\n                                                        <tr className=''>\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                colSpan={3}\n                                                                className='text-center p-10 '\n                                                            >\n                                                                {/* <div\n                                                                    className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                                    style={{\n                                                                        borderRadius: '12px',\n                                                                        fontFamily:\n                                                                            fontsFamily.manrope,\n                                                                    }}\n                                                                >\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: 16,\n                                                                            fontWeight: 700,\n                                                                        }}\n                                                                    >\n                                                                        GrandTotal\n                                                                    </div>\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: '24px',\n                                                                            fontWeight: 800,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFields(\n                                                                            totals.grandTotal,\n                                                                            '$'\n                                                                        )}\n                                                                    </div>\n                                                                </div> */}\n                                                            </td>\n                                                        </tr>\n                                                    </>\n                                                ) : null}\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n\n                        {/*    closer table*/}\n                        {/* Closer 1 */}\n                        {summaryData?.commission?.closer1 ? (\n                            <div className='table-responsive mb-10'>\n                                <div className='d-flex align-items-center gap-5'>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <CustomImage\n                                            style={{width: '30px', height: '30px'}}\n                                            src={summaryData?.commission?.closer1?.info?.image}\n                                        />\n                                        <div className='text-cmGrey900'>\n                                            {summaryData?.commission?.closer1?.info?.name}\n                                        </div>\n                                    </div>\n                                    <div className='badge text-cmPurple bg-cmPurple rounded-pill bg-opacity-10 px-5'>\n                                        Closer 1\n                                    </div>\n                                </div>\n\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400 '\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.commission?.closer1?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.commission?.closer1?.data?.map(\n                                                    (item) => (\n                                                        <tr\n                                                            className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                            style={{\n                                                                fontSize: '14px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td className='p-5 text-nowrap'>\n                                                                {item?.type ?? '-'}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {getValidDate(item?.date)}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-cmGrey700'>\n                                                                {item?.description}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {payPeriodKey(item)}\n                                                            </td>\n                                                            <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.paid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.unpaid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                )}\n                                                <tr\n                                                    className=' text-cmGrey900 border border-right-0 border-left-0 border-top-0 border-cmGrey400'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.closer1\n                                                                ?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.closer1\n                                                                ?.unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                {!summaryData?.commission?.closer2 ? (\n                                                    <>\n                                                        <tr\n                                                            className=' text-cmGrey900'\n                                                            style={{\n                                                                fontSize: '20px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                style={{fontSize: '14px'}}\n                                                                className='text-center'\n                                                            >\n                                                                Total\n                                                            </td>\n                                                            <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalPaid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalDueAmount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n\n                                                        <tr className=''>\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                colSpan={3}\n                                                                className='text-center p-10 '\n                                                            >\n                                                                {/* <div\n                                                                    className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                                    style={{\n                                                                        borderRadius: '12px',\n                                                                        fontFamily:\n                                                                            fontsFamily.manrope,\n                                                                    }}\n                                                                >\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: 16,\n                                                                            fontWeight: 700,\n                                                                        }}\n                                                                    >\n                                                                        GrandTotal\n                                                                    </div>\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: '24px',\n                                                                            fontWeight: 800,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFields(\n                                                                            totals.grandTotal,\n                                                                            '$'\n                                                                        )}\n                                                                    </div>\n                                                                </div> */}\n                                                            </td>\n                                                        </tr>\n                                                    </>\n                                                ) : null}\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n                        {/* Closer 2 */}\n                        {summaryData?.commission?.closer2 ? (\n                            <div className='table-responsive mb-10'>\n                                <div className='d-flex align-items-center gap-5'>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <CustomImage\n                                            style={{width: '30px', height: '30px'}}\n                                            src={summaryData?.commission?.closer2?.info?.image}\n                                        />\n                                        <div className='text-cmGrey900'>\n                                            {summaryData?.commission?.closer2?.info?.name}\n                                        </div>\n                                    </div>\n                                    <div className='badge text-cmPurple bg-cmPurple rounded-pill bg-opacity-10 px-5'>\n                                        Closer 2\n                                    </div>\n                                </div>\n\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400 '\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.commission?.closer2?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.commission?.closer2?.data?.map(\n                                                    (item) => (\n                                                        <tr\n                                                            className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                            style={{\n                                                                fontSize: '14px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td className='p-5 text-nowrap'>\n                                                                {item?.type ?? '-'}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {getValidDate(item?.date)}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-cmGrey700'>\n                                                                {item?.description}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap'>\n                                                                {payPeriodKey(item)}\n                                                            </td>\n                                                            <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.paid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='p-5 text-nowrap text-center'>\n                                                                {formattedNumberFields(\n                                                                    item?.unpaid_amount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                )}\n                                                <tr\n                                                    className=' text-cmGrey900 border border-right-0 border-left-0 border-top-0 border-cmGrey400'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.closer2\n                                                                ?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.commission?.closer\n                                                                ?.unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '20px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Total\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            totals.totalPaid,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {formattedNumberFields(\n                                                            totals.totalDueAmount,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                <tr className=''>\n                                                    <td colSpan={3}></td>\n                                                    <td colSpan={3} className='text-center p-10 '>\n                                                        {/* <div\n                                                            className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                            style={{\n                                                                borderRadius: '12px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                            }}\n                                                        >\n                                                            <div\n                                                                style={{\n                                                                    fontSize: 16,\n                                                                    fontWeight: 700,\n                                                                }}\n                                                            >\n                                                                GrandTotal\n                                                            </div>\n                                                            <div\n                                                                style={{\n                                                                    fontSize: '24px',\n                                                                    fontWeight: 800,\n                                                                }}\n                                                            >\n                                                                {formattedNumberFields(\n                                                                    totals.grandTotal,\n                                                                    '$'\n                                                                )}\n                                                            </div>\n                                                        </div> */}\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n                    </div>\n                ) : (\n                    <div className='p-20 text-center text-cmGrey600' style={{fontWeight: 600}}>\n                        No Commisions found\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Commisions\n","import React, {useCallback, useMemo} from 'react'\nimport {fontsFamily} from '../../../../../../../../assets/fonts/fonts'\nimport CustomImage from '../../../../../../../../customComponents/customImage/CustomImage'\nimport {formattedNumberFields} from '../../../../../../../../helpers/CommonHelpers'\nimport {getValidDate} from '../../../../../../../../constants/constants'\nimport CustomLoader from '../../../../../../../../customComponents/customLoader/CustomLoader'\n\nconst Overrides = ({loading, typeFilter, summaryData}) => {\n    const totals = useMemo(() => {\n        var totalPaid = 0\n        var totalDueAmount = 0\n        var grandTotal = 0\n        if (typeFilter == 1) {\n            // totalPaid = summaryData?.commission_paid_total + summaryData?.adjustment_paid_total\n            totalDueAmount =\n                summaryData?.total_overrides_amount_pending +\n                summaryData?.total_adjustment_amount_pending\n            totalPaid =\n                summaryData?.total_overrides_amount_paid + summaryData?.total_adjustment_amount_paid\n        } else {\n            totalPaid =\n                (summaryData?.setter1?.paid_total ?? 0) +\n                (summaryData?.setter2?.paid_total ?? 0) +\n                (summaryData?.closer1?.paid_total ?? 0) +\n                (summaryData?.closer2?.paid_total ?? 0)\n            totalDueAmount =\n                (summaryData?.setter1?.unpaid_total ?? 0) +\n                (summaryData?.setter2?.unpaid_total ?? 0) +\n                (summaryData?.closer1?.unpaid_total ?? 0) +\n                (summaryData?.closer2?.unpaid_total ?? 0)\n        }\n        grandTotal = totalPaid + totalDueAmount\n\n        return {\n            totalPaid,\n            totalDueAmount,\n            grandTotal,\n        }\n    }, [])\n\n    const payPeriodKey = useCallback((item) => {\n        let period = item?.date_paid?.split('to')\n        return `${getValidDate(period?.[0], 'MM-DD-YYYY')} to ${getValidDate(\n            period?.[1],\n            'MM-DD-YYYY'\n        )}`\n    }, [])\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n            <div className='m-0 p-0'>\n                {/* By team */}\n                {typeFilter == 1 ? (\n                    summaryData?.total_overrides?.length > 0 ||\n                    summaryData?.total_adjustment?.length > 0 ? (\n                        <div>\n                            <div className='table-responsive mb-10'>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Through</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.total_overrides?.length > 0 ? (\n                                            <>\n                                                {summaryData?.total_overrides?.map((i) => (\n                                                    <tr\n                                                        className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                            lineHeight: '20px',\n                                                        }}\n                                                    >\n                                                        <td className='p-5 text-nowrap'>\n                                                            {i?.override_over}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {getValidDate(i?.date)}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                                            {i?.description}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {payPeriodKey(i)}\n                                                        </td>\n                                                        <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.PaidAmount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-center'>\n                                                            {' '}\n                                                            {formattedNumberFields(\n                                                                i?.UnPaidAmount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.total_overrides_amount_paid,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            summaryData?.total_overrides_amount_pending,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                            {/* Adjustments table */}\n                            <div className='table-responsive mb-10'>\n                                <div\n                                    className='text-cmGrey900 ms-5'\n                                    style={{\n                                        fontSize: '18px',\n                                        fontFamily: fontsFamily.manrope,\n                                        fontWeight: 700,\n                                        lineHeight: '21px',\n                                    }}\n                                >\n                                    Adjustments\n                                </div>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400 '\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>For</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.total_adjustment?.length > 0 ? (\n                                            <>\n                                                {summaryData?.total_adjustment?.map((i) => (\n                                                    <tr\n                                                        className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                            lineHeight: '20px',\n                                                        }}\n                                                    >\n                                                        <td className='p-5 text-nowrap'>\n                                                            {i?.employee}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {' '}\n                                                            {getValidDate(i?.date, 'MM-DD-YYYY')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                                            {i?.type}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {payPeriodKey(i)}\n                                                        </td>\n                                                        <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                            {formattedNumberFields(i?.paid, '$')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-center'>\n                                                            {formattedNumberFields(i?.unpaid, '$')}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                                <tr\n                                                    className=' text-cmGrey900 border border-right-0 border-left-0 border-top-0 border-cmGrey400'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.total_adjustment_amount_paid,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            summaryData?.total_adjustment_amount_pending,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                        <>\n                                            <tr\n                                                className=' text-cmGrey900'\n                                                style={{\n                                                    fontSize: '20px',\n                                                    fontFamily: fontsFamily.manrope,\n                                                    fontWeight: 600,\n                                                    lineHeight: '20px',\n                                                }}\n                                            >\n                                                <td colSpan={3}></td>\n                                                <td\n                                                    style={{fontSize: '14px'}}\n                                                    className='text-center'\n                                                >\n                                                    Total\n                                                </td>\n                                                <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                    {/* {formattedNumberFields(totals.totalPaid, '$')} */}\n                                                    {formattedNumberFields(totals.totalPaid, '$')}\n                                                </td>\n\n                                                <td className='text-center'>\n                                                    {formattedNumberFields(\n                                                        totals.totalDueAmount,\n                                                        '$'\n                                                    )}\n                                                </td>\n                                            </tr>\n                                            <tr className=''>\n                                                <td colSpan={3}></td>\n                                                <td colSpan={3} className='text-center p-10 '>\n                                                    {/* <div\n                                                        className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                        style={{\n                                                            borderRadius: '12px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                        }}\n                                                    >\n                                                        <div\n                                                            style={{\n                                                                fontSize: 16,\n                                                                fontWeight: 700,\n                                                            }}\n                                                        >\n                                                            GrandTotal\n                                                        </div>\n                                                        <div\n                                                            style={{\n                                                                fontSize: '24px',\n                                                                fontWeight: 800,\n                                                            }}\n                                                        >\n                                                            {formattedNumberFields(\n                                                                totals.grandTotal,\n                                                                '$'\n                                                            )}\n                                                        </div>\n                                                    </div> */}\n                                                </td>\n                                            </tr>\n                                        </>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className='p-20 text-center text-cmGrey600' style={{fontWeight: 600}}>\n                            No Overrides found\n                        </div>\n                    )\n                ) : summaryData?.closer2 ||\n                  summaryData?.closer1 ||\n                  summaryData?.setter2 ||\n                  summaryData?.setter1 ? (\n                    <div\n                        className='p-5'\n                        style={{fontFamily: fontsFamily.manrope, fontSize: 14, fontWeight: 700}}\n                    >\n                        {/* Setter 1 */}\n                        {summaryData?.setter1 ? (\n                            <div className='table-responsive mb-10 P-5'>\n                                <div className='d-flex align-items-center gap-3'>\n                                    <CustomImage\n                                        style={{width: '30px', height: '30px'}}\n                                        src={summaryData?.setter1?.info?.image}\n                                    />\n                                    <div className='text-cmGrey900'>\n                                        {summaryData?.setter1?.info?.name}\n                                    </div>\n                                    <div className='badge text-cminfo bg-cminfo rounded-pill bg-opacity-10 px-5'>\n                                        Setter 1\n                                    </div>\n                                </div>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.setter1?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.setter1?.data?.map((i) => (\n                                                    <tr\n                                                        className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                            lineHeight: '20px',\n                                                        }}\n                                                    >\n                                                        <td className='p-5 text-nowrap'>\n                                                            {i?.type}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {' '}\n                                                            {getValidDate(i?.date, 'MM-DD-YYYY')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                                            {i?.description}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {payPeriodKey(i)}\n                                                        </td>\n                                                        <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.paid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.unpaid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.setter1?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            summaryData?.setter1?.unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                {!summaryData?.closer2 &&\n                                                !summaryData?.closer1 &&\n                                                !summaryData?.setter2 ? (\n                                                    <>\n                                                        <tr\n                                                            className=' text-cmGrey900'\n                                                            style={{\n                                                                fontSize: '20px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                style={{fontSize: '14px'}}\n                                                                className='text-center'\n                                                            >\n                                                                Total\n                                                            </td>\n                                                            <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalPaid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalDueAmount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                        <tr className=''>\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                colSpan={3}\n                                                                className='text-center p-10 '\n                                                            >\n                                                                {/* <div\n                                                                    className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                                    style={{\n                                                                        borderRadius: '12px',\n                                                                        fontFamily:\n                                                                            fontsFamily.manrope,\n                                                                    }}\n                                                                >\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: 16,\n                                                                            fontWeight: 700,\n                                                                        }}\n                                                                    >\n                                                                        GrandTotal\n                                                                    </div>\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: '24px',\n                                                                            fontWeight: 800,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFields(\n                                                                            totals.grandTotal,\n                                                                            '$'\n                                                                        )}\n                                                                    </div>\n                                                                </div> */}\n                                                            </td>\n                                                        </tr>\n                                                    </>\n                                                ) : null}\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n                        {/* Setter 2 */}\n                        {summaryData?.setter2 ? (\n                            <div className='table-responsive mb-10 P-5'>\n                                <div className='d-flex align-items-center gap-3'>\n                                    <CustomImage\n                                        style={{width: '30px', height: '30px'}}\n                                        src={summaryData?.setter2?.info?.image}\n                                    />\n                                    <div className='text-cmGrey900'>\n                                        {summaryData?.setter2?.info?.name}\n                                    </div>\n                                    <div className='badge text-cminfo bg-cminfo rounded-pill bg-opacity-10 px-5'>\n                                        Setter 2\n                                    </div>\n                                </div>\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400'\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.setter2?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.setter2?.data?.map((i) => (\n                                                    <tr\n                                                        className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                            lineHeight: '20px',\n                                                        }}\n                                                    >\n                                                        <td className='p-5 text-nowrap'>\n                                                            {i?.type}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {' '}\n                                                            {getValidDate(i?.date, 'MM-DD-YYYY')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                                            {i?.description}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {payPeriodKey(i)}\n                                                        </td>\n                                                        <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.paid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.unpaid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.setter2?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            summaryData?.setter2?.unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                {!summaryData?.closer2 && !summaryData?.closer1 ? (\n                                                    <>\n                                                        <tr\n                                                            className=' text-cmGrey900'\n                                                            style={{\n                                                                fontSize: '20px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                style={{fontSize: '14px'}}\n                                                                className='text-center'\n                                                            >\n                                                                Total\n                                                            </td>\n                                                            <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalPaid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalDueAmount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                        <tr className=''>\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                colSpan={3}\n                                                                className='text-center p-10 '\n                                                            >\n                                                                {/* <div\n                                                                    className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                                    style={{\n                                                                        borderRadius: '12px',\n                                                                        fontFamily:\n                                                                            fontsFamily.manrope,\n                                                                    }}\n                                                                >\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: 16,\n                                                                            fontWeight: 700,\n                                                                        }}\n                                                                    >\n                                                                        GrandTotal\n                                                                    </div>\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: '24px',\n                                                                            fontWeight: 800,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFields(\n                                                                            totals.grandTotal,\n                                                                            '$'\n                                                                        )}\n                                                                    </div>\n                                                                </div> */}\n                                                            </td>\n                                                        </tr>\n                                                    </>\n                                                ) : null}\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n\n                        {/* Closer 1 table */}\n                        {summaryData?.closer1 ? (\n                            <div className='table-responsive mb-10'>\n                                <div className='d-flex align-items-center gap-5'>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <CustomImage\n                                            style={{width: '30px', height: '30px'}}\n                                            src={summaryData?.closer1?.info?.image}\n                                        />\n                                        <div className='text-cmGrey900'>\n                                            {summaryData?.closer1?.info?.name}\n                                        </div>\n                                    </div>\n                                    <div className='badge text-cmPurple bg-cmPurple rounded-pill bg-opacity-10 px-5'>\n                                        Closer 1\n                                    </div>\n                                </div>\n\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400 '\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.closer1?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.closer1?.data?.map((i) => (\n                                                    <tr\n                                                        className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                            lineHeight: '20px',\n                                                        }}\n                                                    >\n                                                        <td className='p-5 text-nowrap'>\n                                                            {i?.type}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {' '}\n                                                            {getValidDate(i?.date, 'MM-DD-YYYY')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                                            {i?.description}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {payPeriodKey(i)}\n                                                        </td>\n                                                        <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.paid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.unpaid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n\n                                                <tr\n                                                    className=' text-cmGrey900 border border-right-0 border-left-0 border-top-0 border-cmGrey400'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.closer1?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            summaryData?.setter1?.unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                {!summaryData?.closer2 ? (\n                                                    <>\n                                                        <tr\n                                                            className=' text-cmGrey900'\n                                                            style={{\n                                                                fontSize: '20px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                                fontWeight: 600,\n                                                                lineHeight: '20px',\n                                                            }}\n                                                        >\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                style={{fontSize: '14px'}}\n                                                                className='text-center'\n                                                            >\n                                                                Total\n                                                            </td>\n                                                            <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalPaid,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                            <td className='text-center'>\n                                                                {formattedNumberFields(\n                                                                    totals.totalDueAmount,\n                                                                    '$'\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                        <tr className=''>\n                                                            <td colSpan={3}></td>\n                                                            <td\n                                                                colSpan={3}\n                                                                className='text-center p-10 '\n                                                            >\n                                                                {/* <div\n                                                                    className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                                    style={{\n                                                                        borderRadius: '12px',\n                                                                        fontFamily:\n                                                                            fontsFamily.manrope,\n                                                                    }}\n                                                                >\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: 16,\n                                                                            fontWeight: 700,\n                                                                        }}\n                                                                    >\n                                                                        GrandTotal\n                                                                    </div>\n                                                                    <div\n                                                                        style={{\n                                                                            fontSize: '24px',\n                                                                            fontWeight: 800,\n                                                                        }}\n                                                                    >\n                                                                        {formattedNumberFields(\n                                                                            totals.grandTotal,\n                                                                            '$'\n                                                                        )}\n                                                                    </div>\n                                                                </div> */}\n                                                            </td>\n                                                        </tr>\n                                                    </>\n                                                ) : null}\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n\n                        {/* Closer 2 table */}\n                        {summaryData?.closer2 ? (\n                            <div className='table-responsive mb-10'>\n                                <div className='d-flex align-items-center gap-5'>\n                                    <div className='d-flex align-items-center gap-3'>\n                                        <CustomImage\n                                            style={{width: '30px', height: '30px'}}\n                                            src={summaryData?.closer2?.info?.image}\n                                        />\n                                        <div className='text-cmGrey900'>\n                                            {summaryData?.closer2?.info?.name}\n                                        </div>\n                                    </div>\n                                    <div className='badge text-cmPurple bg-cmPurple rounded-pill bg-opacity-10 px-5'>\n                                        Closer 2\n                                    </div>\n                                </div>\n\n                                <table className='table'>\n                                    <thead>\n                                        <tr\n                                            className='text-cmGrey500 text-cmGrey800 border-bottom-2 border-cmGrey400 '\n                                            style={{\n                                                fontSize: '14px',\n                                                fontWeight: '600',\n                                                fontFamily: fontsFamily.manrope,\n                                            }}\n                                        >\n                                            <th className='text-nowrap p-5 '>Type</th>\n                                            <th className='text-nowrap p-5 '>Date</th>\n                                            <th className='text-nowrap p-5 '>Description</th>\n                                            <th className='text-nowrap p-5 '>Pay Period</th>\n                                            <th className='text-nowrap p-5 border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                Paid Amount\n                                            </th>\n                                            <th className='text-nowrap p-5 text-center '>\n                                                Due Amount\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {summaryData?.closer2?.data?.length > 0 ? (\n                                            <>\n                                                {summaryData?.closer2?.data?.map((i) => (\n                                                    <tr\n                                                        className='border border-right-0 border-left-0 border-top-0 border-cmGrey400 text-cmGrey800 stripRow'\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontFamily: fontsFamily.manrope,\n                                                            fontWeight: 600,\n                                                            lineHeight: '20px',\n                                                        }}\n                                                    >\n                                                        <td className='p-5 text-nowrap'>\n                                                            {i?.type}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {' '}\n                                                            {getValidDate(i?.date, 'MM-DD-YYYY')}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                                            {i?.description}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap'>\n                                                            {payPeriodKey(i)}\n                                                        </td>\n                                                        <td className='py-5 text-nowrap border border-bottom-0 border-top-0 border-cmGrey400  text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.paid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                        <td className='p-5 text-nowrap text-center'>\n                                                            {formattedNumberFields(\n                                                                i?.unpaid_amount,\n                                                                '$'\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                                <tr\n                                                    className=' text-cmGrey900 border border-right-0 border-left-0 border-top-0 border-cmGrey400'\n                                                    style={{\n                                                        fontSize: '16px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Subtotal\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            summaryData?.closer2?.paid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {' '}\n                                                        {formattedNumberFields(\n                                                            summaryData?.closer2?.unpaid_total,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                <tr\n                                                    className=' text-cmGrey900'\n                                                    style={{\n                                                        fontSize: '20px',\n                                                        fontFamily: fontsFamily.manrope,\n                                                        fontWeight: 600,\n                                                        lineHeight: '20px',\n                                                    }}\n                                                >\n                                                    <td colSpan={3}></td>\n                                                    <td\n                                                        style={{fontSize: '14px'}}\n                                                        className='text-center'\n                                                    >\n                                                        Total\n                                                    </td>\n                                                    <td className='border border-bottom-0 border-top-0 border-cmGrey400 text-center'>\n                                                        {formattedNumberFields(\n                                                            totals.totalPaid,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                    <td className='text-center'>\n                                                        {formattedNumberFields(\n                                                            totals.totalDueAmount,\n                                                            '$'\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                                <tr className=''>\n                                                    <td colSpan={3}></td>\n                                                    <td colSpan={3} className='text-center p-10 '>\n                                                        {/* <div\n                                                            className='d-flex align-items-center gap-10 border-dotted border-cmGrey400 py-5 px-10 justify-content-center text-cmGrey900'\n                                                            style={{\n                                                                borderRadius: '12px',\n                                                                fontFamily: fontsFamily.manrope,\n                                                            }}\n                                                        >\n                                                            <div\n                                                                style={{\n                                                                    fontSize: 16,\n                                                                    fontWeight: 700,\n                                                                }}\n                                                            >\n                                                                GrandTotal\n                                                            </div>\n                                                            <div\n                                                                style={{\n                                                                    fontSize: '24px',\n                                                                    fontWeight: 800,\n                                                                }}\n                                                            >\n                                                                {formattedNumberFields(\n                                                                    totals.grandTotal,\n                                                                    '$'\n                                                                )}\n                                                            </div>\n                                                        </div> */}\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <tr>\n                                                    <td\n                                                        className='text-cmGrey600 fw-bold text-center py-5'\n                                                        colSpan={6}\n                                                    >\n                                                        No data found\n                                                    </td>\n                                                </tr>\n                                            </>\n                                        )}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null}\n                    </div>\n                ) : (\n                    <div className='p-20 text-center text-cmGrey600' style={{fontWeight: 600}}>\n                        No Overrides found\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Overrides\n","import React, {useEffect, useState} from 'react'\nimport {fontsFamily} from '../../../../../../../../assets/fonts/fonts'\nimport {getCompanyAccountSummaryService} from '../../../../../../../../services/Services'\nimport {getValidDate} from '../../../../../../../../constants/constants'\nimport {formattedNumberFields} from '../../../../../../../../helpers/CommonHelpers'\nimport CustomLoader from '../../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomNoData from '../../../../../../../../customComponents/customNoData/CustomNoData'\n\nconst AccountSummaryCompany = ({pid}) => {\n    const [tableData, setTableData] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [totalAmount, setTotalAmount] = useState(null)\n\n    useEffect(() => {\n        getCompanyData()\n    }, [])\n\n    const getCompanyData = () => {\n        const body = {\n            pid: pid,\n        }\n        getCompanyAccountSummaryService(body)\n            .then((res) => {\n                setTotalAmount(res?.total)\n                setTableData(res?.data)\n            })\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <div className='px-10 py-5 position-relative'>\n            <CustomLoader full visible={loading} />\n\n            <div className='table-responsive'>\n                <table className='table'>\n                    <thead>\n                        <tr\n                            className='text-cmGrey500 text-cmGrey800 border-bottom border-cmGrey400'\n                            style={{\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                fontFamily: fontsFamily.manrope,\n                            }}\n                        >\n                            <th className='text-nowrap p-5 '>Through</th>\n                            <th className='text-nowrap p-5 '>Type</th>\n                            <th className='text-nowrap p-5 '>Date</th>\n                            <th className='text-nowrap p-5 '>Description</th>\n                            <th className='text-nowrap p-5 border-end border-cmGrey400'>\n                                Pay Period\n                            </th>\n                            <th className='text-nowrap p-5  text-center'>Due Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody className='border-bottom border-cmGrey400'>\n                        {tableData?.length > 0 ? (\n                            <>\n                                {tableData?.map((i) => (\n                                    <tr\n                                        className=' text-cmGrey800'\n                                        style={{\n                                            fontSize: '14px',\n                                            fontFamily: fontsFamily.manrope,\n                                            fontWeight: 600,\n                                            lineHeight: '20px',\n                                        }}\n                                    >\n                                        <td className='p-5 text-nowrap'>\n                                            {i?.through ?? '-'} ({i?.position})\n                                        </td>\n                                        <td className='p-5 text-nowrap'>{i?.type}</td>\n                                        <td className='p-5 text-nowrap'>{getValidDate(i?.date)}</td>\n                                        <td className='p-5 text-nowrap text-cmGrey700'>\n                                            {i?.description}\n                                        </td>\n                                        <td className='p-5 text-nowrap border-end border-cmGrey400'>\n                                            {getValidDate(i?.pay_period_from)} -{' '}\n                                            {getValidDate(i?.pay_period_to)}\n                                        </td>\n                                        <td className='py-5 text-nowrap  text-center'>\n                                            {formattedNumberFields(i?.withheld_amount)}\n                                        </td>\n                                    </tr>\n                                ))}\n                                <tr>\n                                    <td colSpan={4}></td>\n                                    <td className='border-end border-cmGrey400'>\n                                        <strong className='text-right'>Total</strong>\n                                    </td>\n                                    <td className='text-center'>\n                                        <strong>{formattedNumberFields(totalAmount)}</strong>\n                                    </td>\n                                </tr>\n                            </>\n                        ) : (\n                            <>\n                                <tr>\n                                    <td className='py-5' colSpan={5}>\n                                        <CustomNoData />\n                                    </td>\n                                </tr>\n                            </>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AccountSummaryCompany\n","import React, {useEffect, useState} from 'react'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport {formattedNumberFields} from '../../../../../../../helpers/CommonHelpers'\n\nimport {\n    salesAccountSummaryService,\n    salesAccountSummarybyPositionService,\n} from '../../../../../../../services/Services'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomDropdown from '../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {TabView, TabPanel} from 'primereact/tabview'\nimport Commisions from './components/Commisions'\nimport Overrides from './components/Overrides'\nimport AccountSummaryCompany from './components/AccountSummaryCompany'\n\nconst SalesAccountSummary = () => {\n    const naviagte = useNavigate()\n    const location = useLocation()\n    const [summaryData, setSummaryData] = useState(null)\n    const [summaryDatabyPosition, setSummaryDatabyPosition] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [typeFilter, setTypeFilter] = useState(1)\n    const [tab, setTab] = useState(1)\n\n    useEffect(() => {\n        setLoading(true)\n        const body = {\n            pid: location?.state?.pid,\n        }\n        if (typeFilter == 1) {\n            salesAccountSummaryService(body)\n                .then((res) => {\n                    setSummaryData(res)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        } else {\n            salesAccountSummarybyPositionService(body)\n                .then((res) => {\n                    setSummaryData(res)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [location?.state?.pid, typeFilter])\n\n    return (\n        <div>\n            <div\n                className='mb-10'\n                style={{\n                    zIndex: 1,\n                    borderRadius: '10px',\n                    fontFamily: fontsFamily.manrope,\n                    fontSize: '14px',\n                    position: 'relative',\n                }}\n            >\n                {/* 1st card */}\n                <div\n                    className='d-flex flex-wrap align-items-center justify-content-between px-sm-10 px-2 py-5 bg-cmwhite shadow-sm rounded mb-15'\n                    style={{fontFamily: 'Manrope', fontSize: '16px', fontWeight: '600'}}\n                >\n                    <div\n                        className='d-flex gap-2 align-items-center cursor-pointer '\n                        onClick={() => naviagte(-1)}\n                    >\n                        <div className='bi bi-box-arrow-left fs-1 text-cmGrey600 text-hover-dark cursor-pointer'></div>\n                        <div className='text-cmGrey900'>\n                            {location?.state?.pid} - {location?.state?.name} | Account Summary\n                        </div>\n                    </div>\n                    <div className=''>\n                        <CustomDropdown\n                            options={[\n                                {name: 'By Type', value: 1},\n                                {name: 'By Position', value: 2},\n                            ]}\n                            searching={false}\n                            value={typeFilter}\n                            onChange={(e) => setTypeFilter(e.target.value)}\n                            showClear={false}\n                        />\n                    </div>\n                </div>\n                {/* Card 2 */}\n                <div className=''>\n                    <div\n                        className='d-flex align-items-center gap-5'\n                        style={{fontWeight: '700', fontSize: 14, fontFamily: fontsFamily.manrope}}\n                    >\n                        <div\n                            className={`bg-cmwhite cursor-pointer px-4 py-3 ${\n                                tab == 1 ? 'text-cmBlue-Crayola' : 'text-cmGrey800'\n                            } `}\n                            style={{borderRadius: '10px 10px 0px 0px'}}\n                            onClick={() => setTab(1)}\n                        >\n                            Commissions\n                        </div>\n                        <div\n                            className={`bg-cmwhite cursor-pointer px-4 py-3  ${\n                                tab == 2 ? 'text-cmBlue-Crayola' : 'text-cmGrey800'\n                            } `}\n                            style={{\n                                borderRadius: '10px 10px 0px 0px',\n                            }}\n                            onClick={() => setTab(2)}\n                        >\n                            Overrides\n                        </div>\n                        <div\n                            className={`bg-cmwhite cursor-pointer px-4 py-3  ${\n                                tab == 3 ? 'text-cmBlue-Crayola' : 'text-cmGrey800'\n                            } `}\n                            style={{\n                                borderRadius: '10px 10px 0px 0px',\n                            }}\n                            onClick={() => setTab(3)}\n                        >\n                            Company\n                        </div>\n                    </div>\n                    <div\n                        className='bg-cmwhite shadow-sm  mb-20 p-0'\n                        style={{borderRadius: '0px 12px 12px 12px'}}\n                    >\n                        {tab === 1 ? (\n                            <Commisions\n                                typeFilter={typeFilter}\n                                sumData={summaryData}\n                                loading={loading}\n                            />\n                        ) : tab === 2 ? (\n                            <Overrides\n                                typeFilter={typeFilter}\n                                summaryData={summaryData?.override}\n                                loading={loading}\n                            />\n                        ) : (\n                            <AccountSummaryCompany pid={location?.state?.pid} />\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SalesAccountSummary\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport Pagination from '../../../sequidocs/component/Pagination'\nimport {fontsFamily} from '../../../../../../assets/fonts/fonts'\nimport {\n    TABLE_BORDER,\n    downloadAnyFileHelper,\n    formattedNumberFields,\n    getGlobalSearchData,\n} from '../../../../../../helpers/CommonHelpers'\nimport {MONTH_DAYS, getValidDate} from '../../../../../../constants/constants'\nimport CustomNoData from '../../../../../../customComponents/customNoData/CustomNoData'\nimport {useNavigate} from 'react-router-dom'\nimport usePayFrequency from '../../../../../../hooks/usePayFrequency'\nimport CustomDatePicker from '../../../../../../customComponents/customInputs/customDatePicker/CustomDatePicker'\nimport {getAdminPayrollReportByFiltersService} from '../../../../../../services/Services'\nimport CustomLoader from '../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../customComponents/customToast/CustomToast'\nimport moment from 'moment'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../customComponents/customButtton/CustomButton'\n\nconst PayrollReport = () => {\n    const navigate = useNavigate()\n    const {selectedWeekData, handleSelectedWeekData, weekDropdownList} = usePayFrequency()\n    const [selectedMonth, setSelectedMonth] = useState(getValidDate(new Date(), 'MM'))\n    const [selectedYear, setSelectedYear] = useState(new Date())\n    const [payrollData, setPayrollData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [searchVal, setSearchVal] = useState('')\n    const [isExport, setIsExport] = useState(false)\n\n    const frequencyTypeID = useMemo(() => {\n        return weekDropdownList?.find((item) => selectedWeekData == item?.frequency_type_name)\n            ?.frequency_type_id\n    }, [selectedWeekData, weekDropdownList])\n\n    useEffect(() => {\n        getPayrollReport()\n    }, [frequencyTypeID, selectedMonth, selectedYear])\n\n    const onSearchPayroll = (e) => {\n        setSearchVal(e.target.value)\n    }\n\n    const getPayrollReport = useCallback(\n        (isExport = false) => {\n            const body = {\n                pay_period_from_year: selectedYear?.getFullYear(),\n                pay_period_from_month: selectedMonth,\n                frequency_type: frequencyTypeID,\n            }\n            if (isExport) body.is_export = '1'\n            if (body?.frequency_type) {\n                setLoading(true)\n                getAdminPayrollReportByFiltersService(body)\n                    .then((res) => {\n                        if (isExport) {\n                            const fileName = `Payroll Reports - ${moment(new Date()).format(\n                                'DD MMM YY hh:mm'\n                            )}.csv`\n                            downloadAnyFileHelper(res, fileName)\n                            CustomToast.success('File Downloaded Successfully')\n                        } else {\n                            setPayrollData(res?.data)\n                        }\n                    })\n                    .finally(() => setLoading(false))\n            }\n        },\n        [frequencyTypeID, selectedMonth, selectedYear]\n    )\n\n    const displayData = useMemo(() => {\n        let filteredData = payrollData?.payroll_report\n        if (searchVal) {\n            filteredData = getGlobalSearchData(\n                payrollData?.payroll_report,\n                ['pay_period_from', 'pay_period_to'],\n                searchVal\n            )\n        }\n        return filteredData\n    }, [payrollData, searchVal])\n\n    const handleExport = () => {\n        getPayrollReport(true)\n    }\n\n    return (\n        <div style={{position: 'relative'}}>\n            <CustomLoader full visible={loading} />\n\n            <div\n                className='d-flex flex-wrap align-items-center justify-content-between bg-cmwhite py-5 ps-sm-15 pe-sm-10 px-3 gap-2 shadow-sm mb-10'\n                style={{borderRadius: '0 10px 10px 10px'}}\n            >\n                <div>\n                    <CustomDatePicker\n                        viewMode='year'\n                        maxDate={new Date()}\n                        dateFormat='yy'\n                        placeholder='YYYY'\n                        value={selectedYear}\n                        onChange={(e) => {\n                            setSelectedYear(e?.target?.value)\n                        }}\n                    />\n                </div>\n                <div>\n                    <CustomDropdown\n                        placeholder='Select Month'\n                        options={MONTH_DAYS}\n                        showClear={false}\n                        onChange={(e) => {\n                            setSelectedMonth(e.target.value)\n                        }}\n                        value={selectedMonth}\n                    />\n                </div>\n                <div>\n                    <CustomDropdown\n                        placeholder='Select Pay Frequency'\n                        searching={false}\n                        value={selectedWeekData}\n                        options={weekDropdownList}\n                        showClear={false}\n                        onChange={(e) => {\n                            handleSelectedWeekData(e.target.value)\n                        }}\n                        valueKey='name'\n                    />\n                </div>\n                <div>\n                    <CustomButton\n                        buttonType={BUTTON_TYPE.disabled}\n                        buttonLabel='Export'\n                        onClick={handleExport}\n                        padding={'py-3'}\n                        icon={'pi pi-file-export'}\n                    />\n                </div>\n            </div>\n\n            <div\n                className='table-responsive shadow-sm overflow-auto bg-cmwhite'\n                style={{borderRadius: 10}}\n            >\n                <table className='table'>\n                    <thead className={TABLE_BORDER}>\n                        <tr\n                            className='bg-cmGrey300 text-cmGrey900'\n                            style={{\n                                fontSize: '14px',\n                                fontWeight: '700',\n                                fontFamily: fontsFamily.manrope,\n                            }}\n                        >\n                            <th className='p-5 text-nowrap'>Pay Period</th>\n                            <th className='p-5 text-nowrap'>Payroll Date</th>\n                            <th className='p-5 text-nowrap'>Commissions</th>\n                            <th className='p-5 text-nowrap'>Overrides</th>\n                            <th className='p-5 text-nowrap'>Deductions</th>\n                            <th className='p-5 text-nowrap'>Reconciliations</th>\n                            <th className='p-5 text-nowrap'>Adjustments</th>\n                            <th className='p-5 text-nowrap'>Net Pay</th>\n                        </tr>\n                    </thead>\n                    <tbody\n                        style={{\n                            fontSize: '14px',\n                        }}\n                    >\n                        <tr\n                            style={{fontWeight: 800}}\n                            className='bg-cmGrey100 text-cmGrey900 border-bottom border-cmGrey400'\n                        >\n                            <td className='px-5 py-2 text-nowrap'>{selectedWeekData}</td>\n                            <td className='px-5 py-2 text-nowrap '></td>\n                            <td className='px-5 py-2 text-nowrap '>\n                                {formattedNumberFields(payrollData?.total_commissions, '$')}\n                            </td>\n                            <td className='px-5 py-2 text-nowrap '>\n                                {formattedNumberFields(payrollData?.total_override, '$')}\n                            </td>\n                            <td className='px-5 py-2 text-nowrap '>\n                                {formattedNumberFields(payrollData?.total_deduction, '$')}\n                            </td>\n                            <td className='px-5 py-2 text-nowrap '>\n                                {formattedNumberFields(payrollData?.total_reconciliation, '$')}\n                            </td>\n                            <td className='px-5 py-2 text-nowrap '>\n                                {formattedNumberFields(payrollData?.total_adjustment, '$')}\n                            </td>\n                            <td className='px-5 py-2 text-nowrap'>\n                                {formattedNumberFields(payrollData?.total_Pay, '$')}\n                            </td>\n                        </tr>\n\n                        {displayData?.length > 0 ? (\n                            displayData?.map((item, index) => (\n                                <tr\n                                    key={index}\n                                    className={`${TABLE_BORDER} text-cmGrey800 stripRow `}\n                                    style={{fontWeight: 600}}\n                                >\n                                    <td\n                                        className='p-5 text-nowrap text-cmBlue-Crayola text-decoration-underline cursor-pointer'\n                                        onClick={() =>\n                                            navigate('particular-payroll', {\n                                                state: {\n                                                    payPeriod: {\n                                                        pay_period_from: item?.pay_period_from,\n                                                        pay_period_to: item?.pay_period_to,\n                                                    },\n                                                },\n                                            })\n                                        }\n                                    >\n                                        {getValidDate(item?.pay_period_from, 'MM/DD/YYYY')} -{' '}\n                                        {getValidDate(item?.pay_period_to, 'MM/DD/YYYY')}\n                                    </td>\n                                    <td className='p-5 text-nowrap '>\n                                        {getValidDate(item?.payroll_date, 'MM/DD/YYYY')}\n                                    </td>\n                                    <td className='p-5 text-nowrap'>\n                                        {formattedNumberFields(item?.commission, '$')}\n                                    </td>\n                                    <td className='p-5 text-nowrap'>\n                                        {formattedNumberFields(item?.override, '$')}\n                                    </td>\n                                    <td className='p-5 text-nowrap'>\n                                        {formattedNumberFields(item?.deduction, '$')}\n                                    </td>\n                                    <td className='p-5 text-nowrap'>\n                                        {formattedNumberFields(item?.reconciliation, '$')}\n                                    </td>\n                                    <td className='p-5 text-nowrap'>\n                                        {formattedNumberFields(item?.adjustment, '$')}\n                                    </td>\n                                    <td\n                                        className='p-5 text-nowrap text-cmGrey900'\n                                        style={{fontWeight: 700}}\n                                    >\n                                        {formattedNumberFields(item?.netPay, '$')}\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr key='no-data'>\n                                <td colSpan={10}>\n                                    <CustomNoData label={'No data found'} />\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n\n                {1 > 0 ? <Pagination page={null} totalPages={null} setPage={null} /> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default PayrollReport\n","import React from 'react'\nimport {fontsFamily} from '../../../../../../../../assets/fonts/fonts'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {KTSVG} from '../../../../../../../../_metronic/helpers'\nimport {useNavigate} from 'react-router-dom'\nimport Pagination from '../../../../../sequidocs/component/Pagination'\n\nconst ImportHistoryPage = () => {\n    const navigate = useNavigate()\n    return (\n        <div style={{fontFamily: fontsFamily.manrope, fontSize: 14}}>\n            <div\n                className='d-flex justify-content-between gap-5 flex-wrap bg-cmwhite shadow-sm ps-5 pe-2 py-2 align-items-center mb-10'\n                style={{fontWeight: 600, borderRadius: 10}}\n            >\n                <div className='text-cmGrey900'>\n                    <KTSVG\n                        path='/media/icons/duotune/art/back-square.svg'\n                        svgClassName='w-25px h-25px cursor-pointer'\n                        onClick={() => navigate(-1)}\n                        className='me-3'\n                    />\n                    <span>Import History</span>\n                </div>\n                <div>\n                    <CustomInput type={INPUT_TYPE.search} />\n                </div>\n            </div>\n            {/* Table begins */}\n            <div className='table-responsive bg-cmwhite shadow-sm' style={{borderRadius: 10}}>\n                <table className='table text-cmGrey800' style={{fontWeight: 600, fontSize: 14}}>\n                    <thead>\n                        <tr\n                            className='text-cmGrey800 bg-cmGrey400'\n                            style={{fontSize: 12, fontWeight: 800}}\n                        >\n                            <th></th>\n                            <th className='py-5 text-nowrap'>Date & Time</th>\n                            <th className='py-5 text-nowrap'>File Name</th>\n                            <th className='py-5 text-center text-nowrap'>Total Sales</th>\n                            <th className='py-5 text-center text-nowrap'>New Sales</th>\n                            <th className='py-5 text-center text-nowrap'>Updated Sales</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className='text-cmGrey700 stripRow'>\n                            <td></td>\n                            <td className='py-5 text-nowrap'>03/07/21 5:23am</td>\n                            <td className='text-cmBlue-Crayola text-nowrap'>\n                                <KTSVG\n                                    path='/media/icons/duotune/art/document-download.svg'\n                                    svgClassName='w-20x h-20px cursor-pointer'\n                                    svgStyle={{width: '20px', height: '20px'}}\n                                    onClick={() => navigate(-1)}\n                                    className='me-1'\n                                />\n                                <span className='text-decoration-underline'>\n                                    Sale_sheet_12/10/2023.xlsx\n                                </span>\n                            </td>\n                            <td className='py-5 text-center text-nowrap'>409</td>\n                            <td className='py-5 text-center text-nowrap'>13</td>\n                            <td className='py-5 text-center text-nowrap'>15</td>\n                            <td></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <Pagination />\n        </div>\n    )\n}\n\nexport default ImportHistoryPage\n","import {Navigate, Routes, Route, Outlet, useSearchParams, useLocation} from 'react-router-dom'\nimport React, {useEffect, lazy} from 'react'\nimport {PageTitle} from '../../../../_metronic/layout/core'\nimport ProfileHeader from './ProfileHeader'\nimport Company from './component/company/Company'\nimport Sales from './component/sales/Sales'\nimport Costs from '../costs/component/costs/Costs'\nimport Payroll from './component/payrolll/Payroll'\nimport Clawback from './component/clawback/Clawback'\nimport Pending from './component/pending/Pending'\nimport Reconciliation from './component/reconciliation/Reconciliation'\nimport SingleSalePage from './component/sales/SingleSalePage'\nimport AccessRights, {\n    PERMISSIONS_GROUP,\n    PERMISSION_TYPE,\n} from '../../../../accessRights/AccessRights'\nimport ManageSalesPage from './component/sales/salesTableComponent/manageSales'\nimport {useDispatch} from 'react-redux'\nimport {getPayFrequencySettingAction} from '../../../../redux/actions/SettingActions'\nimport useQueryString from '../../../../hooks/useQueryString'\nimport SalesAccountSummary from './component/sales/AccountSummary/SalesAccountSummary'\nimport PayrollReport from './component/payrolll/PayrollReport'\nimport {allPermissionsAccess} from '../../../../accessRights/useCustomAccessRights'\nimport ImportHistoryPage from './component/sales/salesTableComponent/importHistoryComponents/ImportHistoryPage'\n\nconst profileBreadCrumbs = [\n    {\n        title: 'Dashboard /',\n        path: '/',\n        isSeparator: false,\n        isActive: false,\n    },\n    {\n        title: 'Reports /',\n        path: 'reports/company',\n        isSeparator: false,\n        isActive: false,\n    },\n]\n\nconst SALES_FILTERS = {\n    filter: 'this_year',\n    m1: 0,\n    m2: 0,\n    closed: 0,\n    search: '',\n    page: 1,\n    start_date: null,\n    end_date: null,\n    office_id: null,\n}\nconst ReportsHeader = () => {\n    const location = useLocation()\n    const [saleSearchParam, setSaleSearchParam] = useQueryString()\n\n    useEffect(() => {\n        if (location.pathname == '/reports/sales') {\n            setSaleSearchParam({\n                ...SALES_FILTERS,\n                ...saleSearchParam,\n            })\n        }\n    }, [location.pathname])\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getPayFrequencySettingAction())\n    }, [])\n    const [params, setParams] = useSearchParams({\n        filter: 'this_year',\n        m1: '',\n        m2: '',\n        closed: '',\n    })\n\n    return (\n        <div className='px-sm-10' style={{marginTop: -20}}>\n            <Routes>\n                <Route\n                    element={\n                        location.pathname.includes('import-history') ? (\n                            <Outlet />\n                        ) : (\n                            <>\n                                <ProfileHeader />\n                                <Outlet />\n                            </>\n                        )\n                    }\n                >\n                    <Route\n                        path='company'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Company</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.company.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Company />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Sales</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.sales.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Sales\n                                        params={saleSearchParam}\n                                        setParams={setSaleSearchParam}\n                                    />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='costs'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Costs</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.cost.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Costs />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='payroll/particular-payroll'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Payroll</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.payroll.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Payroll />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='payroll/particular-payroll'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Payroll</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.payroll.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <PayrollReport />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='payroll'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Payroll</PageTitle>\n                                <AccessRights\n                                    permission={PERMISSIONS_GROUP.administrator.reports.payroll}\n                                    type={PERMISSION_TYPE.view}\n                                    showPlaceHolder\n                                >\n                                    <PayrollReport />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='reconciliation'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Reconciliation\n                                </PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.reconciliation\n                                            .view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Reconciliation />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='clawback'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}> Clawback</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.clawback.view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Clawback />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='pending-installs'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>\n                                    Pending Installs\n                                </PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.pendingInstall\n                                            .view\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <Pending />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales/customer-Info'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Sales</PageTitle>\n                                <SingleSalePage />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales/customer-Info/account-summary'\n                        element={\n                            <>\n                                <SalesAccountSummary />\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales/add-sales'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Add Sales</PageTitle>\n                                <AccessRights\n                                    customCondition={\n                                        allPermissionsAccess.administrator.reports.sales.add\n                                    }\n                                    showPlaceHolder\n                                >\n                                    <ManageSalesPage />\n                                </AccessRights>\n                            </>\n                        }\n                    />\n                    <Route\n                        path='sales/import-history'\n                        element={\n                            <>\n                                <PageTitle breadcrumbs={profileBreadCrumbs}>Integrations</PageTitle>\n                                <ImportHistoryPage />\n                            </>\n                        }\n                    />\n                    <Route index element={<Navigate to='/payroll' />} />\n                </Route>\n            </Routes>\n        </div>\n    )\n}\n\nexport default ReportsHeader\n"],"names":["ProfileHeader","location","useLocation","companySetting","useSelector","getCompanySettingSelector","_jsxs","style","fontSize","fontWeight","fontFamily","fontsFamily","overflowX","className","children","_jsx","AccessRights","customCondition","allPermissionsAccess","Link","concat","pathname","to","borderRadius","includes","reconciliation","Card","_ref","_cardData$revenue_sum","_cardData$revenue_sum2","_cardData$revenue_sum3","_cardData$revenue_sum4","_cardData$revenue_sum5","_cardData$revenue_sum6","_cardData$revenue_sum7","_cardData$revenue_sum8","_cardData$revenue_sum9","_cardData$revenue_sum10","_cardData$revenue_sum11","_cardData$revenue_sum12","_cardData$revenue_sum13","_cardData$revenue_sum14","_cardData$revenue_sum15","_cardData$revenue_sum16","_cardData$revenue_sum17","_cardData$revenue_sum18","_cardData$revenue_sum19","_cardData$cost_summar","_cardData$cost_summar2","_cardData$cost_summar3","_cardData$cost_summar4","_cardData$cost_summar5","_cardData$cost_summar6","_cardData$cost_summar7","_cardData$cost_summar8","_cardData$cost_summar9","_cardData$cost_summar10","_cardData$cost_summar11","_cardData$cost_summar12","_cardData$cost_summar13","_cardData$cost_summar14","_cardData$cost_summar15","_cardData$cost_summar16","_cardData$profitabili","_cardData$profitabili2","_cardData$profitabili3","_cardData$profitabili4","_cardData$profitabili5","_cardData$profitabili6","_cardData$profitabili7","_cardData$profitabili8","_cardData$profitabili9","_cardData$profitabili10","cardData","payroll","setPayroll","useState","cost","setCost","_Fragment","revenue_summary","revenue_percentage","marginLeft","data","length","install_partner","formattedNumberFields","gross_total","total","cost_summary","cost_percentage","onClick","cursor","marginTop","src","More","More1","costs","map","item","cost_data","cost_amount","payroll_data","payroll_amount","total_costs","profitability_summary","profitability_percentage","revenue","clowback","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","ComapanyChart","graphData","chartRef","useRef","mode","useThemeMode","refreshChart","current","parseInt","getCSS","chart","ApexCharts","height","months","profitability","profitabilityMinus","Object","keys","keyName","i","_graphData$keyName$re","_graphData$keyName","_graphData$keyName$re2","_graphData$keyName2","_graphData$keyName3","_graphData$keyName3$p","_graphData$keyName4","_graphData$keyName5","_graphData$keyName5$p","_graphData$keyName$co","_graphData$keyName6","_graphData$keyName6$c","push","toFixed","finalItem","split","labelColor","getCSSVariableValue","maxValue","Math","max","series","name","type","stacked","zoom","enabled","autoScaleYaxis","toolbar","show","plotOptions","bar","horizontal","columnWidth","legend","dataLabels","stroke","width","colors","xaxis","categories","axisBorder","axisTicks","labels","rotate","yaxis","seriesName","min","formatter","val","formattedNumberFieldsWithoutDecimal","title","text","color","opposite","fill","opacity","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","tooltip","y","grid","borderColor","strokeDashArray","lines","padding","top","right","bottom","left","getChartOptions","render","useEffect","destroy","ref","id","Company","setValue","loading","setLoading","reportData","setReportData","setGraphData","officeList","selectedLocation","setSelectedLocation","useOfficeLocation","setFilter","startDate","setStartDate","endDate","setEndDate","body","toLocaleLowerCase","office_id","moment","isValid","start_date","end_date","getAdminCompanyReportService","then","res","getAdminCompanyGraphService","catch","e","CustomToast","getErrorMessageFromResponse","finally","position","CustomLoader","full","visible","CommanTopbarforReports","onChangeFilter","loc","onLocationChange","onStartDateChange","start","format","changeStartDate","onEndDateChange","end","changeEndDate","notToExport","Chart","ArcElement","graphsData","datasets","m2_complete","m2_pending","cancelled","clawback","backgroundColor","display","Doughnut","options","plugins","rotation","circumference","cutout","maintainAspectRatio","responsive","transform","textAlign","total_sales","Accounts","_Number$toFixed","a","b","Number","Avg","_avgData$avg_account_","_avgData$avg_kw_per_r","_avgData$bestDay","_avgData$bestDay2","_avgData$bestWeek","_avgData$bestWeek2","_avgData$bestWeek3","_avgData$bestMonth","_avgData$bestMonth2","avgData","background","avg_account_per_rep","avg_kw_per_rep","bestDay","kw","Date","date","toLocaleString","month","day","bestWeek","bestMonth","getValidDate","_extends","assign","bind","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","ProgressBarBase","defaultProps","__TYPE","showValue","unit","displayValueTemplate","undefined","getProps","props","ObjectUtils","getOtherProps","ProgressBar","React","inProps","elementRef","getElement","otherProps","classNames","label","role","createDeterminate","createIndeterminate","Error","displayName","open","handleClose","companyProfileFilePickerRef","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadError","setUploadError","errorMessage","setErrorMessage","onUploadFile","useCallback","formData","FormData","append","importAdminSalesDataService","completed","err","_err$data$error","_err$data","error","CustomModal","onHide","maxWidth","showline","sampleFileDownload","fileURL","AMAZON_S3_CONFIG","axios","responseType","response","blob","Blob","saveAs","console","onDragEnter","preventDefault","onDragOver","onDrop","_e$dataTransfer","_e$dataTransfer$files","_file$name","_file$name$split","file","dataTransfer","files","_companyProfileFilePi","click","accept","onChange","_e$target","_e$target$files","KTSVG","path","svgClassName","svgStyle","size","removeFile","CustomButton","buttonType","BUTTON_TYPE","buttonLabel","buttonSize","BUTTON_SIZE","CheckBoxTitle","isChecked","_reportData$data","_reportData$data2","_reportData$data3","params","setParams","headerFilterChnage","setOpen","cstype","setCsType","navigate","useNavigate","checkBoxValue","setCheckBoxValue","closerSetterObj","setCloserSetterObj","searchText","setSearchText","search","openImportExcel","setOpenImportExcel","sortValue","setSortValue","sortingOrder","setSortingOrder","handleOpenImportExcel","ReportApi","page","getAdminReportService","sort","sort_val","m1","m2","closed","indexOf","delaySave","debounce","headerFilterChange","_e$target3","_e$target4","getBooleanValue","checked","CustomInput","INPUT_TYPE","_e$target2","alignItems","CustomCheckbox","CustomLink","TABLE_BORDER","CustomSortSvg","index","_item$data_source_typ","_item$mark_account_st","_item$closer1_detail","_item$closer1_detail$","_item$closer1_detail2","_item$closer1_detail$2","_item$closer1_detail3","_item$setter1_detail","_item$setter1_detail$","_item$setter1_detail2","_item$setter1_detail$2","_item$setter1_detail3","_item$total_m","_getValidDate","_item$total_m2","_getValidDate2","_formattedNumberField","alertcentre_status","textDecoration","pid","state","SHOW_BASED_ON_HOST","CustomTooltip","customer_name","data_source_type","mark_account_status_name","RedirectToEmployeeProfile","employeeId","closer1_detail","first_name","last_name","setter1_detail","total_m1","m1_date","total_m2","m2_date","epc","net_epc","adders","total_commission","colSpan","paddingTop","paddingBottom","Pagination","setPage","changedPage","totalPages","last_page","ExcelImportModal","_graphsData$install","_graphsData$uninstall","contracts","avg_profit_per_rep","total_kw_installed","total_revenue_generated","total_kw_pending","total_revenue_pending","Progress","install","replace","uninstall","Sales","tableLoading","setTableLoading","getAdminAllGraphsService","delaySaveToDb","onExportCostData","exportAdminSalesService","fileName","downloadAnyFileHelper","changeFilter","handleExport","accounts","best_avg","SalesContractCard","install_ratio","Tabel","onSearchChange","ViewCostomer","EditRunPayroll","editData","getPayrollData","currentPayPeriod","setData","commission","override","deduction","adjustment","comment","commentError","setCommentError","handleUpdate","field","dummyData","onEditPayroll","status","payroll_id","updatePayrollDetailService","CustomImage","emp_img","pay_period_from","pay_period_to","override_value_is_higher","net_pay","placeholder","adjustPayroll","commission_amount","overrides_amount","deductions_amount","clawbacks_amount","adjustments_amount","adjustPayrollDetailService","PayrollTabel","_payrollTableData$dat","_payrollTableData$dat2","_payrollTableData$dat3","payrollTableData","activePage","onPageChange","showCreateAppModal","setShowCreateAppModal","showAdjustmentModal","setShowAdjustmentModal","showReimbursementsModal","setShowReimbursementsModal","showDeductionsModal","setShowDeductionsModal","showOverridesModal","setShowOverridesModal","payrollMetaData","setPayrollMetaData","_item$employee","_item$position","employee_image","employee","user_id","reimbursement","PayRollCommissionsTable","handleCloseCommissions","report","PayrollAdjustments","handleCloseAdjustment","PayRollReimbursTable","handleReimbursement","PayRollDeductionTable","handleDeduction","PayRollOverridesTable","handleOverrides","RunPayroll","_location$state5","_location$state5$payP","_location$state6","_location$state6$payP","_location$state7","_location$state7$payP","_location$state8","_location$state8$payP","_location$state9","_location$state10","payrollData","setPayrollData","searchTerm","setSearchTerm","searchVal","setSearchVal","showSummary","setShowSummary","selectedWeekData","executedPayPeriodList","weekDropdownList","usePayFrequency","_location$state$payPe","_location$state","_location$state$payPe2","_location$state$payPe3","_location$state2","_location$state2$payP","payPeriod","getAdminPayrollReportService","handleViewSummary","periodList","useMemo","period","downloadCsvFile","_location$state$payPe4","_location$state3","_location$state3$payP","_location$state$payPe5","_location$state4","_location$state4$payP","_weekDropdownList$fin","pay_frequency","find","frequency_type_name","frequency_type_id","exportPayrollReportService","border","process","REACT_APP_THEME_NAME","boxShadow","selectedPage","ViewSummary","close","isReport","_cardData$header","_cardData$header2","_cardData$header3","_cardData$header3$mos","_cardData$header$most","_cardData$header4","_cardData$header4$mos","_cardData$header$most2","_cardData$header5","_cardData$header5$mos","header","clawback_count","total_clawback","most_clawback_closer","user_name","most_clawback_state","most_clawback_installer","_clawBackData$data","_clawBackData$data2","_clawBackData$data3","clawBackData","onPress","btn","setBtn","setSearch","autoComplete","_item$customer_name","_item$customer_state","_item$setter","_item$closer","_item$last_payment","_item$amount","customer_state","setter_id","setter","closer_id","closer","clawback_date","last_payment","amount","Clawback","clawBack","setClawBackData","getAdminClawBackReportService","onExportClawbackData","exportAdminClawBackReportService","CrawbackTabel","_CardData$pending_cou","_CardData$total_pendi","_CardData$most_pendin","_CardData$most_pendin2","_CardData$most_pendin3","_CardData$most_pendin4","_CardData$most_pendin5","_CardData$most_pendin6","CardData","pending_count","total_pending","most_pending_closer","closer_name","most_pending_office","office_name","most_pending_installer","FILTER_KEYS","initialFilter","onApplyFilter","resetFilter","filterProps","filterData","setFilterData","useFilterButton","closerList","getAllClosersSelector","setterList","getAllSettersSelector","closerSetterList","onChangeInputData","resetFilterData","CustomFilterButton","onResetClick","CustomDropdown","valueKey","PENDING_INSTALL_FILTER","filter_install","filter_closer_setter","filter_age_of_account","filter_show_only_account","handleFilterApply","PendingInstallFilter","updatedFilter","filters","tableLayout","_item$pid","_item$install_partner","_item$gross_account_v","_ref2","gross_account_value","dealer_fee_percentage","dealer_fee_amount","age_days","Pending","tablefilter","setTableFilter","getAdminPendingInsatllReportService","onExportPendingData","exportAdminPendingInstallReportService","PendingTabel","handleSearchChange","_reconcilliationData$","_reconcilliationData$2","_reconcilliationData$3","_reconcilliationData$4","reconcilliationData","userData","setUserData","showCommissionModal","setShowCommissionModal","showClawbackModal","setShowClawbackModal","placeSelf","total_reconciliation","result","_item$emp_name","emp_name","openCommissionModal","commissionWithholding","openOverrideModal","overrideDue","openClawbackModal","clawbackDue","openAdjustmentModal","totalAdjustments","total_due","ReconOverridesTable","ReconCommissionTable","ReconClawbackTable","ReconAdjustmentTable","toAbsoluteUrl","Reconciliation","setReconcilliationData","stateList","reconciliationSchedule","getReconciliationScheduleSelector","selectedReconPeriod","setReconPeriod","setActivePage","period_from","period_to","getReconciliationReportService","is_export","showClear","selectedData","displayKey","icon","ReconciliationTabel","FiscalYearTabel","_summaryData$commissi25","_summaryData$commissi26","_summaryData$commissi27","_summaryData$commissi28","_summaryData$commissi29","_summaryData$commissi30","_summaryData$commissi31","_summaryData$commissi32","_summaryData$commissi33","_summaryData$commissi34","_summaryData$commissi35","_summaryData$commissi36","_summaryData$commissi37","_summaryData$commissi38","_summaryData$commissi39","_summaryData$commissi40","_summaryData$total_co","_summaryData$total_ad","_summaryData$total_co2","_summaryData$total_co3","_summaryData$total_ad2","_summaryData$total_ad3","_summaryData$commissi41","_summaryData$commissi42","_summaryData$commissi43","_summaryData$commissi44","_summaryData$commissi45","_summaryData$commissi46","_summaryData$commissi47","_summaryData$commissi48","_summaryData$commissi49","_summaryData$commissi50","_summaryData$commissi51","_summaryData$commissi52","_summaryData$commissi53","_summaryData$commissi54","_summaryData$commissi55","_summaryData$commissi56","_summaryData$commissi57","_summaryData$commissi58","_summaryData$commissi59","_summaryData$commissi60","_summaryData$commissi61","_summaryData$commissi62","_summaryData$commissi63","_summaryData$commissi64","_summaryData$commissi65","_summaryData$commissi66","_summaryData$commissi67","_summaryData$commissi68","_summaryData$commissi69","_summaryData$commissi70","_summaryData$commissi71","_summaryData$commissi72","_summaryData$commissi73","_summaryData$commissi74","_summaryData$commissi75","_summaryData$commissi76","_summaryData$commissi77","_summaryData$commissi78","_summaryData$commissi79","_summaryData$commissi80","_summaryData$commissi81","_summaryData$commissi82","_summaryData$commissi83","_summaryData$commissi84","_summaryData$commissi85","_summaryData$commissi86","_summaryData$commissi87","_summaryData$commissi88","_summaryData$commissi89","_summaryData$commissi90","_summaryData$commissi91","_summaryData$commissi92","_summaryData$commissi93","_summaryData$commissi94","_summaryData$commissi95","_summaryData$commissi96","_summaryData$commissi97","_summaryData$commissi98","_summaryData$commissi99","_summaryData$commissi100","_summaryData$commissi101","_summaryData$commissi102","_summaryData$commissi103","_summaryData$commissi104","_summaryData$commissi105","_summaryData$commissi106","_summaryData$commissi107","_summaryData$commissi108","_summaryData$commissi109","_summaryData$commissi110","_summaryData$commissi111","_summaryData$commissi112","_summaryData$commissi113","_summaryData$commissi114","_summaryData$commissi115","_summaryData$commissi116","_summaryData$commissi117","_summaryData$commissi118","typeFilter","sumData","summaryData","totals","totalPaid","totalDueAmount","grandTotal","_summaryData$commissi","_summaryData$commissi2","_summaryData$commissi3","_summaryData$commissi4","_summaryData$commissi5","_summaryData$commissi6","_summaryData$commissi7","_summaryData$commissi8","_summaryData$commissi9","_summaryData$commissi10","_summaryData$commissi11","_summaryData$commissi12","_summaryData$commissi13","_summaryData$commissi14","_summaryData$commissi15","_summaryData$commissi16","_summaryData$commissi17","_summaryData$commissi18","_summaryData$commissi19","_summaryData$commissi20","_summaryData$commissi21","_summaryData$commissi22","_summaryData$commissi23","_summaryData$commissi24","commission_paid_total","adjustment_paid_total","commission_unpaid_total","adjustment_unpaid_total","setter1","paid_total","setter2","closer1","closer2","unpaid_total","payPeriodKey","_item$date_paid","date_paid","total_commissions","total_adjustment","_item$type$toUpperCas","_item$type","lineHeight","toUpperCase","paid","unpaid","info","image","_item$type2","description","paid_amount","unpaid_amount","_item$type3","_item$type4","_item$type5","_summaryData$total_ov","_summaryData$total_ov2","_summaryData$total_ov3","_summaryData$setter5","_summaryData$setter5$","_summaryData$setter6","_summaryData$setter6$","_summaryData$setter7","_summaryData$setter7$","_summaryData$setter8","_summaryData$setter8$","_summaryData$setter9","_summaryData$setter10","_summaryData$setter11","_summaryData$setter12","_summaryData$setter13","_summaryData$setter14","_summaryData$setter15","_summaryData$setter16","_summaryData$setter17","_summaryData$setter18","_summaryData$setter19","_summaryData$setter20","_summaryData$closer5","_summaryData$closer5$","_summaryData$closer6","_summaryData$closer6$","_summaryData$closer7","_summaryData$closer7$","_summaryData$closer8","_summaryData$closer8$","_summaryData$closer9","_summaryData$setter21","_summaryData$closer10","_summaryData$closer11","_summaryData$closer12","_summaryData$closer13","_summaryData$closer14","_summaryData$closer15","_summaryData$closer16","_summaryData$closer17","_summaryData$closer18","_summaryData$closer19","_summaryData$setter1$","_summaryData$setter","_summaryData$setter2$","_summaryData$setter2","_summaryData$closer1$","_summaryData$closer","_summaryData$closer2$","_summaryData$closer2","_summaryData$setter1$2","_summaryData$setter3","_summaryData$setter2$2","_summaryData$setter4","_summaryData$closer1$2","_summaryData$closer3","_summaryData$closer2$2","_summaryData$closer4","total_overrides_amount_pending","total_adjustment_amount_pending","total_overrides_amount_paid","total_adjustment_amount_paid","total_overrides","override_over","PaidAmount","UnPaidAmount","tableData","setTableData","totalAmount","setTotalAmount","getCompanyData","getCompanyAccountSummaryService","_i$through","through","withheld_amount","CustomNoData","SalesAccountSummary","naviagte","setSummaryData","summaryDatabyPosition","setSummaryDatabyPosition","setTypeFilter","tab","setTab","salesAccountSummaryService","salesAccountSummarybyPositionService","zIndex","searching","Commisions","Overrides","AccountSummaryCompany","PayrollReport","handleSelectedWeekData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","isExport","setIsExport","frequencyTypeID","getPayrollReport","pay_period_from_year","getFullYear","pay_period_from_month","frequency_type","getAdminPayrollReportByFiltersService","displayData","filteredData","payroll_report","getGlobalSearchData","CustomDatePicker","viewMode","maxDate","dateFormat","MONTH_DAYS","total_override","total_deduction","total_Pay","payroll_date","netPay","ImportHistoryPage","profileBreadCrumbs","isSeparator","isActive","SALES_FILTERS","ReportsHeader","saleSearchParam","setSaleSearchParam","useQueryString","dispatch","useDispatch","getPayFrequencySettingAction","useSearchParams","Routes","Route","element","Outlet","PageTitle","breadcrumbs","showPlaceHolder","Costs","Payroll","permission","PERMISSIONS_GROUP","PERMISSION_TYPE","SingleSalePage","ManageSalesPage","Navigate"],"sourceRoot":""}