{"version":3,"file":"static/js/4130.3b029f6b.chunk.js","mappings":"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","sources":["_metronic/helpers/components/CustomSortSVG.js","app/modules/admin/Setting/components/Position/CompensationPlan/positionSetupSteps/PositionSetupStep1.js","app/modules/admin/Setting/components/Position/CompensationPlan/positionSetupSteps/PositionSetupStep2.js","app/modules/admin/Setting/components/Position/CompensationPlan/positionSetupSteps/PositionSetupStep3.js","app/modules/admin/Setting/components/Position/CompensationPlan/positionSetupSteps/PositionSetupStep4.js","app/modules/admin/Setting/components/Position/CompensationPlan/positionSetupSteps/PositionSetupStep5.js","app/modules/admin/Setting/components/Position/CompensationPlan/positionSetupSteps/positionSetupStep6/PositionSetupStep6.js","app/modules/admin/Setting/components/Position/CompensationPlan/CreateCompensationAppModal.js","customComponents/customInputs/customSearchInput/CustomSearchInput.js"],"sourcesContent":["const CustomSortSvg = ({className = '', onClick = () => {}, sortingOrder = null}) => {\n    return (\n        <span\n            className={'cursor-pointer d-flex flex-column ms-2 mb-0' || className}\n            onClick={onClick}\n        >\n            {sortingOrder !== 'asc' ? (\n                <i class='bi bi-caret-up-fill text-cmGrey600'></i>\n            ) : (\n                <i class='bi bi-caret-up-fill text-cmGrey900'></i>\n            )}\n            {sortingOrder !== 'desc' ? (\n                <i class='bi bi-caret-down-fill text-cmGrey600'></i>\n            ) : (\n                <i class='bi bi-caret-down-fill text-cmGrey900'></i>\n            )}\n        </span>\n    )\n}\n\nexport {CustomSortSvg}\n","import {useCallback} from 'react'\nimport {getBooleanValue, percentageLimitCheck} from '../../../../../../../../helpers/CommonHelpers'\nimport Lock from '../../../../../Setting/Icon/lock.png'\nimport Unloack from '../../../../../Setting/Icon/unlock.png'\nimport {PositionLockedView} from '../CreateCompensationAppModal'\n\nimport CustomDropdown from '../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport {MAIN_POSITTIONS_ID} from '../../../../../../../../constants/constants'\n\nconst PositionSetupStep1 = ({\n    POSITIONS_SETUP_FIELDS_KEYS,\n    positionSetupData,\n    selectedPositionData,\n    updatePositionSetupData,\n}) => {\n    const onChangeInputData = useCallback(\n        (e) => {\n            updatePositionSetupData(e?.target?.name, e?.target?.value)\n        },\n        [updatePositionSetupData]\n    )\n    const onChangeCommission = (e) => {\n        let {value, max, name} = e.target\n        if (percentageLimitCheck(max, value)) onChangeInputData(e)\n    }\n    return (\n        <div\n            className='current pb-10'\n            data-kt-stepper-element='content'\n            style={{\n                fontFamily: 'Manrope',\n                fontSize: '14px',\n                fontWeight: '600',\n            }}\n        >\n            <div className='w-100'>\n                <div className='fv-row  mb-10'>\n                    {![MAIN_POSITTIONS_ID.closer, MAIN_POSITTIONS_ID.setter].includes(\n                        positionSetupData?.position_id?.toString()\n                    ) ? (\n                        <div className='mb-5'>\n                            <CustomInput\n                                label={'Position'}\n                                min='0'\n                                placeholder='Enter Position Name'\n                                name={POSITIONS_SETUP_FIELDS_KEYS.position_name}\n                                value={positionSetupData?.position_name}\n                                onChange={onChangeInputData}\n                                rejex={/^[\\w\\-\\s]+$/}\n                            />\n                        </div>\n                    ) : null}\n\n                    <div className=' d-flex align-items-end gap-2 '>\n                        <CustomInput\n                            label={'Commissions'}\n                            required\n                            suffixText={'%'}\n                            type={INPUT_TYPE.number}\n                            min='0'\n                            placeholder='Enter'\n                            name={POSITIONS_SETUP_FIELDS_KEYS.commission_parentage}\n                            value={positionSetupData?.commission_parentage}\n                            onChange={onChangeCommission}\n                            max={100}\n                        />\n                    </div>\n                    <PositionLockedView\n                        onChange={() => {\n                            updatePositionSetupData(\n                                POSITIONS_SETUP_FIELDS_KEYS.commission_parentag_hiring_locked,\n                                getBooleanValue(\n                                    !positionSetupData?.commission_parentag_hiring_locked\n                                )\n                            )\n                        }}\n                        name={POSITIONS_SETUP_FIELDS_KEYS.commission_parentag_hiring_locked}\n                        checked={positionSetupData?.commission_parentag_hiring_locked}\n                    />\n                </div>\n                {/*end::Form Group */}\n                <div className='mt-8  w-100'>\n                    <div className='row'>\n                        <div className='col text-cmGrey700'>\n                            <CustomDropdown\n                                label={'Commission Structure'}\n                                required\n                                options={[{name: 'Fixed', value: 'fixed'}]}\n                                placeholder='Select Commission Structure'\n                                searching={false}\n                                name={POSITIONS_SETUP_FIELDS_KEYS.commission_structure_type}\n                                value={positionSetupData?.commission_structure_type?.toLowerCase()}\n                                onChange={onChangeInputData}\n                            />\n                        </div>\n                        <PositionLockedView\n                            name={\n                                POSITIONS_SETUP_FIELDS_KEYS.commission_parentag_type_hiring_locked\n                            }\n                            checked={positionSetupData?.commission_parentag_type_hiring_locked}\n                            onChange={() => {\n                                updatePositionSetupData(\n                                    POSITIONS_SETUP_FIELDS_KEYS.commission_parentag_type_hiring_locked,\n                                    getBooleanValue(\n                                        !positionSetupData?.commission_parentag_type_hiring_locked\n                                    )\n                                )\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PositionSetupStep1\n","import {UNIT_TYPE1} from '../../../../../../../../constants/constants'\nimport {useCallback} from 'react'\nimport {PositionLockedView} from '../CreateCompensationAppModal'\nimport {getBooleanValue} from '../../../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../../../customComponents/customToast/CustomToast'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst PositionSetupStep2 = ({\n    POSITIONS_SETUP_FIELDS_KEYS,\n    positionSetupData,\n    selectedPositionData,\n    updatePositionSetupData,\n    updateMultiplePositionSetupData,\n}) => {\n    const onChangeInputData = useCallback(\n        (e) => {\n            updatePositionSetupData(e?.target?.name, e?.target?.value)\n        },\n        [updatePositionSetupData]\n    )\n    return (\n        <div className='pb-5' style={{fontSize: '14px'}} data-kt-stepper-element='content'>\n            <div className='w-100'>\n                <div className='form-check ml-12px d-flex form-switch form-switch-sm form-check-custom form-check-solid'>\n                    <label\n                        className='form-label text-cmGrey900'\n                        style={{\n                            fontSize: '16px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '600',\n                        }}\n                    >\n                        Upfront\n                    </label>\n                    <input\n                        // style={{marginTop: '-4px'}}\n                        className='form-check-input ms-6 cursor-pointer'\n                        type='checkbox'\n                        name={POSITIONS_SETUP_FIELDS_KEYS.upfront_status}\n                        checked={positionSetupData?.upfront_status}\n                        onChange={() => {\n                            const changedStatus = !positionSetupData?.upfront_status\n                            if (!changedStatus) {\n                                updateMultiplePositionSetupData((val) => ({\n                                    ...val,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.upfront_status]: 0,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.upfront_ammount]: null,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.upfront_ammount_locked]: 0,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.calculated_by]: null,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.calculated_locked]: 0,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.upfront_system]: null,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.upfront_system_locked]: 0,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.upfront_limit]: null,\n                                }))\n                            } else {\n                                updatePositionSetupData(\n                                    POSITIONS_SETUP_FIELDS_KEYS.upfront_status,\n                                    getBooleanValue(changedStatus)\n                                )\n                            }\n                        }}\n                    />\n                    <label\n                        className='ms-2 me-2 text-cmGrey600'\n                        style={{\n                            fontFamily: 'Manrope',\n                            fontSize: '12px',\n                        }}\n                    >\n                        {positionSetupData?.upfront_status ? 'Enabled' : 'Disabled'}\n                    </label>\n                </div>\n                {positionSetupData?.upfront_status ? (\n                    <>\n                        <div className='container mt-4 mb-5' style={{marginLeft: '-10px'}}>\n                            <div className='row mb-10'>\n                                <div\n                                    className='mb-5 col-sm text-cmGrey700'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: '600',\n                                    }}\n                                >\n                                    <CustomInput\n                                        label='Amount'\n                                        required\n                                        prefixText={'$'}\n                                        type={INPUT_TYPE.currency}\n                                        name={POSITIONS_SETUP_FIELDS_KEYS.upfront_ammount}\n                                        value={positionSetupData?.upfront_ammount}\n                                        onChange={onChangeInputData}\n                                        placeholder='Enter'\n                                    />\n\n                                    <PositionLockedView\n                                        name={POSITIONS_SETUP_FIELDS_KEYS.upfront_ammount_locked}\n                                        checked={positionSetupData?.upfront_ammount_locked}\n                                        onChange={() => {\n                                            if (!positionSetupData?.calculated_by)\n                                                return CustomToast.error('Select calculated by')\n                                            const value = getBooleanValue(\n                                                !positionSetupData?.upfront_ammount_locked\n                                            )\n                                            updatePositionSetupData(\n                                                POSITIONS_SETUP_FIELDS_KEYS.upfront_ammount_locked,\n                                                value\n                                            )\n                                            updatePositionSetupData(\n                                                POSITIONS_SETUP_FIELDS_KEYS.calculated_locked,\n                                                value\n                                            )\n                                        }}\n                                    />\n                                </div>\n                                <div className='col-sm text-cmGrey700'>\n                                    <CustomDropdown\n                                        label={'Calculated'}\n                                        required\n                                        placeholder='Select Calculated'\n                                        name={POSITIONS_SETUP_FIELDS_KEYS.calculated_by}\n                                        value={positionSetupData?.calculated_by ?? ''}\n                                        onChange={onChangeInputData}\n                                        options={UNIT_TYPE1}\n                                        searching={false}\n                                    />\n                                    <PositionLockedView\n                                        name={POSITIONS_SETUP_FIELDS_KEYS.calculated_locked}\n                                        checked={positionSetupData?.calculated_locked}\n                                        onChange={() => {\n                                            if (!positionSetupData?.upfront_ammount_locked) {\n                                                updatePositionSetupData(\n                                                    POSITIONS_SETUP_FIELDS_KEYS.calculated_locked,\n                                                    getBooleanValue(\n                                                        !positionSetupData?.calculated_locked\n                                                    )\n                                                )\n                                            }\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='container' style={{marginLeft: '-10px'}}>\n                            <div className='row'>\n                                <div className='col text-cmGrey700'>\n                                    <label className='d-flex flex-row'>\n                                        <CustomDropdown\n                                            label={'Upfront System'}\n                                            required\n                                            name={POSITIONS_SETUP_FIELDS_KEYS.upfront_system}\n                                            value={positionSetupData?.upfront_system ?? ''}\n                                            onChange={onChangeInputData}\n                                            options={[{name: 'Fixed', value: 'Fixed'}]}\n                                            searching={false}\n                                        />\n                                    </label>\n                                </div>\n                                <PositionLockedView\n                                    name={POSITIONS_SETUP_FIELDS_KEYS.upfront_system_locked}\n                                    checked={positionSetupData?.upfront_system_locked}\n                                    onChange={() => {\n                                        updatePositionSetupData(\n                                            POSITIONS_SETUP_FIELDS_KEYS.upfront_system_locked,\n                                            getBooleanValue(\n                                                !positionSetupData?.upfront_system_locked\n                                            )\n                                        )\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className='container mt-12' style={{marginLeft: '-10px'}}>\n                            <div className='row'>\n                                <div\n                                    className='col text-cmGrey700'\n                                    style={{\n                                        fontFamily: 'Manrope',\n                                        fontSize: '14px',\n                                        fontWeight: '600',\n                                    }}\n                                >\n                                    <div className=''>\n                                        <CustomInput\n                                            label={'Limit'}\n                                            prefixText={'$'}\n                                            subLabel={'(Per Sale)'}\n                                            type={INPUT_TYPE.currency}\n                                            name={POSITIONS_SETUP_FIELDS_KEYS.upfront_limit}\n                                            value={positionSetupData?.upfront_limit}\n                                            onChange={onChangeInputData}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default PositionSetupStep2\n","import Unloack from '../../../../../Setting/Icon/unlock.png'\nimport {useCallback, useEffect, useMemo} from 'react'\nimport {useSelector} from 'react-redux'\nimport _ from 'lodash'\nimport {\n    getCostCenterListSelector,\n    getParentChildCostCenterSelector,\n} from '../../../../../../../../redux/selectors/SettingsSelectors'\nimport {PositionLockedView} from '../CreateCompensationAppModal'\nimport {useDispatch} from 'react-redux'\nimport {getParentChildCostCenterAction} from '../../../../../../../../redux/actions/SettingActions'\nimport {getBooleanValue, percentageLimitCheck} from '../../../../../../../../helpers/CommonHelpers'\n\nimport CustomDropdown from '../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomDelete from '../../../../../../../../customComponents/customIcons/CustomDelete'\n\nconst PositionSetupStep3 = ({\n    POSITIONS_SETUP_FIELDS_KEYS,\n    positionSetupData,\n    selectedPositionData,\n    updatePositionSetupData,\n    updateMultiplePositionSetupData,\n}) => {\n    const dispatch = useDispatch()\n    const costCenterList = useSelector(getParentChildCostCenterSelector)\n    const handleAdd = () => {\n        const tempData = [...positionSetupData?.deduction]\n        tempData.push({\n            status: 1,\n            cost_center_id: null,\n            deduction_type: '$',\n            ammount_par_paycheck: null,\n        })\n        updatePositionSetupData(POSITIONS_SETUP_FIELDS_KEYS.deduction, tempData)\n    }\n\n    const onChangeDeduction = (e, index, field) => {\n        const tempData = [...positionSetupData?.deduction]\n        tempData[index][field] = e?.target?.value\n        updatePositionSetupData(POSITIONS_SETUP_FIELDS_KEYS.deduction, tempData)\n    }\n\n    useEffect(() => {\n        dispatch(getParentChildCostCenterAction())\n    }, [])\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            updatePositionSetupData(e?.target?.name, e?.target?.value)\n        },\n        [updatePositionSetupData]\n    )\n\n    const deleteCostHead = (i) => {\n        let tempData = {...positionSetupData?.deduction}\n        tempData = positionSetupData?.deduction.filter((item, index) => index != i)\n        updatePositionSetupData(POSITIONS_SETUP_FIELDS_KEYS.deduction, tempData)\n    }\n\n    const onChangeLimit = (e) => {\n        let {value, max, name} = e.target\n        if (Number(value) <= Number(max)) {\n            updatePositionSetupData(name, value)\n        }\n    }\n    const onChangeDeductionLimit = (e, index) => {\n        let {value, max, name} = e.target\n        if (percentageLimitCheck(max, value)) onChangeDeduction(e, index, 'ammount_par_paycheck')\n    }\n    const onChangeLimitType = (e) => {\n        updatePositionSetupData('limit_ammount', null)\n        onChangeInputData(e)\n    }\n    const onChangeDeductionLimitType = (e, index, field) => {\n        const tempData = [...positionSetupData?.deduction]\n        tempData[index]['ammount_par_paycheck'] = null\n        tempData[index][field] = e?.target?.value\n        updatePositionSetupData(POSITIONS_SETUP_FIELDS_KEYS.deduction, tempData)\n    }\n\n    const costCenterListWithChilds = useMemo(() => {\n        const data = []\n        costCenterList.map((item) => {\n            data.push({\n                name: item?.name,\n                value: item?.id,\n                disabled: item?.chields?.length > 0,\n            })\n            if (item?.chields?.length > 0) {\n                item?.chields.map((subItem) => {\n                    data.push({\n                        name: `- ${subItem?.name}`,\n                        value: subItem?.id,\n                        disabled: false,\n                    })\n                })\n            }\n        })\n        return data\n    }, [costCenterList])\n\n    return (\n        <div\n            className={`pb-5 ${positionSetupData?.deduction_status === true ? 'h-450px' : null}  `}\n            style={{fontSize: '14px', overflowX: 'hidden', overflowY: 'auto'}}\n            data-kt-stepper-element='content'\n        >\n            <div className='w-100'>\n                <div className='form-check ml-12px d-flex form-switch form-switch-sm form-check-custom form-check-solid mb-2'>\n                    <label\n                        className='form-label text-cmGrey900'\n                        style={{\n                            fontSize: '16px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '600',\n                        }}\n                    >\n                        Deductions{' '}\n                    </label>\n                    <input\n                        style={{marginTop: '-4px'}}\n                        className='form-check-input mx-5 cursor-pointer'\n                        type='checkbox'\n                        value=''\n                        name={POSITIONS_SETUP_FIELDS_KEYS.deduction_status}\n                        onChange={() => {\n                            const changedStatus = !positionSetupData?.deduction_status\n\n                            if (!changedStatus) {\n                                updateMultiplePositionSetupData((val) => ({\n                                    ...val,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.deduction_status]: 0,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.deduction_locked]: 0,\n                                    [POSITIONS_SETUP_FIELDS_KEYS.deduction]: [\n                                        {\n                                            status: 1,\n                                            cost_center_id: null,\n                                            deduction_type: '$',\n                                            ammount_par_paycheck: null,\n                                        },\n                                    ],\n                                    [POSITIONS_SETUP_FIELDS_KEYS.limit_type]: '$',\n                                    [POSITIONS_SETUP_FIELDS_KEYS.limit_ammount]: null,\n                                }))\n                            } else {\n                                updatePositionSetupData(\n                                    POSITIONS_SETUP_FIELDS_KEYS.deduction_status,\n                                    getBooleanValue(changedStatus)\n                                )\n                            }\n                        }}\n                        checked={positionSetupData?.deduction_status}\n                    />\n\n                    <label\n                        className='me-sm-2 text-cmGrey600'\n                        style={{\n                            marginTop: '-5px',\n                            fontFamily: 'Manrope',\n                            fontSize: '12px',\n                        }}\n                    >\n                        {positionSetupData.deduction_status ? 'Enabled' : 'Disabled'}\n                    </label>\n                </div>\n\n                {positionSetupData?.deduction_status ? (\n                    <>\n                        <PositionLockedView\n                            name={POSITIONS_SETUP_FIELDS_KEYS.deduction_locked}\n                            onChange={() => {\n                                updatePositionSetupData(\n                                    POSITIONS_SETUP_FIELDS_KEYS.deduction_locked,\n                                    getBooleanValue(!positionSetupData?.deduction_locked)\n                                )\n                            }}\n                            checked={positionSetupData?.deduction_locked}\n                        />\n                        <div className='container mt-7' style={{}}>\n                            <div\n                                className='row w-650px g-2 text-cmGrey700 mb-1'\n                                style={{fontFamily: 'Manrope', fontSize: '14px', fontWeight: '600'}}\n                            >\n                                <div className='col-4 required'>Cost Head</div>\n                                <div className='col-7 ms-sm-5 required'>Amount per paycheck</div>\n                            </div>\n                        </div>\n                        {positionSetupData?.deduction?.length > 0 &&\n                            positionSetupData?.deduction?.map((item, index) => (\n                                <div className='container mb-5' key={index}>\n                                    <div className='row w-650px  align-items-center gap-5 mb-2'>\n                                        <div\n                                            className='col-4'\n                                            style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                        >\n                                            <CustomDropdown\n                                                options={costCenterListWithChilds}\n                                                onChange={(e) => {\n                                                    onChangeDeduction(e, index, 'cost_center_id')\n                                                }}\n                                                value={item?.cost_center_id}\n                                                placeholder='Select Cost Center'\n                                            />\n                                        </div>\n                                        <div\n                                            className='col'\n                                            style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                        >\n                                            <label\n                                                className='d-flex gap-5 flex-row'\n                                                style={{\n                                                    borderRadius: '10px',\n                                                }}\n                                            >\n                                                <CustomInput\n                                                    prefixText='$'\n                                                    type={INPUT_TYPE.number}\n                                                    onChange={(e) => {\n                                                        item?.deduction_type == '%'\n                                                            ? onChangeDeductionLimit(e, index)\n                                                            : onChangeDeduction(\n                                                                  e,\n                                                                  index,\n                                                                  'ammount_par_paycheck'\n                                                              )\n                                                    }}\n                                                    max={100}\n                                                    min={0}\n                                                    value={item?.ammount_par_paycheck}\n                                                    placeholder='Amount'\n                                                />\n                                            </label>\n                                        </div>\n                                        <div\n                                            className='col'\n                                            style={{fontFamily: 'Manrope', fontSize: '14px'}}\n                                        >\n                                            <CustomDelete onClick={() => deleteCostHead(index)} />\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n\n                        <div className='d-flex mt-5'>\n                            <ul\n                                style={{\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '600',\n                                    fontSize: '16px',\n                                }}\n                                className='nav nav-stretch nav-line-tabs nav-line-tabs-2x border-transparent  flex-nowrap'\n                            >\n                                <li className='nav-item d-flex' onClick={handleAdd}>\n                                    <div\n                                        style={{\n                                            width: '15px',\n                                            height: '15px',\n                                            cursor: 'pointer',\n                                            border: '1px solid #6078EC ',\n                                        }}\n                                        className='d-flex text-center align-item-center justify-content-center rounded'\n                                    >\n                                        <b\n                                            className='text-cmBlue-Crayola'\n                                            style={{marginTop: '-5px', fontFamily: 'Manrope'}}\n                                        >\n                                            +\n                                        </b>\n                                    </div>\n                                    <span\n                                        className='ms-sm-2 text-cmBlue-Crayola'\n                                        style={{\n                                            fontSize: '14px',\n                                            textDecoration: 'underline',\n                                            padding: '0px',\n                                            cursor: 'pointer',\n                                            marginTop: '-3px',\n                                            fontFamily: 'Manrope',\n                                        }}\n                                    >\n                                        Add Another\n                                    </span>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className='mt-20 pb-10'>\n                            <div className=''>\n                                <label\n                                    className='form-label text-cmGrey900'\n                                    style={{\n                                        fontSize: '16px',\n                                        fontFamily: 'Manrope',\n                                        fontWeight: '600',\n                                    }}\n                                >\n                                    Limit\n                                </label>\n                            </div>\n                            <div className=' mt-1 d-flex gap-10' style={{}}>\n                                <div className='w-50'>\n                                    <CustomInput\n                                        suffixText='%'\n                                        type={INPUT_TYPE.number}\n                                        placeholder={\n                                            positionSetupData?.limit_type == '%'\n                                                ? 'Enter Percentage'\n                                                : 'Enter Amount'\n                                        }\n                                        name={POSITIONS_SETUP_FIELDS_KEYS.limit_ammount}\n                                        value={positionSetupData?.limit_ammount}\n                                        // onChange={onChangeInputData}\n                                        onChange={\n                                            positionSetupData?.limit_type == '%'\n                                                ? onChangeLimit\n                                                : onChangeInputData\n                                        }\n                                        max={100}\n                                        min={0}\n                                    />\n                                </div>\n\n                                <div>\n                                    <CustomDropdown\n                                        name={POSITIONS_SETUP_FIELDS_KEYS.limit}\n                                        value={positionSetupData?.limit}\n                                        onChange={onChangeInputData}\n                                        options={[{name: 'Per Period', value: 'per period'}]}\n                                        searching={false}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default PositionSetupStep3\n","import {useCallback, useEffect, useState} from 'react'\nimport {getTierLevelService} from '../../../../../../../../services/Services'\nimport {OVERRIDE_TYPE, UNIT_TYPE1} from '../../../../../../../../constants/constants'\nimport {PositionLockedView} from '../CreateCompensationAppModal'\nimport {getBooleanValue, percentageLimitCheck} from '../../../../../../../../helpers/CommonHelpers'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport CustomText from '../../../../../../../../customComponents/customText/CustomText'\nimport CustomCheckbox from '../../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {FormControlLabel, Switch} from '@mui/material'\n\nconst PositionSetupStep4 = ({\n    POSITIONS_SETUP_FIELDS_KEYS,\n    positionSetupData,\n    selectedPositionData,\n    updatePositionSetupData,\n    updateMultiplePositionSetupData,\n    isStackModalEnabled = false,\n}) => {\n    const [tieroverride, setTierOverrides] = useState([])\n\n    useEffect(() => {\n        getTierLevelService()\n            .then((res) => {\n                setTierOverrides(res.data[2])\n            })\n            .catch((e) => {\n                setTierOverrides({Configure: []})\n            })\n    }, [])\n\n    const onChangeOverride = (index, field, value) => {\n        let tempData = [...positionSetupData?.override]\n\n        if (tempData?.[index]) {\n            if (field == 'status' && !value) {\n                tempData[index]['status'] = value\n                tempData[index]['override_ammount'] = null\n                tempData[index]['type'] = null\n                tempData[index]['override_ammount_locked'] = 0\n                tempData[index]['override_type_locked'] = 0\n            } else {\n                tempData[index][field] = value\n            }\n            updatePositionSetupData(POSITIONS_SETUP_FIELDS_KEYS.override, tempData)\n        }\n    }\n\n    const onChangeInputData = useCallback(\n        (e) => {\n            updatePositionSetupData(e?.target?.name, e?.target?.value)\n        },\n        [updatePositionSetupData]\n    )\n\n    const onChangeLimit = (index, field, e) => {\n        let {value, max} = e.target\n        if (Number(value) <= Number(max)) {\n            onChangeOverride(index, field, e.target.value)\n        }\n    }\n\n    return (\n        <div\n            className='pb-5'\n            style={{\n                // marginBottom: tier === false ? '22%' : '0%',\n                fontSize: '14px',\n                fontStyle: 'Manrope',\n                fontWeight: '600',\n            }}\n            data-kt-stepper-element='content'\n        >\n            <div className='w-100'>\n                {/* Direct Overrides */}\n                <SingleOveride\n                    overrideIndex={0}\n                    title={'Direct Overrides'}\n                    onChangeOverride={onChangeOverride}\n                    positionSetupData={positionSetupData}\n                />\n\n                {/* Indirect Overrides */}\n                <SingleOveride\n                    overrideIndex={1}\n                    title={'Indirect Overrides'}\n                    onChangeOverride={onChangeOverride}\n                    positionSetupData={positionSetupData}\n                />\n                {/* Office Overrides */}\n                <SingleOveride\n                    overrideIndex={2}\n                    title={'Office Overrides'}\n                    onChangeOverride={onChangeOverride}\n                    positionSetupData={positionSetupData}\n                />\n                {isStackModalEnabled ? (\n                    <div className='container' style={{fontFamily: 'Manrope'}}>\n                        <div className='row g-2 mb-10 align-items-end'>\n                            <div className='col-6'>\n                                <div className='d-flex flex-row mb-5'>\n                                    <div className='ms-0 form-check d-flex gap-5 form-switch form-switch-sm form-check-custom form-check-solid '>\n                                        <div\n                                            className={`${\n                                                positionSetupData.override?.[3]?.status\n                                                    ? 'required'\n                                                    : null\n                                            }  `}\n                                        >\n                                            {'Stack Split'}\n                                        </div>\n                                        <input\n                                            className='form-check-input ml-8 cursor-pointer'\n                                            type='checkbox'\n                                            checked={positionSetupData.override?.[3]?.status}\n                                            onChange={(e) => {\n                                                const value =\n                                                    !positionSetupData.override?.[3]?.status\n                                                onChangeOverride(3, 'status', value)\n                                            }}\n                                        />\n                                        <label\n                                            className='ms-3 text-cmGrey600'\n                                            style={{fontSize: '12px'}}\n                                        >\n                                            {positionSetupData?.override?.[3]?.status\n                                                ? 'Enabled'\n                                                : `Disabled`}\n                                        </label>\n                                    </div>\n                                </div>\n                                {positionSetupData?.override?.[3]?.status ? (\n                                    <>\n                                        <div className='d-flex align-items-center gap-2 '>\n                                            <div>\n                                                <CustomInput\n                                                    suffixText={'%'}\n                                                    type={INPUT_TYPE.number}\n                                                    value={\n                                                        positionSetupData.override?.[3]\n                                                            ?.override_ammount\n                                                    }\n                                                    placeholder='Enter Split %'\n                                                    // onChange={(e) => {\n\n                                                    //         onChangeOverride(\n                                                    //             3,\n                                                    //             'override_ammount',\n                                                    //             e?.target?.value\n                                                    //         )\n                                                    // }}\n                                                    onChange={(e) =>\n                                                        onChangeLimit(3, 'override_ammount', e)\n                                                    }\n                                                    max={100}\n                                                />\n                                            </div>\n                                        </div>\n                                        <PositionLockedView\n                                            checked={\n                                                positionSetupData?.override?.[3]\n                                                    .override_ammount_locked\n                                            }\n                                            onChange={(e) => {\n                                                const value = getBooleanValue(\n                                                    !positionSetupData?.override?.[3]\n                                                        .override_ammount_locked\n                                                )\n                                                onChangeOverride(\n                                                    3,\n                                                    'override_ammount_locked',\n                                                    value\n                                                )\n                                                onChangeOverride(3, 'override_type_locked', value)\n                                            }}\n                                        />\n                                    </>\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default PositionSetupStep4\n\nexport const SingleOveride = ({title, positionSetupData, overrideIndex = 0, onChangeOverride}) => {\n    const onChangeInputDataWithLimit = (index, name, val) => {\n        if (percentageLimitCheck(100, val)) onChangeOverride(index, name, val)\n    }\n    const onChangeOverridesType = (index, name, override_name, val) => {\n        onChangeOverride(index, override_name, null)\n        onChangeOverride(index, name, val)\n    }\n    const isPercentOverrideType =\n        positionSetupData?.override?.[overrideIndex]?.type == 'percent' ? true : false\n    return (\n        <div className='container ' style={{fontFamily: 'Manrope'}}>\n            <div className='row mb-10 align-items-end'>\n                <div className='col-sm-6'>\n                    <div className='d-flex flex-row mb-5'>\n                        <div className='ms-0 d-flex gap-5 flex-center'>\n                            <div\n                                className={`${\n                                    positionSetupData.override?.[overrideIndex]?.status\n                                        ? 'required'\n                                        : ''\n                                }`}\n                            >\n                                {title}\n                            </div>\n\n                            <div className='form-check  form-switch form-switch-sm form-check-custom form-check-solid '>\n                                <input\n                                    class='form-check-input cursor-pointer'\n                                    type='checkbox'\n                                    role='switch'\n                                    id='flexSwitchCheckDefault'\n                                    checked={\n                                        positionSetupData.override?.[overrideIndex]?.status\n                                            ? true\n                                            : false\n                                    }\n                                    onChange={(e) => {\n                                        const value =\n                                            !positionSetupData.override?.[overrideIndex]?.status\n                                        onChangeOverride(overrideIndex, 'status', value)\n                                    }}\n                                />\n                            </div>\n\n                            <label className='ms-3 text-cmGrey600' style={{fontSize: '12px'}}>\n                                {positionSetupData?.override?.[overrideIndex]?.status\n                                    ? 'Enabled'\n                                    : `Disabled`}\n                            </label>\n                        </div>\n                    </div>\n                    {positionSetupData?.override?.[overrideIndex]?.status ? (\n                        <div className=''>\n                            <div>\n                                <CustomInput\n                                    prefixText={\n                                        positionSetupData?.override?.[overrideIndex]?.type ==\n                                        'percent'\n                                            ? '%'\n                                            : '$'\n                                    }\n                                    type={INPUT_TYPE.currency}\n                                    value={\n                                        positionSetupData.override?.[overrideIndex]\n                                            ?.override_ammount\n                                    }\n                                    placeholder={\n                                        isPercentOverrideType ? 'Enter Percent' : 'Enter Amount'\n                                    }\n                                    onChange={(e) => {\n                                        isPercentOverrideType\n                                            ? onChangeInputDataWithLimit(\n                                                  overrideIndex,\n                                                  'override_ammount',\n                                                  e?.target?.value\n                                              )\n                                            : onChangeOverride(\n                                                  overrideIndex,\n                                                  'override_ammount',\n                                                  e?.target?.value\n                                              )\n                                    }}\n                                />\n                            </div>\n                            <PositionLockedView\n                                checked={\n                                    positionSetupData?.override?.[overrideIndex]\n                                        .override_ammount_locked\n                                }\n                                onChange={(e) => {\n                                    const value = getBooleanValue(\n                                        !positionSetupData?.override?.[overrideIndex]\n                                            .override_ammount_locked\n                                    )\n                                    onChangeOverride(\n                                        overrideIndex,\n                                        'override_ammount_locked',\n                                        value\n                                    )\n                                    onChangeOverride(overrideIndex, 'override_type_locked', value)\n                                }}\n                            />\n                        </div>\n                    ) : null}\n                </div>\n                {positionSetupData.override?.[overrideIndex]?.status ? (\n                    <div className='col-sm ms-xl-10'>\n                        {/* Select unit dropdown */}\n                        <CustomDropdown\n                            options={OVERRIDE_TYPE}\n                            placeholder='Select unit'\n                            value={positionSetupData?.override?.[overrideIndex]?.type}\n                            searching={false}\n                            onChange={(e) => {\n                                onChangeOverridesType(\n                                    overrideIndex,\n                                    'type',\n                                    'override_ammount',\n                                    e?.target?.value\n                                )\n                                // onChangeOverride(overrideIndex, 'type', e?.target?.value)\n                            }}\n                        />\n\n                        <PositionLockedView\n                            checked={\n                                positionSetupData?.override?.[overrideIndex].override_type_locked\n                            }\n                            onChange={(e) => {\n                                if (\n                                    !positionSetupData?.override?.[overrideIndex]\n                                        .override_ammount_locked\n                                ) {\n                                    onChangeOverride(\n                                        overrideIndex,\n                                        'override_type_locked',\n                                        getBooleanValue(\n                                            !positionSetupData?.override?.[overrideIndex]\n                                                .override_type_locked\n                                        )\n                                    )\n                                }\n                            }}\n                        />\n                    </div>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport {useCallback, useState} from 'react'\nimport {UNIT_TYPE1} from '../../../../../../../../constants/constants'\nimport {getBooleanValue} from '../../../../../../../../helpers/CommonHelpers'\nimport {checkReconciliationSettingService} from '../../../../../../../../services/Services'\nimport CustomToast from '../../../../../../../../customComponents/customToast/CustomToast'\nimport CustomLoader from '../../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomInput, {\n    INPUT_TYPE,\n} from '../../../../../../../../customComponents/customInputs/customInput/CustomInput'\nimport CustomDropdown from '../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\nimport {PositionLockedView} from '../CreateCompensationAppModal'\n\nconst PositionSetupStep5 = ({\n    POSITIONS_SETUP_FIELDS_KEYS,\n    positionSetupData,\n    selectedPositionData,\n    updatePositionSetupData,\n    updateMultiplePositionSetupData,\n    isStackModalEnabled,\n}) => {\n    const [loading, setLoading] = useState(false)\n    const onChangeInputData = useCallback(\n        (e) => {\n            updatePositionSetupData(e?.target?.name, e?.target?.value)\n        },\n        [updatePositionSetupData]\n    )\n    const onCheckRecon = () => {\n        if (!positionSetupData.reconciliation_status) {\n            updateMultiplePositionSetupData((val) => ({\n                ...val,\n                [POSITIONS_SETUP_FIELDS_KEYS.reconciliation_status]: getBooleanValue(\n                    !positionSetupData?.reconciliation_status\n                ),\n                [POSITIONS_SETUP_FIELDS_KEYS.commission_withheld]: null,\n                [POSITIONS_SETUP_FIELDS_KEYS.commission_type]: null,\n                [POSITIONS_SETUP_FIELDS_KEYS.maximum_withheld]: null,\n                [POSITIONS_SETUP_FIELDS_KEYS.override_settlement]: null,\n                [POSITIONS_SETUP_FIELDS_KEYS.clawback_settlement]: null,\n            }))\n        } else {\n            if (!positionSetupData?.status) {\n                updatePositionSetupData(\n                    POSITIONS_SETUP_FIELDS_KEYS.reconciliation_status,\n                    getBooleanValue(!positionSetupData?.reconciliation_status)\n                )\n            } else {\n                setLoading(true)\n                const body = {\n                    group_id: positionSetupData?.group_id,\n                }\n                checkReconciliationSettingService(body)\n                    .then((res) => {\n                        if (res?.checkStatus)\n                            return CustomToast.error('Reconciliation cannot be disabled')\n                        updatePositionSetupData(\n                            POSITIONS_SETUP_FIELDS_KEYS.reconciliation_status,\n                            getBooleanValue(!positionSetupData?.reconciliation_status)\n                        )\n                    })\n                    .finally(() => setLoading(false))\n            }\n        }\n    }\n    return (\n        <div\n            className=''\n            style={{fontSize: '14px', position: 'relative'}}\n            data-kt-stepper-element='content'\n        >\n            <CustomLoader full visible={loading} />\n\n            <div className='w-100'>\n                <div className='form-check ml-12px d-flex form-switch form-switch-sm form-check-custom form-check-solid mb-2 '>\n                    <label\n                        className='form-label text-cmGrey900'\n                        style={{\n                            fontSize: '16px',\n                            fontFamily: 'Manrope',\n                            fontWeight: '600',\n                        }}\n                    >\n                        Reconciliation{' '}\n                    </label>\n                    <input\n                        style={{marginTop: '-4px'}}\n                        className='form-check-input mx-5 cursor-pointer'\n                        type='checkbox'\n                        value=''\n                        name={POSITIONS_SETUP_FIELDS_KEYS.reconciliation_status}\n                        onChange={onCheckRecon}\n                        // onChange={() => {\n                        //   if (!positionSetupData.reconciliation_status) {\n                        //     updateMultiplePositionSetupData((val) => ({\n                        //       ...val,\n                        //       [POSITIONS_SETUP_FIELDS_KEYS.reconciliation_status]: getBooleanValue(\n                        //         !positionSetupData?.reconciliation_status\n                        //       ),\n                        //       [POSITIONS_SETUP_FIELDS_KEYS.commission_withheld]: null,\n                        //       [POSITIONS_SETUP_FIELDS_KEYS.commission_type]: null,\n                        //       [POSITIONS_SETUP_FIELDS_KEYS.maximum_withheld]: null,\n                        //       [POSITIONS_SETUP_FIELDS_KEYS.override_settlement]: null,\n                        //       [POSITIONS_SETUP_FIELDS_KEYS.clawback_settlement]: null,\n                        //     }))\n                        //   } else {\n                        //     updatePositionSetupData(\n                        //       POSITIONS_SETUP_FIELDS_KEYS.reconciliation_status,\n                        //       getBooleanValue(!positionSetupData?.reconciliation_status)\n                        //     )\n                        //   }\n                        // }}\n                        checked={positionSetupData?.reconciliation_status}\n                    />\n\n                    <label\n                        className='me-2 text-cmGrey600'\n                        style={{\n                            marginTop: '-5px',\n                            fontFamily: 'Manrope',\n                            fontSize: '12px',\n                        }}\n                    >\n                        {positionSetupData.reconciliation_status ? 'Enabled' : 'Disabled'}\n                    </label>\n                </div>\n                {positionSetupData.reconciliation_status ? (\n                    <div className='' style={{fontFamily: 'Manrope', fontSize: '14px'}}>\n                        <table className='w-100'>\n                            <tbody>\n                                {/* Line 1 */}\n                                <tr>\n                                    <td className='py-5'>\n                                        <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                            Withhold Commission:\n                                        </div>\n                                    </td>\n                                    <td className='py-5'>\n                                        <div className='row align-items-center '>\n                                            <div className='col-sm-6 col-10'>\n                                                <CustomInput\n                                                    prefixText='$'\n                                                    className='w-100'\n                                                    type={INPUT_TYPE.currency}\n                                                    name={\n                                                        POSITIONS_SETUP_FIELDS_KEYS.commission_withheld\n                                                    }\n                                                    value={positionSetupData?.commission_withheld}\n                                                    onChange={onChangeInputData}\n                                                />\n                                                <PositionLockedView\n                                                    checked={\n                                                        positionSetupData?.commission_withheld_locked\n                                                    }\n                                                    onChange={(e) => {\n                                                        const value = getBooleanValue(\n                                                            !positionSetupData?.commission_withheld_locked\n                                                        )\n                                                        updateMultiplePositionSetupData((val) => ({\n                                                            ...val,\n                                                            commission_withheld_locked: value,\n                                                            commission_type_locked: value,\n                                                        }))\n                                                    }}\n                                                />\n                                            </div>\n                                            {/* Unit dropdown */}\n                                            <div className='col-sm-6'>\n                                                <CustomDropdown\n                                                    className='w-100'\n                                                    searching={false}\n                                                    placeholder='Select unit'\n                                                    name={\n                                                        POSITIONS_SETUP_FIELDS_KEYS.commission_type\n                                                    }\n                                                    value={positionSetupData?.commission_type}\n                                                    onChange={onChangeInputData}\n                                                    options={UNIT_TYPE1}\n                                                />\n                                                <PositionLockedView\n                                                    checked={\n                                                        positionSetupData?.commission_type_locked\n                                                    }\n                                                    onChange={(e) => {\n                                                        const value = getBooleanValue(\n                                                            !positionSetupData?.commission_type_locked\n                                                        )\n                                                        updatePositionSetupData(\n                                                            'commission_type_locked',\n                                                            value\n                                                        )\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                                {/* Line 2 */}\n                                <tr>\n                                    <td className='py-5'>\n                                        <div className='text-cmGrey900' style={{fontWeight: '600'}}>\n                                            Maximum:\n                                        </div>\n                                    </td>\n                                    <td className='py-5'>\n                                        <div className='d-flex flex-wrap gap-3 align-items-center'>\n                                            <CustomInput\n                                                prefixText='$'\n                                                name={POSITIONS_SETUP_FIELDS_KEYS.maximum_withheld}\n                                                value={positionSetupData?.maximum_withheld}\n                                                onChange={onChangeInputData}\n                                                type={INPUT_TYPE.currency}\n                                                placeholder='Enter Amount'\n                                            />\n                                        </div>\n                                    </td>\n                                </tr>\n                                {/* Line 3 */}\n                                <tr>\n                                    <td className='py-5'>\n                                        <div\n                                            className='text-cmGrey900 required'\n                                            style={{fontWeight: '600'}}\n                                        >\n                                            Override Settlement:\n                                        </div>\n                                    </td>\n                                    <td className='py-5'>\n                                        <div>\n                                            {/* Override Settlement dropdown */}\n                                            <CustomDropdown\n                                                required\n                                                searching={false}\n                                                name={\n                                                    POSITIONS_SETUP_FIELDS_KEYS.override_settlement\n                                                }\n                                                value={positionSetupData?.override_settlement}\n                                                onChange={onChangeInputData}\n                                                options={[\n                                                    {\n                                                        name: 'Reconciliation',\n                                                        value: 'Reconciliation',\n                                                    },\n                                                    {name: 'During M2', value: 'During M2'},\n                                                ]}\n                                            />\n                                        </div>\n                                    </td>\n                                </tr>\n                                {/* Line 4 */}\n                                <tr>\n                                    <td className='py-5'>\n                                        <div\n                                            className='text-cmGrey900 required'\n                                            style={{fontWeight: '600'}}\n                                        >\n                                            Clawback Settlement:\n                                        </div>\n                                    </td>\n                                    <td className='py-5'>\n                                        <div>\n                                            <CustomDropdown\n                                                searching={false}\n                                                name={\n                                                    POSITIONS_SETUP_FIELDS_KEYS.clawback_settlement\n                                                }\n                                                value={positionSetupData?.clawback_settlement}\n                                                onChange={onChangeInputData}\n                                                options={[\n                                                    {\n                                                        name: 'Reconciliation',\n                                                        value: 'Reconciliation',\n                                                    },\n                                                    {name: 'Next Payroll', value: 'Next Payroll'},\n                                                ]}\n                                            />\n                                        </div>\n                                    </td>\n                                </tr>\n\n                                {isStackModalEnabled && positionSetupData?.override?.[3]?.status ? (\n                                    <tr>\n                                        <td className='py-5'>\n                                            <div\n                                                className='text-cmGrey900'\n                                                style={{fontWeight: '600'}}\n                                            >\n                                                Stack Settlement:\n                                            </div>\n                                        </td>\n                                        <td className='py-5'>\n                                            <div>\n                                                <CustomDropdown\n                                                    searching={false}\n                                                    name={\n                                                        POSITIONS_SETUP_FIELDS_KEYS.stack_settlement\n                                                    }\n                                                    value={positionSetupData?.stack_settlement}\n                                                    onChange={onChangeInputData}\n                                                    options={[\n                                                        {\n                                                            name: 'During M2',\n                                                            value: 'During M2',\n                                                        },\n                                                        {\n                                                            name: 'Reconciliation',\n                                                            value: 'Reconciliation',\n                                                        },\n                                                    ]}\n                                                />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ) : null}\n                            </tbody>\n                        </table>\n                    </div>\n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default PositionSetupStep5\n","import {useMemo} from 'react'\nimport {useSelector} from 'react-redux'\nimport {getPayFrequencySettingSelector} from '../../../../../../../../../redux/selectors/SettingsSelectors'\nimport CustomDropdown from '../../../../../../../../../customComponents/customInputs/customDropdown/CustomDropdown'\n\nconst PositionSetupStep6 = ({\n    POSITIONS_SETUP_FIELDS_KEYS,\n    positionSetupData,\n    updateMultiplePositionSetupData,\n}) => {\n    const getPayFrequencyData = useSelector(getPayFrequencySettingSelector)\n\n    const weekDropdownList = useMemo(() => {\n        let weekName = []\n        getPayFrequencyData?.map((item, index) => {\n            if (item.status) {\n                weekName.push({...item, name: item?.frequency_type_name})\n            }\n        })\n        return weekName\n    }, [getPayFrequencyData])\n    return (\n        <div\n            data-kt-stepper-element='content'\n            className='mt-5'\n            style={{fontFamily: 'Manrope', fontSize: '14px'}}\n        >\n            <table className='w-100'>\n                <tbody>\n                    {/* Line 1 */}\n                    <tr>\n                        <td>\n                            <div\n                                className='text-cmGrey900 mb-5 required'\n                                style={{fontWeight: '600'}}\n                            >\n                                Pay Frequency:\n                            </div>\n                        </td>\n                        <td>\n                            <div className='mb-1'>\n                                <CustomDropdown\n                                    placeholder='Select Pay Frquency'\n                                    name={POSITIONS_SETUP_FIELDS_KEYS.frequency_type_id}\n                                    value={positionSetupData?.frequency_type_id}\n                                    onChange={(e) => {\n                                        updateMultiplePositionSetupData((val) => ({\n                                            ...val,\n                                            [POSITIONS_SETUP_FIELDS_KEYS.frequency_type_id]:\n                                                e?.target?.value,\n                                        }))\n                                    }}\n                                    options={weekDropdownList}\n                                    valueKey='frequency_type_id'\n                                />\n                            </div>\n                            <div\n                                className='text-cmGrey500'\n                                style={{fontWeight: '500', fontSize: '12px'}}\n                            >\n                                How often your employees in this position get paid?{' '}\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default PositionSetupStep6\n","import {useState, useRef, useEffect, useCallback, useMemo} from 'react'\nimport {StepperComponent} from '../../../../../../../_metronic/assets/ts/components'\nimport PositionSetupStep1 from './positionSetupSteps/PositionSetupStep1'\nimport PositionSetupStep2 from './positionSetupSteps/PositionSetupStep2'\nimport PositionSetupStep3 from './positionSetupSteps/PositionSetupStep3'\nimport PositionSetupStep4 from './positionSetupSteps/PositionSetupStep4'\nimport PositionSetupStep5 from './positionSetupSteps/PositionSetupStep5'\nimport PositionSetupStep6 from './positionSetupSteps/positionSetupStep6/PositionSetupStep6'\nimport {updatePositionService} from '../../../../../../../services/Services'\nimport {\n    getCompanyOverrideSettingAction,\n    getCostCenterListAction,\n    getPayFrequencySettingAction,\n} from '../../../../../../../redux/actions/SettingActions'\nimport {useDispatch} from 'react-redux'\nimport {useSelector} from 'react-redux'\nimport {\n    getCompanyOverrideSettingSelector,\n    getCompanySettingSelector,\n} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {\n    getBooleanValue,\n    getErrorMessageFromResponse,\n    isInputValueExist,\n} from '../../../../../../../helpers/CommonHelpers'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\nimport CustomCheckbox from '../../../../../../../customComponents/customCheckbox/CustomCheckbox'\nimport {MAIN_POSITTIONS_ID} from '../../../../../../../constants/constants'\n\nexport const POSITIONS_SETUP_FIELDS_KEYS = {\n    // Position Setup Step 1: Comission\n    position_name: 'position_name',\n    commission_parentage: 'commission_parentage',\n    commission_parentag_hiring_locked: 'commission_parentag_hiring_locked',\n    commission_structure_type: 'commission_structure_type',\n    commission_parentag_type_hiring_locked: 'commission_parentag_type_hiring_locked',\n\n    // Position Setup Step 2: Upfront\n    upfront_status: 'upfront_status',\n    upfront_ammount: 'upfront_ammount',\n    upfront_ammount_locked: 'upfront_ammount_locked',\n    calculated_by: 'calculated_by',\n    calculated_locked: 'calculated_locked',\n    upfront_system: 'upfront_system',\n    upfront_system_locked: 'upfront_system_locked',\n    upfront_limit: 'upfront_limit',\n\n    // Position Setup Step 3: Decuctions\n    deduction: 'deduction',\n    deduction_status: 'deduction_status',\n    deduction_locked: 'deduction_locked',\n    limit_type: 'limit_type',\n    limit: 'limit',\n    limit_ammount: 'limit_ammount',\n\n    // Position Setup 4: Overrides\n    override: 'override',\n    tier_override_status: 'tier_override_status',\n    sliding_scale: 'sliding_scale',\n    sliding_scale_locked: 'sliding_scale_locked',\n    levels: 'levels',\n    level_locked: 'level_locked',\n    position_id: 'position_id',\n\n    // Position Setup 5: Reconciliation\n    reconciliation_status: 'reconciliation_status',\n    settlement_id: 'settlement_id',\n    commission_withheld: 'commission_withheld',\n    commission_withheld_locked: 'commission_withheld_locked',\n    commission_type_locked: 'commission_type_locked',\n    commission_type: 'commission_type',\n    maximum_withheld: 'maximum_withheld',\n    override_settlement: 'override_settlement',\n    clawback_settlement: 'clawback_settlement',\n    stack_settlement: 'stack_settlement',\n\n    //   Position Setup 6: Pay Frequency\n    frequency_type_id: 'frequency_type_id',\n}\n\nexport const INIT_POSITION_SETUP_DATA = {\n    // Position Setup Step 1: Comission\n    position_name: null,\n    commission_parentage: null,\n    commission_parentag_hiring_locked: 0,\n    commission_structure_type: 'fixed',\n    commission_parentag_type_hiring_locked: 0,\n\n    // Position Setup Step 2: Upfront\n    upfront_status: 1,\n    upfront_ammount: 500,\n    upfront_ammount_locked: 0,\n    calculated_by: 'per sale',\n    calculated_locked: 0,\n    upfront_system: 'Fixed',\n    upfront_system_locked: 0,\n    upfront_limit: 1000,\n\n    //   Position Setup Step 3: Deduction\n    deduction_status: 1,\n    deduction_locked: 0,\n    deduction: [\n        {\n            status: 1,\n            cost_center_id: null,\n            deduction_type: '$',\n            ammount_par_paycheck: null,\n        },\n    ],\n    limit_type: '%',\n    limit_ammount: null,\n    limit: null,\n\n    // Position Setup Step 4: Overrides\n    is_stack: 0,\n    override: [\n        {\n            override_id: 1,\n            status: 1,\n            override_ammount: null,\n            override_ammount_locked: 0,\n            type: null,\n            override_type_locked: 0,\n        },\n        {\n            override_id: 2,\n            status: 1,\n            override_ammount: null,\n            override_ammount_locked: 0,\n            type: null,\n            override_type_locked: 0,\n        },\n        {\n            override_id: 3,\n            status: 1,\n            override_ammount: null,\n            override_ammount_locked: 0,\n            type: null,\n            override_type_locked: 0,\n        },\n        {\n            override_id: 4,\n            status: 1,\n            override_ammount: null,\n            override_ammount_locked: 0,\n            type: null,\n            override_type_locked: 0,\n        },\n    ],\n    tier_override_status: null,\n    sliding_scale: null,\n    sliding_scale_locked: null,\n    levels: null,\n    level_locked: null,\n\n    // Position Setup Step 5: Reconciliation\n    reconciliation_status: 1,\n    settlement_id: 1,\n    settlement_type: 'Duuring M2',\n    commission_type_locked: 0,\n    commission_withheld_locked: 0,\n    commission_withheld: null,\n    commission_type: null,\n    maximum_withheld: null,\n    override_settlement: null,\n    clawback_settlement: null,\n    stack_settlement: null,\n\n    // Position Setup Step 6: Pay Frequency\n    frequency_type_id: null,\n}\n\nconst CreateCompensationAppModal = ({\n    show,\n    handleClose,\n    selectedPositionData,\n    getPosition,\n    setLoader,\n}) => {\n    const stepperRef = useRef()\n    const [loading, setLoading] = useState(false)\n    const dispatch = useDispatch()\n    const stepper = useRef()\n    const companySetting = useSelector(getCompanySettingSelector)\n    const companyOverrideSetting = useSelector(getCompanyOverrideSettingSelector)\n    const [positionSetupData, setPositionSetupData] = useState({\n        ...INIT_POSITION_SETUP_DATA,\n        ...selectedPositionData,\n    })\n\n    useEffect(() => {\n        setPositionSetupData((val) => ({\n            ...val,\n            ...selectedPositionData,\n            position_id: selectedPositionData?.id,\n            override:\n                selectedPositionData?.override?.length > 0\n                    ? selectedPositionData?.override\n                    : INIT_POSITION_SETUP_DATA.override,\n        }))\n    }, [selectedPositionData])\n\n    useEffect(() => {\n        dispatch(getCostCenterListAction())\n        dispatch(getPayFrequencySettingAction())\n        dispatch(getCompanyOverrideSettingAction())\n    }, [])\n\n    const loadStepper = () => {\n        stepper.current = StepperComponent.createInsance(stepperRef.current)\n    }\n\n    const isStackModalEnabled = useMemo(() => {\n        return (\n            (positionSetupData?.parent_position_id ?? positionSetupData?.position_id) ==\n                MAIN_POSITTIONS_ID.closer &&\n            getBooleanValue(companyOverrideSetting?.allow_office_stack_override_status) == 1\n        )\n    }, [\n        positionSetupData?.parent_position_id,\n        positionSetupData?.position_id,\n        companyOverrideSetting?.allow_office_stack_override_status,\n    ])\n\n    const onSetupOrUpdatePosition = useCallback(\n        (firstStep = false) =>\n            new Promise((resolve, reject) => {\n                let data = {...positionSetupData}\n                data.is_stack = getBooleanValue(\n                    isStackModalEnabled && getBooleanValue(data?.override?.[3]?.status)\n                )\n                data.deduction_status = data?.deduction_status ? 1 : 0\n                data.reconciliation_status = data?.reconciliation_status ? 1 : 0\n                data.limit_type = '%'\n                setLoading(true)\n                updatePositionService(selectedPositionData?.id, data)\n                    .then((res) => {\n                        resolve('success')\n                    })\n                    .catch((error) => {\n                        CustomToast.error(getErrorMessageFromResponse(error))\n                        reject('fail')\n                        return\n                    })\n                    .finally(() => {\n                        setLoading(false)\n                    })\n            }),\n        [isStackModalEnabled, positionSetupData, selectedPositionData?.id]\n    )\n\n    const stepsValidation = useMemo(\n        () => ({\n            step1: () =>\n                new Promise((resolve, reject) => {\n                    if (!positionSetupData.position_name) {\n                        CustomToast.error('Enter position name')\n                        reject('fail')\n                        return\n                    }\n                    if (!isInputValueExist(positionSetupData.commission_parentage)) {\n                        CustomToast.error('Enter commission')\n                        reject('fail')\n                        return\n                    }\n                    if (!positionSetupData.commission_structure_type) {\n                        CustomToast.error('Select commission structure')\n                        reject('fail')\n                        return\n                    }\n                    onSetupOrUpdatePosition().then(resolve).catch(reject)\n                }),\n            step2: () =>\n                new Promise((resolve, reject) => {\n                    if (positionSetupData?.upfront_status) {\n                        if (!isInputValueExist(positionSetupData.upfront_ammount)) {\n                            CustomToast.error('Enter upfront amount')\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData.calculated_by) {\n                            CustomToast.error('Select calculated by')\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData.upfront_system) {\n                            CustomToast.error('Select upfront system')\n                            reject('fail')\n                            return\n                        }\n                        // if (!positionSetupData.upfront_limit) return CustomToast.error('Enter upfront limit')\n                        onSetupOrUpdatePosition().then(resolve).catch(reject)\n                    } else {\n                        onSetupOrUpdatePosition().then(resolve).catch(reject)\n                    }\n                }),\n            step3: () =>\n                new Promise((resolve, reject) => {\n                    if (positionSetupData?.deduction_status) {\n                        if (positionSetupData?.deduction?.length <= 0) {\n                            CustomToast.error('Atleast 1 cost center should be there')\n                            reject('fail')\n                            return\n                        }\n\n                        const filledData = positionSetupData?.deduction?.map((item) =>\n                            getBooleanValue(\n                                item?.cost_center_id &&\n                                    item?.deduction_type &&\n                                    isInputValueExist(item?.ammount_par_paycheck) &&\n                                    Number(item?.ammount_par_paycheck) > 0\n                            )\n                        )\n                        if (filledData?.includes(getBooleanValue(false))) {\n                            CustomToast.error(\n                                'Fill all cost center data and deduction amount should be greater than 0'\n                            )\n                            reject('fail')\n                            return\n                        }\n                        if (isInputValueExist(positionSetupData?.limit_ammount)) {\n                            if (Number(positionSetupData?.limit_ammount) <= 0) {\n                                CustomToast.error('Deduction limit amount should be greter than 0')\n                                reject('fail')\n                                return\n                            }\n                        }\n                        onSetupOrUpdatePosition().then(resolve).catch(reject)\n                    } else {\n                        onSetupOrUpdatePosition().then(resolve).catch(reject)\n                    }\n                }),\n            step4: () =>\n                new Promise((resolve, reject) => {\n                    if (positionSetupData?.override?.[0]?.status) {\n                        if (\n                            !isInputValueExist(positionSetupData?.override?.[0]?.override_ammount)\n                        ) {\n                            CustomToast.error('Enter direct override amount')\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData?.override?.[0]?.type) {\n                            CustomToast.error('Select direct override type')\n                            reject('fail')\n                            return\n                        }\n                    }\n                    if (positionSetupData?.override?.[1]?.status) {\n                        if (\n                            !isInputValueExist(positionSetupData?.override?.[1]?.override_ammount)\n                        ) {\n                            CustomToast.error('Enter indirect override amount')\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData?.override?.[1]?.type) {\n                            CustomToast.error('Select direct inoverride type')\n                            reject('fail')\n                            return\n                        }\n                    }\n                    if (positionSetupData?.override?.[2]?.status) {\n                        if (\n                            !isInputValueExist(positionSetupData?.override?.[2]?.override_ammount)\n                        ) {\n                            CustomToast.error('Enter office override amount')\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData?.override?.[2]?.type) {\n                            CustomToast.error('Select office override type')\n                            reject('fail')\n                            return\n                        }\n                    }\n                    if (isStackModalEnabled && positionSetupData?.override?.[3]?.status) {\n                        if (\n                            !isInputValueExist(positionSetupData?.override?.[3]?.override_ammount)\n                        ) {\n                            CustomToast.error('Enter office stack split')\n                            reject('fail')\n                            return\n                        }\n                    }\n\n                    //   if (positionSetupData?.tier_override_status) {\n                    //     if (!positionSetupData?.sliding_scale) return CustomToast.error('Select sliding scale')\n                    //     if (!positionSetupData?.levels) return CustomToast.error('Select level')\n                    //   }\n                    onSetupOrUpdatePosition().then(resolve).catch(reject)\n                }),\n            step5: () =>\n                new Promise((resolve, reject) => {\n                    if (positionSetupData?.reconciliation_status) {\n                        if (!isInputValueExist(positionSetupData?.commission_withheld)) {\n                            CustomToast.error('Enter withhold commission')\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData?.commission_type) {\n                            CustomToast.error('Select commission type')\n                            reject('fail')\n                            return\n                        }\n\n                        if (\n                            isInputValueExist(positionSetupData.maximum_withheld) &&\n                            isInputValueExist(positionSetupData.upfront_limit) &&\n                            Number(positionSetupData.maximum_withheld) >\n                                Number(positionSetupData.upfront_limit)\n                        ) {\n                            CustomToast.error(\n                                'Maximum withheld should be lesser than upfront limit'\n                            )\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData?.override_settlement) {\n                            CustomToast.error('Select override settlement')\n                            reject('fail')\n                            return\n                        }\n                        if (!positionSetupData?.clawback_settlement) {\n                            CustomToast.error('Select clawback settlement')\n                            reject('fail')\n                            return\n                        }\n\n                        if (\n                            isStackModalEnabled &&\n                            positionSetupData?.override?.[3]?.status &&\n                            !positionSetupData?.stack_settlement\n                        ) {\n                            CustomToast.error('Select stack settlement')\n                            reject('fail')\n                            return\n                        }\n                    }\n                    onSetupOrUpdatePosition().then(resolve).catch(reject)\n                }),\n            step6: () =>\n                new Promise((resolve, reject) => {\n                    if (!positionSetupData?.frequency_type_id) {\n                        CustomToast.error('Select pay frequency')\n                        reject('fail')\n                        return\n                    }\n                    onSetupOrUpdatePosition().then(resolve).catch(reject)\n                }),\n        }),\n        [\n            onSetupOrUpdatePosition,\n            positionSetupData.calculated_by,\n            positionSetupData?.clawback_settlement,\n            positionSetupData.commission_parentage,\n            positionSetupData.commission_structure_type,\n            positionSetupData?.commission_type,\n            positionSetupData?.commission_withheld,\n            positionSetupData?.deduction,\n            positionSetupData?.deduction_status,\n            positionSetupData?.frequency_type_id,\n            positionSetupData?.limit_ammount,\n            positionSetupData.maximum_withheld,\n            positionSetupData?.override,\n            positionSetupData?.override_settlement,\n            positionSetupData?.stack_settlement,\n            positionSetupData.position_name,\n            positionSetupData?.reconciliation_status,\n            positionSetupData.upfront_ammount,\n            positionSetupData.upfront_limit,\n            positionSetupData?.upfront_status,\n            positionSetupData.upfront_system,\n            isStackModalEnabled,\n        ]\n    )\n\n    const onSaveAndContinuePress = useCallback(\n        (finalStepOrSubmitPress = false) => {\n            const moveNextOrExit = () => {\n                if (finalStepOrSubmitPress) {\n                    CustomToast.success('Position setup updated')\n                    setLoader(true)\n                    handleClose()\n                    getPosition()\n                } else {\n                    stepper.current.goNext()\n                }\n            }\n\n            if (stepper.current.getCurrentStepIndex() === 1) {\n                stepsValidation.step1().then(() => {\n                    moveNextOrExit()\n                })\n            } else if (stepper.current.getCurrentStepIndex() === 2) {\n                stepsValidation.step2().then(() => {\n                    moveNextOrExit()\n                })\n            } else if (stepper.current.getCurrentStepIndex() === 3) {\n                stepsValidation.step3().then(() => {\n                    moveNextOrExit()\n                })\n            } else if (stepper.current.getCurrentStepIndex() === 4) {\n                if (companySetting?.overrides) {\n                    stepsValidation.step4().then(() => {\n                        moveNextOrExit()\n                    })\n                } else if (companySetting?.reconciliation) {\n                    stepsValidation.step5().then(() => {\n                        moveNextOrExit()\n                    })\n                } else {\n                    stepsValidation.step6().then(() => {\n                        moveNextOrExit()\n                    })\n                }\n            } else if (stepper.current.getCurrentStepIndex() === 5) {\n                if (companySetting?.reconciliation) {\n                    stepsValidation.step5().then(() => {\n                        moveNextOrExit()\n                    })\n                } else {\n                    stepsValidation.step6().then(() => {\n                        moveNextOrExit()\n                    })\n                }\n            } else if (stepper.current.getCurrentStepIndex() === 6) {\n                stepsValidation.step6().then(() => {\n                    moveNextOrExit()\n                })\n            }\n        },\n        [\n            companySetting?.overrides,\n            companySetting?.reconciliation,\n            getPosition,\n            handleClose,\n            setLoader,\n            stepsValidation,\n        ]\n    )\n\n    const prevStep = useCallback(() => {\n        if (!stepper.current) {\n            return\n        }\n\n        if (stepper.current.getCurrentStepIndex() === 1) {\n            stepsValidation.step1().then(() => {\n                stepper.current.goPrev()\n            })\n        } else if (stepper.current.getCurrentStepIndex() === 2) {\n            stepsValidation.step2().then(() => {\n                stepper.current.goPrev()\n            })\n        } else if (stepper.current.getCurrentStepIndex() === 3) {\n            stepsValidation.step3().then(() => {\n                stepper.current.goPrev()\n            })\n        } else if (stepper.current.getCurrentStepIndex() === 4) {\n            if (companySetting?.overrides) {\n                stepsValidation.step4().then(() => {\n                    stepper.current.goPrev()\n                })\n            } else if (companySetting?.reconciliation) {\n                stepsValidation.step5().then(() => {\n                    stepper.current.goPrev()\n                })\n            } else {\n                stepsValidation.step6().then(() => {\n                    stepper.current.goPrev()\n                })\n            }\n        } else if (stepper.current.getCurrentStepIndex() === 5) {\n            if (companySetting?.reconciliation) {\n                stepsValidation.step5().then(() => {\n                    stepper.current.goPrev()\n                })\n            } else {\n                stepsValidation.step6().then(() => {\n                    stepper.current.goPrev()\n                })\n            }\n        } else if (stepper.current.getCurrentStepIndex() === 6) {\n            stepsValidation.step6().then(() => {\n                stepper.current.goPrev()\n            })\n        }\n    }, [companySetting?.overrides, companySetting?.reconciliation, stepsValidation])\n\n    const updatePositionSetupData = (field, value) => {\n        setPositionSetupData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }\n\n    const onStepChange = (id) => {\n        stepper?.current?.goto(id)\n    }\n\n    return (\n        <CustomModal\n            id='kt_modal_create_app'\n            show={show}\n            onHide={handleClose}\n            onShow={loadStepper}\n            title={'Position Setup | Commissions'}\n            maxWidth='900'\n            className={'h-sm-75'}\n        >\n            <div className='' style={{position: 'relative'}}>\n                <CustomLoader full visible={loading} />\n\n                <div className=' mx-auto' style={{width: 'fit-content', overflow: 'hidden'}}>\n                    <div\n                        ref={stepperRef}\n                        className='stepper stepper-pills stepper-column d-flex flex-column flex-xl-row flex-row-fluid  justify-content-start'\n                        id='kt_modal_create_app_stepper'\n                    >\n                        <div\n                            className='d-flex justify-content-center justify-content-xl-start flex-row-auto mx-auto text-cmGrey500'\n                            style={{fontWeight: '600', width: 'fit-content'}}\n                        >\n                            <div className='stepper-nav'>\n                                <div className='stepper-item current' data-kt-stepper-element='nav'>\n                                    <div className='stepper-wrapper'>\n                                        <div\n                                            className='stepper-icon w-40px h-40px'\n                                            onClick={() =>\n                                                selectedPositionData?.status && onStepChange(1)\n                                            }\n                                            style={{\n                                                cursor: selectedPositionData?.id ? 'pointer' : '',\n                                            }}\n                                        >\n                                            <i className='stepper-check fas fa-check'></i>\n                                            <span className='stepper-number'>1</span>\n                                        </div>\n                                        <div className='stepper-label'>\n                                            <h3\n                                                className='stepper-title text-cmGrey500 '\n                                                style={{\n                                                    fontFamily: 'Manrope ',\n                                                    fontWeight: '600',\n                                                    fontSize: '14px',\n                                                }}\n                                            >\n                                                Commission\n                                            </h3>\n                                        </div>\n                                    </div>\n                                    <div className='stepper-line h-40px'></div>\n                                </div>\n                                <div className='stepper-item' data-kt-stepper-element='nav'>\n                                    <div className='stepper-wrapper'>\n                                        <div\n                                            className='stepper-icon w-40px h-40px'\n                                            onClick={() =>\n                                                selectedPositionData?.status && onStepChange(2)\n                                            }\n                                            style={{\n                                                cursor: selectedPositionData?.id ? 'pointer' : '',\n                                            }}\n                                        >\n                                            <i className='stepper-check fas fa-check'></i>\n                                            <span className='stepper-number'>2</span>\n                                        </div>\n                                        <div className='stepper-label'>\n                                            <h3\n                                                className='stepper-title text-cmGrey500'\n                                                style={{fontFamily: 'Manrope ', fontSize: '14px'}}\n                                            >\n                                                Upfront\n                                            </h3>\n                                        </div>\n                                    </div>\n                                    <div className='stepper-line h-40px'></div>\n                                </div>\n\n                                <div className='stepper-item' data-kt-stepper-element='nav'>\n                                    <div className='stepper-wrapper'>\n                                        <div\n                                            className='stepper-icon w-40px h-40px'\n                                            onClick={() =>\n                                                selectedPositionData?.status && onStepChange(3)\n                                            }\n                                            style={{\n                                                cursor: selectedPositionData?.id ? 'pointer' : '',\n                                            }}\n                                        >\n                                            <i className='stepper-check fas fa-check'></i>\n                                            <span className='stepper-number'>3</span>\n                                        </div>\n                                        <div className='stepper-label'>\n                                            <h3\n                                                className='stepper-title text-cmGrey500'\n                                                style={{fontFamily: 'Manrope ', fontSize: '14px'}}\n                                            >\n                                                Deductions\n                                            </h3>\n                                        </div>\n                                    </div>\n                                    <div className='stepper-line h-40px'></div>\n                                </div>\n                                {companySetting?.overrides ? (\n                                    <div className='stepper-item' data-kt-stepper-element='nav'>\n                                        <div className='stepper-wrapper'>\n                                            <div\n                                                className='stepper-icon w-40px h-40px'\n                                                onClick={() =>\n                                                    selectedPositionData?.status && onStepChange(4)\n                                                }\n                                                style={{\n                                                    cursor: selectedPositionData?.id\n                                                        ? 'pointer'\n                                                        : '',\n                                                }}\n                                            >\n                                                <i className='stepper-check fas fa-check'></i>\n                                                <span className='stepper-number'>4</span>\n                                            </div>\n                                            <div className='stepper-label'>\n                                                <h3\n                                                    className='stepper-title text-cmGrey500'\n                                                    style={{\n                                                        fontFamily: 'Manrope ',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    Overrides\n                                                </h3>\n                                            </div>\n                                        </div>\n                                        <div className='stepper-line h-40px'></div>\n                                    </div>\n                                ) : null}\n\n                                {companySetting?.reconciliation ? (\n                                    <div className='stepper-item' data-kt-stepper-element='nav'>\n                                        <div className='stepper-wrapper'>\n                                            <div\n                                                className='stepper-icon w-40px h-40px'\n                                                onClick={() =>\n                                                    selectedPositionData?.status && onStepChange(5)\n                                                }\n                                                style={{\n                                                    cursor: selectedPositionData?.id\n                                                        ? 'pointer'\n                                                        : '',\n                                                }}\n                                            >\n                                                <i className='stepper-check fas fa-check'></i>\n                                                <span className='stepper-number'>\n                                                    {companySetting?.overrides ? 5 : 4}\n                                                </span>\n                                            </div>\n                                            <div className='stepper-label'>\n                                                <h3\n                                                    className='stepper-title text-cmGrey500'\n                                                    style={{\n                                                        fontFamily: 'Manrope ',\n                                                        fontSize: '14px',\n                                                    }}\n                                                >\n                                                    Settlements\n                                                </h3>\n                                            </div>\n                                        </div>\n\n                                        <div className='stepper-line h-40px'></div>\n                                    </div>\n                                ) : null}\n                                <div className='stepper-item' data-kt-stepper-element='nav'>\n                                    <div className='stepper-wrapper'>\n                                        <div\n                                            className='stepper-icon w-40px h-40px'\n                                            onClick={() =>\n                                                selectedPositionData?.status && onStepChange(6)\n                                            }\n                                            style={{\n                                                cursor: selectedPositionData?.status\n                                                    ? 'pointer'\n                                                    : 'none',\n                                            }}\n                                        >\n                                            <i className='stepper-check fas fa-check'></i>\n                                            <span className='stepper-number'>\n                                                {companySetting?.reconciliation &&\n                                                companySetting?.overrides\n                                                    ? 6\n                                                    : (companySetting?.overrides &&\n                                                          !companySetting?.reconciliation) ||\n                                                      (!companySetting?.overrides &&\n                                                          companySetting?.reconciliation)\n                                                    ? 5\n                                                    : 4}\n                                            </span>\n                                        </div>\n                                        <div className='stepper-label'>\n                                            <h3\n                                                className='stepper-title text-cmGrey500'\n                                                style={{fontFamily: 'Manrope ', fontSize: '14px'}}\n                                            >\n                                                Pay Frequency\n                                            </h3>\n                                        </div>\n                                    </div>\n\n                                    <div className=' mb-10'></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=' px-lg-15 '>\n                            <form\n                                noValidate\n                                id='kt_modal_create_app_form'\n                                className='w- d-flex flex-column justify-content-between h-100 w-100 w-xl-500px '\n                            >\n                                <div className=''>\n                                    <PositionSetupStep1\n                                        POSITIONS_SETUP_FIELDS_KEYS={POSITIONS_SETUP_FIELDS_KEYS}\n                                        selectedPositionData={selectedPositionData}\n                                        positionSetupData={positionSetupData}\n                                        updatePositionSetupData={updatePositionSetupData}\n                                    />\n\n                                    <PositionSetupStep2\n                                        POSITIONS_SETUP_FIELDS_KEYS={POSITIONS_SETUP_FIELDS_KEYS}\n                                        selectedPositionData={selectedPositionData}\n                                        positionSetupData={positionSetupData}\n                                        updatePositionSetupData={updatePositionSetupData}\n                                        updateMultiplePositionSetupData={setPositionSetupData}\n                                    />\n\n                                    <PositionSetupStep3\n                                        POSITIONS_SETUP_FIELDS_KEYS={POSITIONS_SETUP_FIELDS_KEYS}\n                                        selectedPositionData={selectedPositionData}\n                                        positionSetupData={positionSetupData}\n                                        updatePositionSetupData={updatePositionSetupData}\n                                        updateMultiplePositionSetupData={setPositionSetupData}\n                                    />\n\n                                    {companySetting?.overrides ? (\n                                        <PositionSetupStep4\n                                            POSITIONS_SETUP_FIELDS_KEYS={\n                                                POSITIONS_SETUP_FIELDS_KEYS\n                                            }\n                                            selectedPositionData={selectedPositionData}\n                                            positionSetupData={positionSetupData}\n                                            updatePositionSetupData={updatePositionSetupData}\n                                            updateMultiplePositionSetupData={setPositionSetupData}\n                                            isStackModalEnabled={isStackModalEnabled}\n                                        />\n                                    ) : null}\n\n                                    {companySetting?.reconciliation ? (\n                                        <PositionSetupStep5\n                                            POSITIONS_SETUP_FIELDS_KEYS={\n                                                POSITIONS_SETUP_FIELDS_KEYS\n                                            }\n                                            selectedPositionData={selectedPositionData}\n                                            positionSetupData={positionSetupData}\n                                            updatePositionSetupData={updatePositionSetupData}\n                                            updateMultiplePositionSetupData={setPositionSetupData}\n                                            isStackModalEnabled={isStackModalEnabled}\n                                        />\n                                    ) : null}\n                                    <PositionSetupStep6\n                                        POSITIONS_SETUP_FIELDS_KEYS={POSITIONS_SETUP_FIELDS_KEYS}\n                                        selectedPositionData={selectedPositionData}\n                                        positionSetupData={positionSetupData}\n                                        updateMultiplePositionSetupData={setPositionSetupData}\n                                        updatePositionSetupData={updatePositionSetupData}\n                                    />\n                                </div>\n                                <div className='d-flex justify-content-center flex-wrap mx-5'>\n                                    <button\n                                        style={{\n                                            // background: '#6078EC',\n                                            color: '#6078EC',\n                                            border: '1px solid #6078EC',\n                                            fontSize: '14px',\n                                        }}\n                                        type='button'\n                                        className='btn mb-2 btn-lg py-2 px-15'\n                                        data-kt-stepper-action='previous'\n                                        onClick={prevStep}\n                                    >\n                                        Back\n                                    </button>\n                                    <div className='mx-5'>\n                                        {/* {!selectedPositionData?.status ? ( */}\n                                        <button\n                                            type='button'\n                                            style={{\n                                                background: '#6078EC',\n                                                color: 'white',\n                                            }}\n                                            className='btn btn-lg fs-6 mb-2 py-4 px-10'\n                                            data-kt-stepper-action='submit'\n                                            onClick={() => onSaveAndContinuePress(true)}\n                                        >\n                                            {/* Save and Continue */}\n                                            Submit\n                                        </button>\n                                        {/* ) : null} */}\n\n                                        <button\n                                            type='button'\n                                            style={{\n                                                background: '#6078EC',\n                                                color: 'white',\n                                            }}\n                                            className='btn btn-lg fs-6 mb-2 py-4  px-10 text-nowrap'\n                                            data-kt-stepper-action='next'\n                                            onClick={() => onSaveAndContinuePress(false)}\n                                        >\n                                            Save and Continue\n                                        </button>\n                                    </div>\n                                    {selectedPositionData?.status ? (\n                                        <div>\n                                            <button\n                                                type='button'\n                                                style={{\n                                                    background: '#6078EC',\n                                                    color: 'white',\n                                                }}\n                                                onClick={() => onSaveAndContinuePress(true)}\n                                                className='btn btn-lg fs-6 mb-2 py-4 px-10'\n                                                data-kt-stepper-action='next'\n                                            >\n                                                Submit\n                                            </button>\n                                        </div>\n                                    ) : null}\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nconst PositionLockedView = ({checked = 0, onChange = () => {}, name = ''}) => (\n    <div className='mt-1 d-flex align-items-center'>\n        <span\n            className={`${checked ? 'bi bi-lock-fill' : 'bi bi-unlock-fill'} text-cmGrey700`}\n        ></span>\n        <label className='ms-2 text-cmGrey900' style={{width: '120px', fontSize: '12px'}}>\n            {checked ? 'Locked' : 'Unlocked'} for Hiring\n        </label>\n        <span style={{width: 'fit-content'}}>\n            <CustomCheckbox name={name} checked={checked == 1 ? true : false} onChange={onChange} />\n        </span>\n    </div>\n)\n\nexport {CreateCompensationAppModal, PositionLockedView}\n","import {useCallback, useEffect, useRef, useState} from 'react'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport CustomLoader from '../../customLoader/CustomLoader'\nimport _ from 'lodash'\nimport CustomInput, {INPUT_TYPE} from '../customInput/CustomInput'\n\nconst CustomSearchInput = ({\n    zIndex = 10,\n    onSearch,\n    onSelectValue = () => {},\n    selectedValue = '',\n    display_field_name = 'name',\n    placeholder = 'Who hired this Person',\n    style,\n    errorMessage = '',\n    customEmptyMessage = 'No Data Found',\n}) => {\n    const searchTextInputRef = useRef(null)\n    const mainInputRef = useRef(null)\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [searchText, setSearchText] = useState('')\n    const [openSearchList, setOpenSearchList] = useState(false)\n\n    useEffect(() => {\n        if (!searchText) {\n            setData([])\n        }\n    }, [searchText])\n\n    const searchFunc = useCallback(\n        _.debounce((e) => {\n            setSearchText(e?.target?.value)\n            setLoading(true)\n            onSearch(e?.target?.value)\n                .then(setData)\n                .finally(() => setLoading(false))\n        }, 500),\n        []\n    )\n\n    useEffect(() => {\n        if (openSearchList) searchTextInputRef?.current?.focus()\n        else {\n            setSearchText('')\n            setData([])\n        }\n    }, [openSearchList])\n\n    const onOptionPress = useCallback(\n        (item) => {\n            onSelectValue(item)\n            setOpenSearchList(false)\n        },\n        [onSelectValue]\n    )\n\n    const onInputBlur = useCallback(() => {\n        setTimeout(() => {\n            setOpenSearchList(false)\n        }, 300)\n    }, [])\n\n    const onInputClick = useCallback(() => {\n        setOpenSearchList((val) => !val)\n    }, [])\n\n    return (\n        <div style={{width: '100%', zIndex}}>\n            <div style={{width: '100%'}}>\n                <input\n                    autoComplete='off'\n                    ref={mainInputRef}\n                    readOnly\n                    type='search'\n                    value={selectedValue ?? ''}\n                    onClick={onInputClick}\n                    style={{\n                        background: '#FAFAFA',\n                        fontWeight: 600,\n                        color: '#424242',\n                        fontSize: '14px',\n                        width: '100%',\n                        ...style,\n                    }}\n                    name='input'\n                    placeholder={placeholder}\n                    className={`form-select p-3 h-50px form-select-black form-select-sm ${\n                        errorMessage ? 'border-cmError' : ''\n                    }`}\n                />\n            </div>\n            <div\n                className='p-error ms-2 text-cmError'\n                style={{fontSize: '12px', fontWeight: 600, fontFamily: 'Manrope'}}\n            >\n                {errorMessage}\n            </div>\n            {openSearchList && (\n                <div\n                    className='d-flex justify-content-center'\n                    style={{width: '100%', position: 'relative'}}\n                >\n                    <div\n                        className='shadow bg-white'\n                        style={{\n                            position: 'absolute',\n                            width: '100%',\n                            zIndex,\n                            background: 'green',\n                            borderTopLeftRadius: 0,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 10,\n                            borderBottomLeftRadius: 10,\n                            fontWeight: 600,\n                        }}\n                    >\n                        <div>\n                            <div className='' style={{width: '100%'}}>\n                                <div className='mb-1 mx-auto py-3'>\n                                    {/* <CustomInput\n                                        type={INPUT_TYPE.search}\n                                        name='search'\n                                        onChange={searchFunc}\n                                        ref={searchTextInputRef}\n                                        onBlur={onInputBlur}\n                                        value={searchText}\n                                    /> */}\n                                    <KTSVG\n                                        path='/media/icons/duotune/general/gen021.svg'\n                                        className='svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute mt-6 ms-3 translate-middle-y'\n                                    />\n\n                                    <input\n                                        autoComplete='off'\n                                        ref={searchTextInputRef}\n                                        onBlur={onInputBlur}\n                                        type='search'\n                                        style={{\n                                            background: 'white',\n                                            border: 'none',\n                                            width: '100%',\n                                        }}\n                                        onChange={searchFunc}\n                                        className='form-control form-control-solid px-12 '\n                                        name='search'\n                                        placeholder='Search...'\n                                    />\n                                </div>\n                                <div\n                                    style={{\n                                        border: '0.5px solid #E0E0E0',\n                                        width: '100%',\n                                        marginTop: '-5px',\n                                    }}\n                                ></div>\n                            </div>\n                            <div\n                                className='my-4 '\n                                style={{\n                                    width: '100%',\n                                    overflowY: 'scroll',\n                                }}\n                            >\n                                <CustomLoader visible={loading} opacity={0} />\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    {!loading && searchText && data?.length <= 0 && (\n                                        <span\n                                            className='text-cmGrey300'\n                                            style={{\n                                                fontSize: 14,\n                                                fontFamily: 'Manrope',\n                                            }}\n                                        >\n                                            {customEmptyMessage}\n                                        </span>\n                                    )}\n                                    {!loading && !searchText && (\n                                        <span className='text-cmGrey500'>Please search</span>\n                                    )}\n                                </div>\n                                <div\n                                    style={{\n                                        maxHeight: 200,\n                                    }}\n                                >\n                                    {!loading &&\n                                        searchText &&\n                                        data.map((item, index) => {\n                                            return (\n                                                <div\n                                                    key={index}\n                                                    className='d-flex flex-row'\n                                                    style={{\n                                                        paddingLeft: 15,\n                                                        paddingRight: 15,\n                                                        border: '2px solid lightgrey',\n                                                        borderTopWidth: 0,\n                                                        borderBottomWidth:\n                                                            data?.length - 1 == index ? 0 : 2,\n                                                        borderLeftWidth: 0,\n                                                        borderRightWidth: 0,\n                                                        width: '100%',\n                                                        height: '100%',\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={() => {\n                                                        onOptionPress(item)\n                                                    }}\n                                                >\n                                                    <div\n                                                        style={{\n                                                            fontFmaily: 'Manrope ms-10 mt-5',\n                                                            fontWeight: '600',\n                                                            fontSize: '14px',\n                                                            width: '100%',\n                                                            height: '100%',\n                                                        }}\n                                                    >\n                                                        <p className='mt-2'>\n                                                            {item?.[display_field_name]}\n                                                        </p>\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default CustomSearchInput\n"],"names":["CustomSortSvg","_ref","className","onClick","sortingOrder","_jsxs","children","_jsx","class","_positionSetupData$po","_positionSetupData$co","POSITIONS_SETUP_FIELDS_KEYS","positionSetupData","selectedPositionData","updatePositionSetupData","onChangeInputData","useCallback","e","_e$target","_e$target2","target","name","value","style","fontFamily","fontSize","fontWeight","MAIN_POSITTIONS_ID","includes","position_id","toString","CustomInput","label","min","placeholder","position_name","onChange","rejex","required","suffixText","type","INPUT_TYPE","commission_parentage","max","percentageLimitCheck","PositionLockedView","commission_parentag_hiring_locked","getBooleanValue","checked","CustomDropdown","options","searching","commission_structure_type","toLowerCase","commission_parentag_type_hiring_locked","_positionSetupData$ca","_positionSetupData$up","updateMultiplePositionSetupData","upfront_status","changedStatus","val","upfront_ammount","upfront_ammount_locked","calculated_by","calculated_locked","upfront_system","upfront_system_locked","upfront_limit","_Fragment","marginLeft","prefixText","CustomToast","UNIT_TYPE1","subLabel","_positionSetupData$de","_positionSetupData$de2","dispatch","useDispatch","costCenterList","useSelector","getParentChildCostCenterSelector","onChangeDeduction","index","field","tempData","deduction","useEffect","getParentChildCostCenterAction","_e$target3","costCenterListWithChilds","useMemo","data","map","item","_item$chields","_item$chields2","push","id","disabled","chields","length","subItem","concat","deduction_status","overflowX","overflowY","marginTop","deduction_locked","status","cost_center_id","deduction_type","ammount_par_paycheck","limit_type","limit_ammount","borderRadius","onChangeDeductionLimit","CustomDelete","i","filter","deleteCostHead","handleAdd","width","height","cursor","border","textDecoration","padding","Number","limit","_positionSetupData$ov","_positionSetupData$ov2","_positionSetupData$ov3","_positionSetupData$ov4","_positionSetupData$ov7","_positionSetupData$ov8","_positionSetupData$ov9","_positionSetupData$ov10","_positionSetupData$ov11","_positionSetupData$ov12","_positionSetupData$ov13","isStackModalEnabled","tieroverride","setTierOverrides","useState","getTierLevelService","then","res","catch","Configure","onChangeOverride","override","fontStyle","SingleOveride","overrideIndex","title","_positionSetupData$ov5","_positionSetupData$ov6","override_ammount","onChangeLimit","override_ammount_locked","_positionSetupData$ov14","_ref2","_positionSetupData$ov15","_positionSetupData$ov16","_positionSetupData$ov17","_positionSetupData$ov18","_positionSetupData$ov19","_positionSetupData$ov20","_positionSetupData$ov23","_positionSetupData$ov24","_positionSetupData$ov25","_positionSetupData$ov26","_positionSetupData$ov27","_positionSetupData$ov28","_positionSetupData$ov29","_positionSetupData$ov30","_positionSetupData$ov31","_positionSetupData$ov33","_positionSetupData$ov34","_positionSetupData$ov35","_positionSetupData$ov36","_positionSetupData$ov37","isPercentOverrideType","role","_positionSetupData$ov21","_positionSetupData$ov22","_e$target4","_positionSetupData$ov32","OVERRIDE_TYPE","_e$target5","override_name","override_type_locked","_positionSetupData$ov38","_positionSetupData$ov39","loading","setLoading","position","CustomLoader","full","visible","reconciliation_status","onCheckRecon","body","group_id","checkReconciliationSettingService","checkStatus","finally","commission_withheld","commission_type","maximum_withheld","override_settlement","clawback_settlement","commission_withheld_locked","commission_type_locked","stack_settlement","getPayFrequencyData","getPayFrequencySettingSelector","weekDropdownList","weekName","frequency_type_name","frequency_type_id","valueKey","tier_override_status","sliding_scale","sliding_scale_locked","levels","level_locked","settlement_id","INIT_POSITION_SETUP_DATA","is_stack","override_id","settlement_type","CreateCompensationAppModal","show","handleClose","getPosition","setLoader","stepperRef","useRef","stepper","companySetting","getCompanySettingSelector","companyOverrideSetting","getCompanyOverrideSettingSelector","setPositionSetupData","_selectedPositionData","getCostCenterListAction","getPayFrequencySettingAction","getCompanyOverrideSettingAction","_positionSetupData$pa","parent_position_id","allow_office_stack_override_status","onSetupOrUpdatePosition","Promise","resolve","reject","_data$override","_data$override$","updatePositionService","error","getErrorMessageFromResponse","stepsValidation","step1","isInputValueExist","step2","step3","filledData","step4","step5","step6","onSaveAndContinuePress","finalStepOrSubmitPress","arguments","undefined","moveNextOrExit","current","goNext","getCurrentStepIndex","overrides","reconciliation","prevStep","goPrev","onStepChange","_stepper$current","goto","CustomModal","onHide","onShow","loadStepper","StepperComponent","maxWidth","overflow","ref","noValidate","PositionSetupStep1","PositionSetupStep2","PositionSetupStep3","PositionSetupStep4","PositionSetupStep5","PositionSetupStep6","color","background","CustomCheckbox","zIndex","onSearch","onSelectValue","selectedValue","display_field_name","errorMessage","customEmptyMessage","searchTextInputRef","mainInputRef","setData","searchText","setSearchText","openSearchList","setOpenSearchList","searchFunc","_","_searchTextInputRef$c","focus","onOptionPress","onInputBlur","setTimeout","onInputClick","autoComplete","readOnly","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","KTSVG","path","onBlur","opacity","display","alignItems","justifyContent","maxHeight","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","fontFmaily"],"sourceRoot":""}