{"version":3,"file":"static/js/8226.675cc71b.chunk.js","mappings":"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","sources":["app/modules/standard_manager/management/particularEmployee/compoents/documents/DocumentFormPopup.js","app/modules/standard_manager/management/particularEmployee/compoents/documents/DocumentTable.js","app/modules/standard_manager/management/particularEmployee/compoents/documents/DocumentsPage.js","customComponents/customTooltip/CustomTooltip.js"],"sourcesContent":["import {useState, useEffect, useCallback} from 'react'\nimport {createPortal} from 'react-dom'\nimport {Modal} from 'react-bootstrap'\nimport {\n    addEmployeeDocumentByIdService,\n    updateEmployeeDocumentByIdService,\n} from '../../../../../../../services/Services'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getDocumentTypesAction} from '../../../../../../../redux/actions/SettingActions'\nimport {getDocumentTypessSelector} from '../../../../../../../redux/selectors/SettingsSelectors'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport {getErrorMessageFromResponse} from '../../../../../../../helpers/CommonHelpers'\nimport CustomModal from '../../../../../../../customComponents/customModal/CustomModal'\n\nconst modalsRoot = document.getElementById('root-modals') || document.body\n\nconst DocumentFormPopup = ({show, handleClose, employeeDocData, userId}) => {\n    const dispatch = useDispatch()\n    const [selectedImages, setSelectedImages] = useState(null)\n    const [data, setData] = useState(employeeDocData)\n    const docType = useSelector(getDocumentTypessSelector)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        dispatch(getDocumentTypesAction())\n    }, [])\n\n    useEffect(() => {\n        setData(employeeDocData)\n    }, [employeeDocData])\n\n    const addUpdateDocument = useCallback(() => {\n        setLoading(true)\n        let formData = new FormData()\n        formData.append('user_id', userId)\n        formData.append('document_type_id', data?.document_type_id ?? 1)\n        formData.append('description', data?.description)\n        if (selectedImages?.length > 0) {\n            for (let i = 0; i < selectedImages?.length; i++) {\n                formData.append('image[]', selectedImages?.[i])\n            }\n        }\n        if (data?.id) {\n            formData.append('id', data?.id)\n            updateEmployeeDocumentByIdService(formData)\n                .then(() => {\n                    CustomToast.success('Document updated')\n                    handleClose()\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        } else {\n            addEmployeeDocumentByIdService(formData)\n                .then(() => {\n                    CustomToast.success('Document Added')\n                    handleClose()\n                })\n                .catch((e) => {\n                    CustomToast.error(getErrorMessageFromResponse(e))\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [data?.description, data?.document_type_id, data?.id, handleClose, selectedImages, userId])\n\n    const onChangeInputData = (e) => {\n        updateData(e?.target?.name, e?.target?.value)\n    }\n    const fileSelectedHandler = (e) => {\n        setSelectedImages(e?.target?.files)\n    }\n    const updateData = (field, value) => {\n        setData((val) => ({\n            ...val,\n            [field]: value,\n        }))\n    }\n    return (\n        <CustomModal\n            show={show}\n            onHide={handleClose}\n            maxWidth='1000'\n            title={'Upload New Documents'}\n        >\n            <CustomLoader full visible={loading} />\n\n            {/* <div className='modal-body py-lg-5  p-15' style={{fontFamily: 'Manrope', fontSize: '14px'}}> */}\n            <div className='mx-sm-auto mt-15 mb-20 w-sm-400px mx-5'>\n                {/* <form> */}\n                <div className='mb-15'>\n                    <label className='form-label text-cmGrey800 mb-5' style={{fontWeight: 600}}>\n                        Upload new documents (<span className='text-cmError'>*</span> is mandatory)\n                    </label>\n                    <select\n                        className='form-select text-cmGrey700 bg-cmGrey200 border border-0 cursor-pointer'\n                        style={{fontWeight: 600}}\n                        onChange={onChangeInputData}\n                        name={'document_type_id'}\n                        value={data?.document_type_id}\n                    >\n                        <option value=''>Select document type</option>\n                        {docType?.map((list, index) => (\n                            <option value={list.id} style={{fontWeight: 600}} key={index}>\n                                {list.document_type}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div className='mb-15'>\n                    <label className='form-labeltext-cmGrey800 mb-5' style={{fontWeight: 600}}>\n                        description\n                    </label>\n                    <textarea\n                        type='text'\n                        className='form-control bg-cmbg'\n                        placeholder='Add here'\n                        name={'description'}\n                        defaultValue={data?.description}\n                        onChange={onChangeInputData}\n                    />\n                </div>\n                <div className='mb-15'>\n                    <label className='form-labeltext-cmGrey800 mb-5' style={{fontWeight: 600}}>\n                        Images or documents (maximum 5 MB each)\n                        <span className='text-cmError'>*</span>\n                    </label>\n                    <input\n                        type='file'\n                        className='form-control bg-cmbg'\n                        required\n                        multiple\n                        onChange={fileSelectedHandler}\n                        name={'image'}\n                    />\n                    <div\n                        style={{\n                            marginTop: 20,\n                        }}\n                    >\n                        {data?.document &&\n                            data?.document?.length > 0 &&\n                            data.document.map((doc) => (\n                                <div\n                                    key={doc?.document}\n                                    className='bg-cmGrey100'\n                                    style={{\n                                        padding: 5,\n                                        paddingLeft: 10,\n                                        borderRadius: 10,\n                                    }}\n                                >\n                                    <span\n                                        style={{\n                                            fontFamily: '',\n                                        }}\n                                    >\n                                        {doc.document}\n                                    </span>\n                                </div>\n                            ))}\n                    </div>\n                </div>\n                <div className='text-center'>\n                    <button\n                        // type='submit'\n                        className='btn bg-cmBlue-Crayola text-cmwhite w-sm-250px '\n                        style={{fontWeight: 700, fontSize: '16px'}}\n                        onClick={addUpdateDocument}\n                    >\n                        {employeeDocData?.id == 'edit' ? 'Update Documents' : 'Upload Documents'}\n                    </button>\n                </div>\n            </div>\n        </CustomModal>\n    )\n}\n\nexport {DocumentFormPopup}\n","import CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {TABLE_BORDER} from '../../../../../../../helpers/CommonHelpers'\nimport EachDocTypeRow from '../../../../../employee/components/EmployeePackageSteps.js/EachDocTypeRow'\n\nconst DocumentTable = ({\n    employeeData,\n    onSelectedModal,\n    loading,\n    documentData,\n    deleteDocument,\n    userId,\n    getDocument,\n}) => {\n    return (\n        <div\n            className='table-responsive shadow-sm overflow-auto bg-cmwhite '\n            style={{borderRadius: '10px', position: 'relative'}}\n        >\n            <CustomLoader visible={loading} full />\n            <table className='table'>\n                <thead className={TABLE_BORDER}>\n                    <tr\n                        className='bg-cmGrey300 text-cmGrey900'\n                        style={{\n                            fontSize: '14px',\n                            fontWeight: '700',\n                            fontFamily: 'Manrope',\n                        }}\n                    >\n                        <th className='w-auto p-5 text-nowrap'>Type</th>\n                        <th className='w-auto p-5 text-nowrap'>Uploaded Date</th>\n                        <th className='w-auto p-5 text-nowrap'>Attachments</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody className={TABLE_BORDER}>\n                    {documentData?.length > 0 ? (\n                        <>\n                            {documentData?.map(\n                                (item, index) =>\n                                    (item?.document?.length > 0 || !item?.is_deleted) && (\n                                        <EachDocTypeRow\n                                            employeeData={employeeData}\n                                            item={item}\n                                            index={index}\n                                            userId={userId}\n                                            key={index}\n                                            getDocument={getDocument}\n                                        />\n                                    )\n                            )}\n                        </>\n                    ) : (\n                        <tr>\n                            <td\n                                colSpan={5}\n                                style={{\n                                    textAlign: 'center',\n                                    fontFamily: 'Manrope',\n                                    fontWeight: '500',\n                                    fontSize: 14,\n                                    paddingTop: 20,\n                                    paddingBottom: 20,\n                                }}\n                            >\n                                No data found\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default DocumentTable\n","import {useState, useEffect, useCallback, useMemo} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {DocumentFormPopup} from './DocumentFormPopup'\nimport DocumentTable from './DocumentTable'\nimport {\n    getEmployeeDocumentByIdService,\n    deleteEmployeeDocumentByIdService,\n    getEmployeeSequiDocDocumentByIdService,\n    getOnBoardingEmployeeSequiDocDocumentByIdService,\n} from '../../../../../../../services/Services'\nimport CustomToast from '../../../../../../../customComponents/customToast/CustomToast'\nimport {TabPanel, TabView} from 'primereact/tabview'\nimport CustomButton, {\n    BUTTON_TYPE,\n} from '../../../../../../../customComponents/customButtton/CustomButton'\nimport CustomNoData from '../../../../../../../customComponents/customNoData/CustomNoData'\nimport {fontsFamily} from '../../../../../../../assets/fonts/fonts'\nimport CustomLoader from '../../../../../../../customComponents/customLoader/CustomLoader'\nimport {KTSVG} from '../../../../../../../_metronic/helpers'\nimport {getValidDate} from '../../../../../../../constants/constants'\nimport {getServerImage} from '../../../../../../../helpers/CommonHelpers'\nimport axios from 'axios'\nimport CustomTooltip from '../../../../../../../customComponents/customTooltip/CustomTooltip'\nimport CustomArrow, {\n    ARROW_DIRECTION,\n} from '../../../../../../../customComponents/customIcons/CustomIcons'\nimport {saveAs} from 'file-saver'\n\nconst DocumentsPage = ({employeeData}) => {\n    let location = useLocation()\n    const [employeeDocData, setEmployeeDocData] = useState(null)\n    const [selectedEmployeecData, setSelectedEmployeecData] = useState(null)\n    const [sequiDocDocumentData, setSequiDocDocumentData] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [open, setOpen] = useState(false)\n    const [componentStates, setComponentStates] = useState([])\n    const [activeIndex, setActiveIndex] = useState(0)\n    const [onBoardingResMsg, setOnBoardingResMsg] = useState(null)\n\n    useEffect(() => {\n        if (location?.state?.isOnBoarding) setActiveIndex(1)\n        getDocument()\n        sequiDocDocument()\n    }, [location?.state?.employee_id])\n\n    const sequiDocDocument = useCallback(() => {\n        if (location?.state?.isOnBoarding) {\n            getOnBoardingEmployeeSequiDocDocumentByIdService(location?.state?.employee_id)\n                .then((res) => {\n                    setSequiDocDocumentData(res?.data)\n                    if (location?.state?.isOnBoarding) setOnBoardingResMsg(res?.message)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        } else {\n            getEmployeeSequiDocDocumentByIdService(location?.state?.employee_id)\n                .then((res) => {\n                    setSequiDocDocumentData(res?.data)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }, [location?.state?.employee_id, activeIndex])\n\n    const getDocument = () => {\n        if (location?.state?.isOnBoarding) {\n        } else {\n            setLoading(true)\n            getEmployeeDocumentByIdService(location?.state?.employee_id)\n                .then((res) => {\n                    setEmployeeDocData(res)\n                })\n                .finally(() => {\n                    setLoading(false)\n                })\n        }\n    }\n    const handleClose = () => {\n        setSelectedEmployeecData(null)\n        getDocument()\n        setOpen(false)\n    }\n\n    const deleteDocument = useCallback(\n        (id) => {\n            const tempData = {...employeeDocData}\n            const finalData = tempData?.data?.filter((item) => item?.id !== id)\n            tempData.data = finalData\n            setEmployeeDocData(tempData)\n            CustomToast.success('Document Deleted')\n            const body = {\n                user_id: location?.state?.employee_id,\n                id: id,\n            }\n            deleteEmployeeDocumentByIdService(body)\n        },\n        [employeeDocData, location?.state?.employee_id]\n    )\n\n    const totalDocuments = useMemo(() => {\n        let count = 0\n        employeeDocData?.data?.map((item) => (count += item?.document?.length ?? 0))\n        return count\n    }, [employeeDocData?.data])\n\n    const documentHeaderTemplate = (options) => {\n        return (\n            <div className='p-2 b ' onClick={options.onClick}>\n                <CustomButton\n                    buttonLabel={'Document'}\n                    buttonType={BUTTON_TYPE.secondary}\n                    // onClick={handleAssignPayroll}\n                />\n            </div>\n        )\n    }\n\n    const groupedSequiDocData = useMemo(() => {\n        let groupedData = []\n        if (sequiDocDocumentData) {\n            groupedData = Object.values(\n                sequiDocDocumentData?.reduce((acc, item) => {\n                    const {categery_id, categories} = item\n                    acc[categery_id] = acc[categery_id] || {categery_id, categories, items: []}\n                    acc[categery_id]?.items.push(item)\n                    return acc\n                }, {})\n            )\n        }\n\n        return groupedData\n    }, [sequiDocDocumentData])\n\n    const toggleComponent = (id) => {\n        let data = [...componentStates]\n        const isExistInData = data.some((item) => item == id)\n        if (isExistInData) data = data.filter((item) => item != id)\n        else data.push(id)\n        setComponentStates(data)\n    }\n\n    function downloadDoc(file) {\n        const fileName = file?.split('/')?.[1]\n\n        // const filePath = getServerImage(file)\n        const filePath = file\n        // const filePath = `${BASE_URL}/${file}`\n        axios\n            .get(filePath, {\n                responseType: 'blob',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'application/pdf',\n                },\n            })\n            .then((response) => {\n                const url = window.URL.createObjectURL(new Blob([response.data]))\n                const link = document.createElement('a')\n                link.href = url\n                link.setAttribute('download', fileName) //or any other extension\n                document.body.appendChild(link)\n                link.click()\n            })\n            .catch((error) => CustomToast('failed to download'))\n        // saveAs(getServerImage(file), fileName)\n    }\n\n    const signDocumentStatus = useCallback((item) => {\n        if (!item?.is_active) return 'Inactive'\n        switch (item?.document_response_status) {\n            case 0:\n                return 'Not Signed'\n            case 1:\n                return 'Signed'\n            case 2:\n                return 'Rejected'\n            case 5:\n                return 'Expired'\n            case 6:\n                return 'Request Change'\n            default:\n                return 'Not Signed'\n        }\n    }, [])\n\n    return (\n        <div>\n            <div className='card'>\n                <TabView activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)}>\n                    <TabPanel\n                        // headerTemplate={documentHeaderTemplate}\n                        headerClassName='text-cmGrey700'\n                        header='Document'\n                        headerStyle={{fontFamily: fontsFamily.manrope}}\n                    >\n                        <div className='mb-10 ' style={{borderRadius: '10px'}}>\n                            <div\n                                className='mx-10 p-5 d-flex justify-content-between align-items-center'\n                                style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                            >\n                                <div className='d-flex gap-3 align-items-center'>\n                                    <div className='text-cmGrey900' style={{fontSize: '14px'}}>\n                                        Total Documents:\n                                    </div>\n                                    <div\n                                        className='text-cmGrey900'\n                                        style={{fontSize: '16px', fontWeight: 800}}\n                                    >\n                                        {totalDocuments}\n                                    </div>\n                                </div>\n                            </div>\n                            <DocumentTable\n                                employeeData={employeeData}\n                                onSelectedModal={(val, type) => {\n                                    if (type == 'edit') setOpen(true)\n                                    setSelectedEmployeecData(val)\n                                }}\n                                loading={loading}\n                                documentData={employeeDocData?.data}\n                                deleteDocument={deleteDocument}\n                                userId={location?.state?.employee_id}\n                                getDocument={getDocument}\n                            />\n                        </div>\n                    </TabPanel>\n                    <TabPanel\n                        headerClassName='text-cmGrey700'\n                        header='Signed Document'\n                        headerStyle={{fontFamily: fontsFamily.manrope}}\n                    >\n                        <div\n                            className='table-responsive shadow-sm overflow-auto bg-cmwhite '\n                            style={{borderRadius: '10px', position: 'relative'}}\n                        >\n                            <CustomLoader visible={loading} full />\n\n                            <table className='table'>\n                                <thead>\n                                    <tr\n                                        className='bg-cmGrey300 text-cmGrey900'\n                                        style={{\n                                            fontSize: '14px',\n                                            fontWeight: 700,\n                                            fontFamily: fontsFamily.manrope,\n                                        }}\n                                    >\n                                        <th className='w-auto p-5 text-nowrap'>Name</th>\n                                        <th className='w-auto p-5 text-nowrap'>Description</th>\n                                        <th className='w-auto p-5 text-nowrap'>\n                                            Document Send Date\n                                        </th>\n                                        <th className='w-auto p-5 text-nowrap'>Document</th>\n                                        <th className='w-auto p-5 text-nowrap'>Status</th>\n                                        <th className='w-auto p-5 text-nowrap'>Comment</th>\n\n                                        <th></th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody className='border-top border-5 border-cmwhite'>\n                                    {groupedSequiDocData?.length > 0 ? (\n                                        groupedSequiDocData?.map((item, index) => {\n                                            return (\n                                                <>\n                                                    <tr\n                                                        className='text-cmGrey900 bg-cmGrey200 '\n                                                        style={{\n                                                            fontSize: '14px',\n                                                            fontWeight: 700,\n                                                        }}\n                                                        key={item.categery_id}\n                                                    >\n                                                        <td\n                                                            colSpan={9}\n                                                            className=' p-5 ps-10 text-nowrap'\n                                                        >\n                                                            <div className='d-flex align-items-center gap-5'>\n                                                                <div style={{fontSize: 16}}>\n                                                                    {item?.categories}\n                                                                </div>\n                                                                <div className='d-flex flex-center gap-2'>\n                                                                    <KTSVG\n                                                                        path='/media/icons/duotune/art/document-text.svg'\n                                                                        className='cursor-pointer'\n                                                                        svgClassName='w-15px h-15px'\n                                                                    />\n                                                                    <span className='text-cmGrey600'>\n                                                                        {item?.items?.length}\n                                                                    </span>\n                                                                </div>\n\n                                                                <div className='mt-1'>\n                                                                    <CustomArrow\n                                                                        arrowDirection={\n                                                                            componentStates?.includes(\n                                                                                item?.categery_id\n                                                                            )\n                                                                                ? ARROW_DIRECTION.down\n                                                                                : ARROW_DIRECTION.right\n                                                                        }\n                                                                        onClick={() =>\n                                                                            toggleComponent(\n                                                                                item?.categery_id\n                                                                            )\n                                                                        }\n                                                                    />\n                                                                    {/* <KTSVG\n                                                                        path='/media/icons/duotune/art/corner-arrow-down.svg'\n                                                                        className='cursor-pointer'\n                                                                        svgClassName='w-25px h-25px'\n                                                                        onClick={() =>\n                                                                            toggleComponent(\n                                                                                item?.categery_id\n                                                                            )\n                                                                        }\n                                                                    /> */}\n                                                                </div>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n\n                                                    {componentStates?.includes(item?.categery_id)\n                                                        ? item?.items?.map((category) => (\n                                                              <tr\n                                                                  key={category?.id}\n                                                                  className='text-cmGrey800 stripRow  '\n                                                                  style={{\n                                                                      fontSize: '14px',\n                                                                      fontWeight: 600,\n                                                                  }}\n                                                              >\n                                                                  <td className='p-5 text-nowrap text-cmGrey800 '>\n                                                                      {category?.template_name}\n                                                                  </td>\n                                                                  <td className='p-5  text-cmGrey500'>\n                                                                      {category?.description}\n                                                                  </td>\n                                                                  <td className='p-5 text-nowrap text-cmGrey800'>\n                                                                      {getValidDate(\n                                                                          category?.document_send_date,\n                                                                          'MM/DD/YYYY'\n                                                                      )}\n                                                                  </td>\n\n                                                                  <td className='p-5 text-nowrap'>\n                                                                      {/* {category?.signed_document ? ( */}\n                                                                      {category?.signed_status ? (\n                                                                          <a\n                                                                              href={\n                                                                                  category?.signed_document_s3\n                                                                              }\n                                                                              rel='noreferrer'\n                                                                              target='_blank'\n                                                                          >\n                                                                              <span\n                                                                                  className='bg-cmBlue-Crayola rounded-pill text-cmBlue-Crayola bg-opacity-10 p-2 cursor-pointer'\n                                                                                  //   onClick={() =>\n                                                                                  //       downloadDoc(\n                                                                                  //           category?.signed_document_s3\n                                                                                  //       )\n                                                                                  //   }\n                                                                              >\n                                                                                  <i className='fa-solid fa-paperclip text-cmBlue-Crayola pe-2'></i>\n                                                                                  <span>{1}</span>\n                                                                              </span>\n                                                                          </a>\n                                                                      ) : null}\n                                                                      {/* ) : null} */}\n                                                                  </td>\n\n                                                                  <td>\n                                                                      {signDocumentStatus(category)}\n                                                                  </td>\n                                                                  <td>\n                                                                      {category?.user_request_change_message ? (\n                                                                          <CustomTooltip\n                                                                              title={\n                                                                                  category?.user_request_change_message\n                                                                              }\n                                                                          >\n                                                                              <i\n                                                                                  className='bi bi-chat-fill text-warning'\n                                                                                  style={{\n                                                                                      fontSize: 20,\n                                                                                  }}\n                                                                              ></i>\n                                                                          </CustomTooltip>\n                                                                      ) : (\n                                                                          'No Comment'\n                                                                      )}\n                                                                  </td>\n                                                              </tr>\n                                                          ))\n                                                        : null}\n                                                </>\n                                            )\n                                        })\n                                    ) : (\n                                        <tr key='no-data'>\n                                            <td\n                                                colSpan={6}\n                                                style={{\n                                                    textAlign: 'center',\n                                                    fontFamily: 'Manrope',\n                                                    fontWeight: '500',\n                                                    fontSize: 14,\n                                                    paddingTop: 20,\n                                                    paddingBottom: 20,\n                                                }}\n                                            >\n                                                {onBoardingResMsg ? (\n                                                    onBoardingResMsg\n                                                ) : (\n                                                    <CustomNoData label={'No data found'} />\n                                                )}\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                                {/* ))} */}\n                            </table>\n                        </div>\n                    </TabPanel>\n                </TabView>\n            </div>\n            {/* <div className='mb-10 bg-cmwhite shadow-sm' style={{borderRadius: '10px'}}>\n                <div\n                    className='mx-10 p-5 d-flex justify-content-between align-items-center'\n                    style={{fontWeight: 600, fontFamily: 'Manrope'}}\n                >\n                    <div className='d-flex gap-3 align-items-center'>\n                        <div className='text-cmGrey900' style={{fontSize: '14px'}}>\n                            Total Documents:\n                        </div>\n                        <div className='text-cmGrey900' style={{fontSize: '16px', fontWeight: 800}}>\n                            {totalDocuments}\n                        </div>\n                    </div>\n                </div>\n                <DocumentTable\n                    employeeData={employeeData}\n                    onSelectedModal={(val, type) => {\n                        if (type == 'edit') setOpen(true)\n                        setSelectedEmployeecData(val)\n                    }}\n                    loading={loading}\n                    documentData={employeeDocData?.data}\n                    deleteDocument={deleteDocument}\n                    userId={location?.state?.employee_id}\n                />\n            </div> */}\n\n            {open && (\n                <DocumentFormPopup\n                    show={open}\n                    handleClose={handleClose}\n                    employeeDocData={selectedEmployeecData}\n                    userId={location?.state?.employee_id}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default DocumentsPage\n","import {Tooltip} from '@mui/material'\n\nconst CustomTooltip = ({title = '', style, children, className}) => {\n    return children ? (\n        <Tooltip\n            arrow\n            title={\n                <span className={className} style={{fontSize: 14, ...style}}>\n                    {title}\n                </span>\n            }\n            style={{fontSize: 40}}\n        >\n            {children}\n        </Tooltip>\n    ) : null\n}\n\nexport default CustomTooltip\n"],"names":["document","getElementById","body","DocumentFormPopup","_ref","_data$document","show","handleClose","employeeDocData","userId","dispatch","useDispatch","selectedImages","setSelectedImages","useState","data","setData","docType","useSelector","getDocumentTypessSelector","loading","setLoading","useEffect","getDocumentTypesAction","addUpdateDocument","useCallback","_data$document_type_i","formData","FormData","append","document_type_id","description","length","i","id","updateEmployeeDocumentByIdService","then","CustomToast","catch","e","getErrorMessageFromResponse","finally","addEmployeeDocumentByIdService","onChangeInputData","_e$target","_e$target2","updateData","target","name","value","field","val","_jsxs","CustomModal","onHide","maxWidth","title","children","_jsx","CustomLoader","full","visible","className","style","fontWeight","onChange","map","list","index","document_type","type","placeholder","defaultValue","required","multiple","_e$target3","files","marginTop","doc","padding","paddingLeft","borderRadius","fontFamily","fontSize","onClick","employeeData","onSelectedModal","documentData","deleteDocument","getDocument","position","TABLE_BORDER","_Fragment","item","_item$document","is_deleted","EachDocTypeRow","colSpan","textAlign","paddingTop","paddingBottom","_location$state2","_location$state7","_location$state11","_location$state12","_location$state13","location","useLocation","setEmployeeDocData","selectedEmployeecData","setSelectedEmployeecData","sequiDocDocumentData","setSequiDocDocumentData","open","setOpen","componentStates","setComponentStates","activeIndex","setActiveIndex","onBoardingResMsg","setOnBoardingResMsg","_location$state","state","isOnBoarding","sequiDocDocument","employee_id","_location$state3","_location$state4","_location$state6","getOnBoardingEmployeeSequiDocDocumentByIdService","res","_location$state5","message","getEmployeeSequiDocDocumentByIdService","_location$state8","_location$state9","getEmployeeDocumentByIdService","_tempData$data","_location$state10","tempData","finalData","filter","user_id","deleteEmployeeDocumentByIdService","totalDocuments","useMemo","_employeeDocData$data","count","_item$document$length","groupedSequiDocData","groupedData","Object","values","reduce","acc","_acc$categery_id","categery_id","categories","items","push","signDocumentStatus","is_active","document_response_status","TabView","onTabChange","TabPanel","headerClassName","header","headerStyle","fontsFamily","DocumentTable","_item$items","_item$items2","KTSVG","path","svgClassName","CustomArrow","arrowDirection","includes","ARROW_DIRECTION","some","toggleComponent","category","template_name","getValidDate","document_send_date","signed_status","href","signed_document_s3","rel","user_request_change_message","CustomTooltip","CustomNoData","label","Tooltip","arrow"],"sourceRoot":""}